2018-02-05 11:09:03,759 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 11:09:03,810 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 11:09:03,811 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 11:09:03,811 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 11:09:03,811 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 11:09:03,812 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 11:09:03,812 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 11:09:03,826 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 11:09:03,826 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 11:09:03,826 running_plan.py[line: 26] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 11:09:03,827 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 11:09:03,827 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 11:09:03,832 running_plan.py[line: 32] INFO: 正在查询与项目关联的数据库信息
2018-02-05 11:09:03,833 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 11:09:03,854 running_plan.py[line: 46] INFO: 正在查询与项目关联的全局变量
2018-02-05 11:09:03,855 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 11:09:03,861 running_plan.py[line: 60] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 11:09:03,861 test_project.py[line: 26] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 11:09:03,862 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 11:09:03,862 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 11:09:03,868 test_project.py[line: 31] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 11:09:03,868 test_plan.py[line: 26] INFO: 正在查询测试计划关联的测试用例
2018-02-05 11:09:03,869 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 11:09:03,875 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 11:09:03,875 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517800143', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 11:09:03', '', '', 0, 0, 0, 0)
2018-02-05 11:09:03,944 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 11:09:03,945 test_case.py[line: 31] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 11:09:03,945 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 11:09:03,954 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:09:03,954 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 11:09:03,954 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:09:03,955 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:09:03,955 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:09:03,955 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:09:03,955 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$Token$']
2018-02-05 11:09:03,955 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:03,956 test_case_step.py[line: 56] INFO: 正在替换动态变量：$Token$
2018-02-05 11:09:03,956 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'Token'
2018-02-05 11:09:03,956 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:09:03,956 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:09:03,956 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 11:09:03,956 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:03,957 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 11:09:03,957 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 11:09:03,957 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:09:03,957 test_case_step.py[line: 133] ERROR: 'str' object has no attribute 'replace_vairable'
2018-02-05 11:09:03,957 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:09:03,958 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800143', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Token': '$Token$'}", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', '[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]', '', '失败', "'str' object has no attribute 'replace_vairable'", '2018-02-05 11:09:03')
2018-02-05 11:09:04,028 test_case.py[line: 84] ERROR: 步骤[第 1 步, 步骤ID: 1]运行失败
2018-02-05 11:09:04,028 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:09:04,028 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:09:04,028 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800143', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '失败', '步骤[第 1 步, 步骤ID: 1]运行失败', '2018-02-05 11:09:03', '0天 0小时 0分 0秒')
2018-02-05 11:09:04,111 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 11:09:04,111 test_case.py[line: 31] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 11:09:04,111 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 11:09:04,118 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:09:04,119 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 11:09:04,119 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:09:04,120 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:09:04,120 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:09:04,120 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:09:04,120 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:09:04,121 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:04,121 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 11:09:04,121 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:09:04,121 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:09:04,122 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:09:04,122 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:04,122 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 11:09:04,122 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:09:04,122 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:09:04,122 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:04,123 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 11:09:04,123 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:09:04,123 test_case_step.py[line: 133] ERROR: 'str' object has no attribute 'replace_vairable'
2018-02-05 11:09:04,123 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:09:04,123 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800143', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36', 'Cache-Control': 'no-cache'}", 'POST', '/auth/login', '', 'body', '包含字符串', '[{"模式":"\\"result\\":200", "消息":"FAILURE#灯塔用户登录失败"}]', '', '失败', "'str' object has no attribute 'replace_vairable'", '2018-02-05 11:09:04')
2018-02-05 11:09:04,250 test_case.py[line: 84] ERROR: 步骤[第 2 步, 步骤ID: 2]运行失败
2018-02-05 11:09:04,250 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:09:04,250 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:09:04,251 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800143', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '失败', '步骤[第 2 步, 步骤ID: 2]运行失败', '2018-02-05 11:09:04', '0天 0小时 0分 0秒')
2018-02-05 11:09:04,319 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 11:09:04,319 test_case.py[line: 31] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 11:09:04,319 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 11:09:04,327 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:09:04,328 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 11:09:04,328 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:09:04,328 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:09:04,328 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_xml
2018-02-05 11:09:04,329 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:09:04,329 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:09:04,329 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:04,330 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：
2018-02-05 11:09:04,330 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:09:04,330 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:09:04,330 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:09:04,330 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:04,330 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:09:04,331 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'userName'
2018-02-05 11:09:04,331 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:09:04,331 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:09:04,331 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:04,331 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 11:09:04,331 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:09:04,332 test_case_step.py[line: 133] ERROR: 'str' object has no attribute 'replace_vairable'
2018-02-05 11:09:04,332 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:09:04,332 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800143', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '$global_host$', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '', 'body', 'xpath断言', '[{\n"模式": {\n ".//return": "dataviewer"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n},\n{\n"模式": {\n ".//return": "$groupCode_1$"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n}\n]', '{"xpath":{"groupCode": ".//return"}}', '失败', "'str' object has no attribute 'replace_vairable'", '2018-02-05 11:09:04')
2018-02-05 11:09:04,409 test_case.py[line: 84] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 11:09:04,410 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:09:04,410 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:09:04,410 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800143', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 11:09:04', '0天 0小时 0分 0秒')
2018-02-05 11:09:04,485 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 11:09:04,486 test_case.py[line: 31] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 11:09:04,486 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 11:09:04,493 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:09:04,493 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 11:09:04,494 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:09:04,494 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:09:04,496 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:09:04,496 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:09:04,496 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:09:04,496 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:04,497 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:09:04,497 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:09:04,497 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:09:04,498 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:09:04,498 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}'}
2018-02-05 11:09:04,498 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:09:04,498 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:09:04,498 test_case_step.py[line: 133] ERROR: 'str' object has no attribute 'replace_vairable'
2018-02-05 11:09:04,499 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:09:04,499 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800143', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '', 'body', '匹配正则表达式', '[{"模式":"\\"qq\\"(.+?)\\"","消息":"FAILURE#不符合断言时返回的消息"}]', '{"re":{"userName2": "userName\\":\\"(.+?)\\""}}', '失败', "'str' object has no attribute 'replace_vairable'", '2018-02-05 11:09:04')
2018-02-05 11:09:04,701 test_case.py[line: 84] ERROR: 步骤[第 1 步, 步骤ID: 10]运行失败
2018-02-05 11:09:04,702 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:09:04,702 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:09:04,703 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800143', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '失败', '步骤[第 1 步, 步骤ID: 10]运行失败', '2018-02-05 11:09:04', '0天 0小时 0分 0秒')
2018-02-05 11:09:04,859 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 11:09:04,860 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 11:09:04,860 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = %s AND execution_num =%s AND plan_id=%s  data：('成功', '1517800143', 1)
2018-02-05 11:09:04,860 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = 成功 AND execution_num =1517800143 AND plan_id=1
2018-02-05 11:09:04,865 mydb.py[line: 115] ERROR: 执行数据库查询操作失败：1054 (42S22): Unknown column '成功' in 'where clause'
2018-02-05 11:09:04,866 test_plan.py[line: 81] ERROR: not enough arguments for format string
2018-02-05 11:09:04,866 running_plan.py[line: 80] INFO: 正在释放资源
2018-02-05 11:09:04,866 running_plan.py[line: 81] INFO: 正在断开与项目关联的数据库连接
2018-02-05 11:09:04,867 running_plan.py[line: 87] INFO: 正在清理与项目关联的全局变量
2018-02-05 11:09:04,867 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 11:09:04,868 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 11:11:29,306 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 11:11:29,307 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 11:11:29,307 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 11:11:29,307 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 11:11:29,307 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 11:11:29,307 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 11:11:29,308 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 11:11:29,314 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 11:11:29,315 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 11:11:29,315 running_plan.py[line: 26] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 11:11:29,315 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 11:11:29,316 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 11:11:29,322 running_plan.py[line: 32] INFO: 正在查询与项目关联的数据库信息
2018-02-05 11:11:29,322 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 11:11:29,347 running_plan.py[line: 46] INFO: 正在查询与项目关联的全局变量
2018-02-05 11:11:29,347 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 11:11:29,352 running_plan.py[line: 60] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 11:11:29,352 test_project.py[line: 26] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 11:11:29,353 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 11:11:29,353 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 11:11:29,357 test_project.py[line: 31] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 11:11:29,358 test_plan.py[line: 26] INFO: 正在查询测试计划关联的测试用例
2018-02-05 11:11:29,358 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 11:11:29,364 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 11:11:29,364 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517800289', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 11:11:29', '', '', 0, 0, 0, 0)
2018-02-05 11:11:29,428 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 11:11:29,429 test_case.py[line: 31] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 11:11:29,430 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 11:11:29,439 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:11:29,440 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 11:11:29,441 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:11:29,442 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:11:29,442 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:11:29,443 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:11:29,444 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 11:11:29,444 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:29,445 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_token$
2018-02-05 11:11:29,445 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 11:11:29,446 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:11:29,446 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:11:29,447 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 11:11:29,447 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:29,448 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 11:11:29,448 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 11:11:29,449 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:11:29,449 test_case_step.py[line: 133] ERROR: 'TestCaseStep' object has no attribute 'replace_vairable'
2018-02-05 11:11:29,450 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:11:29,451 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800289', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Token': 'asfdacfdasfasfa'}", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', '[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]', '', '失败', "'TestCaseStep' object has no attribute 'replace_vairable'", '2018-02-05 11:11:29')
2018-02-05 11:11:29,519 test_case.py[line: 84] ERROR: 步骤[第 1 步, 步骤ID: 1]运行失败
2018-02-05 11:11:29,519 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:11:29,520 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:11:29,521 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800289', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '失败', '步骤[第 1 步, 步骤ID: 1]运行失败', '2018-02-05 11:11:29', '0天 0小时 0分 0秒')
2018-02-05 11:11:29,586 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 11:11:29,586 test_case.py[line: 31] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 11:11:29,587 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 11:11:29,594 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:11:29,594 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 11:11:29,594 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:11:29,595 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:11:29,595 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:11:29,595 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:11:29,595 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:11:29,595 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:29,596 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 11:11:29,596 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:11:29,596 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:11:29,596 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:11:29,596 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:29,597 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 11:11:29,597 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:11:29,597 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:11:29,597 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:29,597 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 11:11:29,597 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:11:29,598 test_case_step.py[line: 133] ERROR: 'TestCaseStep' object has no attribute 'replace_vairable'
2018-02-05 11:11:29,598 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:11:29,598 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800289', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Cache-Control': 'no-cache', 'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'}", 'POST', '/auth/login', '', 'body', '包含字符串', '[{"模式":"\\"result\\":200", "消息":"FAILURE#灯塔用户登录失败"}]', '', '失败', "'TestCaseStep' object has no attribute 'replace_vairable'", '2018-02-05 11:11:29')
2018-02-05 11:11:29,677 test_case.py[line: 84] ERROR: 步骤[第 2 步, 步骤ID: 2]运行失败
2018-02-05 11:11:29,678 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:11:29,678 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:11:29,678 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800289', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '失败', '步骤[第 2 步, 步骤ID: 2]运行失败', '2018-02-05 11:11:29', '0天 0小时 0分 0秒')
2018-02-05 11:11:29,744 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 11:11:29,745 test_case.py[line: 31] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 11:11:29,745 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 11:11:29,755 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:11:29,755 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 11:11:29,755 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:11:29,756 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:11:29,756 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_xml
2018-02-05 11:11:29,756 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:11:29,756 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:11:29,757 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:29,757 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：
2018-02-05 11:11:29,757 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:11:29,757 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:11:29,757 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:11:29,758 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:29,758 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:11:29,758 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'userName'
2018-02-05 11:11:29,758 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:11:29,758 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:11:29,759 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:29,759 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 11:11:29,759 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:11:29,759 test_case_step.py[line: 133] ERROR: 'TestCaseStep' object has no attribute 'replace_vairable'
2018-02-05 11:11:29,759 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:11:29,760 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800289', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '$global_host$', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '', 'body', 'xpath断言', '[{\n"模式": {\n ".//return": "dataviewer"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n},\n{\n"模式": {\n ".//return": "$groupCode_1$"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n}\n]', '{"xpath":{"groupCode": ".//return"}}', '失败', "'TestCaseStep' object has no attribute 'replace_vairable'", '2018-02-05 11:11:29')
2018-02-05 11:11:29,827 test_case.py[line: 84] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 11:11:29,827 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:11:29,827 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:11:29,828 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800289', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 11:11:29', '0天 0小时 0分 0秒')
2018-02-05 11:11:30,011 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 11:11:30,012 test_case.py[line: 31] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 11:11:30,012 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 11:11:30,020 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:11:30,021 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 11:11:30,021 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:11:30,022 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:11:30,022 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:11:30,022 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:11:30,022 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:11:30,023 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:30,023 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:11:30,023 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:11:30,023 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:11:30,023 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:11:30,024 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:11:30,024 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:11:30,024 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:11:30,024 test_case_step.py[line: 133] ERROR: 'TestCaseStep' object has no attribute 'replace_vairable'
2018-02-05 11:11:30,024 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:11:30,024 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800289', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '', 'body', '匹配正则表达式', '[{"模式":"\\"qq\\"(.+?)\\"","消息":"FAILURE#不符合断言时返回的消息"}]', '{"re":{"userName2": "userName\\":\\"(.+?)\\""}}', '失败', "'TestCaseStep' object has no attribute 'replace_vairable'", '2018-02-05 11:11:30')
2018-02-05 11:11:30,211 test_case.py[line: 84] ERROR: 步骤[第 1 步, 步骤ID: 10]运行失败
2018-02-05 11:11:30,212 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:11:30,213 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:11:30,213 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800289', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '失败', '步骤[第 1 步, 步骤ID: 10]运行失败', '2018-02-05 11:11:30', '0天 0小时 0分 0秒')
2018-02-05 11:11:30,286 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 11:11:30,287 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 11:11:30,287 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = %s AND execution_num =%s AND plan_id=%s  data：('成功', '1517800289', 1)
2018-02-05 11:11:30,288 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = 成功 AND execution_num =1517800289 AND plan_id=1
2018-02-05 11:11:30,293 mydb.py[line: 115] ERROR: 执行数据库查询操作失败：1054 (42S22): Unknown column '成功' in 'where clause'
2018-02-05 11:11:30,294 test_plan.py[line: 81] ERROR: not enough arguments for format string
2018-02-05 11:11:30,294 running_plan.py[line: 80] INFO: 正在释放资源
2018-02-05 11:11:30,294 running_plan.py[line: 81] INFO: 正在断开与项目关联的数据库连接
2018-02-05 11:11:30,295 running_plan.py[line: 87] INFO: 正在清理与项目关联的全局变量
2018-02-05 11:11:30,296 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 11:11:30,296 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 11:12:05,868 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 11:12:05,869 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 11:12:05,869 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 11:12:05,869 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 11:12:05,869 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 11:12:05,870 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 11:12:05,870 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 11:12:05,876 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 11:12:05,877 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 11:12:05,877 running_plan.py[line: 26] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 11:12:05,877 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 11:12:05,877 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 11:12:05,883 running_plan.py[line: 32] INFO: 正在查询与项目关联的数据库信息
2018-02-05 11:12:05,883 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 11:12:05,906 running_plan.py[line: 46] INFO: 正在查询与项目关联的全局变量
2018-02-05 11:12:05,907 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 11:12:05,913 running_plan.py[line: 60] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 11:12:05,913 test_project.py[line: 26] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 11:12:05,914 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 11:12:05,914 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 11:12:05,920 test_project.py[line: 31] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 11:12:05,920 test_plan.py[line: 26] INFO: 正在查询测试计划关联的测试用例
2018-02-05 11:12:05,920 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 11:12:05,926 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 11:12:05,927 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517800325', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 11:12:05', '', '', 0, 0, 0, 0)
2018-02-05 11:12:05,995 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 11:12:05,996 test_case.py[line: 31] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 11:12:05,997 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 11:12:06,004 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:12:06,005 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 11:12:06,005 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:12:06,005 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:12:06,006 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:12:06,006 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:12:06,006 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 11:12:06,006 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,007 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_token$
2018-02-05 11:12:06,007 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 11:12:06,010 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:12:06,010 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:12:06,010 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 11:12:06,013 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,014 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 11:12:06,014 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 11:12:06,015 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:12:06,015 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:06,015 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,015 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:12:06,016 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 11:12:06,016 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 11:12:06,017 httpprotocol.py[line: 81] INFO: 请求头为：{'Token': 'asfdacfdasfasfa'}
2018-02-05 11:12:06,111 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 11:12:06,111 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11}IDATx\xda\xd5[\x87\x7f\x93\xf5\x13\xee\xbf!\x02"\x82[D\xfd\xe1d\xef!{\xcaF@\x91)KP\xd9\x08\x88\x0b\x90%\x02\x8a\x0c\x05\x19\xdd\xbb\xa5\xbbt\xef\xbd\xf7\x1et\xa7I\xca\xfd\xee\xb9\xf4\rI\x9at\xa4\xad\xe2\xf7\xf3\xc9\x87\x90&\xef\xf8\xde\xdds\xcfsw\xaf\r\xb5\xb3\xb2\xf2\xebh\xc0\x18;zj\xb8-\xf5\x19aK\xfdG\xdb\xd13c\xec\xa9\x1f\xff\xdbw\xa4\x1d\xf5\xe1\xcf\x9f2x\xf5\x1deK\xcf\x8e\xb5\xa7\xe7\'9\xd2k\x1f:\xd35\xbb,jy\xf4\xa8\xcdq\xf7\x9f\x8e\xa5\x93W\x92\xe9\x86C6y\x05\x17S|Z5UT5\xd1#3\xdf\xfd/,\xad\xb6\x85\xca\xabU\x14\x9dTE\x7f9\xe5\xd0\xf6\xe3Q4k\xbd\x1f\xbd=\xcf\x9d\x06Mp\x90\xbd\xc3\xbe-\xdb\x19D\xfea\xa5\xd4\xac\xd6vx\xaf6\xed\xfd\xb1\x82O\xf6\xca4\'\xa3\xcdo\xefej\x98K\x7fg\x90\xaaY\xdb\xe6\xb8\xc7.$\xd0\x89\xdf\x93\xe9\xba}6y\x06\x15S\\j5\x95W6QK\xcb\x7f\xcf0\x1aM\x0b\xc5\xa7W\xd3\x85[\xe9\xf4\xf1W\x0fh\xe8,\x976\xfb2t\x96+\xad\xd8\xfd\x80.\xdfI\xa7\xdc\xc2:Rk\xbai\x98&\x95\x86\xc6\xad\xf0~|\x82\x99.4\x7fK\x00\xbd=\xdf\xdd\xa2q\xfa\x8d\xb2\xa3\xe7\xc6;\xd0\xabl\x18l~UMs\x9b\xe3\x9e\xb9\x91J?\xfe\x96DWm\xb3\xc8-\xa0\x88\xa2\x93\xab\xa8\xa4\xbc\x914\xecy\xff\x85\xd5\xd8\xa4\xa1\x94\xcc\x1a\xb2\xf5\xc8\xa7=\'bi\xc6:?zk\xb6\x1b=;\xce^\xbf\x07\xef/\xf2\xa05{B\xe9\xd4\xd5T\xf2\x0f/\xa5\x9c\xc2z\xd9\x0b5\x1b\xb23\xc8`\xd3Q\x88~\xba/TB\x11\'\x1c\xbd\xd4\x93n\xb9dSpT9\xd9y\xe5\xd3\xd1_\x12h\xe9\xce`\x1a6\xcf\xcd\xac\x91\xf6\x9c\x88\xa1\xdc\xa2\xfa6\xc7\xbd\xe5\x92C\xdf]L\xa4\xdf\xeed\x92\xb3o!E$TRAI\x83\xd9\xe8z\x12\x166\x12\xf0SZ\xd1D\x91\x89\x95t\xe5^&m8\x18N\xa3\x97y\xd1\xa0\x89\x8e\xfa\xfb\x1d\xcc\xef\'\xac\xbaO;\x19\xca\xee\xb8\xe5Rb\xfaCA\x1d\x18\xa3\xab\xcb\xa6\xa3\x0b:\xf7g*==Rw\xe2\x0f>\xf2\x10\xc3\xe0slbQY\x83\xc0\x90\xd7\x83b\xfa\x9d/v\xe7w\xd14k\x83?\xbd\xc1\xa1\xdb\x8fa\rFM\xce|ht\xcc\xbaz5CX\x16}\xba7T \xed6\xdf\xc0\x83\x98r\xca.\xa8\xa3\x86F\xcd\x13i\x98\xaa\x87*\xf2\r-\x11g\x02b\x0c\x99\xeeB\xfdG\xd9\xe9\r\xf2\xc2dG\x9a\xb3\xd1\x9f\x8e\xf3\xdf\xfd\xc2J\xa8\x8ca\xb9\xb9Y\xdb\xad\x9c\xd9\xa1a"\xe2+$w\xe0\x02\x86\xccp\xa1\xef.%\xea\xff\x86\x17\xa2J\xd5\xac\xe10UQ\x12\x1b\x019\xe3"\xe7\x96=\'c\xe8\xf0\xd98\x0eyc\xc3 \x9c/\xdd\xc9\x90<\xf4\xbf\xb9n4\xf5\x13_Z\xb7/\x8c\x8e\xff\x9aHw\xd9H\x91\x1c=y\x1ce5u\xcdVyZO&t8\xcb/7\xd3h\xfd\xc10\x9a\xf6\x89\x8f8\x1c\x92\xb8b\x0cD\xc7\xf6o#\xd9\xb9\xf2(\x81\t\x0c"\xaa\xa9\x87\xa2\xde\xa6\xa3/\xa8TZzm\xba\xb3\\\xcc\x80\xb1v\xb4\xf5h\x04\xd5\x9b\xf1l\x18\t\x1bY\xdf\xa0a\x8fQQFn-\x85\xc5\x96S1G\x95Vk\xec9\xa7\xae\xa6\xd0\xc0V<\xc6\x0b7\xfb\xfa\x0cg\xbey_\x81\x88\xef/%\t\x14\xc0H\xe5U*\xc6t\xad\x10\x03\xc5\x19z\x1a\xa6,\x1d\xb3\xb0\xb4\x81f~\xe6G\xfdF\x1aC\xf43\xccT\xd7r\xfe\xb8\xed\x9aK\xd9\xf9\xb5\xbd\xc2&;4\x0c\xe0e\xdb\xb1Hzz\x84\xce0+v\x05sN\xa8\xe8\xd4\r7\xb1QA \xb4&I\xfd\xdc\x9fi\x92,Ms\x12\xe8\xf8KS\x9d\xe8\xdd\x05\xee4u\xad/\xb3\x9c\x10:p:\x8esQ\x06\x85\xc7UP-G\x91\xe1&(\x9b\xda\xd9\x8d1\xfc\xbe\x96\r\rF\xd5\xc4\xd1\x8e\xfcan\xe1\xf3k\x0c\xbb\xa3\x96y\xea\xf3,\x8c2\x9a\xff\x7f\xe2J\x12\xa5\xb3\xf3i{\x89\xb0th\x18l\xae\x8b\x7f\xa1\xc0Y_\xc6\xd5q+\xbd\xe9\x8e{n\xb7N\n\xc3\xbe8\xc5Qn\xb6\xefH\xcb\xf4\x1b8\x0e\xf8\x1c\xcbI\x16p\x12\x95h\xec\x10--\xba\x8d-\xaeh\xa4j\x86H$\xdaR\xc6\xf7\x92\n\xbc\x1a\x05\xeb+\xf93\xc0"\x1c\xac\xb0\xb4\x91\xe2\x91\x13Y;Ac\x9d`-u\xcb9\x9b2y\x83--\xb0\xc5\xef/\'\xd2s\x13t\x11\x0e\xed\xf6\xc2$\x07Z\xbc=\x88l\xbd\xf2z\rJm:\xf3%\xc0\x12\x12?.\xec\xd5\xe9NBw\xab9\xa7X\xbb\xb0\x89\xa3\x97z\xc9\xf1^g\n\xbe\xe3x$\xadb\x9e?f\xb9\x17\x1b\xccI\xef\x9d\x86/|v\x99#\xa7\xaeAmt,\x10\x10\x90\x88\x83\x1cY\x80\xc0\x9f\x19&\xcf\xddH\xa3\xf3\x1c\x95g\xae\xebh\xf9\xe1\xb3\xf1\xc2\x94\xd6\xed\x0f\xa3\xc5\xdb\x828\x1a}$*\xc1\xa2&\xad\xbe\xcf\xa20[\xae\xa9\xc5B\xe4\xe1\x1c 2\x83\xd9 \x86\xd2a\x15\xeb\x96P\x86k\xa0\x82id\x1a\xbe\x07\x0c\x83,5\xab[:\x1d\xdd\x9d2\x0c\xb0\x16\x90\x82\xcd\x81\x92\xddp(\x9c\x123\xaa\xad6L~1\x1f\xef\xe7\xb8VB\xe1L\xdf\x9c\x8b\xa7\xa0\xc82\xd9 \xbc_\xba#\x98\x1d\xc1\x93\xc5\xad3\xc3\xa7\xbd\xee\xbc\xbc\x89\xdb\xbf\x8d\x12=`\xb8\x80\xf1_\xfe\x18\xcd\xba\xc9\x89\xde\x9a\xe3*\x1b\x0e\'\x82\x8e\x80\xde\x82\xe1\x07\x1bPZ\xd3\xd7K\xec\x08[\x8eD\x08e\x87>\xb1\xb4@\x93\xd7\xec\t\x11H\xd7\x89i;\x86cWf\xa2Q\xf2[C\xa8\x04\x19J\xc9\xaa!\x9f\x90\x12re\xb4q\x0f,"\x17\xbf\x02\xfe\xb7P\x0c\t\x92\xd0#\x86\xc1r\xba_\xc0\xaa\xde\xa1U\xc9\xba\x907Sd\xdc\x88\x92\x94\xbb\xbaN\xfc\x91,9\x05\xc7\xfb\x9c7\xa6\xa6N-^\x0b\xdd\x83\xa4\x7f\xd7#\x8f~\xb8\x9c$\x8cm<\xc3\xe7@6\xd0\xbc\xcd\xfer\xc3\xa6\x15\x82\xb3\xd7\xd3\xa8\xff\x18\xbbNW(@\xffQ\xa1\x80\xe1\x11\xa5\x88X\xb0\xcf\x06\x8e\xc6\xf6\xee\x05\xa5\xa3\x89\xab\xbc\xf5,\x15\xaf\xf7\xd8\x11\xf62\x03\x05\xe4\x81\xc5\xb9\xb1!\x0e\x9d\x89\xa3\x85\x9f\x07\xf2w\xef\x8b\x83\x80\x81\xbe\xc8,n\xe4\x12\x0f\x9a\xc6\xd1\xban\x7f(9\xf9\x14\x88\xa0\xb6t\xbeN\x1b&\x8c\x93\xef\xb2\x1dA\x82\xb1\xf0\x9a\xe1\xec\x95\x80\x90\x80\x88RfNM]6\xccM\xe7\x1czo\xa1\xbb\x18\x070\x16\x1e\xff\xd8\xeb\xa0\x01\x00\x95y\x1cY\x10iA,h\xef\xb9\xe7\xd1\r\xc7l\x8aI\xaej#D=\x82\x8a\x04\x92\x14\xc8C\x94\r\x9e\xe8 \xcc\x0f\x8cO\xc9c\xa0\xbb\x1f~\xeaK\x1b\x99\xf9\x01\xe2 \x92\xa38\x122\xf3jE\xabh:P\xe5`\x9d\x9e|.h\x16%r@\x88\xde]\xe8Fk\xf7\x86\xd0\xea\xafC\xa4>f\x08\xbf\xa6\xef\xfb\xb4\x12\x88W>t\x16\xaa\r9a\xee\x9c\x9d6\x0c\xf0w\xff\xcf\xb1F\x9e\xf7\xf24\'\x9a\xc2\x1e\x00(\xf1\xe4\x84Z\xda\x85z\x17\xbe\xf7B+f\xffo\xae+=\x88.\xb7\xc8\xa4\xb4\x9c\xe4\x1f\xd66K\xf2F\x827w\xac\xa5;\x02\x8d\xf0\x1f\xd7t\x98a\x11\xd4\xfc\xba\x83\xae&\x87\x8aElr5e\xe5\xd5\t1hTu]s\xe0z\xfc\xc2J\x05\x82-\x92\x96\xd1\xba\x92\x0c\xb4\xcf\xbcM\xfe\x12\xe9\x93V{\xd3\xb0\xb9m\x99\xe8\xf0\x8f\xdc\xe5Z\xac6\x0c\x16\xbck\xdb\xb1\x08\xf1<Sh@H\xa3D\x93\x9c\xf5P<\xafC\x1a\xce0x\xe4|\x82x\x104\xcc\xa5\xdb\xe9\xedb|G\xeb\x8f{\x99|\x1c]\x01\xf1M\xc6~$\xff\xc2\x92\x061$\x18YOj\rD\x0et\xd6\x84U\xde\xfahx\x95a\x11\xd1\x08iq\x81E\xa9\x93O>\x05\x84\x97\n\x0b\xcca\x88\x8bO\xab"GN\x07\xbb\xbe\x8f62\x10\x8c\xf8\x19\x93\x92\xb8\xd4*\xeb\r\xd3\xd2Z\t\xb0e\xfc?\xc99b\xf1\xf6@I\xb8J\xae\x00\x96.\xda\x1a(\x89\xb23\x11\xe3\x17Z\xa2o\x1d\xcc\xdd\xe4\xd7\xad\xcd\x03^\xbfcP\xb3[\xb85@\xb4Jo-\\?J\xfc\x80I\x18e7G(\xf2\x0b\xc8I\x93A$\x1ai\'\xbeFPw\xaf\xe0"\xa3\x96\xc9\xc0\xf1\xf6\xb4\xefT\xac\xf5\x86QDWM\xbd\x9a*\x19\x93a\xa4\xf3\x7f\xa6\x8a\x81\x00k\n\xee\xbe3\xdf\x8d~\xbd\x95.\x1a\xa2\xbd\xcd\xf6\r+\xa1\xb9\x8c\xd7\xf8\xcd\xe45>\xc2^\xba\xb3\x00[H\xear\r\x1c\xc1(\x96jz\xb1\xac\x03x\x8df\'LB?\xa9ZW\x1f\xeb\x08\xca\x15\xd6v\xd56Sr\xacb\x9c\xc9\x9c#\x01\xb7\xca~\xd9X{Q8\x00n\xba\x9a\r\x14\x9bR\xc9\x11\x94\xc2I\xf0\xf1\x89 \x0c\xcf\\Ka\xb5\xaen\x17\x12\xe6m\nh\x8d6\x07\xbat\'\xbd\xdb\x10\xa3\x94z\x00/\x0b\xb6\x04RMms\xafV\x9d[\xba\x18\xe5:]\xd3\xc2\xf0\xaaf\x08\x0b}\x9c\x0e\xf8z\x7fd\x16\xaa\x18\xd6\xa6\xa7.\x12L\xc9\x87\xa1i\xf9\xae`}_\x02I\x18\xd5iD\x97\xa5u\x84\xf3\x12:\xa2\xd0Gh\x13d\xe7\xd7u\x0b\xd2\x8e^H\xd4W\xc3\xa1c\xae\xb0g\xd6\xd6\xab\x9f\xb8\x8a5\xf6\xeb\xae{\xae\x94w\x14\xe3\xa0\xfe\x96\x9c\xa1ci6=\xe9=\xc0\xd0\x8c\xdc\x1a\xda\xc1\xa2K\xa1\x87\xa8}!Q\x9a\xdbl|\x86\xe4\x0c\x9c\xc6\xf7\x11\xda\xa11\xe5\xa4\xee\x82B6\x07/J\xceC\xfb{\xc1\x96\x00J\xcd~h\xb1`\x89kF\xe4\x83\xf9!7\xe0\xdc \x0bx)\xde\xdb\x1b\x9dU\x1c3\xa7\xb0\x8es\xe1c6\xf9<S\xfc\xf8\x94\xaa\x9e5\x8c\xe1\x8d\xa6\xb2\x08\xdcx(\x9c\x9e\x9b\xa0\xa3\xc3(\x8f\x83\xa1\x98\xbbA|w\xf9\x17\xc1\xba\xce\x1fo\xe8\xcc\xf5~t\xf1\xeft\xd65\x15T\\\xd6(\x9b\xd5U\x11\xbb\xeb\x87h1\n\x8e9\x8c\xa9\xf8\x99\xeb)R\xe5\xc6f\x83\x9a\xa6f\xd7PHL\x85\x88d\xcf\xa0B!3\x17\x99\x15"G\x9d\xbc\x92B\xbf\xfc\x95\xc6\xcc*]\x1ab\xde\x98I`f%\x1dV6 `\xa8\xa7\x16\x8e\x89\x0e(Z\x08\xb8V\xa0\x06\xaa\x1f8\x8fMo\x84)62\x93#g\xc9\xf6 }\xabu\xfe\xe6\x00*\xadh4{q_3\x84\x99\xea\x80\x91K<\xe9\xf3#\xe1t\x8f7\r\xfd\x99\xaeTq\x93\x18\x0ePjQ\x8e\x05\xb5\xfd\xfb\xdd\x0c\xb2\xf7\xce\xa7\x9f\xae$Kka\xf6\x06\x7f\xa9\xd7\r\x95\x92\x8d\x83|\xefe\x8en\x88S4\xf9\xf0\x19\x1ab\xa8r\xe0\xf7\x90\t\xae~\x05m\xfaK\xddA\x18T:N\xfc\x96\xac\x17\xc0(\x1d\x1db\xed\xd5\xa39\xc6\xdc\x89QVA=I\t\xd3\x1b\xf6YTW\xdf\xdc\xc6\xfb/\xdf\xce\xa0\xf1+\xbc\xc5\x80\xa6}\x8f\x91K=\xe9\xc0\x99X\xe9\x84*\xd3%\x9d\x89\x1e\x0cF(\x13>J\xf4\x18i\xaf\x11\xb6\xfa\\\x84\xba\xd7\x801\xf6zVi\xa9\x88:n\xa5\x17m=\x1a)\xe5~\x8d\xa6\xa5\xdb\xda\x08\xedt\xa8\xffA\xad\xc8\xf2\x0c;\xc7i&L\xd5\x0c\xc76\xbd\x99\xe0J\xca\x9bX\x81\xc7\xe87\x02\x9b\x95\x92\xd5\xb6\x04QPROn\xec\x8d\xb8\xa8\x8f\xbf| \xc6\x80\xc7+\x86\xc2\xa6\xbc\xbf\xc8]\xbc=\xbb\x00\x9b\xd2q\xdb\x16\xd1\xf1\xf6|c\xa5\rR\x82(\x18\xb1\xd8S\xe89\xca8x\x0fe\xbe\xe9p\xb84\x01W\xedz \xf5\xb0w\x988\x0c\x1c\xef`2\x05\xa4#)hA\xa0f\xd7\x9d^\x8c\x8a\x9d\x0cC\x1a\xf3\x18I\x94\x88\x81\xf0\xbc\xc40^\xcf\x8c\xadW\r\x03\xfa\x1a\x18Q\xaa\xdf`\x08PT[M7\x15\xb8]S\xabb\xdd\xd3$\xed\xe9\x9b\x8c\xb3(\xa9L\xfc\xf8>\xeb\x92\xc7\xde>d\xba3m\xf9&\x82\xa2\x12*9I\xb7o\x1c\xc0\xc4\xd2/\x82$R\xdf\xe0\xa8\x1d\xcf\x9b\r\x85\x8d\xea\xf5\x1f\xcc\xd4<X3\xc1I\x00\xbb\xa8\x93A\x9d\xe7\x16\xd5\t\xb4\xc6\xb3\nG\xcfi\xfd\x810zo\x81[\x9b\x08\x82q\x90\x87\xac\xd1H\x86$i\x0b;\xc3\xa0\xf1\xf6\xfa\xd1/\xe4\xd7\xc0H].\xeeU\xc3(e\x9c)\xec\x99\nl\x1c<\x13g\xb6\xe8\xa9t\x15aLlTZN\x8d\xd0\xc9\x95\xbb\x1fH\xf4(\x9b\x83\xc8\xc3\xe0\\pt\x1956\xa9\xc5\xa8\x96\x0c\x04\xfa\x0e#\x870\xd3\x83\xdez\xc8\xaa\x1b\xa2\x17\xcc\r\xe5\x1fs\x1e\xafh\x13\\GHl9\xed=\x15#Q\xa50=\xe5\xb5\x84E\xb5%j\xaf\x15c7KK\\\xf9;({^Q\x03\x85\xc6V\x88\xf8^\xb4-P\xf2\x98\x82\x08\x88P\x0cA\x02\xde\xfe\x19\xc3\xb0w\x03\x9eP\x85\xc5\xa6\xa2\x02\x1b\x97R\xd5i\x86\x87z\x17\xd8\x11\n\x82\x86\x9b3\x9b\xbd\xcb\'\xa4\x98T*\x8dE\xe3\x80\xd1\xd55h\xac\xa6\xdf\xf5\rj\x99\x8e\xd9\xccQ\xaa\xd4\xe1\x142\x03B\xe0\x11P\xd4\xa6I\x86a>\x90\x0ftH\xbf\xfd5\x91\xbe\xfa)F\x88\xc3nf\x8ah\xd6-\xd9\x11D\xef/\xf4\xd0\x0ba\x1c\x0b\xe3__\xf3\xf7\xd0\xeeP\xca9\xbdn\x18$\xedu\xfbB\xf5%o\x94`"\x13*:\xbdQ0NYU\xa3\xb0\xb39\xcc\xa4\xfa\x1a\x10\x84\x19\xeb|\xa5\xf1\xa4\xd5j{\x94\xc6\x1aF\x0f\x18!<y\xd8<W#\xc3\xe0\xdc\x90\x00\xcd&-\x08\xc0\x1bJU\x98\x8d\xc0\xe0#^\xcad\x8d\xb2\x07\x86\xd08v\x85\x97L\x1eaO\x0c\x87\\\xac2LW\xca\x10\xf9\xc5\xf5\xachC\xf4\x17\x02\x8aZT\xda\xd0e\x0fF5\xda\xd1\xc78\xa1\x03\x97\x91\xb8+\xab\x1b\x85\x10\xf4\x86aPt\xbca\x9f-3\n\x86\xe7]\xbe3X\xfa8m\xf3\xe5#i\xf6an\xce\x10\xfa@\xc3Q\xec\x04dMXy_ \xfa\x07\xa6\xca\xa8\x8faF\\m2\x10bc\xcd\xc5*\xc3~j\xb5\xb6\xc3\x8a/\xe6\x05fn\xf0{\xdc\xcae\xad\xd0l\xe5\xec\x15\xc2\x1cc\xb7\xa6L\x0b\x82\x14\xc4\xa17\xf4Xqy\x83\x9c\xf3y\x83\xf64\xba\x91\x18\x88\xc7\xa8\x96\xb9\xfd\xc1\\\xc2O\xfc\x1b\xb0P\xcc\n\xac\xfa2XX\xdf\xd1\xf3\t"\r\xec\xbd\xf2%\xd7\xb4\xe7\xa0V\x19\xa6\x90\x8d\x82\xb1\x1e\x08FK\x07V\x8a\x9c\x8e>\x05\xf4\xb6\x01\x0c\x8cX\xe2au\xc5\x17\xc7|X\xab6\x9aI\x93\x96\xc1F?\x99\x08\xed\xc9\x9e\x8b\x8c_5k\xa4c\xfa\xc1"\xe3Y\xed\xed\xc7"e\x0e\xa2\xbd"eYe\xa3\xe4\x9at&1\xa8\x15"\x17!ga\x12\x15\xffv4\xa9i\x95a\x90\x10\xc7s8\xa2\x87\x90\x90^\xdd\xa6\xc1\xa5\x88@\xe8\x93\xcd\xdf\x84\xeb\x85\x1e^\x9b8\x91v\'\x1f\xe0\xb8\xab\xd9\x13\x9f6\xc0iPj[\xcf\xbc\x1e\xcb3\xba\x998\x8d\xb0\xb2\x99\x9cK\xfa\x18\x0c`\xc0\xf3\x0b\x8a\x1b\xda\xfd\xad\xb9WWW\x97\r\x03\x86\x03\x0e\x8f\xcdF\xe7\x11l\xc37\xb4X\xd4\xaaB5qS\xa0\xc4\xa87\r1`3h\xc7\xfe\xed\x9a\xd3-\xcf\xc6\x08\x10\xba\x80\x03\x0c\xf4\r6\x0c\xe2\xb4\'z/\xb86\xc0"\x0c=\x9b!\x18\x89\x1e\x86AWt\xff\xe98\x8b\x91b\xf8\xfb\x9eX]6\x0c4\x00(\xa0\xd2R\xc6\xfc1\x84\x184\xc7\xfd\x90\x12\n\x8f/\x17E\x8b\x82 z\xf9\x86\xb9\x00$ \xab\x9d\xe1\xba\xce,8\xc0\x81\xd31"V\x95c\x83\xf9`2\xc5\xda2\x89\xa2\xa1*\xaaT\xacy\xcaXk\xc5J\xa5\xbbO+\x8b\x1a\xf1\x91\x07\x9dgg,*k\xfc\xc7\x9e\xe1\xb1\xe9\xba7\xa9\xe4\x81$\x14\x19\x07\xb4\xd2@l\xfa\xd8\xe5\xde,\xfc\x82e\xe2e\xde\x96\x00\xe9$*\x10\x80\x89\xcaI\xac\xe2\x9d9\xdf4\xab\xb5\xdd\xf2\xe6\xac\xfcZ\x19wzq\xb2q2\xdew2\xb6S\x13\xf6\xa6\xd0\x02"\x03\xd5\x8f\'\x16\x8e\x9c\x8f\x97\xebD\xab\x17\xe5\x98\x11|\x8f()an\xac\xfe\x1f~\x12\xa1\xcb\x86\x01m\x8de\x81\x88\xd1\xa5\xa9k\xef\xcb\xc09\x8a\x8d\xc0|S\xce.\xfdl6\xda\x945>t\xcd6Kj@\xddcI\xac\xc6Y\xf1\xaf\xd8\x15D\x83&>\xeeT\x02"1\x83P\xd7AC\x0ce\x7f\xb4\x80a\xdc@\x0c\x18:f\xcb\xa3\x13hQ`:\x13\x0f[\x01\x05PQ\xc6\xec\xd7m\x86]0\xa7\x7f\xe3I7\xabt\x0ch0n\x0e5\'\xdc\x14\x06\xf2\xc0\xf3\x95\xb2\x0b\xaa\xa4\x80\x00\x0cj\xac\xdc\x1d,\xe2\x10\x1bb\xea\xcdj\xe9ot~ \x1c*\xff\xec\x8dTzs\x8e\x8b\x91\xa6@\x15\xc0\xd5\xbf\xc0\xaca\xa0oP:Ay\x06\xf9\r-p\x10\x12<\x05\x06C\xc0\xb0\x03\xc79\xd0\xd0\x99\xaer\x1f\x982\xbd\xe9\x92#\xe5}\xd0\xde\x96\x7f\xe9\xb9P\xab\x95?0\x19\xa3\x9eAQe2/\x8c\x02\xe1\xaa\xafBD\xd9\xa3k\x88\n,8{lj\x95\xc5G\xf8\xc0\xe8 \xd2\xa0\x87,\x95U\x14\xe8\xc11\x9c\xfc\ni\x16\'dC\xe5\xdc\x7f\xb4-\x9d\xbe\x9a*\xa5\x1bsF\xc6g\xae\xfc;\xf4\x86\x94\x92N\xff\xd6\x87{Q\xab\x1a\xceT\x189\x12e\x9f\x08\x13\xf5\xfdo\xaen\x97d\xb0i\xa0\xcbi\xd2\x15,\xa7`6\x14\x1e\x99\xa8\xaeU\xb5\x19\x007\xad\x08\x9cb\xef\xc5\xe07\xca6x\xf0\tx\xafm\x1d\x1bU\xf4\x80\xee\x11\xbbF)\xe3\xcf\xdehl\x14\xe4\x16\xcc\x1dG%UZ,\xc1\x83,\xe0\xb7(|\xa2\xac\x82\xdc8g\x93?\xd3\xf6p\x99\xff\nc\xa1\x87\'\xa6\x9f\xb4\x07s{\xacV\x86\x1b\xc3&j[\xb5D\x87\xfd\x12V\xbfc\x97\xeb&\xfe\xd1\x179p:V0\x1d\x0f;%r$A\x9caH\x0e\xc3\xd8\x18\xa2{\x8bq\xdfp\x16\x0bEE\xb0Cs#\xb3\x86\x0bS2\x18X\xbfj\x97)\xd0\xeb\xc0F\x82\xf3\xa0\x0cR\xff\x84>Z\x88\xf5\x7f\xb9@#\xb8D\xdb\x0c\x9d\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 11:12:06,114 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:12:06 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1w6lt6p4hs4t7jfonianar1hi;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 11:12:06,114 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:12:06,114 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 11:12:06,114 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 11:12:06,115 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:12:06,115 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:06,115 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,116 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 11:12:06,116 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串：200”
2018-02-05 11:12:06,117 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:12:06,117 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800325', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Token': 'asfdacfdasfasfa'}", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'消息': 'FAILURE#请求验证码识别', '模式': '200'}]", '', '成功', '', '2018-02-05 11:12:06')
2018-02-05 11:12:06,186 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:12:06,187 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:12:06,187 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800325', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 11:12:05', '0天 0小时 0分 0秒')
2018-02-05 11:12:06,274 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 11:12:06,274 test_case.py[line: 31] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 11:12:06,275 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 11:12:06,282 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:12:06,282 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 11:12:06,283 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:12:06,283 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:12:06,283 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:12:06,283 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:12:06,283 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:06,284 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,284 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 11:12:06,284 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:12:06,285 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:12:06,285 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:06,285 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,285 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 11:12:06,286 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:12:06,286 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:06,286 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,286 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 11:12:06,286 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:12:06,287 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:06,287 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,287 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:12:06,288 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 11:12:06,288 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 11:12:06,288 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 11:12:06,288 httpprotocol.py[line: 106] INFO: 请求头为：{'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36', 'Cache-Control': 'no-cache'}
2018-02-05 11:12:06,356 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 11:12:06,400 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 11:12:06,400 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:12:06 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 03:12:06 GMT')]
2018-02-05 11:12:06,400 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:12:06,401 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 11:12:06,401 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 11:12:06,401 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:12:06,401 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:06,401 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,402 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 11:12:06,402 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 11:12:06,402 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:12:06,403 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800325', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36', 'Cache-Control': 'no-cache'}", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'消息\': \'FAILURE#灯塔用户登录失败\', \'模式\': \'"result":200\'}]', '', '成功', '', '2018-02-05 11:12:06')
2018-02-05 11:12:06,478 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:12:06,478 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:12:06,479 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800325', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 11:12:06', '0天 0小时 0分 0秒')
2018-02-05 11:12:06,544 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 11:12:06,544 test_case.py[line: 31] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 11:12:06,544 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 11:12:06,553 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:12:06,554 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 11:12:06,554 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:12:06,554 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:12:06,555 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_xml
2018-02-05 11:12:06,555 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:12:06,555 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:06,555 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,556 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：
2018-02-05 11:12:06,556 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:12:06,556 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:12:06,556 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:12:06,556 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,557 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:12:06,557 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'userName'
2018-02-05 11:12:06,557 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:12:06,557 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:06,558 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,558 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 11:12:06,558 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:12:06,558 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 11:12:06,558 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:06,559 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_host$
2018-02-05 11:12:06,559 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 11:12:06,559 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 11:12:06,560 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://$global_host$:8080/ws/ddtDimCustGroupMapping
2018-02-05 11:12:06,560 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 11:12:06,560 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 11:12:20,121 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:12:20,122 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800325', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', '[{\n"模式": {\n ".//return": "dataviewer"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n},\n{\n"模式": {\n ".//return": "$groupCode_1$"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n}\n]', "{'xpath': {'groupCode': './/return'}}", '失败', '<urlopen error [Errno 11004] getaddrinfo failed', '2018-02-05 11:12:06')
2018-02-05 11:12:20,183 test_case.py[line: 84] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 11:12:20,184 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:12:20,184 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:12:20,185 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800325', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 11:12:06', '0天 0小时 0分 13秒')
2018-02-05 11:12:20,266 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 11:12:20,267 test_case.py[line: 31] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 11:12:20,267 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 11:12:20,278 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:12:20,279 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 11:12:20,280 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:12:20,280 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:12:20,281 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:12:20,281 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:12:20,281 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:20,282 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:20,282 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:12:20,282 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:12:20,282 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:12:20,283 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:20,283 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:20,283 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:12:20,284 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:12:20,284 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:20,284 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:20,285 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:12:20,285 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 11:12:20,285 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 11:12:20,286 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 11:12:20,286 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 11:12:20,312 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 11:12:20,313 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 11:12:20,313 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:12:20 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 11:12:20,313 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:12:20,313 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 11:12:20,314 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2018-02-05 11:12:20,314 unittesttestcase.py[line: 387] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 11:12:20,314 unittesttestcase.py[line: 396] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 11:12:20,315 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 11:12:20,315 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:12:20,315 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:20,315 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:20,315 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 11:12:20,316 unittesttestcase.py[line: 133] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 11:12:20,317 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:12:20,317 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800325', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'消息\': \'FAILURE#不符合断言时返回的消息\', \'模式\': \'"qq"(.+?)"\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 11:12:20')
2018-02-05 11:12:20,382 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 11:12:20,383 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:12:20,383 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:12:20,383 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:12:20,384 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:12:20,384 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:20,384 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:20,384 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:12:20,384 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:12:20,385 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:12:20,385 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:20,385 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:20,385 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:12:20,385 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:12:20,385 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:12:20,386 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 11:12:20,386 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:12:20,386 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 11:12:20,386 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 11:12:20,387 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 11:12:20,387 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 11:12:20,407 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 11:12:20,408 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 11:12:20,408 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:12:20 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 11:12:20,408 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:12:20,409 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 11:12:20,409 unittesttestcase.py[line: 377] INFO: 使用键值提取
2018-02-05 11:12:20,409 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 11:12:20,410 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 11:12:20,410 unittesttestcase.py[line: 379] INFO: 获取到的变量的值为：dataviewer
2018-02-05 11:12:20,410 unittesttestcase.py[line: 382] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 11:12:20,410 unittesttestcase.py[line: 377] INFO: 使用键值提取
2018-02-05 11:12:20,410 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 11:12:20,411 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 11:12:20,411 unittesttestcase.py[line: 379] INFO: 获取到的变量的值为：数据监视器
2018-02-05 11:12:20,412 unittesttestcase.py[line: 382] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 11:12:20,412 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 11:12:20,412 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:12:20,412 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:12:20,413 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'userName': 'dataviewer', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 11:12:20,413 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:12:20,413 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 11:12:20,413 unittesttestcase.py[line: 114] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 11:12:20,414 unittesttestcase.py[line: 117] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 11:12:20,414 test_case_step.py[line: 137] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:12:20,415 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800325', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'消息': 'FAILURE#用户名不为dataviewer', '模式': {'userName': 'dataviewer'}}]", "{'dic': {'userName': {'userName': 'value'}, 'atten': {'atten': 'value'}}}", '成功', '', '2018-02-05 11:12:20')
2018-02-05 11:12:20,482 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:12:20,483 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:12:20,484 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800325', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 11:12:20', '0天 0小时 0分 0秒')
2018-02-05 11:12:20,624 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 11:12:20,625 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 11:12:20,625 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = %s AND execution_num =%s AND plan_id=%s  data：('成功', '1517800325', 1)
2018-02-05 11:12:20,625 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = 成功 AND execution_num =1517800325 AND plan_id=1
2018-02-05 11:12:20,630 mydb.py[line: 115] ERROR: 执行数据库查询操作失败：1054 (42S22): Unknown column '成功' in 'where clause'
2018-02-05 11:12:20,630 test_plan.py[line: 81] ERROR: not enough arguments for format string
2018-02-05 11:12:20,630 running_plan.py[line: 80] INFO: 正在释放资源
2018-02-05 11:12:20,631 running_plan.py[line: 81] INFO: 正在断开与项目关联的数据库连接
2018-02-05 11:12:20,631 running_plan.py[line: 87] INFO: 正在清理与项目关联的全局变量
2018-02-05 11:12:20,631 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 11:12:20,632 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 11:21:27,978 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 11:21:27,979 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 11:21:27,979 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 11:21:27,979 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 11:21:27,979 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 11:21:27,980 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 11:21:27,980 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 11:21:27,985 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 11:21:27,986 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 11:21:27,986 running_plan.py[line: 26] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 11:21:27,986 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 11:21:27,986 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 11:21:27,992 running_plan.py[line: 32] INFO: 正在查询与项目关联的数据库信息
2018-02-05 11:21:27,992 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 11:21:28,018 running_plan.py[line: 46] INFO: 正在查询与项目关联的全局变量
2018-02-05 11:21:28,018 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 11:21:28,024 running_plan.py[line: 60] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 11:21:28,025 test_project.py[line: 26] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 11:21:28,025 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 11:21:28,025 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 11:21:28,030 test_project.py[line: 31] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 11:21:28,030 test_plan.py[line: 26] INFO: 正在查询测试计划关联的测试用例
2018-02-05 11:21:28,031 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 11:21:28,036 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 11:21:28,036 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517800888', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 11:21:28', '', '', 0, 0, 0, 0)
2018-02-05 11:21:28,105 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 11:21:28,106 test_case.py[line: 31] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 11:21:28,106 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 11:21:28,117 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:21:28,118 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 11:21:28,118 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:21:28,119 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:21:28,119 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:21:28,120 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:21:28,120 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 11:21:28,121 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,122 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_token$
2018-02-05 11:21:28,122 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 11:21:28,123 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:21:28,123 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:21:28,124 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 11:21:28,124 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,125 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 11:21:28,125 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 11:21:28,126 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:21:28,126 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,127 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,127 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:21:28,129 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 11:21:28,129 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 11:21:28,130 httpprotocol.py[line: 81] INFO: 请求头为：{'Token': 'asfdacfdasfasfa'}
2018-02-05 11:21:28,235 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 11:21:28,236 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11}IDATx\xda\xd5[\x87\x7f\x93\xf5\x13\xee\xbf!\x02"\x82[D\xfd\xe1d\xef!{\xcaF@\x91)KP\xd9\x08\x88\x0b\x90%\x02\x8a\x0c\x05\x19\xdd\xbb\xa5\xbbt\xef\xbd\xf7\x1et\xa7I\xca\xfd\xee\xb9\xf4\rI\x9at\xa4\xad\xe2\xf7\xf3\xc9\x87\x90&\xef\xf8\xde\xdds\xcfsw\xaf\r\xb5\xb3\xb2\xf2\xebh\xc0\x18;zj\xb8-\xf5\x19aK\xfdG\xdb\xd13c\xec\xa9\x1f\xff\xdbw\xa4\x1d\xf5\xe1\xcf\x9f2x\xf5\x1deK\xcf\x8e\xb5\xa7\xe7\'9\xd2k\x1f:\xd35\xbb,jy\xf4\xa8\xcdq\xf7\x9f\x8e\xa5\x93W\x92\xe9\x86C6y\x05\x17S|Z5UT5\xd1#3\xdf\xfd/,\xad\xb6\x85\xca\xabU\x14\x9dTE\x7f9\xe5\xd0\xf6\xe3Q4k\xbd\x1f\xbd=\xcf\x9d\x06Mp\x90\xbd\xc3\xbe-\xdb\x19D\xfea\xa5\xd4\xac\xd6vx\xaf6\xed\xfd\xb1\x82O\xf6\xca4\'\xa3\xcdo\xefej\x98K\x7fg\x90\xaaY\xdb\xe6\xb8\xc7.$\xd0\x89\xdf\x93\xe9\xba}6y\x06\x15S\\j5\x95W6QK\xcb\x7f\xcf0\x1aM\x0b\xc5\xa7W\xd3\x85[\xe9\xf4\xf1W\x0fh\xe8,\x976\xfb2t\x96+\xad\xd8\xfd\x80.\xdfI\xa7\xdc\xc2:Rk\xbai\x98&\x95\x86\xc6\xad\xf0~|\x82\x99.4\x7fK\x00\xbd=\xdf\xdd\xa2q\xfa\x8d\xb2\xa3\xe7\xc6;\xd0\xabl\x18l~UMs\x9b\xe3\x9e\xb9\x91J?\xfe\x96DWm\xb3\xc8-\xa0\x88\xa2\x93\xab\xa8\xa4\xbc\x914\xecy\xff\x85\xd5\xd8\xa4\xa1\x94\xcc\x1a\xb2\xf5\xc8\xa7=\'bi\xc6:?zk\xb6\x1b=;\xce^\xbf\x07\xef/\xf2\xa05{B\xe9\xd4\xd5T\xf2\x0f/\xa5\x9c\xc2z\xd9\x0b5\x1b\xb23\xc8`\xd3Q\x88~\xba/TB\x11\'\x1c\xbd\xd4\x93n\xb9dSpT9\xd9y\xe5\xd3\xd1_\x12h\xe9\xce`\x1a6\xcf\xcd\xac\x91\xf6\x9c\x88\xa1\xdc\xa2\xfa6\xc7\xbd\xe5\x92C\xdf]L\xa4\xdf\xeed\x92\xb3o!E$TRAI\x83\xd9\xe8z\x12\x166\x12\xf0SZ\xd1D\x91\x89\x95t\xe5^&m8\x18N\xa3\x97y\xd1\xa0\x89\x8e\xfa\xfb\x1d\xcc\xef\'\xac\xbaO;\x19\xca\xee\xb8\xe5Rb\xfaCA\x1d\x18\xa3\xab\xcb\xa6\xa3\x0b:\xf7g*==Rw\xe2\x0f>\xf2\x10\xc3\xe0slbQY\x83\xc0\x90\xd7\x83b\xfa\x9d/v\xe7w\xd14k\x83?\xbd\xc1\xa1\xdb\x8fa\rFM\xce|ht\xcc\xbaz5CX\x16}\xba7T \xed6\xdf\xc0\x83\x98r\xca.\xa8\xa3\x86F\xcd\x13i\x98\xaa\x87*\xf2\r-\x11g\x02b\x0c\x99\xeeB\xfdG\xd9\xe9\r\xf2\xc2dG\x9a\xb3\xd1\x9f\x8e\xf3\xdf\xfd\xc2J\xa8\x8ca\xb9\xb9Y\xdb\xad\x9c\xd9\xa1a"\xe2+$w\xe0\x02\x86\xccp\xa1\xef.%\xea\xff\x86\x17\xa2J\xd5\xac\xe10UQ\x12\x1b\x019\xe3"\xe7\x96=\'c\xe8\xf0\xd98\x0eyc\xc3 \x9c/\xdd\xc9\x90<\xf4\xbf\xb9n4\xf5\x13_Z\xb7/\x8c\x8e\xff\x9aHw\xd9H\x91\x1c=y\x1ce5u\xcdVyZO&t8\xcb/7\xd3h\xfd\xc10\x9a\xf6\x89\x8f8\x1c\x92\xb8b\x0cD\xc7\xf6o#\xd9\xb9\xf2(\x81\t\x0c"\xaa\xa9\x87\xa2\xde\xa6\xa3/\xa8TZzm\xba\xb3\\\xcc\x80\xb1v\xb4\xf5h\x04\xd5\x9b\xf1l\x18\t\x1bY\xdf\xa0a\x8fQQFn-\x85\xc5\x96S1G\x95Vk\xec9\xa7\xae\xa6\xd0\xc0V<\xc6\x0b7\xfb\xfa\x0cg\xbey_\x81\x88\xef/%\t\x14\xc0H\xe5U*\xc6t\xad\x10\x03\xc5\x19z\x1a\xa6,\x1d\xb3\xb0\xb4\x81f~\xe6G\xfdF\x1aC\xf43\xccT\xd7r\xfe\xb8\xed\x9aK\xd9\xf9\xb5\xbd\xc2&;4\x0c\xe0e\xdb\xb1Hzz\x84\xce0+v\x05sN\xa8\xe8\xd4\r7\xb1QA \xb4&I\xfd\xdc\x9fi\x92,Ms\x12\xe8\xf8KS\x9d\xe8\xdd\x05\xee4u\xad/\xb3\x9c\x10:p:\x8esQ\x06\x85\xc7UP-G\x91\xe1&(\x9b\xda\xd9\x8d1\xfc\xbe\x96\r\rF\xd5\xc4\xd1\x8e\xfcan\xe1\xf3k\x0c\xbb\xa3\x96y\xea\xf3,\x8c2\x9a\xff\x7f\xe2J\x12\xa5\xb3\xf3i{\x89\xb0th\x18l\xae\x8b\x7f\xa1\xc0Y_\xc6\xd5q+\xbd\xe9\x8e{n\xb7N\n\xc3\xbe8\xc5Qn\xb6\xefH\xcb\xf4\x1b8\x0e\xf8\x1c\xcbI\x16p\x12\x95h\xec\x10--\xba\x8d-\xaeh\xa4j\x86H$\xdaR\xc6\xf7\x92\n\xbc\x1a\x05\xeb+\xf93\xc0"\x1c\xac\xb0\xb4\x91\xe2\x91\x13Y;Ac\x9d`-u\xcb9\x9b2y\x83--\xb0\xc5\xef/\'\xd2s\x13t\x11\x0e\xed\xf6\xc2$\x07Z\xbc=\x88l\xbd\xf2z\rJm:\xf3%\xc0\x12\x12?.\xec\xd5\xe9NBw\xab9\xa7X\xbb\xb0\x89\xa3\x97z\xc9\xf1^g\n\xbe\xe3x$\xadb\x9e?f\xb9\x17\x1b\xccI\xef\x9d\x86/|v\x99#\xa7\xaeAmt,\x10\x10\x90\x88\x83\x1cY\x80\xc0\x9f\x19&\xcf\xddH\xa3\xf3\x1c\x95g\xae\xebh\xf9\xe1\xb3\xf1\xc2\x94\xd6\xed\x0f\xa3\xc5\xdb\x828\x1a}$*\xc1\xa2&\xad\xbe\xcf\xa20[\xae\xa9\xc5B\xe4\xe1\x1c 2\x83\xd9 \x86\xd2a\x15\xeb\x96P\x86k\xa0\x82id\x1a\xbe\x07\x0c\x83,5\xab[:\x1d\xdd\x9d2\x0c\xb0\x16\x90\x82\xcd\x81\x92\xddp(\x9c\x123\xaa\xad6L~1\x1f\xef\xe7\xb8VB\xe1L\xdf\x9c\x8b\xa7\xa0\xc82\xd9 \xbc_\xba#\x98\x1d\xc1\x93\xc5\xad3\xc3\xa7\xbd\xee\xbc\xbc\x89\xdb\xbf\x8d\x12=`\xb8\x80\xf1_\xfe\x18\xcd\xba\xc9\x89\xde\x9a\xe3*\x1b\x0e\'\x82\x8e\x80\xde\x82\xe1\x07\x1bPZ\xd3\xd7K\xec\x08[\x8eD\x08e\x87>\xb1\xb4@\x93\xd7\xec\t\x11H\xd7\x89i;\x86cWf\xa2Q\xf2[C\xa8\x04\x19J\xc9\xaa!\x9f\x90\x12re\xb4q\x0f,"\x17\xbf\x02\xfe\xb7P\x0c\t\x92\xd0#\x86\xc1r\xba_\xc0\xaa\xde\xa1U\xc9\xba\x907Sd\xdc\x88\x92\x94\xbb\xbaN\xfc\x91,9\x05\xc7\xfb\x9c7\xa6\xa6N-^\x0b\xdd\x83\xa4\x7f\xd7#\x8f~\xb8\x9c$\x8cm<\xc3\xe7@6\xd0\xbc\xcd\xfer\xc3\xa6\x15\x82\xb3\xd7\xd3\xa8\xff\x18\xbbNW(@\xffQ\xa1\x80\xe1\x11\xa5\x88X\xb0\xcf\x06\x8e\xc6\xf6\xee\x05\xa5\xa3\x89\xab\xbc\xf5,\x15\xaf\xf7\xd8\x11\xf62\x03\x05\xe4\x81\xc5\xb9\xb1!\x0e\x9d\x89\xa3\x85\x9f\x07\xf2w\xef\x8b\x83\x80\x81\xbe\xc8,n\xe4\x12\x0f\x9a\xc6\xd1\xban\x7f(9\xf9\x14\x88\xa0\xb6t\xbeN\x1b&\x8c\x93\xef\xb2\x1dA\x82\xb1\xf0\x9a\xe1\xec\x95\x80\x90\x80\x88RfNM]6\xccM\xe7\x1czo\xa1\xbb\x18\x070\x16\x1e\xff\xd8\xeb\xa0\x01\x00\x95y\x1cY\x10iA,h\xef\xb9\xe7\xd1\r\xc7l\x8aI\xaej#D=\x82\x8a\x04\x92\x14\xc8C\x94\r\x9e\xe8 \xcc\x0f\x8cO\xc9c\xa0\xbb\x1f~\xeaK\x1b\x99\xf9\x01\xe2 \x92\xa38\x122\xf3jE\xabh:P\xe5`\x9d\x9e|.h\x16%r@\x88\xde]\xe8Fk\xf7\x86\xd0\xea\xafC\xa4>f\x08\xbf\xa6\xef\xfb\xb4\x12\x88W>t\x16\xaa\r9a\xee\x9c\x9d6\x0c\xf0w\xff\xcf\xb1F\x9e\xf7\xf24\'\x9a\xc2\x1e\x00(\xf1\xe4\x84Z\xda\x85z\x17\xbe\xf7B+f\xffo\xae+=\x88.\xb7\xc8\xa4\xb4\x9c\xe4\x1f\xd66K\xf2F\x827w\xac\xa5;\x02\x8d\xf0\x1f\xd7t\x98a\x11\xd4\xfc\xba\x83\xae&\x87\x8aElr5e\xe5\xd5\t1hTu]s\xe0z\xfc\xc2J\x05\x82-\x92\x96\xd1\xba\x92\x0c\xb4\xcf\xbcM\xfe\x12\xe9\x93V{\xd3\xb0\xb9m\x99\xe8\xf0\x8f\xdc\xe5Z\xac6\x0c\x16\xbck\xdb\xb1\x08\xf1<Sh@H\xa3D\x93\x9c\xf5P<\xafC\x1a\xce0x\xe4|\x82x\x104\xcc\xa5\xdb\xe9\xedb|G\xeb\x8f{\x99|\x1c]\x01\xf1M\xc6~$\xff\xc2\x92\x061$\x18YOj\rD\x0et\xd6\x84U\xde\xfahx\x95a\x11\xd1\x08iq\x81E\xa9\x93O>\x05\x84\x97\n\x0b\xcca\x88\x8bO\xab"GN\x07\xbb\xbe\x8f62\x10\x8c\xf8\x19\x93\x92\xb8\xd4*\xeb\r\xd3\xd2Z\t\xb0e\xfc?\xc99b\xf1\xf6@I\xb8J\xae\x00\x96.\xda\x1a(\x89\xb23\x11\xe3\x17Z\xa2o\x1d\xcc\xdd\xe4\xd7\xad\xcd\x03^\xbfcP\xb3[\xb85@\xb4Jo-\\?J\xfc\x80I\x18e7G(\xf2\x0b\xc8I\x93A$\x1ai\'\xbeFPw\xaf\xe0"\xa3\x96\xc9\xc0\xf1\xf6\xb4\xefT\xac\xf5\x86QDWM\xbd\x9a*\x19\x93a\xa4\xf3\x7f\xa6\x8a\x81\x00k\n\xee\xbe3\xdf\x8d~\xbd\x95.\x1a\xa2\xbd\xcd\xf6\r+\xa1\xb9\x8c\xd7\xf8\xcd\xe45>\xc2^\xba\xb3\x00[H\xear\r\x1c\xc1(\x96jz\xb1\xac\x03x\x8df\'LB?\xa9ZW\x1f\xeb\x08\xca\x15\xd6v\xd56Sr\xacb\x9c\xc9\x9c#\x01\xb7\xca~\xd9X{Q8\x00n\xba\x9a\r\x14\x9bR\xc9\x11\x94\xc2I\xf0\xf1\x89 \x0c\xcf\\Ka\xb5\xaen\x17\x12\xe6m\nh\x8d6\x07\xbat\'\xbd\xdb\x10\xa3\x94z\x00/\x0b\xb6\x04RMms\xafV\x9d[\xba\x18\xe5:]\xd3\xc2\xf0\xaaf\x08\x0b}\x9c\x0e\xf8z\x7fd\x16\xaa\x18\xd6\xa6\xa7.\x12L\xc9\x87\xa1i\xf9\xae`}_\x02I\x18\xd5iD\x97\xa5u\x84\xf3\x12:\xa2\xd0Gh\x13d\xe7\xd7u\x0b\xd2\x8e^H\xd4W\xc3\xa1c\xae\xb0g\xd6\xd6\xab\x9f\xb8\x8a5\xf6\xeb\xae{\xae\x94w\x14\xe3\xa0\xfe\x96\x9c\xa1ci6=\xe9=\xc0\xd0\x8c\xdc\x1a\xda\xc1\xa2K\xa1\x87\xa8}!Q\x9a\xdbl|\x86\xe4\x0c\x9c\xc6\xf7\x11\xda\xa11\xe5\xa4\xee\x82B6\x07/J\xceC\xfb{\xc1\x96\x00J\xcd~h\xb1`\x89kF\xe4\x83\xf9!7\xe0\xdc \x0bx)\xde\xdb\x1b\x9dU\x1c3\xa7\xb0\x8es\xe1c6\xf9<S\xfc\xf8\x94\xaa\x9e5\x8c\xe1\x8d\xa6\xb2\x08\xdcx(\x9c\x9e\x9b\xa0\xa3\xc3(\x8f\x83\xa1\x98\xbbA|w\xf9\x17\xc1\xba\xce\x1fo\xe8\xcc\xf5~t\xf1\xeft\xd65\x15T\\\xd6(\x9b\xd5U\x11\xbb\xeb\x87h1\n\x8e9\x8c\xa9\xf8\x99\xeb)R\xe5\xc6f\x83\x9a\xa6f\xd7PHL\x85\x88d\xcf\xa0B!3\x17\x99\x15"G\x9d\xbc\x92B\xbf\xfc\x95\xc6\xcc*]\x1ab\xde\x98I`f%\x1dV6 `\xa8\xa7\x16\x8e\x89\x0e(Z\x08\xb8V\xa0\x06\xaa\x1f8\x8fMo\x84)62\x93#g\xc9\xf6 }\xabu\xfe\xe6\x00*\xadh4{q_3\x84\x99\xea\x80\x91K<\xe9\xf3#\xe1t\x8f7\r\xfd\x99\xaeTq\x93\x18\x0ePjQ\x8e\x05\xb5\xfd\xfb\xdd\x0c\xb2\xf7\xce\xa7\x9f\xae$Kka\xf6\x06\x7f\xa9\xd7\r\x95\x92\x8d\x83|\xefe\x8en\x88S4\xf9\xf0\x19\x1ab\xa8r\xe0\xf7\x90\t\xae~\x05m\xfaK\xddA\x18T:N\xfc\x96\xac\x17\xc0(\x1d\x1db\xed\xd5\xa39\xc6\xdc\x89QVA=I\t\xd3\x1b\xf6YTW\xdf\xdc\xc6\xfb/\xdf\xce\xa0\xf1+\xbc\xc5\x80\xa6}\x8f\x91K=\xe9\xc0\x99X\xe9\x84*\xd3%\x9d\x89\x1e\x0cF(\x13>J\xf4\x18i\xaf\x11\xb6\xfa\\\x84\xba\xd7\x801\xf6zVi\xa9\x88:n\xa5\x17m=\x1a)\xe5~\x8d\xa6\xa5\xdb\xda\x08\xedt\xa8\xffA\xad\xc8\xf2\x0c;\xc7i&L\xd5\x0c\xc76\xbd\x99\xe0J\xca\x9bX\x81\xc7\xe87\x02\x9b\x95\x92\xd5\xb6\x04QPROn\xec\x8d\xb8\xa8\x8f\xbf| \xc6\x80\xc7+\x86\xc2\xa6\xbc\xbf\xc8]\xbc=\xbb\x00\x9b\xd2q\xdb\x16\xd1\xf1\xf6|c\xa5\rR\x82(\x18\xb1\xd8S\xe89\xca8x\x0fe\xbe\xe9p\xb84\x01W\xedz \xf5\xb0w\x988\x0c\x1c\xef`2\x05\xa4#)hA\xa0f\xd7\x9d^\x8c\x8a\x9d\x0cC\x1a\xf3\x18I\x94\x88\x81\xf0\xbc\xc40^\xcf\x8c\xadW\r\x03\xfa\x1a\x18Q\xaa\xdf`\x08PT[M7\x15\xb8]S\xabb\xdd\xd3$\xed\xe9\x9b\x8c\xb3(\xa9L\xfc\xf8>\xeb\x92\xc7\xde>d\xba3m\xf9&\x82\xa2\x12*9I\xb7o\x1c\xc0\xc4\xd2/\x82$R\xdf\xe0\xa8\x1d\xcf\x9b\r\x85\x8d\xea\xf5\x1f\xcc\xd4<X3\xc1I\x00\xbb\xa8\x93A\x9d\xe7\x16\xd5\t\xb4\xc6\xb3\nG\xcfi\xfd\x810zo\x81[\x9b\x08\x82q\x90\x87\xac\xd1H\x86$i\x0b;\xc3\xa0\xf1\xf6\xfa\xd1/\xe4\xd7\xc0H].\xeeU\xc3(e\x9c)\xec\x99\nl\x1c<\x13g\xb6\xe8\xa9t\x15aLlTZN\x8d\xd0\xc9\x95\xbb\x1fH\xf4(\x9b\x83\xc8\xc3\xe0\\pt\x1956\xa9\xc5\xa8\x96\x0c\x04\xfa\x0e#\x870\xd3\x83\xdez\xc8\xaa\x1b\xa2\x17\xcc\r\xe5\x1fs\x1e\xafh\x13\\GHl9\xed=\x15#Q\xa50=\xe5\xb5\x84E\xb5%j\xaf\x15c7KK\\\xf9;({^Q\x03\x85\xc6V\x88\xf8^\xb4-P\xf2\x98\x82\x08\x88P\x0cA\x02\xde\xfe\x19\xc3\xb0w\x03\x9eP\x85\xc5\xa6\xa2\x02\x1b\x97R\xd5i\x86\x87z\x17\xd8\x11\n\x82\x86\x9b3\x9b\xbd\xcb\'\xa4\x98T*\x8dE\xe3\x80\xd1\xd55h\xac\xa6\xdf\xf5\rj\x99\x8e\xd9\xccQ\xaa\xd4\xe1\x142\x03B\xe0\x11P\xd4\xa6I\x86a>\x90\x0ftH\xbf\xfd5\x91\xbe\xfa)F\x88\xc3nf\x8ah\xd6-\xd9\x11D\xef/\xf4\xd0\x0ba\x1c\x0b\xe3__\xf3\xf7\xd0\xeeP\xca9\xbdn\x18$\xedu\xfbB\xf5%o\x94`"\x13*:\xbdQ0NYU\xa3\xb0\xb39\xcc\xa4\xfa\x1a\x10\x84\x19\xeb|\xa5\xf1\xa4\xd5j{\x94\xc6\x1aF\x0f\x18!<y\xd8<W#\xc3\xe0\xdc\x90\x00\xcd&-\x08\xc0\x1bJU\x98\x8d\xc0\xe0#^\xcad\x8d\xb2\x07\x86\xd08v\x85\x97L\x1eaO\x0c\x87\\\xac2LW\xca\x10\xf9\xc5\xf5\xachC\xf4\x17\x02\x8aZT\xda\xd0e\x0fF5\xda\xd1\xc78\xa1\x03\x97\x91\xb8+\xab\x1b\x85\x10\xf4\x86aPt\xbca\x9f-3\n\x86\xe7]\xbe3X\xfa8m\xf3\xe5#i\xf6an\xce\x10\xfa@\xc3Q\xec\x04dMXy_ \xfa\x07\xa6\xca\xa8\x8faF\\m2\x10bc\xcd\xc5*\xc3~j\xb5\xb6\xc3\x8a/\xe6\x05fn\xf0{\xdc\xcae\xad\xd0l\xe5\xec\x15\xc2\x1cc\xb7\xa6L\x0b\x82\x14\xc4\xa17\xf4Xqy\x83\x9c\xf3y\x83\xf64\xba\x91\x18\x88\xc7\xa8\x96\xb9\xfd\xc1\\\xc2O\xfc\x1b\xb0P\xcc\n\xac\xfa2XX\xdf\xd1\xf3\t"\r\xec\xbd\xf2%\xd7\xb4\xe7\xa0V\x19\xa6\x90\x8d\x82\xb1\x1e\x08FK\x07V\x8a\x9c\x8e>\x05\xf4\xb6\x01\x0c\x8cX\xe2au\xc5\x17\xc7|X\xab6\x9aI\x93\x96\xc1F?\x99\x08\xed\xc9\x9e\x8b\x8c_5k\xa4c\xfa\xc1"\xe3Y\xed\xed\xc7"e\x0e\xa2\xbd"eYe\xa3\xe4\x9at&1\xa8\x15"\x17!ga\x12\x15\xffv4\xa9i\x95a\x90\x10\xc7s8\xa2\x87\x90\x90^\xdd\xa6\xc1\xa5\x88@\xe8\x93\xcd\xdf\x84\xeb\x85\x1e^\x9b8\x91v\'\x1f\xe0\xb8\xab\xd9\x13\x9f6\xc0iPj[\xcf\xbc\x1e\xcb3\xba\x998\x8d\xb0\xb2\x99\x9cK\xfa\x18\x0c`\xc0\xf3\x0b\x8a\x1b\xda\xfd\xad\xb9WWW\x97\r\x03\x86\x03\x0e\x8f\xcdF\xe7\x11l\xc37\xb4X\xd4\xaaB5qS\xa0\xc4\xa87\r1`3h\xc7\xfe\xed\x9a\xd3-\xcf\xc6\x08\x10\xba\x80\x03\x0c\xf4\r6\x0c\xe2\xb4\'z/\xb86\xc0"\x0c=\x9b!\x18\x89\x1e\x86AWt\xff\xe98\x8b\x91b\xf8\xfb\x9eX]6\x0c4\x00(\xa0\xd2R\xc6\xfc1\x84\x184\xc7\xfd\x90\x12\n\x8f/\x17E\x8b\x82 z\xf9\x86\xb9\x00$ \xab\x9d\xe1\xba\xce,8\xc0\x81\xd31"V\x95c\x83\xf9`2\xc5\xda2\x89\xa2\xa1*\xaaT\xacy\xcaXk\xc5J\xa5\xbbO+\x8b\x1a\xf1\x91\x07\x9dgg,*k\xfc\xc7\x9e\xe1\xb1\xe9\xba7\xa9\xe4\x81$\x14\x19\x07\xb4\xd2@l\xfa\xd8\xe5\xde,\xfc\x82e\xe2e\xde\x96\x00\xe9$*\x10\x80\x89\xcaI\xac\xe2\x9d9\xdf4\xab\xb5\xdd\xf2\xe6\xac\xfcZ\x19wzq\xb2q2\xdew2\xb6S\x13\xf6\xa6\xd0\x02"\x03\xd5\x8f\'\x16\x8e\x9c\x8f\x97\xebD\xab\x17\xe5\x98\x11|\x8f()an\xac\xfe\x1f~\x12\xa1\xcb\x86\x01m\x8de\x81\x88\xd1\xa5\xa9k\xef\xcb\xc09\x8a\x8d\xc0|S\xce.\xfdl6\xda\x945>t\xcd6Kj@\xddcI\xac\xc6Y\xf1\xaf\xd8\x15D\x83&>\xeeT\x02"1\x83P\xd7AC\x0ce\x7f\xb4\x80a\xdc@\x0c\x18:f\xcb\xa3\x13hQ`:\x13\x0f[\x01\x05PQ\xc6\xec\xd7m\x86]0\xa7\x7f\xe3I7\xabt\x0ch0n\x0e5\'\xdc\x14\x06\xf2\xc0\xf3\x95\xb2\x0b\xaa\xa4\x80\x00\x0cj\xac\xdc\x1d,\xe2\x10\x1bb\xea\xcdj\xe9ot~ \x1c*\xff\xec\x8dTzs\x8e\x8b\x91\xa6@\x15\xc0\xd5\xbf\xc0\xaca\xa0oP:Ay\x06\xf9\r-p\x10\x12<\x05\x06C\xc0\xb0\x03\xc79\xd0\xd0\x99\xaer\x1f\x982\xbd\xe9\x92#\xe5}\xd0\xde\x96\x7f\xe9\xb9P\xab\x95?0\x19\xa3\x9eAQe2/\x8c\x02\xe1\xaa\xafBD\xd9\xa3k\x88\n,8{lj\x95\xc5G\xf8\xc0\xe8 \xd2\xa0\x87,\x95U\x14\xe8\xc11\x9c\xfc\ni\x16\'dC\xe5\xdc\x7f\xb4-\x9d\xbe\x9a*\xa5\x1bsF\xc6g\xae\xfc;\xf4\x86\x94\x92N\xff\xd6\x87{Q\xab\x1a\xceT\x189\x12e\x9f\x08\x13\xf5\xfdo\xaen\x97d\xb0i\xa0\xcbi\xd2\x15,\xa7`6\x14\x1e\x99\xa8\xaeU\xb5\x19\x007\xad\x08\x9cb\xef\xc5\xe07\xca6x\xf0\tx\xafm\x1d\x1bU\xf4\x80\xee\x11\xbbF)\xe3\xcf\xdehl\x14\xe4\x16\xcc\x1dG%UZ,\xc1\x83,\xe0\xb7(|\xa2\xac\x82\xdc8g\x93?\xd3\xf6p\x99\xff\nc\xa1\x87\'\xa6\x9f\xb4\x07s{\xacV\x86\x1b\xc3&j[\xb5D\x87\xfd\x12V\xbfc\x97\xeb&\xfe\xd1\x179p:V0\x1d\x0f;%r$A\x9caH\x0e\xc3\xd8\x18\xa2{\x8bq\xdfp\x16\x0bEE\xb0Cs#\xb3\x86\x0bS2\x18X\xbfj\x97)\xd0\xeb\xc0F\x82\xf3\xa0\x0cR\xff\x84>Z\x88\xf5\x7f\xb9@#\xb8D\xdb\x0c\x9d\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 11:21:28,241 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:21:28 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=w3p5k3jj1hrg4nole6r2yvk7;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 11:21:28,241 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:21:28,241 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 11:21:28,241 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 11:21:28,242 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:21:28,242 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,243 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,243 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 11:21:28,243 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串：200”
2018-02-05 11:21:28,244 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:21:28,244 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800888', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Token': 'asfdacfdasfasfa'}", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'消息': 'FAILURE#请求验证码识别', '模式': '200'}]", '', '成功', '', '2018-02-05 11:21:28')
2018-02-05 11:21:28,305 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:21:28,306 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:21:28,306 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800888', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 11:21:28', '0天 0小时 0分 0秒')
2018-02-05 11:21:28,380 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 11:21:28,381 test_case.py[line: 31] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 11:21:28,381 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 11:21:28,392 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:21:28,392 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 11:21:28,393 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:21:28,393 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:21:28,394 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:21:28,394 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:21:28,395 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,395 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,396 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 11:21:28,396 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:21:28,397 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:21:28,397 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,398 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,399 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 11:21:28,399 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:21:28,400 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,401 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,401 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 11:21:28,402 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:21:28,402 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,403 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,403 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:21:28,405 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 11:21:28,405 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 11:21:28,406 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 11:21:28,406 httpprotocol.py[line: 106] INFO: 请求头为：{'Cache-Control': 'no-cache', 'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'}
2018-02-05 11:21:28,480 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 11:21:28,486 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 11:21:28,486 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:21:28 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 03:21:28 GMT')]
2018-02-05 11:21:28,486 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:21:28,487 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 11:21:28,487 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 11:21:28,487 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:21:28,487 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,489 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,489 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 11:21:28,489 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 11:21:28,490 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:21:28,491 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800888', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Cache-Control': 'no-cache', 'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'}", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'消息\': \'FAILURE#灯塔用户登录失败\', \'模式\': \'"result":200\'}]', '', '成功', '', '2018-02-05 11:21:28')
2018-02-05 11:21:28,554 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:21:28,555 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:21:28,556 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800888', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 11:21:28', '0天 0小时 0分 0秒')
2018-02-05 11:21:28,629 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 11:21:28,630 test_case.py[line: 31] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 11:21:28,630 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 11:21:28,638 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:21:28,639 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 11:21:28,639 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:21:28,639 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:21:28,639 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_xml
2018-02-05 11:21:28,639 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:21:28,640 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,640 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,640 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：
2018-02-05 11:21:28,640 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:21:28,640 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:21:28,641 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:21:28,641 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,641 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:21:28,641 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'userName'
2018-02-05 11:21:28,641 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:21:28,642 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,642 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,642 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 11:21:28,642 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:21:28,642 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 11:21:28,642 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,643 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_host$
2018-02-05 11:21:28,643 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 11:21:28,643 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 11:21:28,643 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 11:21:28,644 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 11:21:28,644 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 11:21:28,691 APIUnittestTestCase.py[line: 239] INFO: 正在对服务器返回body进行解码
2018-02-05 11:21:28,691 APIUnittestTestCase.py[line: 262] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"/></soap:Body></soap:Envelope>
2018-02-05 11:21:28,692 APIUnittestTestCase.py[line: 263] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 11:21:28,692 APIUnittestTestCase.py[line: 264] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:21:28,692 APIUnittestTestCase.py[line: 268] INFO: 正在提取目标返回结果值
2018-02-05 11:21:28,693 unittesttestcase.py[line: 400] INFO: 使用xpath提取
2018-02-05 11:21:28,693 unittesttestcase.py[line: 325] INFO: xpath表达式为：.//return
2018-02-05 11:21:28,694 unittesttestcase.py[line: 330] INFO: 正在获取xmlns定义
2018-02-05 11:21:28,719 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:21:28,719 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800888', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', '[{\n"模式": {\n ".//return": "dataviewer"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n},\n{\n"模式": {\n ".//return": "$groupCode_1$"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n}\n]', "{'xpath': {'groupCode': './/return'}}", '失败', 'Traceback (most recent call last):\n  File "E:\\mygit\\AutoTestPlatform\\interface_project_for_dev\\interface\\APIUnittestTestCase.py", line 269, in test_api_for_xml\n    self.save_result(body)\n  File "E:\\mygit\\AutoTestPlatform\\interface_project_for_dev\\unittesttestcase.py", line 401, in save_result\n    value_get = self.extrator(\'xpath\', extrator, response_to_check)\n  File "E:\\mygit\\AutoTestPlatform\\interface_project_for_dev\\unittesttestcase.py", line 365, in extrator\n    return value_get\nUnboundLocalError: local variable \'value_get\' referenced before assignment\n', '2018-02-05 11:21:28')
2018-02-05 11:21:28,779 test_case.py[line: 84] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 11:21:28,780 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:21:28,780 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:21:28,780 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800888', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 11:21:28', '0天 0小时 0分 0秒')
2018-02-05 11:21:28,854 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 11:21:28,855 test_case.py[line: 31] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 11:21:28,856 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 11:21:28,866 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:21:28,867 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 11:21:28,867 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:21:28,868 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:21:28,869 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:21:28,869 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:21:28,870 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,871 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,871 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:21:28,872 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:21:28,872 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:21:28,873 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,873 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,874 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:21:28,874 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:21:28,875 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,875 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,876 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:21:28,877 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 11:21:28,878 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 11:21:28,878 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 11:21:28,879 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 11:21:28,932 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 11:21:28,933 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 11:21:28,933 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:21:28 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 11:21:28,933 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:21:28,934 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 11:21:28,934 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2018-02-05 11:21:28,935 unittesttestcase.py[line: 387] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 11:21:28,935 unittesttestcase.py[line: 396] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 11:21:28,935 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 11:21:28,935 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:21:28,936 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,936 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,936 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 11:21:28,937 unittesttestcase.py[line: 133] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 11:21:28,938 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:21:28,938 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800888', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'消息\': \'FAILURE#不符合断言时返回的消息\', \'模式\': \'"qq"(.+?)"\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 11:21:28')
2018-02-05 11:21:28,996 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 11:21:28,996 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:21:28,996 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:21:28,997 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:21:28,997 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:21:28,997 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,997 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,997 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:21:28,997 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:21:28,998 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:21:28,998 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,998 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,998 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:21:28,998 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:21:28,999 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:21:28,999 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168'}
2018-02-05 11:21:28,999 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:21:29,000 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 11:21:29,000 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 11:21:29,000 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 11:21:29,000 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 11:21:29,048 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 11:21:29,048 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 11:21:29,048 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:21:29 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 11:21:29,048 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:21:29,049 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 11:21:29,049 unittesttestcase.py[line: 377] INFO: 使用键值提取
2018-02-05 11:21:29,049 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 11:21:29,049 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 11:21:29,049 unittesttestcase.py[line: 379] INFO: 获取到的变量的值为：dataviewer
2018-02-05 11:21:29,050 unittesttestcase.py[line: 382] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 11:21:29,050 unittesttestcase.py[line: 377] INFO: 使用键值提取
2018-02-05 11:21:29,050 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 11:21:29,050 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 11:21:29,050 unittesttestcase.py[line: 379] INFO: 获取到的变量的值为：数据监视器
2018-02-05 11:21:29,051 unittesttestcase.py[line: 382] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 11:21:29,051 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 11:21:29,051 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:21:29,051 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:21:29,051 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器'}
2018-02-05 11:21:29,051 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:21:29,052 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 11:21:29,052 unittesttestcase.py[line: 114] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 11:21:29,052 unittesttestcase.py[line: 117] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 11:21:29,053 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:21:29,053 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800888', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'消息': 'FAILURE#用户名不为dataviewer', '模式': {'userName': 'dataviewer'}}]", "{'dic': {'userName': {'userName': 'value'}, 'atten': {'atten': 'value'}}}", '成功', '', '2018-02-05 11:21:28')
2018-02-05 11:21:29,121 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:21:29,122 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:21:29,122 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517800888', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 11:21:28', '0天 0小时 0分 0秒')
2018-02-05 11:21:29,187 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 11:21:29,188 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 11:21:29,189 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517800888', 1)
2018-02-05 11:21:29,189 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517800888 AND plan_id=1
2018-02-05 11:21:29,200 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 11:21:29,200 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517800888', 1)
2018-02-05 11:21:29,200 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517800888 AND plan_id=1
2018-02-05 11:21:29,208 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 11:21:29,208 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517800888', 1)
2018-02-05 11:21:29,209 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517800888 AND plan_id=1
2018-02-05 11:21:29,215 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 11:21:29', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=3, case_fail_num=1, case_block_num=0 WHERE execution_num='1517800888' AND plan_id=1
2018-02-05 11:21:29,286 running_plan.py[line: 80] INFO: 正在释放资源
2018-02-05 11:21:29,287 running_plan.py[line: 81] INFO: 正在断开与项目关联的数据库连接
2018-02-05 11:21:29,287 running_plan.py[line: 87] INFO: 正在清理与项目关联的全局变量
2018-02-05 11:21:29,288 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 11:21:29,289 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 11:25:18,557 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 11:25:18,558 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 11:25:18,558 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 11:25:18,558 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 11:25:18,559 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 11:25:18,559 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 11:25:18,560 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 11:25:18,566 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 11:25:18,567 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 11:25:18,567 running_plan.py[line: 26] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 11:25:18,567 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 11:25:18,567 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 11:25:18,573 running_plan.py[line: 32] INFO: 正在查询与项目关联的数据库信息
2018-02-05 11:25:18,574 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 11:25:18,598 running_plan.py[line: 46] INFO: 正在查询与项目关联的全局变量
2018-02-05 11:25:18,599 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 11:25:18,606 running_plan.py[line: 60] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 11:25:18,606 test_project.py[line: 26] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 11:25:18,606 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 11:25:18,607 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 11:25:18,613 test_project.py[line: 31] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 11:25:18,613 test_plan.py[line: 26] INFO: 正在查询测试计划关联的测试用例
2018-02-05 11:25:18,613 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 11:25:18,619 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 11:25:18,620 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517801118', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 11:25:18', '', '', 0, 0, 0, 0)
2018-02-05 11:25:18,764 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 11:25:18,764 test_case.py[line: 31] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 11:25:18,765 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 11:25:18,775 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:25:18,776 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 11:25:18,776 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:25:18,777 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:25:18,777 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:25:18,778 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:25:18,779 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 11:25:18,779 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:18,780 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_token$
2018-02-05 11:25:18,780 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 11:25:18,781 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:25:18,781 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:25:18,782 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 11:25:18,782 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:18,783 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 11:25:18,783 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 11:25:18,784 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:25:18,785 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:18,786 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:18,786 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:25:18,788 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 11:25:18,788 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 11:25:18,788 httpprotocol.py[line: 81] INFO: 请求头为：{'Token': 'asfdacfdasfasfa'}
2018-02-05 11:25:18,873 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 11:25:18,874 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11}IDATx\xda\xd5[\x87\x7f\x93\xf5\x13\xee\xbf!\x02"\x82[D\xfd\xe1d\xef!{\xcaF@\x91)KP\xd9\x08\x88\x0b\x90%\x02\x8a\x0c\x05\x19\xdd\xbb\xa5\xbbt\xef\xbd\xf7\x1et\xa7I\xca\xfd\xee\xb9\xf4\rI\x9at\xa4\xad\xe2\xf7\xf3\xc9\x87\x90&\xef\xf8\xde\xdds\xcfsw\xaf\r\xb5\xb3\xb2\xf2\xebh\xc0\x18;zj\xb8-\xf5\x19aK\xfdG\xdb\xd13c\xec\xa9\x1f\xff\xdbw\xa4\x1d\xf5\xe1\xcf\x9f2x\xf5\x1deK\xcf\x8e\xb5\xa7\xe7\'9\xd2k\x1f:\xd35\xbb,jy\xf4\xa8\xcdq\xf7\x9f\x8e\xa5\x93W\x92\xe9\x86C6y\x05\x17S|Z5UT5\xd1#3\xdf\xfd/,\xad\xb6\x85\xca\xabU\x14\x9dTE\x7f9\xe5\xd0\xf6\xe3Q4k\xbd\x1f\xbd=\xcf\x9d\x06Mp\x90\xbd\xc3\xbe-\xdb\x19D\xfea\xa5\xd4\xac\xd6vx\xaf6\xed\xfd\xb1\x82O\xf6\xca4\'\xa3\xcdo\xefej\x98K\x7fg\x90\xaaY\xdb\xe6\xb8\xc7.$\xd0\x89\xdf\x93\xe9\xba}6y\x06\x15S\\j5\x95W6QK\xcb\x7f\xcf0\x1aM\x0b\xc5\xa7W\xd3\x85[\xe9\xf4\xf1W\x0fh\xe8,\x976\xfb2t\x96+\xad\xd8\xfd\x80.\xdfI\xa7\xdc\xc2:Rk\xbai\x98&\x95\x86\xc6\xad\xf0~|\x82\x99.4\x7fK\x00\xbd=\xdf\xdd\xa2q\xfa\x8d\xb2\xa3\xe7\xc6;\xd0\xabl\x18l~UMs\x9b\xe3\x9e\xb9\x91J?\xfe\x96DWm\xb3\xc8-\xa0\x88\xa2\x93\xab\xa8\xa4\xbc\x914\xecy\xff\x85\xd5\xd8\xa4\xa1\x94\xcc\x1a\xb2\xf5\xc8\xa7=\'bi\xc6:?zk\xb6\x1b=;\xce^\xbf\x07\xef/\xf2\xa05{B\xe9\xd4\xd5T\xf2\x0f/\xa5\x9c\xc2z\xd9\x0b5\x1b\xb23\xc8`\xd3Q\x88~\xba/TB\x11\'\x1c\xbd\xd4\x93n\xb9dSpT9\xd9y\xe5\xd3\xd1_\x12h\xe9\xce`\x1a6\xcf\xcd\xac\x91\xf6\x9c\x88\xa1\xdc\xa2\xfa6\xc7\xbd\xe5\x92C\xdf]L\xa4\xdf\xeed\x92\xb3o!E$TRAI\x83\xd9\xe8z\x12\x166\x12\xf0SZ\xd1D\x91\x89\x95t\xe5^&m8\x18N\xa3\x97y\xd1\xa0\x89\x8e\xfa\xfb\x1d\xcc\xef\'\xac\xbaO;\x19\xca\xee\xb8\xe5Rb\xfaCA\x1d\x18\xa3\xab\xcb\xa6\xa3\x0b:\xf7g*==Rw\xe2\x0f>\xf2\x10\xc3\xe0slbQY\x83\xc0\x90\xd7\x83b\xfa\x9d/v\xe7w\xd14k\x83?\xbd\xc1\xa1\xdb\x8fa\rFM\xce|ht\xcc\xbaz5CX\x16}\xba7T \xed6\xdf\xc0\x83\x98r\xca.\xa8\xa3\x86F\xcd\x13i\x98\xaa\x87*\xf2\r-\x11g\x02b\x0c\x99\xeeB\xfdG\xd9\xe9\r\xf2\xc2dG\x9a\xb3\xd1\x9f\x8e\xf3\xdf\xfd\xc2J\xa8\x8ca\xb9\xb9Y\xdb\xad\x9c\xd9\xa1a"\xe2+$w\xe0\x02\x86\xccp\xa1\xef.%\xea\xff\x86\x17\xa2J\xd5\xac\xe10UQ\x12\x1b\x019\xe3"\xe7\x96=\'c\xe8\xf0\xd98\x0eyc\xc3 \x9c/\xdd\xc9\x90<\xf4\xbf\xb9n4\xf5\x13_Z\xb7/\x8c\x8e\xff\x9aHw\xd9H\x91\x1c=y\x1ce5u\xcdVyZO&t8\xcb/7\xd3h\xfd\xc10\x9a\xf6\x89\x8f8\x1c\x92\xb8b\x0cD\xc7\xf6o#\xd9\xb9\xf2(\x81\t\x0c"\xaa\xa9\x87\xa2\xde\xa6\xa3/\xa8TZzm\xba\xb3\\\xcc\x80\xb1v\xb4\xf5h\x04\xd5\x9b\xf1l\x18\t\x1bY\xdf\xa0a\x8fQQFn-\x85\xc5\x96S1G\x95Vk\xec9\xa7\xae\xa6\xd0\xc0V<\xc6\x0b7\xfb\xfa\x0cg\xbey_\x81\x88\xef/%\t\x14\xc0H\xe5U*\xc6t\xad\x10\x03\xc5\x19z\x1a\xa6,\x1d\xb3\xb0\xb4\x81f~\xe6G\xfdF\x1aC\xf43\xccT\xd7r\xfe\xb8\xed\x9aK\xd9\xf9\xb5\xbd\xc2&;4\x0c\xe0e\xdb\xb1Hzz\x84\xce0+v\x05sN\xa8\xe8\xd4\r7\xb1QA \xb4&I\xfd\xdc\x9fi\x92,Ms\x12\xe8\xf8KS\x9d\xe8\xdd\x05\xee4u\xad/\xb3\x9c\x10:p:\x8esQ\x06\x85\xc7UP-G\x91\xe1&(\x9b\xda\xd9\x8d1\xfc\xbe\x96\r\rF\xd5\xc4\xd1\x8e\xfcan\xe1\xf3k\x0c\xbb\xa3\x96y\xea\xf3,\x8c2\x9a\xff\x7f\xe2J\x12\xa5\xb3\xf3i{\x89\xb0th\x18l\xae\x8b\x7f\xa1\xc0Y_\xc6\xd5q+\xbd\xe9\x8e{n\xb7N\n\xc3\xbe8\xc5Qn\xb6\xefH\xcb\xf4\x1b8\x0e\xf8\x1c\xcbI\x16p\x12\x95h\xec\x10--\xba\x8d-\xaeh\xa4j\x86H$\xdaR\xc6\xf7\x92\n\xbc\x1a\x05\xeb+\xf93\xc0"\x1c\xac\xb0\xb4\x91\xe2\x91\x13Y;Ac\x9d`-u\xcb9\x9b2y\x83--\xb0\xc5\xef/\'\xd2s\x13t\x11\x0e\xed\xf6\xc2$\x07Z\xbc=\x88l\xbd\xf2z\rJm:\xf3%\xc0\x12\x12?.\xec\xd5\xe9NBw\xab9\xa7X\xbb\xb0\x89\xa3\x97z\xc9\xf1^g\n\xbe\xe3x$\xadb\x9e?f\xb9\x17\x1b\xccI\xef\x9d\x86/|v\x99#\xa7\xaeAmt,\x10\x10\x90\x88\x83\x1cY\x80\xc0\x9f\x19&\xcf\xddH\xa3\xf3\x1c\x95g\xae\xebh\xf9\xe1\xb3\xf1\xc2\x94\xd6\xed\x0f\xa3\xc5\xdb\x828\x1a}$*\xc1\xa2&\xad\xbe\xcf\xa20[\xae\xa9\xc5B\xe4\xe1\x1c 2\x83\xd9 \x86\xd2a\x15\xeb\x96P\x86k\xa0\x82id\x1a\xbe\x07\x0c\x83,5\xab[:\x1d\xdd\x9d2\x0c\xb0\x16\x90\x82\xcd\x81\x92\xddp(\x9c\x123\xaa\xad6L~1\x1f\xef\xe7\xb8VB\xe1L\xdf\x9c\x8b\xa7\xa0\xc82\xd9 \xbc_\xba#\x98\x1d\xc1\x93\xc5\xad3\xc3\xa7\xbd\xee\xbc\xbc\x89\xdb\xbf\x8d\x12=`\xb8\x80\xf1_\xfe\x18\xcd\xba\xc9\x89\xde\x9a\xe3*\x1b\x0e\'\x82\x8e\x80\xde\x82\xe1\x07\x1bPZ\xd3\xd7K\xec\x08[\x8eD\x08e\x87>\xb1\xb4@\x93\xd7\xec\t\x11H\xd7\x89i;\x86cWf\xa2Q\xf2[C\xa8\x04\x19J\xc9\xaa!\x9f\x90\x12re\xb4q\x0f,"\x17\xbf\x02\xfe\xb7P\x0c\t\x92\xd0#\x86\xc1r\xba_\xc0\xaa\xde\xa1U\xc9\xba\x907Sd\xdc\x88\x92\x94\xbb\xbaN\xfc\x91,9\x05\xc7\xfb\x9c7\xa6\xa6N-^\x0b\xdd\x83\xa4\x7f\xd7#\x8f~\xb8\x9c$\x8cm<\xc3\xe7@6\xd0\xbc\xcd\xfer\xc3\xa6\x15\x82\xb3\xd7\xd3\xa8\xff\x18\xbbNW(@\xffQ\xa1\x80\xe1\x11\xa5\x88X\xb0\xcf\x06\x8e\xc6\xf6\xee\x05\xa5\xa3\x89\xab\xbc\xf5,\x15\xaf\xf7\xd8\x11\xf62\x03\x05\xe4\x81\xc5\xb9\xb1!\x0e\x9d\x89\xa3\x85\x9f\x07\xf2w\xef\x8b\x83\x80\x81\xbe\xc8,n\xe4\x12\x0f\x9a\xc6\xd1\xban\x7f(9\xf9\x14\x88\xa0\xb6t\xbeN\x1b&\x8c\x93\xef\xb2\x1dA\x82\xb1\xf0\x9a\xe1\xec\x95\x80\x90\x80\x88RfNM]6\xccM\xe7\x1czo\xa1\xbb\x18\x070\x16\x1e\xff\xd8\xeb\xa0\x01\x00\x95y\x1cY\x10iA,h\xef\xb9\xe7\xd1\r\xc7l\x8aI\xaej#D=\x82\x8a\x04\x92\x14\xc8C\x94\r\x9e\xe8 \xcc\x0f\x8cO\xc9c\xa0\xbb\x1f~\xeaK\x1b\x99\xf9\x01\xe2 \x92\xa38\x122\xf3jE\xabh:P\xe5`\x9d\x9e|.h\x16%r@\x88\xde]\xe8Fk\xf7\x86\xd0\xea\xafC\xa4>f\x08\xbf\xa6\xef\xfb\xb4\x12\x88W>t\x16\xaa\r9a\xee\x9c\x9d6\x0c\xf0w\xff\xcf\xb1F\x9e\xf7\xf24\'\x9a\xc2\x1e\x00(\xf1\xe4\x84Z\xda\x85z\x17\xbe\xf7B+f\xffo\xae+=\x88.\xb7\xc8\xa4\xb4\x9c\xe4\x1f\xd66K\xf2F\x827w\xac\xa5;\x02\x8d\xf0\x1f\xd7t\x98a\x11\xd4\xfc\xba\x83\xae&\x87\x8aElr5e\xe5\xd5\t1hTu]s\xe0z\xfc\xc2J\x05\x82-\x92\x96\xd1\xba\x92\x0c\xb4\xcf\xbcM\xfe\x12\xe9\x93V{\xd3\xb0\xb9m\x99\xe8\xf0\x8f\xdc\xe5Z\xac6\x0c\x16\xbck\xdb\xb1\x08\xf1<Sh@H\xa3D\x93\x9c\xf5P<\xafC\x1a\xce0x\xe4|\x82x\x104\xcc\xa5\xdb\xe9\xedb|G\xeb\x8f{\x99|\x1c]\x01\xf1M\xc6~$\xff\xc2\x92\x061$\x18YOj\rD\x0et\xd6\x84U\xde\xfahx\x95a\x11\xd1\x08iq\x81E\xa9\x93O>\x05\x84\x97\n\x0b\xcca\x88\x8bO\xab"GN\x07\xbb\xbe\x8f62\x10\x8c\xf8\x19\x93\x92\xb8\xd4*\xeb\r\xd3\xd2Z\t\xb0e\xfc?\xc99b\xf1\xf6@I\xb8J\xae\x00\x96.\xda\x1a(\x89\xb23\x11\xe3\x17Z\xa2o\x1d\xcc\xdd\xe4\xd7\xad\xcd\x03^\xbfcP\xb3[\xb85@\xb4Jo-\\?J\xfc\x80I\x18e7G(\xf2\x0b\xc8I\x93A$\x1ai\'\xbeFPw\xaf\xe0"\xa3\x96\xc9\xc0\xf1\xf6\xb4\xefT\xac\xf5\x86QDWM\xbd\x9a*\x19\x93a\xa4\xf3\x7f\xa6\x8a\x81\x00k\n\xee\xbe3\xdf\x8d~\xbd\x95.\x1a\xa2\xbd\xcd\xf6\r+\xa1\xb9\x8c\xd7\xf8\xcd\xe45>\xc2^\xba\xb3\x00[H\xear\r\x1c\xc1(\x96jz\xb1\xac\x03x\x8df\'LB?\xa9ZW\x1f\xeb\x08\xca\x15\xd6v\xd56Sr\xacb\x9c\xc9\x9c#\x01\xb7\xca~\xd9X{Q8\x00n\xba\x9a\r\x14\x9bR\xc9\x11\x94\xc2I\xf0\xf1\x89 \x0c\xcf\\Ka\xb5\xaen\x17\x12\xe6m\nh\x8d6\x07\xbat\'\xbd\xdb\x10\xa3\x94z\x00/\x0b\xb6\x04RMms\xafV\x9d[\xba\x18\xe5:]\xd3\xc2\xf0\xaaf\x08\x0b}\x9c\x0e\xf8z\x7fd\x16\xaa\x18\xd6\xa6\xa7.\x12L\xc9\x87\xa1i\xf9\xae`}_\x02I\x18\xd5iD\x97\xa5u\x84\xf3\x12:\xa2\xd0Gh\x13d\xe7\xd7u\x0b\xd2\x8e^H\xd4W\xc3\xa1c\xae\xb0g\xd6\xd6\xab\x9f\xb8\x8a5\xf6\xeb\xae{\xae\x94w\x14\xe3\xa0\xfe\x96\x9c\xa1ci6=\xe9=\xc0\xd0\x8c\xdc\x1a\xda\xc1\xa2K\xa1\x87\xa8}!Q\x9a\xdbl|\x86\xe4\x0c\x9c\xc6\xf7\x11\xda\xa11\xe5\xa4\xee\x82B6\x07/J\xceC\xfb{\xc1\x96\x00J\xcd~h\xb1`\x89kF\xe4\x83\xf9!7\xe0\xdc \x0bx)\xde\xdb\x1b\x9dU\x1c3\xa7\xb0\x8es\xe1c6\xf9<S\xfc\xf8\x94\xaa\x9e5\x8c\xe1\x8d\xa6\xb2\x08\xdcx(\x9c\x9e\x9b\xa0\xa3\xc3(\x8f\x83\xa1\x98\xbbA|w\xf9\x17\xc1\xba\xce\x1fo\xe8\xcc\xf5~t\xf1\xeft\xd65\x15T\\\xd6(\x9b\xd5U\x11\xbb\xeb\x87h1\n\x8e9\x8c\xa9\xf8\x99\xeb)R\xe5\xc6f\x83\x9a\xa6f\xd7PHL\x85\x88d\xcf\xa0B!3\x17\x99\x15"G\x9d\xbc\x92B\xbf\xfc\x95\xc6\xcc*]\x1ab\xde\x98I`f%\x1dV6 `\xa8\xa7\x16\x8e\x89\x0e(Z\x08\xb8V\xa0\x06\xaa\x1f8\x8fMo\x84)62\x93#g\xc9\xf6 }\xabu\xfe\xe6\x00*\xadh4{q_3\x84\x99\xea\x80\x91K<\xe9\xf3#\xe1t\x8f7\r\xfd\x99\xaeTq\x93\x18\x0ePjQ\x8e\x05\xb5\xfd\xfb\xdd\x0c\xb2\xf7\xce\xa7\x9f\xae$Kka\xf6\x06\x7f\xa9\xd7\r\x95\x92\x8d\x83|\xefe\x8en\x88S4\xf9\xf0\x19\x1ab\xa8r\xe0\xf7\x90\t\xae~\x05m\xfaK\xddA\x18T:N\xfc\x96\xac\x17\xc0(\x1d\x1db\xed\xd5\xa39\xc6\xdc\x89QVA=I\t\xd3\x1b\xf6YTW\xdf\xdc\xc6\xfb/\xdf\xce\xa0\xf1+\xbc\xc5\x80\xa6}\x8f\x91K=\xe9\xc0\x99X\xe9\x84*\xd3%\x9d\x89\x1e\x0cF(\x13>J\xf4\x18i\xaf\x11\xb6\xfa\\\x84\xba\xd7\x801\xf6zVi\xa9\x88:n\xa5\x17m=\x1a)\xe5~\x8d\xa6\xa5\xdb\xda\x08\xedt\xa8\xffA\xad\xc8\xf2\x0c;\xc7i&L\xd5\x0c\xc76\xbd\x99\xe0J\xca\x9bX\x81\xc7\xe87\x02\x9b\x95\x92\xd5\xb6\x04QPROn\xec\x8d\xb8\xa8\x8f\xbf| \xc6\x80\xc7+\x86\xc2\xa6\xbc\xbf\xc8]\xbc=\xbb\x00\x9b\xd2q\xdb\x16\xd1\xf1\xf6|c\xa5\rR\x82(\x18\xb1\xd8S\xe89\xca8x\x0fe\xbe\xe9p\xb84\x01W\xedz \xf5\xb0w\x988\x0c\x1c\xef`2\x05\xa4#)hA\xa0f\xd7\x9d^\x8c\x8a\x9d\x0cC\x1a\xf3\x18I\x94\x88\x81\xf0\xbc\xc40^\xcf\x8c\xadW\r\x03\xfa\x1a\x18Q\xaa\xdf`\x08PT[M7\x15\xb8]S\xabb\xdd\xd3$\xed\xe9\x9b\x8c\xb3(\xa9L\xfc\xf8>\xeb\x92\xc7\xde>d\xba3m\xf9&\x82\xa2\x12*9I\xb7o\x1c\xc0\xc4\xd2/\x82$R\xdf\xe0\xa8\x1d\xcf\x9b\r\x85\x8d\xea\xf5\x1f\xcc\xd4<X3\xc1I\x00\xbb\xa8\x93A\x9d\xe7\x16\xd5\t\xb4\xc6\xb3\nG\xcfi\xfd\x810zo\x81[\x9b\x08\x82q\x90\x87\xac\xd1H\x86$i\x0b;\xc3\xa0\xf1\xf6\xfa\xd1/\xe4\xd7\xc0H].\xeeU\xc3(e\x9c)\xec\x99\nl\x1c<\x13g\xb6\xe8\xa9t\x15aLlTZN\x8d\xd0\xc9\x95\xbb\x1fH\xf4(\x9b\x83\xc8\xc3\xe0\\pt\x1956\xa9\xc5\xa8\x96\x0c\x04\xfa\x0e#\x870\xd3\x83\xdez\xc8\xaa\x1b\xa2\x17\xcc\r\xe5\x1fs\x1e\xafh\x13\\GHl9\xed=\x15#Q\xa50=\xe5\xb5\x84E\xb5%j\xaf\x15c7KK\\\xf9;({^Q\x03\x85\xc6V\x88\xf8^\xb4-P\xf2\x98\x82\x08\x88P\x0cA\x02\xde\xfe\x19\xc3\xb0w\x03\x9eP\x85\xc5\xa6\xa2\x02\x1b\x97R\xd5i\x86\x87z\x17\xd8\x11\n\x82\x86\x9b3\x9b\xbd\xcb\'\xa4\x98T*\x8dE\xe3\x80\xd1\xd55h\xac\xa6\xdf\xf5\rj\x99\x8e\xd9\xccQ\xaa\xd4\xe1\x142\x03B\xe0\x11P\xd4\xa6I\x86a>\x90\x0ftH\xbf\xfd5\x91\xbe\xfa)F\x88\xc3nf\x8ah\xd6-\xd9\x11D\xef/\xf4\xd0\x0ba\x1c\x0b\xe3__\xf3\xf7\xd0\xeeP\xca9\xbdn\x18$\xedu\xfbB\xf5%o\x94`"\x13*:\xbdQ0NYU\xa3\xb0\xb39\xcc\xa4\xfa\x1a\x10\x84\x19\xeb|\xa5\xf1\xa4\xd5j{\x94\xc6\x1aF\x0f\x18!<y\xd8<W#\xc3\xe0\xdc\x90\x00\xcd&-\x08\xc0\x1bJU\x98\x8d\xc0\xe0#^\xcad\x8d\xb2\x07\x86\xd08v\x85\x97L\x1eaO\x0c\x87\\\xac2LW\xca\x10\xf9\xc5\xf5\xachC\xf4\x17\x02\x8aZT\xda\xd0e\x0fF5\xda\xd1\xc78\xa1\x03\x97\x91\xb8+\xab\x1b\x85\x10\xf4\x86aPt\xbca\x9f-3\n\x86\xe7]\xbe3X\xfa8m\xf3\xe5#i\xf6an\xce\x10\xfa@\xc3Q\xec\x04dMXy_ \xfa\x07\xa6\xca\xa8\x8faF\\m2\x10bc\xcd\xc5*\xc3~j\xb5\xb6\xc3\x8a/\xe6\x05fn\xf0{\xdc\xcae\xad\xd0l\xe5\xec\x15\xc2\x1cc\xb7\xa6L\x0b\x82\x14\xc4\xa17\xf4Xqy\x83\x9c\xf3y\x83\xf64\xba\x91\x18\x88\xc7\xa8\x96\xb9\xfd\xc1\\\xc2O\xfc\x1b\xb0P\xcc\n\xac\xfa2XX\xdf\xd1\xf3\t"\r\xec\xbd\xf2%\xd7\xb4\xe7\xa0V\x19\xa6\x90\x8d\x82\xb1\x1e\x08FK\x07V\x8a\x9c\x8e>\x05\xf4\xb6\x01\x0c\x8cX\xe2au\xc5\x17\xc7|X\xab6\x9aI\x93\x96\xc1F?\x99\x08\xed\xc9\x9e\x8b\x8c_5k\xa4c\xfa\xc1"\xe3Y\xed\xed\xc7"e\x0e\xa2\xbd"eYe\xa3\xe4\x9at&1\xa8\x15"\x17!ga\x12\x15\xffv4\xa9i\x95a\x90\x10\xc7s8\xa2\x87\x90\x90^\xdd\xa6\xc1\xa5\x88@\xe8\x93\xcd\xdf\x84\xeb\x85\x1e^\x9b8\x91v\'\x1f\xe0\xb8\xab\xd9\x13\x9f6\xc0iPj[\xcf\xbc\x1e\xcb3\xba\x998\x8d\xb0\xb2\x99\x9cK\xfa\x18\x0c`\xc0\xf3\x0b\x8a\x1b\xda\xfd\xad\xb9WWW\x97\r\x03\x86\x03\x0e\x8f\xcdF\xe7\x11l\xc37\xb4X\xd4\xaaB5qS\xa0\xc4\xa87\r1`3h\xc7\xfe\xed\x9a\xd3-\xcf\xc6\x08\x10\xba\x80\x03\x0c\xf4\r6\x0c\xe2\xb4\'z/\xb86\xc0"\x0c=\x9b!\x18\x89\x1e\x86AWt\xff\xe98\x8b\x91b\xf8\xfb\x9eX]6\x0c4\x00(\xa0\xd2R\xc6\xfc1\x84\x184\xc7\xfd\x90\x12\n\x8f/\x17E\x8b\x82 z\xf9\x86\xb9\x00$ \xab\x9d\xe1\xba\xce,8\xc0\x81\xd31"V\x95c\x83\xf9`2\xc5\xda2\x89\xa2\xa1*\xaaT\xacy\xcaXk\xc5J\xa5\xbbO+\x8b\x1a\xf1\x91\x07\x9dgg,*k\xfc\xc7\x9e\xe1\xb1\xe9\xba7\xa9\xe4\x81$\x14\x19\x07\xb4\xd2@l\xfa\xd8\xe5\xde,\xfc\x82e\xe2e\xde\x96\x00\xe9$*\x10\x80\x89\xcaI\xac\xe2\x9d9\xdf4\xab\xb5\xdd\xf2\xe6\xac\xfcZ\x19wzq\xb2q2\xdew2\xb6S\x13\xf6\xa6\xd0\x02"\x03\xd5\x8f\'\x16\x8e\x9c\x8f\x97\xebD\xab\x17\xe5\x98\x11|\x8f()an\xac\xfe\x1f~\x12\xa1\xcb\x86\x01m\x8de\x81\x88\xd1\xa5\xa9k\xef\xcb\xc09\x8a\x8d\xc0|S\xce.\xfdl6\xda\x945>t\xcd6Kj@\xddcI\xac\xc6Y\xf1\xaf\xd8\x15D\x83&>\xeeT\x02"1\x83P\xd7AC\x0ce\x7f\xb4\x80a\xdc@\x0c\x18:f\xcb\xa3\x13hQ`:\x13\x0f[\x01\x05PQ\xc6\xec\xd7m\x86]0\xa7\x7f\xe3I7\xabt\x0ch0n\x0e5\'\xdc\x14\x06\xf2\xc0\xf3\x95\xb2\x0b\xaa\xa4\x80\x00\x0cj\xac\xdc\x1d,\xe2\x10\x1bb\xea\xcdj\xe9ot~ \x1c*\xff\xec\x8dTzs\x8e\x8b\x91\xa6@\x15\xc0\xd5\xbf\xc0\xaca\xa0oP:Ay\x06\xf9\r-p\x10\x12<\x05\x06C\xc0\xb0\x03\xc79\xd0\xd0\x99\xaer\x1f\x982\xbd\xe9\x92#\xe5}\xd0\xde\x96\x7f\xe9\xb9P\xab\x95?0\x19\xa3\x9eAQe2/\x8c\x02\xe1\xaa\xafBD\xd9\xa3k\x88\n,8{lj\x95\xc5G\xf8\xc0\xe8 \xd2\xa0\x87,\x95U\x14\xe8\xc11\x9c\xfc\ni\x16\'dC\xe5\xdc\x7f\xb4-\x9d\xbe\x9a*\xa5\x1bsF\xc6g\xae\xfc;\xf4\x86\x94\x92N\xff\xd6\x87{Q\xab\x1a\xceT\x189\x12e\x9f\x08\x13\xf5\xfdo\xaen\x97d\xb0i\xa0\xcbi\xd2\x15,\xa7`6\x14\x1e\x99\xa8\xaeU\xb5\x19\x007\xad\x08\x9cb\xef\xc5\xe07\xca6x\xf0\tx\xafm\x1d\x1bU\xf4\x80\xee\x11\xbbF)\xe3\xcf\xdehl\x14\xe4\x16\xcc\x1dG%UZ,\xc1\x83,\xe0\xb7(|\xa2\xac\x82\xdc8g\x93?\xd3\xf6p\x99\xff\nc\xa1\x87\'\xa6\x9f\xb4\x07s{\xacV\x86\x1b\xc3&j[\xb5D\x87\xfd\x12V\xbfc\x97\xeb&\xfe\xd1\x179p:V0\x1d\x0f;%r$A\x9caH\x0e\xc3\xd8\x18\xa2{\x8bq\xdfp\x16\x0bEE\xb0Cs#\xb3\x86\x0bS2\x18X\xbfj\x97)\xd0\xeb\xc0F\x82\xf3\xa0\x0cR\xff\x84>Z\x88\xf5\x7f\xb9@#\xb8D\xdb\x0c\x9d\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 11:25:18,877 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:25:18 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1upzj8ndfb0x2betji1g9vsoi;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 11:25:18,877 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:25:18,877 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 11:25:18,877 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 11:25:18,878 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:25:18,878 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:18,879 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:18,879 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 11:25:18,879 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串：200”
2018-02-05 11:25:18,880 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:25:18,880 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517801118', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Token': 'asfdacfdasfasfa'}", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'模式': '200', '消息': 'FAILURE#请求验证码识别'}]", '', '成功', '', '2018-02-05 11:25:18')
2018-02-05 11:25:18,955 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:25:18,956 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:25:18,956 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517801118', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 11:25:18', '0天 0小时 0分 0秒')
2018-02-05 11:25:19,021 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 11:25:19,021 test_case.py[line: 31] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 11:25:19,021 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 11:25:19,029 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:25:19,029 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 11:25:19,030 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:25:19,030 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:25:19,030 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:25:19,030 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:25:19,030 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,031 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,031 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 11:25:19,031 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:25:19,031 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:25:19,031 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,032 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,032 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 11:25:19,032 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:25:19,032 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,032 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,033 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 11:25:19,033 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:25:19,033 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,033 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,033 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:25:19,034 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 11:25:19,034 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 11:25:19,034 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 11:25:19,034 httpprotocol.py[line: 106] INFO: 请求头为：{'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36', 'Cache-Control': 'no-cache'}
2018-02-05 11:25:19,083 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 11:25:19,086 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 11:25:19,086 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:25:19 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 03:25:19 GMT')]
2018-02-05 11:25:19,087 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:25:19,087 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 11:25:19,087 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 11:25:19,088 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:25:19,088 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,088 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,088 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 11:25:19,089 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 11:25:19,089 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:25:19,089 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517801118', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36', 'Cache-Control': 'no-cache'}", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'模式\': \'"result":200\', \'消息\': \'FAILURE#灯塔用户登录失败\'}]', '', '成功', '', '2018-02-05 11:25:19')
2018-02-05 11:25:19,163 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:25:19,164 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:25:19,164 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517801118', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 11:25:19', '0天 0小时 0分 0秒')
2018-02-05 11:25:19,229 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 11:25:19,229 test_case.py[line: 31] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 11:25:19,230 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 11:25:19,237 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:25:19,238 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 11:25:19,238 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:25:19,238 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:25:19,238 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_xml
2018-02-05 11:25:19,238 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:25:19,238 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,239 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,239 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：
2018-02-05 11:25:19,239 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:25:19,239 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:25:19,240 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:25:19,240 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,240 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:25:19,240 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'userName'
2018-02-05 11:25:19,240 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:25:19,240 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,241 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,241 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 11:25:19,241 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:25:19,241 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 11:25:19,241 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,242 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_host$
2018-02-05 11:25:19,242 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 11:25:19,242 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 11:25:19,242 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 11:25:19,243 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 11:25:19,243 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 11:25:19,274 APIUnittestTestCase.py[line: 239] INFO: 正在对服务器返回body进行解码
2018-02-05 11:25:19,275 APIUnittestTestCase.py[line: 262] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"/></soap:Body></soap:Envelope>
2018-02-05 11:25:19,275 APIUnittestTestCase.py[line: 263] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 11:25:19,275 APIUnittestTestCase.py[line: 264] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:25:19,275 APIUnittestTestCase.py[line: 268] INFO: 正在提取目标返回结果值
2018-02-05 11:25:19,276 unittesttestcase.py[line: 402] INFO: 使用xpath提取
2018-02-05 11:25:19,276 unittesttestcase.py[line: 325] INFO: xpath表达式为：.//return
2018-02-05 11:25:19,276 unittesttestcase.py[line: 330] INFO: 正在获取xmlns定义
2018-02-05 11:25:19,277 unittesttestcase.py[line: 404] INFO: 获取到的变量的值为：[]
2018-02-05 11:25:19,277 APIUnittestTestCase.py[line: 271] INFO: 正在执行断言
2018-02-05 11:25:19,277 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:25:19,277 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 11:25:19,277 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,277 test_case_step.py[line: 56] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 11:25:19,278 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'groupCode_1'
2018-02-05 11:25:19,278 unittesttestcase.py[line: 227] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 11:25:19,278 unittesttestcase.py[line: 234] INFO: 正在获取xmlns定义
2018-02-05 11:25:19,278 unittesttestcase.py[line: 243] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 11:25:19,279 unittesttestcase.py[line: 248] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 11:25:19,279 unittesttestcase.py[line: 250] INFO: 正在转换元素结点前缀
2018-02-05 11:25:19,279 unittesttestcase.py[line: 259] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 11:25:19,279 unittesttestcase.py[line: 265] INFO: 查找到的元素为：[]
2018-02-05 11:25:19,280 unittesttestcase.py[line: 267] INFO: 正在进行断言
2018-02-05 11:25:19,280 unittesttestcase.py[line: 273] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 11:25:19,280 unittesttestcase.py[line: 274] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 11:25:19,285 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:25:19,285 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517801118', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', "[{'模式': {'.//return': 'dataviewer'}, '消息': 'FAILURE#获取的实体集团卡号错误'}, {'模式': {'.//return': '$groupCode_1$'}, '消息': 'FAILURE#获取的实体集团卡号错误'}]", "{'xpath': {'groupCode': './/return'}}", '失败', '获取的实体集团卡号错', '2018-02-05 11:25:19')
2018-02-05 11:25:19,354 test_case.py[line: 84] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 11:25:19,355 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:25:19,355 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:25:19,355 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517801118', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 11:25:19', '0天 0小时 0分 0秒')
2018-02-05 11:25:19,420 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 11:25:19,421 test_case.py[line: 31] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 11:25:19,423 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 11:25:19,433 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:25:19,434 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 11:25:19,434 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:25:19,435 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:25:19,436 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:25:19,436 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:25:19,437 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,437 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,438 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:25:19,438 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:25:19,439 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:25:19,439 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,440 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,440 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:25:19,441 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:25:19,441 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,442 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,442 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:25:19,443 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 11:25:19,444 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 11:25:19,444 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 11:25:19,445 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 11:25:19,473 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 11:25:19,473 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 11:25:19,474 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:25:19 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 11:25:19,474 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:25:19,474 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 11:25:19,474 unittesttestcase.py[line: 387] INFO: 使用正则表达式提取
2018-02-05 11:25:19,474 unittesttestcase.py[line: 389] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 11:25:19,475 unittesttestcase.py[line: 398] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 11:25:19,475 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 11:25:19,475 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:25:19,475 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,475 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,476 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 11:25:19,476 unittesttestcase.py[line: 133] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 11:25:19,476 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:25:19,477 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517801118', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'模式\': \'"qq"(.+?)"\', \'消息\': \'FAILURE#不符合断言时返回的消息\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 11:25:19')
2018-02-05 11:25:19,546 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 11:25:19,547 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:25:19,547 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:25:19,547 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:25:19,547 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:25:19,547 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,548 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,548 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:25:19,548 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:25:19,548 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:25:19,548 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,549 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,549 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:25:19,549 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:25:19,549 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:25:19,549 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,550 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:25:19,551 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 11:25:19,551 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 11:25:19,551 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 11:25:19,551 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 11:25:19,704 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 11:25:19,704 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 11:25:19,704 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:25:19 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 11:25:19,705 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:25:19,705 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 11:25:19,706 unittesttestcase.py[line: 379] INFO: 使用键值提取
2018-02-05 11:25:19,706 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 11:25:19,706 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 11:25:19,706 unittesttestcase.py[line: 381] INFO: 获取到的变量的值为：dataviewer
2018-02-05 11:25:19,707 unittesttestcase.py[line: 384] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 11:25:19,707 unittesttestcase.py[line: 379] INFO: 使用键值提取
2018-02-05 11:25:19,707 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 11:25:19,707 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 11:25:19,707 unittesttestcase.py[line: 381] INFO: 获取到的变量的值为：数据监视器
2018-02-05 11:25:19,708 unittesttestcase.py[line: 384] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 11:25:19,708 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 11:25:19,708 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:25:19,708 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:25:19,708 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:25:19,709 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:25:19,709 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 11:25:19,709 unittesttestcase.py[line: 114] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 11:25:19,709 unittesttestcase.py[line: 117] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 11:25:19,710 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:25:19,710 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517801118', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'模式': {'userName': 'dataviewer'}, '消息': 'FAILURE#用户名不为dataviewer'}]", "{'dic': {'userName': {'userName': 'value'}, 'atten': {'atten': 'value'}}}", '成功', '', '2018-02-05 11:25:19')
2018-02-05 11:25:19,837 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:25:19,838 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:25:19,839 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517801118', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 11:25:19', '0天 0小时 0分 0秒')
2018-02-05 11:25:19,962 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 11:25:19,963 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 11:25:19,963 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517801118', 1)
2018-02-05 11:25:19,964 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517801118 AND plan_id=1
2018-02-05 11:25:19,970 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 11:25:19,971 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517801118', 1)
2018-02-05 11:25:19,971 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517801118 AND plan_id=1
2018-02-05 11:25:19,977 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 11:25:19,977 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517801118', 1)
2018-02-05 11:25:19,978 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517801118 AND plan_id=1
2018-02-05 11:25:19,983 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 11:25:19', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=3, case_fail_num=1, case_block_num=0 WHERE execution_num='1517801118' AND plan_id=1
2018-02-05 11:25:20,045 running_plan.py[line: 80] INFO: 正在释放资源
2018-02-05 11:25:20,045 running_plan.py[line: 81] INFO: 正在断开与项目关联的数据库连接
2018-02-05 11:25:20,045 running_plan.py[line: 87] INFO: 正在清理与项目关联的全局变量
2018-02-05 11:25:20,046 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 11:25:20,046 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 11:43:18,366 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 11:43:18,372 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 11:43:18,372 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 11:43:18,373 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 11:43:18,373 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 11:43:18,373 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 11:43:18,374 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 11:43:18,380 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 11:43:18,380 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 11:43:18,380 running_plan.py[line: 26] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 11:43:18,381 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 11:43:18,381 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 11:43:18,385 running_plan.py[line: 32] INFO: 正在查询与项目关联的数据库信息
2018-02-05 11:43:18,386 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 11:43:18,409 running_plan.py[line: 46] INFO: 正在查询与项目关联的全局变量
2018-02-05 11:43:18,409 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 11:43:18,415 running_plan.py[line: 60] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 11:43:18,416 test_project.py[line: 26] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 11:43:18,416 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 11:43:18,416 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 11:43:18,421 test_project.py[line: 31] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 11:43:18,421 test_plan.py[line: 26] INFO: 正在查询测试计划关联的测试用例
2018-02-05 11:43:18,421 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 11:43:18,428 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 11:43:18,428 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517802198', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 11:43:18', '', '', 0, 0, 0, 0)
2018-02-05 11:43:18,490 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 11:43:18,490 test_case.py[line: 31] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 11:43:18,491 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 11:43:18,498 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:43:18,498 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 11:43:18,499 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:43:18,499 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:43:18,499 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:43:18,499 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:43:18,499 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 11:43:18,500 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,500 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_token$
2018-02-05 11:43:18,500 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 11:43:18,500 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:43:18,501 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:43:18,501 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 11:43:18,501 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,501 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 11:43:18,501 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 11:43:18,502 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:43:18,502 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,502 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,502 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:43:18,503 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 11:43:18,503 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 11:43:18,503 httpprotocol.py[line: 81] INFO: 请求头为：{'Token': 'asfdacfdasfasfa'}
2018-02-05 11:43:18,598 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 11:43:18,598 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x10\xb5IDATx\xda\xed[\x07{Te\x13\xe5o\x08\x8a\x08(X\xc0OTT\x94"\xa1\xf7\x8e\x02\x8a\x80\x80H\x8b U\xbaT\x01\xa5}\x14\xe9\x88\xa0\xa2\x92\x90B\n\xe9\xbd\x93^H\xef\t\xe9\xc9\x92\x90l\x98o\xced\xef\xe6\xeef\xb3I6Y\xd4\xe7\xf3}\x9e}H\xc8\xee\xbd\xf7}g\xe6\xcc\x993\xb3\xdd\xe8\x1f\xb2\x9e<yB\x85\x0f5t\xebn&\xad?\x18A\xc3\xe7\xbb\xd33\x1f\xdc\x96\xd7\xf3\x1f\xda\x91\x8bo\xbe\xc9\xcf\xbc<\xdeA\xff\xbe\x19\xab}\xa9F\xd3@\x8d\x8dO\xe4o\xed}i\xf9\xfdZm#\x7f\xae\xd1\xec\xf3-\xda\x12D\xddu\xf7R\xbf\xde\x9e\xe9B\xf3\xd7\x07\xd2\xde\xd3qdw/\x87\xb2\xf2j\xe4\xfd\xe6V\xb7\xbf\xb31\xea\x1ek)#\xb7\x9a\\\xfd\xf2\xe9\xc0\xb98\xfax\x9d?\xbd\xff\x91\x1b\xf5\x1b\xeb@=\x86\xdd\xa6g\x87\xd9\xd1\xa0\xe9wi\xe9\xf6\x10J\xcb\xaej\xf1\xf9G\xb5Z\xeamc/\x87\xd3c\xe8m\xfa\x88?_^\xf9\xd8b\xc70w\x98\r\r\x8dt\xeef\n?SK\xc3\xe0\xde/\x8eq\xa0wf\xbb\xd2\x8cU\xbe\xb4\xf1\xbb(\xba\xe9\x90I\x91\xf1\xa5T\\ZK\r\xda\xc6\xbf\xbfa\xb0\xf9\xda\xba\x06J\xcf\xa9b\xef\xca\xa6M\x87\xa3h\xf4"O\xd9\x98\xb2\xd1g\x87\xdb\xd1\xe0\xd9.\xb4hs0\x9d\xfd%\x85\xee\'\x96\xd1\xe3zm\x8bk\xe5\x14h\xa8\xe7\x08;]T\xd9\xd3\xe2\xadAT\xc0Qg\x8dU\xcf\x86\xf1\x0b/\xa2\xd7&9\xea\x9f\x13\xd1\xd3}\xa8\xa1\x91\xf0\x7f\xafMt\xa4)+\xbci\xe3\xe1H\xbaf\x97\xc6\xcf_J\x95\xd5\x8f\xff\xbe\x86\x81Q\x8a\xcbj\xe9\xf4\xcf\xc9\xb4\xe0\xeb\x00\x89\x86^\x1f\xda\xe97\xd5o\x9c\x83x\xdc\xbe3qt/\xb0\x80r\x8b4T]S/0cj\xf9G\x14\xd3s\xc3\x9b>\x0f\xc3\xda\xee\x0f\xa7L\x86\x11k\xad\xc4\xb4\n\x9a\xfa\xa5\x8f\x1e\xce\x9e\x1faO\x03&9Q\xffq\x0e-\xa2\xa8\xd7H{zc\xda]\x1a\xff\xb9\x17}\xb13\x94\x8e_K&\xcf\xe0BA\x88\xda:\xed_k\x18`\xbdzij\xeb\xe9\x1cG\xc0 ~`x8\xbc\xed5\xde\xd8\xe4\xe5\xde\xb4\xfdX49z\xe7Rbj\x85\x84?`\xae\xadu\xf1\xf7T}\xc4\x0c\x98\xecD\xbbNFSFN\x95\xd5\xf6\x93\xf0\xa0\x9c\x96l\r\xd6G\xc9K\x0c\xb9sm\xfdi\xcf\xa9\x18Z\xb9;\x8cF}\xe6\xc19\xcf\xb1E\x14\xc1\xf9\x00\xd1\x0b7\x05\x8a\xd3\xddv\xcf\xfek\x0c\x03\x0f\xafyT/\x9e\xa1^\x01\x91\xc5\xf2\xf0\xcf\xe8 \xc0\x86\x7f>x.\x9e\xbcB\n\xa9\x84#\xa9\xa3k\xed\xbe\x08\xbda\xde\x9ay\x97~\xb8\x92HyE\x1a\xab\xed\x0b\xd7\x06\x01xNw\xcf\x97\'8\xd2\xe7\xdb\x82\xc9\x8b#\xc1\x8f\xa3\xf7\xe2\xadT~\xa6p\x1a\xf2\x91\xab\xfe=jx\x06"\xbc3\xc7\x95\xa6q\xd4=5\xc3(\x89\xdc#\xa8\x90N^O\xa6{\x01\xf9\x920\xd5k\x13c.\x92\'\x12\xf6\x9eS\xb1\x94\x9c^Ie\x15u\x9c?\x1a\xdbd1\xa6\xd6\x88O\xee\xe9a\xe5\xdd\xb9\xae\x02\x91\xc0\xf2z\xceG\n\xcb\xb2\xe4\xbaf\x99\xd9\xe6 \xea\xa9\xc0\xe7\xd8;\xb4pK \xe7\xb5G\x02\xb9\xf9E\x8f(&\xb9\x9c\xdctdf\xde\xfa\x00z\x97\r\x01t0\x86:\xab\x18\x06\x07YQ\xf5\x98\xb2\xf3k(*\xbe\x8c\x1c\xbcr\xe9\x87\xcb\x89\xb4|{(\x8d]\xecE\xb3\xd7\xf8\t#Q\xaf\xc8\x84Rz}\x8a\xb3x\xf8|\xce/H\xdc\x9dY\xb8\xfe{l\x0cl\xb2\'c\xfd0\xa6\xd7\xdb\x8f\xdf\xa7?\xdd\xb2\xe9W\xe7L\xfa\x8di\xb7\x13?Wp\xf4C\xcad\x87\xa9\xd1\xd4wz\xdfY\xbc\xdf\x95{B\x85\x85\xe1\xbe\xfd\x19\xb6l9B\xb2\xf2\xaa\xf5\x86\x833VT\xd5S\x12;\x1d(\xfe\xa9\x9f\x92h\xc5.\x9c\x8b\'\xfdg\x9a3\xf5\x19u\x87\x86\xf2\xb3v\xeb\xac\x87 O\x80\xee\xd5\xd66\x08\x15\xcd-\xd4P\x00\x87\xed\xf5;\x19\xe2\xf5\x9fn\x0c\xa4\xf7\xd8+\x14\x1a\xd9w\xf4\x1d:~5\x89J9\x12\xd4k\xcb\xd1(\x81/$|p}\xe3\xfc\xd3\xd1u\x86\xa9\xeb\xa0\xe9\xce\xcd\xb5\xce\x88\xdbb\xf8!\x8c\xe5\xc3\x16\xb8\xd3\xc8\x85\xf7h\xfcR/\xfadc\x00\xed\xe2\x1c`\xc7\xb8\x8e\x88\xae\xabk\xb0\xf8\xde\t\x9c\xff@\xe9\x95\x1c\x82\xbd\x1c\xb9\x18/g\xd2\x9a\xf3\xe6\x14\xd4P\x1cG\x91\x93O.\x1de\xe7]\xf2M\xb0\xe4\xa4N\x19\xa6\xa8\xe4\x11\xb9\x07\x14\xd0M\xc7L:\xc6\x87\rj\xbb`C M\xe0\r\xbf7\xd7\x8d^\x9d\xe8D/\x8clJ\xe2\xa89p0_\x1f\x8a\xa0\x87\x9c/\xd4\x10RR^G=u\xeck\xd6Z_\x86\x99\xce\xc3\xcb*\xf6\\S5\x85\x9a\xb6\x82\xb1\xc1Q\x90\x7f\x80\xeb\x88(w\x86\xd8\x92\xf2Z\x8b .\x9f!k\xe0\x14\'\xfd=\x86p\xc4^\xb5Ko\x97\xa1Qs\x15\x14?\x12\xe3\xa2\x90\xb6\xd80\xa8^\x0f\x9d\x8f\xa7\xb1K\xbc\xe8\xfd\x8f\xdd\xe4\xd0\x11\x86\xc6\x07\xf0\x02\xe7\x0bx\xe9\x92o\x82\xe8\'~H\xc0\x9b\xfaA\xc1\xb0\xb61\xe3\xc2A\x01z\x001\x9d]a\xb1%\x8c\xdf\xfe\x06\xec\xa7\xdf8Gy\xc6\x81\xfc\x02\xc4(\xa4\xa0\xbb.\xf1\x02\xe7Q\xb8N^\xe6%\xcc0#\xa7Z\xbc\xba#\xcb\xd5?_\xd0\x01\xd7\xed=\xca\x9e\xe6\xd8\xfa\x91;\xd3zK\x96\xc5\x869~-I\xa8\x9f)o\x1c8\xd9\x99&2\xc5]\xbb7\x9c.\xfc\x96J\xc1\xf7\x1fJt=f\x02`\xec\x89\xd7\xed\xd3\xe9Uf/\xcf\r\xbf\xcd\x1e\x1b-\xc9\xde\x80R\xeb\xe0R-\x91\xb4\xb5\x80\xdd\xc0\xf6\x9d\xc7c\x18\xc3\x93\xf9\xa0\x1f\x08\xa4\xec\xe0\xebo\xf8.\x92\x96\xed\x08\x91\x02o\xf0,\x17\xeaec\x98x_d\xe3L\xe5\xbf\xfd\xc8\x9f\xc9\xc8\xad1Y\x95\xb7\xb6\x0e_\x88\xe7\x9a\xc5Q_sa\xffE%\xb5O\xcf0\x91\te4n\x89\xa7.\xb1\xda\x89\x164g\xad?\xad;\x10I\xa7o\xa4\x90\x9b\x7f\x01\xc5\xa5\x94\x0b\xb6VV\xd7KUljE\'\x95\xcbu\x009\x80\x92\x10N\xc40\x82\x12Q`P\xc0`\xbc\xaa\xf9gS\x865\x05\t\xe9\xd9U\x92\xfc\xd3\xb2\xab\x05\x1e`l<K\x12\x17\x80\xf8\x7fx\xf6%\xaeq\xbe\xe1H\x9d\xba\xc2G"\xc5@B\xe1\xe7\x19:\xcf\x8d\xce\xff\xfa\x80\xf2\xdaIB\x10ak\xf7\x86I\xe2\xc7\x0bl\x0by\xceR\xd6g\x91a\x96m\x0f\x91\xd0\x17\x06\xc5\x90\xf1\xb3C\x06\x85\xc6\x94P\x0eo\xbe#\x1e\x86b\x0c8?`\xb2#\xddt\xca\x10V\xe3\x1f^D?\xf2\x81|w!\x81\xfe\xcb\xf4\x16\x91\t\x8f\xf7\x08*`\x0c\xd7\x88\\cn\xb30\xea#~\x0f\xe89\x18\x90\x12mj\xb9\xa7\xac\x82\x19#\x1f8\x9c\xc7\xcd?\x8f6\x1d\x89\x14C(*\x01^}8\xf7\xcc[\x17 9\x07I\xba\xad<\xe1\x1bZD\x1f0\xa4+\x86\xb5Y\xe8A>aER\xaf\xa9\x9f\xc1*\x86\xc1\xc5q3\xdc\x18\xc9z\xf6\x1a_\xc1s\xcd\xa3\x06\x89\x8a\xc6\x0e\xdc\xdc7\xbc\xe9:\x90&f\xae\xf2\xa5\x93l\x00\x18\x1c\x1b\x1a<\xcbU`\x12\x87\xf3\xc1<w\x9a\xf4\x857\xad\xf96\x9c!*O\xbc_\xdb\x8a\xca\xdb\x91\xcd\xe3\xbd0^na\r\xb9\xf8\xe4\x89b\x8d\x1c\xa4\x8e\x1c\xc8)\xbbOESJF\xa5\xd9k\xc1p\xe7\xd8\x99z\x0ck.\x16Q\xc9\x1f\xe0\xe2\xf8^`>\xe5\xf1=` \xd4N\xed\x85\xe3\x0e\x19\xa6\xa1A+\x90\x83\x9b\x03\x9f}\xc3\n[\x85)s\xab\x8a\xe1m\x12\xe7\xa0&\r\x0b\x87\xefF/\xe9DJc\xd9\x1c\t\\\x98\xd3\x8c\xbbB\xb3\x1fdV\x8a`\xd9\x15\x85!<\x19\xc6\x01d"R\xd70\x14\xf53\xd2\xb5\xa6\xf0~\xbdC\n\xc5\xf9Z\xbbg\x1e#\xc5T\xdd\xb9\x98z\rgz~\x98\x11\x000\xaa\x91\x08j\xec:\xc3Tq\xe5z\xe5\xcf49(\x1c\xe2\xb6c\xf7-:\x0c\xe4\x9c\xb3\x8c\xbd\xc6z\x91hK|\xdd7\xb8\xc8\x82>\xa6\xfe;~F\x1e\xf8ls \xc5$\x95Qu\x17\x14\x83\xc6\xca0\xd8"\xf2\x0e M)\x10\xbbK\xaep\x11\x05\xbb5\n\r\xe8\x8e\xe6gZ\xba-\x98\xc6\x7f\xeeI\xef\xccv\x11\xe3\x02\xe6\xbb\xab\xe4\x16H\xfe\x88\xcaP\xce\xa3\xf5\xedP2\xdam\x18\xd4+\xd0xp\xa3\xe9+}(\xb9\x8d\xf0nm9y\xe7\xc9\xc3+\xec\r\x11\xb8\xfa\xdb0\xc6\xf9(\x91d\xb60\xde/\xde\x12$\xc6\xe9\xa12\x0e\xea\xa0\xd5{\xc2\xc8\'\xb4P\xe4\x8d.\x15S\xf9\x90`\x1cD\x06\xf2\x1e"T\xcf\xd28\xa2\x0f_L\x10Vi\xea0\xe1\xfd \x169\xf9\x1a*,\xd6PPT1Gv\xa2\x18\neBO\x95&\x06\xe7\x82V\x86Z\xa5-"\xd3.\xc3\xa4fU\xb1\xb76u\xe7`\xf9_\x9c,\xab5\xd2\x99\xb9\xac\xe2\xc3\x9d\xbd\xd6O\xa8\xa5\x83g\x0eS\xe9b\x91\xcb\x0b\x99V\x02\x8b\xf1\xfb\x95?\xd2\x98\xce\x1aB\x03\xa4\xf3\xa5\xdbB\xc8\x8fs\x9c5\x16\x88\x02\x9eo\xe7\x89h\x83\xfb\xbe2\xc1\x89v\x9c\x88\x16\xd6\xd5\xde\xbc\x05&\x18\xc1\xb0u\xfaF2\xd7y\x9e\x06\xd7{\x9d\x0b\xd03Lj\xdaj\xd8\xb5\xcb0[\x8f\xde\x17\xcf\xe9\xcb\xaf#\xe2=\xb5\x06I\xac\xb1\x9d\t\xedw\x97,\xba\xc1\x0c.\x96\xd9\x10\xa0Q\xcdt\x94\x9f\xd1\xfa\r\x8cz(\x91\x84\xdaF\xd9Po.^\x11Y\x0f\xd8I\xbaRxT{>\x8a]\xc0\x8d\xba\x1d\x8d\x82t\xf7\xa9\x18\x93\xb2J[\x0b\xea9"|\x0e;boU\xbd\xb4\x9cI\x0e\x10Gk\x86\xc1vk\xcb\x03p\x88\xa83\x10\x923W\xf9H\xb7-3\xafZ\xb0>,\xb6\x94b\x93\xcb\xa5\xad\x0bY^k&\xa9\xc1\x93\xf2\xd9\x93\xf0\xaf9\xfa\x08H\x01\x8dECL\r\x038,x3<\xbb\xab\r\xa38\x19<}\xf3\xd1(\xbd\xac\xa2\xf4\x83v\x9e\x8c\xb6\xf8\xda5L\x1a.\xdcJ\xd5\x93\n\xc8\xfd\xb3\xd8Pq)e\x96C\x19\x0e\x11^\xda\x14\xd2MJ)\x1aVH\xc2\xb3\x98*\x03\xde\xd6\xb1\x87\x1d8\x1bG\xce\xde\xb9T\xcc\x91d\tg7>$\x0c\\\x8c\xe3D\xfa\xbc\xaa{9\x98\x8bX{\xf7\x1c\x11K\xad\x111XP\x9aW\xed\x0e5\x88\x18\xe8}\x0e\x9e\xb9\x16\xdf\x13\x9fC\xe3k\x88N\xe9\x06\xa5F\x9eIm#\xf2[5\x0c\xd8\x06\x8a/\x93\x02\xa0*)\xa3\x19\x04\xce\xbe\x86\r\x18\x19W\xd2\xa2\xc7b\tC\xfa\xfer<\r\x9a\xe1\xdc"\xc7 J;\xab:\x9b\xdb\xaf\x07\xd7\x1csm\xfd\x0c\xee\x8b\xfe\xbcV\xdbh\xb1Q\xc0\xc0\x00\xe1}F\xd9\xeb\r\xb3\xf5h\xa4\xe5\xac,\x82\x0f\x19}\x11\xe5b\xa8\xf4\xc1V\x10\x92\xfd\xd9\xa3\x80\xf9\xddUB\xe5\xb4/\xbd\xa5\xefb\xe9&\x94\x15\xff\xa0\x9c\xd6\x1d\x88h1\xd4\x00Q\x12\xc5\xac\xb5\x0c\x03\xd6u\xe9\x8fT\xfa\xf0\x13w\x03\x07\xdc\xcc\xf9\xb53{J\xcd\xaa\xa4\xcd\xcc8\x15\xc3@\xaa\xb9\xcc\xe4\xc6\xe2:\xe6\x08\x17D\xe8Ao\xfd\xe1\xbe4s\xae\xda\xa5q\xfd\x91L{\xcf\xc4\xd0W\x07\xc2E\xe3\xea\xa3\xa2\x95\xa0\xd2\xf6\xf7r\xb8\xc6h\xe8\xd4\x019\xb2qg\xad\xf6\x15c+\xd7\xee\xcbN\xb0\xf5\xfb\xfb\xa2\x99Y\x0b\xc6\xd0,CO\xa8\xbf\x910\x8b\xdeRg\x9c\x01\xbd%\x9c\x8d\xe2\xc48;\xf4},\x8a\x18\x845\x86\x1e*\xab\x9a\xfa\xf2Jo\x1e\x17\xab\xe2*96\xb9\x8c\xe1&Q\xf2\x8e\xe2Y\xe8\xbayX(q7\x0b\x90\rt\x92\x9d@\xb9\xaermT\xce\xa7\xae\'wH\x87\xeb(\xdc\xa0*\x1f6\xcf\xdd\xc0(P\x1b:\xe3\x08\xe8\x8a\xda\xee\ro.\xa0\xb9\x8e\t\xe5r\xa0\xcb%\x19e#\x15\xcc\xc1\xd1\x9eE\x01\xf5\x8c\xae\xe1\x84\xce\x1d`\xc8\xd2\x8d\xc0+\xa3\x13\xcb\x9a\xa6\x19U9\xec%\xa9\xf8\x83\xc83\xb8@\xeek\x8d\xfa\x05\xad\xdf\xfdg\xe2\x0c\x1ak\x03\';I\xa1\xd8\x19\'\xc3T\xcfP\xd5\x19\xaddba<\x80\xd2\xa5\xea26\x83\xd1 t\xfe\x94\x1cp\xe8|\x82h`\x96\x1a&\xbfH#\x07\xf1\xe6\xf4\xbb\x06\xd1\x82\xdf\x0f\x9e\x8b\xa34f1\xad\x11\x0b\xb5\xa2\x0c\x1d\xad-J\xae,\xe4\x8e"\xae] 5\r5\x8a\x16\x14\xb3\xa0\xed\x96,\x1c>T\x048\xabr=tu!\xc2ZU\xf6\xc7,\xef\x81\x1f\xe3\xe8\x95\x89\xcdmT\xc0\x98\xa5I\x12\x12\x8b\xbdG\x8e\xf4\xe1{\xa8\xbc\xb6\xefh{\xc97\xce>y\xa2\xe0\xb6v\xd0\xb8/j\xa9\x80\x88"\x91D tVk\x0c\xa5z\xb4\xab\x1bU\xf2?\x0c\x08\xac\xff\xc5)\x83l\x8c\xee\x8bhAaXo4\xdd)\xb3\r\xec\x00\xe6j\xa9:\xfe\x0cFz\xe7\xaf\x0f\xe0\xe7w\x10\xa7}k\x86\x0b\xfd|\']\xf46\xab\x1a\x067X\xbe#D_g@|\x84\x08\xd8\xd1h\xc1\xfb!M\xfc\xe1\x9a%\x83\x11j(\xc1\xb5\xd1\xa6={#E\x12s[F\xc7\x98\xec\xb1+\x89\\W\x85\xd3>\xae\xab.3\xc3\xb2\xe3\xba\x07}\x92\xa4\xb4J!\x0e\x18#J\xe7kEs\x91\x8c>\xcb\x91K\xf1\x92\xbf\xd4FA\x85~\x95Y\x13T`\xe3\xfd\x04D=\x94\x1a\x0b\xec0)\xbdB\xa6:\xa1\x82\x94\x94\xd5\xc9>\xca+\xeadv\r\xc4\x08,\x16\xd7}c\xaa\xb3\xf4\x97P\xe3u\xc4q-2\x0c\x9ab\xc3\x17\xb8\xe973g\xad/\xd5\xd5\x99\x17\xe5L\xfd\r\x87\x05\xdd\x08a\xae\xae\xf2{\x8d\x84Q\\h\xd7\xc9X\x8aJ(m\x97\xcc\x8f\x19\x84\xfdl\x10ed\t^:}\xa5\xaf\xccym8\x14IG/&\xd0\x89k\x89b\xb4u\xcc\x8c\xf07L\xb1\xa8\xf3Yo\x1b;:|>^"\xc5\xd4\xfd\xa0\xef\xa1W4}\x95\x0f}\xb5?\x9c\xf6\x9e\x8e\x15Rr\xecJ\x92\xd4q\x03\xb8\xe6Ak\x19\xd7\xc4\x1eF/\xf2\xa0\xcb\x7f\xa6r\xb4\xd7ux\x86\xcd\xa2\xe4\x0f\xd9^\xe1\xe5/\x8d\xb9C\x17o=hqS\x8c\'!\x8a\xb0I<\x14<\x10\x9e\x8f\x817\x17\x0e\xf5\x83\xe7\xe3h\xf2\x17\xde\\\xc09\xe9\x8d\x02\x0f\x03#\x1b\xf9\xa9;\xedcZ\x1e\xc3\xec\x0f\xcc\xa6=\x1bB^\xb9\xf4{\x1aMZ\xe6m0\x08\xd2\xdb\xe6\x8e\xa8\xd4\xb8.zHxa\\V\xdd\xad\xec9\x82+|\xae\x9b~\xb2O3\x0bSkt\x0c\x0b\x91\r\xa5\x18\x8d5\x18\x17\x04Em`\xf4\x97\xd0\xdbANi\xcaw\x8d\xd6\xef`B\x13\x1b\xbf\xb4Y1\x85\xd8\x98\xca\xf8n\xdc\xbdD=\x02U\x16\xe3J\xe8\x85\x83\x91@\xde\x01\xc3\xc2\x84d\x1f\xce\x1f\xcf\x0eoV\x11\xba\xeb\xa6%\x97m\x0f\xe6d\x9c\xcaF\xad\x96\xbeKG6\x84\xd6\x04\x06\xb4\xd1\xd3y\x95\xbd\x17\xdd\xd1\xe6\xc3\xb7\x93Q*\x14\xc6\xa8\xbf0d\x8eb\x19]J\x08\x97\xd0\xfc\xccE&\x9ai{\xcf\xc4\xd2\x046<\x86\x07\xa1\xb2\xbf5\xd3E\x0c\x83\xe1p\x18|\xccb\x0f\xae\xea\xa3\x04\x9a1E\xfa\xb8A\xdb\xee\x8e\xa5\xc5\x86i\x92\xb4\x1b\xa4\x05\xac\xf4+\xa0#\xa1\x1fo\n\x8f\xa1B#\x89\x02\xb3_\xb0\xb17)\xed\xc0\x9b\xdf\xe6\r\xa1\xfb\x07\x0f;v%Az\xfb\x98\xf8\xb7\xa4KY\xc6\xb9\x0fm\x81#\x97\x12h#\xc3\xd7\xa2\xadA4m\xa5\x0fC\xa5\xa7\x0c\xa6\x03\xbef\xad\xf1\xa3\x8f91\xc3\xfbOp\xcd\x14\xce\xf9B\xf9\x8e\x8a\xb9\xfb\xe1y\x90\xab0\xc8q\xcb%\x8bn:dpB\xcf\x90Q\'\xe4\x10\x90\x97d\xce;\xf9\xc5\x1a1\xa2V\xdb9\xb1\xb5[kJk\x0b\xa3\xf0\x83\xb9q\xc2D\x98\xc2\xcbq\xd8_\xee\n\x95\xa6\x8f\xa9\xc2\xef\xd4\xf5\x14Qf\x15#@U\x85!14\x8d\xbe\xfeT>\xb0\x15\xec\xddh\xb9"\xa1Fq\x81\x07\x81R\t{K6\x05u\x1b\xf5\x03Z\xbdx\xae\x90\x98\x87\xc2\xae\xc0\x18\x9d\x98\xd99z\xe5\t\x8c\xfa\x86\x17s\xcdU\xd1.\x83\xa8\xcf\x000\xa7\xe1\xeb\xa3\x0b\x8bh6\x86\xbd\'\xaaQ\xab\xce\xaenj\xee\r<\xaco\xd0\x1a\x0c\r\xe0\x85\xcd\xa2\xa9\xa50\xa7^\xcc8 \xcb\xdfe\x0cmm\xe6\xd7#\xb8\x90v\x9e\x88\x11\xf5\xd9v_\x98$K\x0cRc\xe8\xcf\x93\xa3"\x9e\x0f\x0e\xbd\x15$mLb\xd6\xeb\x86\xeb,5\x8a1\xc1\xc0\x01)5\x8d\xb5d\x1ck\xaen\xca& \xc1\xdcv\xcb\x16(\x81\x97!d1t}\xee\xd7\x14Z\xb0!@/\x85\x03\xa3\xa70,\xdct\xcc\xa0\xf2\xaa\xbaV/\x0c\xcf\xc2\xd7\x12\xd0\xbb\x01\x11\xc0=\xa0\x1cK\x11\xc8/m\xe3?\xef\xb0\x9e\xbaa\xe0Yaq\xa54fISD\xbc9\xddY\x92\x99\xba/\x81\x81\x02H\xfc\x98\xb5r\xf1\xcb\x13\xd8iO\xf3\xa93\x11\xf0\x7fo\x18,|]\x02\x89R\x19\x02o\x1eFp\x90\xe1\t\x0c\x8b\xe3\x8b7`KZ+\x88\x89\xff\xaeV\x0c\x83/\xa3\x9e\xe1*\x1b\xdf\xefX\xbc%P$\x7f\xdb\xfd\x11\xf2\xd5\x00t\xe0@\'!\x8b\xfc\x0bAOg\xfd\x0f:Je\x8b<\xb8>\xb0\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 11:43:18,601 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:43:18 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=3681wmqnghrcnfe9qgcehpl4;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 11:43:18,601 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:43:18,601 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 11:43:18,601 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 11:43:18,602 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:43:18,602 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,602 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,603 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 11:43:18,603 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串：200”
2018-02-05 11:43:18,604 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:43:18,604 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517802198', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Token': 'asfdacfdasfasfa'}", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'模式': '200', '消息': 'FAILURE#请求验证码识别'}]", '', '成功', '', '2018-02-05 11:43:18')
2018-02-05 11:43:18,674 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:43:18,675 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:43:18,675 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517802198', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 11:43:18', '0天 0小时 0分 0秒')
2018-02-05 11:43:18,740 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 11:43:18,740 test_case.py[line: 31] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 11:43:18,741 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 11:43:18,747 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:43:18,747 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 11:43:18,748 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:43:18,748 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:43:18,748 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 11:43:18,748 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:43:18,748 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,749 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,749 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 11:43:18,749 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:43:18,749 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:43:18,750 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,750 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,750 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 11:43:18,750 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:43:18,750 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,750 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,751 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 11:43:18,751 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:43:18,751 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,751 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,751 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:43:18,752 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 11:43:18,752 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 11:43:18,752 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 11:43:18,753 httpprotocol.py[line: 106] INFO: 请求头为：{'Cache-Control': 'no-cache', 'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'}
2018-02-05 11:43:18,816 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 11:43:18,819 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 11:43:18,819 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:43:18 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 03:43:18 GMT')]
2018-02-05 11:43:18,819 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:43:18,819 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 11:43:18,820 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 11:43:18,820 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:43:18,820 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,820 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,820 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 11:43:18,821 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 11:43:18,821 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:43:18,821 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517802198', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Cache-Control': 'no-cache', 'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'}", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'模式\': \'"result":200\', \'消息\': \'FAILURE#灯塔用户登录失败\'}]', '', '成功', '', '2018-02-05 11:43:18')
2018-02-05 11:43:18,882 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:43:18,883 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:43:18,883 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517802198', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 11:43:18', '0天 0小时 0分 0秒')
2018-02-05 11:43:18,948 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 11:43:18,949 test_case.py[line: 31] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 11:43:18,949 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 11:43:18,956 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:43:18,956 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 11:43:18,957 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:43:18,957 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:43:18,957 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:43:18,957 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:43:18,957 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,958 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,958 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:43:18,958 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:43:18,958 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:43:18,958 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,958 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,959 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:43:18,959 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:43:18,959 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:18,959 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:18,959 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:43:18,960 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 11:43:18,960 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 11:43:18,960 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 11:43:18,961 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 11:43:19,053 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 11:43:19,054 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 11:43:19,054 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:43:19 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 11:43:19,054 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:43:19,054 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 11:43:19,055 unittesttestcase.py[line: 387] INFO: 使用正则表达式提取
2018-02-05 11:43:19,055 unittesttestcase.py[line: 389] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 11:43:19,055 unittesttestcase.py[line: 398] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 11:43:19,055 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 11:43:19,056 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:43:19,056 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:19,056 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,056 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 11:43:19,057 unittesttestcase.py[line: 133] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 11:43:19,057 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:43:19,057 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517802198', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'模式\': \'"qq"(.+?)"\', \'消息\': \'FAILURE#不符合断言时返回的消息\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 11:43:18')
2018-02-05 11:43:19,134 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 11:43:19,135 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:43:19,135 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:43:19,135 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 11:43:19,135 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:43:19,135 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:19,136 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,136 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 11:43:19,136 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:43:19,136 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:43:19,136 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:19,137 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,137 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 11:43:19,137 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:43:19,137 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:19,137 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,138 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 11:43:19,138 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 11:43:19,138 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 11:43:19,138 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 11:43:19,139 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 11:43:19,165 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 11:43:19,165 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 11:43:19,165 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 03:43:19 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 11:43:19,166 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:43:19,166 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 11:43:19,166 unittesttestcase.py[line: 379] INFO: 使用键值提取
2018-02-05 11:43:19,166 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 11:43:19,166 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 11:43:19,167 unittesttestcase.py[line: 381] INFO: 获取到的变量的值为：dataviewer
2018-02-05 11:43:19,167 unittesttestcase.py[line: 384] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 11:43:19,167 unittesttestcase.py[line: 379] INFO: 使用键值提取
2018-02-05 11:43:19,167 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 11:43:19,167 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 11:43:19,168 unittesttestcase.py[line: 381] INFO: 获取到的变量的值为：数据监视器
2018-02-05 11:43:19,168 unittesttestcase.py[line: 384] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 11:43:19,168 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 11:43:19,168 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:43:19,168 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:43:19,168 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,169 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:43:19,169 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 11:43:19,170 unittesttestcase.py[line: 114] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 11:43:19,170 unittesttestcase.py[line: 117] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 11:43:19,170 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:43:19,171 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517802198', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'模式': {'userName': 'dataviewer'}, '消息': 'FAILURE#用户名不为dataviewer'}]", "{'dic': {'userName': {'userName': 'value'}, 'atten': {'atten': 'value'}}}", '成功', '', '2018-02-05 11:43:19')
2018-02-05 11:43:19,231 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:43:19,232 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:43:19,233 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517802198', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 11:43:18', '0天 0小时 0分 0秒')
2018-02-05 11:43:19,307 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 11:43:19,307 test_case.py[line: 31] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 11:43:19,308 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 11:43:19,316 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 11:43:19,317 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 11:43:19,317 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 11:43:19,317 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 11:43:19,317 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_xml
2018-02-05 11:43:19,317 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 11:43:19,318 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:19,318 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,318 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：
2018-02-05 11:43:19,318 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 11:43:19,318 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 11:43:19,319 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 11:43:19,319 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,319 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 11:43:19,319 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 11:43:19,319 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 11:43:19,320 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 11:43:19,320 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,320 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 11:43:19,320 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 11:43:19,320 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 11:43:19,320 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,321 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_host$
2018-02-05 11:43:19,321 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 11:43:19,321 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 11:43:19,322 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 11:43:19,322 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 11:43:19,322 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 11:43:19,337 APIUnittestTestCase.py[line: 239] INFO: 正在对服务器返回body进行解码
2018-02-05 11:43:19,338 APIUnittestTestCase.py[line: 262] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 11:43:19,338 APIUnittestTestCase.py[line: 263] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 11:43:19,338 APIUnittestTestCase.py[line: 264] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 11:43:19,338 APIUnittestTestCase.py[line: 268] INFO: 正在提取目标返回结果值
2018-02-05 11:43:19,338 unittesttestcase.py[line: 402] INFO: 使用xpath提取
2018-02-05 11:43:19,339 unittesttestcase.py[line: 325] INFO: xpath表达式为：.//return
2018-02-05 11:43:19,339 unittesttestcase.py[line: 330] INFO: 正在获取xmlns定义
2018-02-05 11:43:19,339 unittesttestcase.py[line: 404] INFO: 获取到的变量的值为：[]
2018-02-05 11:43:19,340 APIUnittestTestCase.py[line: 271] INFO: 正在执行断言
2018-02-05 11:43:19,340 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 11:43:19,340 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 11:43:19,340 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615'}
2018-02-05 11:43:19,340 test_case_step.py[line: 56] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 11:43:19,341 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'groupCode_1'
2018-02-05 11:43:19,341 unittesttestcase.py[line: 227] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 11:43:19,341 unittesttestcase.py[line: 234] INFO: 正在获取xmlns定义
2018-02-05 11:43:19,341 unittesttestcase.py[line: 243] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 11:43:19,342 unittesttestcase.py[line: 248] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}'}
2018-02-05 11:43:19,342 unittesttestcase.py[line: 250] INFO: 正在转换元素结点前缀
2018-02-05 11:43:19,342 unittesttestcase.py[line: 259] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 11:43:19,342 unittesttestcase.py[line: 265] INFO: 查找到的元素为：[<Element 'return' at 0x0000000003FA3B38>]
2018-02-05 11:43:19,342 unittesttestcase.py[line: 267] INFO: 正在进行断言
2018-02-05 11:43:19,343 unittesttestcase.py[line: 273] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 11:43:19,343 unittesttestcase.py[line: 274] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 11:43:19,343 unittesttestcase.py[line: 227] INFO: 校验规则为：“xpath断言：{'.//return': '$groupCode_1$'}
2018-02-05 11:43:19,343 unittesttestcase.py[line: 234] INFO: 正在获取xmlns定义
2018-02-05 11:43:19,343 unittesttestcase.py[line: 243] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 11:43:19,344 unittesttestcase.py[line: 248] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}'}
2018-02-05 11:43:19,344 unittesttestcase.py[line: 250] INFO: 正在转换元素结点前缀
2018-02-05 11:43:19,344 unittesttestcase.py[line: 259] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 11:43:19,344 unittesttestcase.py[line: 265] INFO: 查找到的元素为：[<Element 'return' at 0x0000000003FA3B38>]
2018-02-05 11:43:19,344 unittesttestcase.py[line: 267] INFO: 正在进行断言
2018-02-05 11:43:19,345 unittesttestcase.py[line: 273] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 11:43:19,345 unittesttestcase.py[line: 274] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 11:43:19,349 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 11:43:19,349 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517802198', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', "[{'模式': {'.//return': 'dataviewer'}, '消息': 'FAILURE#获取的实体集团卡号错误'}, {'模式': {'.//return': '$groupCode_1$'}, '消息': 'FAILURE#获取的实体集团卡号错误'}]", "{'xpath': {'groupCode': './/return'}}", '失败', '获取的实体集团卡号错', '2018-02-05 11:43:19')
2018-02-05 11:43:19,414 test_case.py[line: 84] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 11:43:19,415 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 11:43:19,415 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 11:43:19,415 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517802198', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 11:43:19', '0天 0小时 0分 0秒')
2018-02-05 11:43:19,482 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 11:43:19,483 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 11:43:19,483 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517802198', 1)
2018-02-05 11:43:19,484 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517802198 AND plan_id=1
2018-02-05 11:43:19,490 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 11:43:19,490 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517802198', 1)
2018-02-05 11:43:19,490 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517802198 AND plan_id=1
2018-02-05 11:43:19,496 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 11:43:19,497 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517802198', 1)
2018-02-05 11:43:19,497 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517802198 AND plan_id=1
2018-02-05 11:43:19,511 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 11:43:19', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=3, case_fail_num=1, case_block_num=0 WHERE execution_num='1517802198' AND plan_id=1
2018-02-05 11:43:19,581 running_plan.py[line: 80] INFO: 正在释放资源
2018-02-05 11:43:19,581 running_plan.py[line: 81] INFO: 正在断开与项目关联的数据库连接
2018-02-05 11:43:19,582 running_plan.py[line: 87] INFO: 正在清理与项目关联的全局变量
2018-02-05 11:43:19,582 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 11:43:19,582 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 12:15:10,126 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 12:15:10,127 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 12:15:10,127 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 12:15:10,127 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 12:15:10,127 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 12:15:10,128 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 12:15:10,128 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 12:15:10,135 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 12:15:10,135 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 12:15:10,135 running_plan.py[line: 26] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 12:15:10,136 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 12:15:10,136 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 12:15:10,141 running_plan.py[line: 32] INFO: 正在查询与项目关联的数据库信息
2018-02-05 12:15:10,141 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 12:15:10,168 running_plan.py[line: 46] INFO: 正在查询与项目关联的全局变量
2018-02-05 12:15:10,168 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 12:15:10,174 running_plan.py[line: 60] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 12:15:10,174 test_project.py[line: 26] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 12:15:10,175 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 12:15:10,175 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 12:15:10,181 test_project.py[line: 31] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 12:15:10,181 test_plan.py[line: 26] INFO: 正在查询测试计划关联的测试用例
2018-02-05 12:15:10,181 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 12:15:10,188 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 12:15:10,188 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517804110', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 12:15:10', '', '', 0, 0, 0, 0)
2018-02-05 12:15:10,257 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 12:15:10,257 test_case.py[line: 31] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 12:15:10,258 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 12:15:10,267 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 12:15:10,268 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 12:15:10,269 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 12:15:10,269 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 12:15:10,270 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 12:15:10,270 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 12:15:10,271 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 12:15:10,272 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,272 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_token$
2018-02-05 12:15:10,273 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 12:15:10,273 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 12:15:10,274 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 12:15:10,274 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 12:15:10,275 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,275 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 12:15:10,276 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 12:15:10,277 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 12:15:10,277 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,278 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,278 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 12:15:10,280 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 12:15:10,280 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 12:15:10,281 httpprotocol.py[line: 81] INFO: 请求头为：{'Token': 'asfdacfdasfasfa'}
2018-02-05 12:15:10,376 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 12:15:10,377 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11\xbeIDATx\xda\xd5[\x87{T\xf5\x12\xcd\xbf!H\x17\x04\x9f\x85\x87>+\xbd\x84*\xbd\xf3\xe8\xd2\x11P\x10\x01\x01\x01i\xa2\x14Q\x90\xa2t\x91"\x90\xde{\xef\x85\xf4\xde{\xefe7\xcc\x9b3\x9b\x9b\xdc,\x1b\x92l6O\xb9\xdfw?>6\xbb\xf7\xfe\xeeof\xce\x9c93\xd7\x8c:8B\xa2J\xc8- \x9f\x12\xd3+\xa9\xb2\xba\x91\x9a\x9a\x9e\xd1\xcb~h\xb5MTP\\G\x91\xf1\xa5\xe4\xe8\x93K\xb7-\xd2\xe8\xcc\xb58\xdaw&\x82\xb6\x1c\x0e\xa6\x15\xbb\xfd\xe9\xdb\xf3\x91\x14\x9dXF\x1aMS\x9b\xdf~u*\x8c\x06O\xb2\xa6^#\x9f\xd0+\xaa\xb3W\xf3\xf9\x8a\x81\xb3\xd7(\xdd\xbf\x8bw\xf8\x90\xad{6UT5v\xb8F\xb3\x8e\xbeP\\VO\x97\xef%\xd1\x81s\x91t\xdf6\x9d\x12\xd3*^z\xc3<{\xf6\x8cjj5\x94\x9cQI>\xa1\x85\xf4\xd81\x93.\xddM\xa2\xef.D\xd1\x17\'B\xe9\xb3o\x02i\xfd\x81@\xfa\xc3*U\xbe\xa7>\x9e\xb21\xff5\xdd\xc6\xa0\x01p\xf6\x1foI\xef\xcfw\xa4\t\xab\\i\xf2Z7\x1a\xb7\xdc\x85\xa6\xads\xa7\xf9\xdb\xbc\xc5\xe87\x1e\'SJfe\xf7\r\x83#:\xa9\x9c\x16l\xf7\xa6\xc9k\xdch3_\xfc\xd7\xbb\x89\xe4\x1d\\@\x99\xb95T[\xa7y)\x8d\x83H\xc8+\xac\xa5\xf0\xd8Rr\xf0\xca\xa1[OR\xe9\xc7\xdfci\xef\xe9\x08\xda|(\x98\x96\x7f\xe5GG\xd8P\xc9\xe9\x15\x8c\x12\xadQ\x03\xc4\x98\xbd\xd9\xb3\x8d!`\x80M\xdf\x06\xd1w\x17\xa3\xe8\x97;\t\xf4\xfb_\xc9t\x8f\x9d\xd8\xce3\x87\xfc\xc3\x8a(0\xb2\x88|\xc3\n\xd9\t\n\xd8\xb0e\x1c\xad\xb5\xd4\xc8\xf7\x87\x83t\xcb0X\x8c\x83w\x0e\x8d\x98cO\x03&X\xd2\x07\x0b\x1ci\xe5\xd7~t\xeaj\xac<Tv~\r\xd57h_*\xc3\xe0\x99\x00\xcd\x89i\x95\xe4\xc5N\xf6\xd0>\x83~\xba\x19O\x1b\x0f\x06\xd1\x94\xcf\xdc\xe9\xdf\xb3\xedi\xc2JW\xb2\xf5\xc8n\xf3\xbb\xbaz\r]\x7f\x94B\xbdG?\xa1~\xe3,h\xe1v/\xb2ax\x8aJ(\xa3\xf4\xecj*,\xa9\xa3\xc2\xd2z*\xadh\x90h\xc3\xe6\xc3\tj\xf9wpb\xc5 M|v\xdb0\xca\x81P\x1f\xc8\x86\x81\xa7\x0c\x9ad%!\x0b\xef\xf9\xf2D\x18\x87h\n\x05?-\xa6"^\xd8\xcbp\x940D\x87\xc7\x94\xc8\xba\xbf<\x19JS\xd6\xba\xd3\xa0\x89\x96\xcfA\xd3]\x9b4jhl\xebt\x9eA\xf9\xf4\xfa\x14+\xf9\xfb\xb8\x15\xce\x14\xc3\xb9\x08\x8e\xa9\xd5\x9a.\xffv\xc90\xb1\xc9e\x1c\xe2\xbe\xcf%\xb9\xbec-h\xd4RgZ\xb3\xd7\x9f\xbe\xbf\x12C\x16\xce\x99\x14\x16[B9\x1cI\xd5\xcd^\xf3O8\xaaj\x1a\x85\xcc\xfc\xf60\x99v\x9e\x0c\xa3\xf9\x9f{\xd3\xc8%N4l\x9a\x8d<\x03\x9ee\xe0D+zo\x9e\x03\xcd\xdc\x04\x87\x0be\xe2\x93\xc7\xcf\xd06Y\x07F\x16\xd3\xdc\xad^\xf2}|\xf7\x0e\xe7"S#F\x97\x0c\x830t\xf5\xcf3\x98\xfcz3\xf3x\x8d\xa3\xe8]\x86\xbb)\x9f\xb9\xd1\xd6#\xc1\x0c\rqd\xef\x91CI\xcc\xe8\x8a\xcb\xea$\x945\xda\xa6\x1e3\x94@\x04CTCc\x93\xee^z\x8c*\xbf\xa8\x8e\xbe\xfa>\x8c\xbd\xdd\xda`\xe2\x1e6\xd5\x86V\xee\xf6\xa3\xd3\xd7y\xdd\x0c\xd1I\x19\x15Te\x80\x89\xe6\x14\xd409\x08hA\x8e\x1d\xc7C\xe4\x9e\x7f\x9ba\x94c/\xd3\xca\x01\x13,\xdbe&\x88(<\xfc\x87\x8b\x1c\xe9\xd3\x8d\x1e\xb4n\x7f\x00\x1d\xfb5\x9a\xeeZ\xa7\x91\x7fx\xa1<\x18(+\x1e\xf8\xd9\xb3\xd6\xb3+\x06\xd0?\xb5|-x-\x12k\x10C\xaa\x1b;P^Q\x8d|\xae>\x907\x14\n\x8b<2\x8b#c\x17\x1b\xeb\x06\'\x7f\xff\x88"q"PiD:\xd6\xd8\xde\xb1\xe3D\x08\xf5\x1f\xa7\xdb\x83\xe9\x1b\xdc\x05\xc2M\xe9pF\x19\xc6\x8f\x19\xc6\xb4un-\xfc\x1cyg\xc4\x1c;\xfa\xcf|\x07\x1a2\xb9\x1dod\xb8\x18\xbd\xcc\x99\xe6}\xeeE\x1b\x0f\x05q\x9d\xf0Th\xb8\xb3o.e\xe5Us4j\r\x1a\x00\xb9\x00\x86\xcc/\xaa\xa5"N\xaa\xe5\x95\rTY\xd5@\xf9l\x80\xd8\xe4r\xc1\xfb\xfbv\xe9t\xf6F<\xed\xfe!\x8cV}\xedO3\xd6{\xd0\xa6\x83\x81\xe2\x04\rzQ\xb3\xe3x\xa8\xac\x1b\xd1\r\xa8\x02yIJ\xd7EFW\x8e3\x1cUx&<\xdb\xe8\xff:\x93{`\xfe\xdfo\x98\xca\xea\x06:\xc7\x0c\x06a\x8c\x85\xf5c\xcf\x19\xb5\xd4\x89\xa9t\x90\x84\xf5\x14\xa6\x8f`px\xf8W\xc7X\x184\x140}\xf8,{\xc6r\x0f\xfa\xf9v\x02\xa5\xe7T\x194Lht1\x9d\xbe\x16C\'.E\xd3A.\xfa\x00E\x9b\xd9\xb0+\x18r@<\xc6\xf0\xa6\xbc\xf5\xa9mK\x8ePN0+W\xbf\xbc6\xd7+-\xaf\xe7\xc8\x8d\x12\xc3\xbc7\xd7\x81\xae1\xad\x05\xcb2\xa6h~\xccy\xf4\x8dfHG\xe4]\xba\x97(\x11f*\xe3\x98\x19\x8b\xe5Q\xccD\x90Kz5\xc3\xc2\xdb\xbc9;\x8e\x85P\x00\xc3\x81_D!\xdddh\xd8\xc35\xc1,\xde\xbc\xc10\xd0\xe8\'\xed\x1ah\xeeVO\xf2\x0e)0Hi\x83\xa2\x8a%\x1a\x8724\xf6\x1bk\xd1.|\xe2\x84\x13 y\xbf9\xc3\x96\x16q\x95\x1d\xcc\x89^}\xa0n\xf9\x9a\xa3\n\xeb\xfdp\xa1#=\xe1\xcd5\xf6\x08\x8d.\xa1\xd7\'\xeb\x1cs\x88\xb9\xb5D+\x1cV\r\xd1\xca^\xfd\xdf\x0c\x83\xa3\x9a\x19\xce\xe1\x0bO\x85\xcfK\xd4\xf0\xa6\x01\xa6|\x19>\xb0\xb02\x86\x9c\xb4\xec*\xa1\xa4n\xfe\xf9t\xf5A2/>\x9c\xbf\xe3-\x1e\xa6\xd4\x01\xa0\xa8\xa0\x9cH\xb6\x86\x0c\x83*\xb9\xcf\x98\xd6\xcd\xef\xc3\x9b\xdfw\xac\xa5\x18\x01\x1b\x0c\xc7\x00|\xa2\xc8Ce}\xf6z<Y\xbafK\xe1\xa8\xcf\xa6J8b\xe6\xb0\x13\xe0w#9\xc2\x91\x8b\x8c=`d\xa5t\xc0\x9a\xe6l\xf1\x10\xa7\xcc-\xa8\x95(G1\x19\x19WJ\x85\x0c\xb9\x80c0B\x8d\xb6\xa9\xe7\r\x83M\xf3`\\\x1d8\xa1\xd5\x8bG-s\xa2k\x8f\x92\r~\x1f\xfa\x10\x94\x82\xa8\xc4r\xf2\x0b/";\x8f\\\xbar?\x89\x0e\xff\x12E\xbbO\x85\x93Op\x81\xc1\xc8D\xfey\xb5\xd90}y\x03&\xaer\x11\xbd\xea\xf4\xb58\xae\xae3x\r\x05\xe2\xbd(\x14\x91\x87\xaak\xdbW"@\x0e^\x9b\xa4\xdb\xcc\xf1+]8g\x19_s\xe1Zj\xf8DD\xbf\xbf\xc0\x81>^\xe4D36x\x08\x9d\x9e\xbf\xdd\x9b>\xff.Xr\xa9#\x17\xe8\x90\x80\x14\xd5\xa1#\xf84\xda0\xd84`60^Y\xdc\xdb3\xedh\xdf\xd9\x88\xceI"\xec=\x88*xX\x1aW\xccH\xea\x86\xee\x91\xc8\x89Y\x81A\xc0\xe5\xb5\xbf\x92dCk\xeb\xb5]^/*q\xe5Z\x80\xd8\xeeR\xf3\xbe/\x80V \x02X\x1b\x0c\x06\xd2\x03C-\xdd\xe9K\xe7o\xc5S@d\x91\xb0\xc7\x17\x15\xa4f\xddY\x1c6w\xfb\xd1\x90\x96\x82s\x10\xe3\xfb\xca=\xfe\x0c\x19\r&\x93M|C\x0b[\xe0\x12\xf0\x13\x10Yl\xfc\xb5\x98M*\xf0\xb7\x8d=\x19T\xbaI\x95\x03\xd4\xb9\xa1\xc3\x9a\x8e\xeb\x16\xa0\x85\xc2L[\xf2\xdch\x8bv\r\x06H\xfe\x88K\x88\xd5\\\x88Co\xf4\t)\x14\xc74t\xcfn\x19\x06E\xdc\xcfw\x12\xa4\xb8T\xf2\xcc\xe2/}\x84\xc6\x9a\xe2\xa8\xad\xd3\x8a\xc2\x8b\x87GN\x99\xbd\xc5\x93\xb2\xf3k\x8d\xcb\x89\x9co\x8epN\xc4:\x91\xb4\xcf\xde\x88\xa3\xa7\te\xa2\x01\xfe\xc1\xf5\xd5\x13\x97L\x8aO)\xa3\x8c\x9cj\xd1\xb5:\xa3\xbaOf\xf23r\x89\xb3D\xdf\xba\xfd\x81\xa2|\xcc\xe55\x82-\x9as\xce{\x9f\xcb\x87\x81z\xf5\x9e\x12\xb1 \x0c\xab\xd9\x89/\xfd\x99H1I:IGm\xa0n\x1b\x06*\xaar3\x14\x9dKw\xfaH\xa1f\x8a\x039\xe3\xe0O\x91\xe2\xe1\x88F\xd4 \xc6\xeaQ(\x1c\xcdW\xebX$\xa8<\xbcv\xe9._2_\xe3\xca\xe4\xc3E6\xf8\x93\xc5Nt\xe0\\\x04\x1b+W\xc4\xc8\x17\xae\x8d\x8bP\xd4@\xd8\xd4\x08N\xf2\xd0\t\xa1"{\x05\xe7\x93\xb5{\x16\x93\x9d$:\xf4s\x14\xcdeB\xf4\xc9\x12\'\xc9?Jy\xa1(%\xc3\xa6Zs\xcet\x15\xa6\xe8\xcd\xf5\x18X]cs\xdd\xd5=(\xe3\x8b\xfc\xe5\x90\xc1\x85\x96u\x0b\x94AK\x03\xfc\x18S\xd1\xeb\x1f\xc1L\x95\x17n\xf7\xd1\xd5\nL\x99\xe1]\xc6\x1e\x8f\x9d2\x9f\xf3^e\x83\x10\x8d\n\\\xbe\xc9yl={\xbf\xadG\x16Up\xdeko\xfdpJ0\xad:\xceu\xf5|\xe2_|\x86\x13F\xcd\xcc\xad\x16\xe2\x82\xfa\xec!\xef\x11j\xb0\x19\x1b\xdd\xa9?\xaf\x01p\xa7\xdc\x1f5\xe0\xf0YvR\x97Y\xbbe\xf1oj\xa4\xcd`\xd6]\xaf\x86:\xfb\xee\\\xbb\xe6\x9bX\x88\x04\x03\xea\x0bo\x17\x9a\x08\xad\xc9H\xe3\xc0\xeb\xde\x9bk/P6\x87!\x029\xc2\x90\x1c\xd3\x91\xf1\x01\x13\xa8\xf2\xd5\xf9\x00\x92\xd1;\xbc!\x83\xcd\xad\x9e3\x16\x14\x8c\x13\x97\xa3%\xca4\x1a\xad\xc1\xeb\x1b\xba\xaf\xa1\xffCC\x83J\x11\xc2\x14\xfaO\x9b4\xdau2L"S-i\xc19\x86\xcf\xb6\xa3M\x87\x02\xc9\xc97\x87IU]\xf7\r\x03\x961TO\x14\xec\xc3\xb9\x06\xea\xec\xfe\xb3\x91t\xd7&]\x16\x95\x96U%\xde\xd4\x95\x08\x9a\xb3\xc5K\xbc\xb9?\x1b\x1c\xa2\xa8\x1f\xd7H\xe9\\\x1b\xa1\x86@\xab[\xf2A]\xa3x\xd8\x8b\x0c\x94\xc4T\x1a\x8d/D\xc2\x91\x8bQ"\xa7\x9c\xbf\x1d\xcf\x9b\x1f\xc3\xd4;\x94\xa6\xadw\x17\xa7R\xb7\x82\x97q\xaeD\x93\xac=\xc3\x18\xc3\xe2\xa0\xb6\x03\xe6A\xf7\xc1\xd4\xfa\x8f\xb7hc\x1c8\xc9\xa9\xdfb\xa4\x8d\xd0-\xc3 \xa1\x82\xa3\xf7\xe5\x87B\'\x0fUw\xbfqm=a\xe8\x14\x1b\x91G\xf6\xfe\x18.\xcd(\x14\x9d\xdaN\x14Z\xe0\xfc}\xc76kq\\\x84~\xcc^\x06\x0f\x07\xb3\x81G\x83~\xae\xdd\x17\xc0\xec&\x81\n8:\xdb\xeb\xa4Br\taHt\xe4\xbc\x11\x97R\xce\xe4\xa1Z\x9aXh\x92UT5H+\x03\x91\x89\x02U\xcd\xac&p\x9d\x03\x872\x95\xc4\x02\xc6\x07&\x87\xb2\x00\xfa\xde~\xceeP4\xd4\x0e\r\xa8\x85\x03=b\xd8\xed\x96a\x1a\x18"\xe0\xb5a\\\xdd[\xbad\xd1I\xf6@\xe4\x981\xcb\x9d\x85\x16B\xe4S\xf0t\xe8T\x1b\xf1\xcc3\xd7c\xc5\xeb_T`a\xf1h\xd3\xaa\xa1\x07\x14\x14F\xef\xad\'\xed|\xb4\xd0AZ\xc2\xa9\x99U\x067\x11\xf8\x0f\x95\x02\xcd.C\x8a6\xfe\xe6\x11\x94\'=\xfe\xc1\xe6\xd6-\xea\xf8\x82m^\xe4\x1e\x90\xdf\xa6\xadl\x8a\x03\xc6A\xfd\xf7\xc0>]\xa4(u\xde\x1b\xc0\xce=\x9e\x89\xc8U.\xbc\xcdL\xe2\r\xcdX\x8a|\x92\x9aY)\x1e\x8a\xdc\xb3\x9bC\x16\x05\xa8\xb2\xc1\x90.\xde\x9ei\xcbU{\xac$\xc7\xf6"\x07\x03\x0f\x90\xe2\x91\x17P9/\xfe\xc2\x9b\x96qq6o\x9b\xb7PP}\xcd\x0cBhHT\x91l~W=\x1c\xdfGt\x82=\xa9\xeb\x0f\xe4J8\x9d\x02\x93\xa6\xec\x19\x81Yz\x87\xe4K{\x1e\xba\x9e\xda\x01\x01\xdb\xf78\x17\x99Q\x0f\x1c\xf0J$\xfe8\xaeg\xee\xd9\xa5\xd3T\x86\xb2^*\xcf\x9f\xc1\x0fm\xe7\x99m\x10~ \xffC\xe6\xc74\x0e\xaacT\xf9\x90\xe51J\x04h\x01\x1c\xc2\xd3^k\xa6\x9e\x806\x18\x064\xd5\x18\xefF\x91\x1c\x1aS,\x86heJ\x16\xb4\x8ak\x0c\xb0.S7\xf5p=088\xef\xf6c\xc1\xcf\xc1\x19:\xaa6n\xd9=c\x98V\xcf\xe0(\xaa\xd5\x08]\x04\xbc)\xb0\x86v\xac\x05\xe3("\xcc\x10\x93\xd1\xbe\xa0\x02\xcf\xe3|r\xe2J\xb4\xc83\xca\xc3l=\x1c\xd4\xa2C\x19\xb3Na\x7f\xf3\xec\xdb\xc8)\xf7l\xd3\xa8\xa6\xb6\xb1\xc7\xba\xad\xe8\xdflaB\xa3\xdf\r\x86CD\'\x96\xf6\x9ca\xd4\x11\x80\xc2K=\xf2\x83\xfe\t8\xbb1\xb0\x83\x9c\x00\x98T"\x10y\x01M7c7\x105\x07\xe0R\xbd9\x80KDlO\r7Bh\xc5\xf3/\xde\xe1\xdd\x06\xc6\x80\x02\x07\x7f\x8a\x10\x87\xeeq\xc3h\x19^\xacx\x11\xa8p\x15\xe9\x06T\x1a\xc62\xc6\xbb\xe3\x99Ym\xfc6\xb0E\xd5Fk8\x90)\xa8\xb1\x86y\xe4\x98!\x83$j\xc3\xa0\r\x9e\xcbp\xdaS\xd1\x02fx\xfef<}\xb2\xc4\xb1M\x9fj\xd2*\x97\x96\xbeT\x8f\x1b\x06\x94\x14^\xa0x\x06\xbc\xe2\xe8E\xe3<\\\xe893\x16%\xbf\x80\xe9!\xe7\x18\xbb\x81\xa0\xcd0\xb2\xda(\x80\x16\x8c\xcd\xf6D\xb4`\x9d\x90\\\x923*\xb8N\xf2mS;\x81\x14\x9d\xbc\x12e\x1a\xad\xacsRH\x86P@e\x01\xe8r\xc6\xa5T\x18\xb5\x99\xe8i\x98\xab\xea\r\xd0dl\xae\xb1\x9bt\xfdQ\xb2(\x0b\xea\xc2\x12\xebKH\xad\xe8\x91h\x019\xa9\xe3\x82\x18\xac\xf4\xad\x19\xad9\x12\x85\xe5\xde\xd3\xe1\xc2\x02{\xdc0\xc0It\x1f\xc1\x98\x94\x05@v@\xef\xc5\x98M\x84h\x88\xa1l\xe5ZH\xd6\xc6z5\xae\x07\xba\x8e\xc6\x9e\xda(\x90J\xa0f\xf7D\xa4`\xadP)\xeeZ\xa7\xcb|Dk}\xf6\x84\x16m\xf7~n\xd0\xdc\xcc\x98\x1bt\xf4\x1d\x88\x9b\xd0\xb5\xc0\xd3\xa1\x08(\xfa\x93\x95k\x96Q\x0f\x95\x91S%5\rDR\\\x0bj\xad\x13W\xf2Fc|^\rm\xe0\x82R]\xb7\x0c\x9fmO\xfbNG\x98|h^\xb7g\\\xf13\xa4\xdfx\x92"t\xb8\xa5\xa0\xe4\xe2\x12\x83%h\x06\xeaGh\xa7g\x97QO\x84\xc7\x96\x88\xa4\xa26\x8ez\xe8\x00b!\xe6\x98\x1f0\xee\x8f[\xe9\xd2"\xcb\x00\xb7-UF\xe9\x0cL\xe8\x04@-\xc5r\xb2\x87N\xa6T\xe4\xef2\xf4`V\xd88"\xf2L\xd4[hU\x03\xc6\xb7V\xdcJ\x1f\t\xc3\x8c\xa6\xca-\xca|\xb2F\xab\x95d\x8f\xfe\xcf\xf0Y\xad\xf05d\xb2n|\nH`t\x07\x13J1\xfa\xf3\x1b\x0e\x06\xd2\xbe3\xe1\xd2}C\x11\x84>\x04dm\x18\x03\xfd\x7f|\xbel\x97/\r\x99b\xad\xeb7L\xb3\x11=\xcb\x93\xffV\xa7j\x05c\xc3A{Q\'\xa8\xab\x7f\xc5`\xd8\x1c\xdc\xf3O\xae%PL"\xea\xa0\x1aL_\xe7.C\xdeu\xaaq\xd4\xce(\xcd\xf8\x0c\xdaX\xf0\xd3"1\xb2zF\x19Q3q\xa5\xab\xbcb\x82\xba\xca\x90\x1a\xa1\xbe.\nR\xdd\x9c\xb2a\xe1T7\t\xaak\x01\xe0\xf9\xd0\xbaX\xfb\x8d?\xbd\xae\x9a\xb7\x1b\xc1\x90\x0eVVP\xdc~\xcf\xc7\xac\xe3\\\xf1L&>&\xafuoy\xed\x00\xc9\n\x14s\x05C\x15\xfa\xd8\xc0\xcc\x8f\x16:\n[\x92\xd6-\x9f\x18\xd2\x86\xc0\t\x05@\xbf\x87\x03\r\xea\xf0\x85(16\xc4EL\xca\xc3\x10e\x1c\xee0\xb4\x95K\x96\xb0\xa57\x9b\x13$\xc4QH2p\x04\xf5F`s\x12\x18z@0\x90\xcf\xd0\xd3\xaf\xae\xd1\x88\x11p\xa2\xcb\x88\\\x02\xd5\xe0\xb6E\n\xcd\xda\xec\xd1f\xe2\x06\xca\xf5\xc7\x8b\x1c\xe9\xdc\xf5x\xa9g\x0c5\xe1\x14\xf8\xc6\xfa\xd0\xf1\x8cI.\x13(\xd44O\xed\xc3I\xf0[(\xde\xd8h\xa8\x16\xd0\x0e\xef\xda\xa4\xd2\xea=~\xd4wL\xdbwg\xd0\x98\x83\x13wtth\x18\x8c\xfc\xd8\xb0\x97"\xec\xcc\xd7\xb8\t\xad\x83\xf0\x86\xee\xdb\x1b\x1c\x11\xca\x1c0\xa8\xdf\x98\xe5.\xb4z\x9f?\xdd\xe2M\x80\x92[c`b\x05M\xb4\x05\xdb\xbcE\x13B!7}\xbdn\x84\x16\xd7_\xc2\x14\x12\x18\x0c\xc6\x02x\x01\xdc\x80\x85\x9d\xbb\x19G)Y\x95R\x13\xb5\xedJVH\x04\xbf\xc3kBM\xb0\xe1`\x00\x9d\xba\x1aC\xb7-SE\n\xba\xfa0\x89\x8e\xfe\x1aE+y\x83\x00\x81\xea\x9aa\xc0x\x0by\xa9\x08\x0c)!\xad\\T\xe8\x17\xed\x81\x0f\xd7\x17W\xee\'\xb2\xb3%J\xae\xc0\xb0 X\x1d\xde\x06\x00a\xb8\xc9\x9f]\xe6\xbf\x1f\xbd\x18%\xa8\x81\xfb\xf5i\x1evDT\xe2^h\x91\xe4\x16\xd6t\n\n;4\x0cxw\x19S\xd2\xf8\xd4r\xc1v\x8c\']{\x98"\xde~\x8eq\xf34SV+\xd7lr\xf1\xcb\x93y*\xdd\x10\xb6a\xe1\x0f\x1e~\xf1\x8fD\te%\xff\xf4kn\x19@9V$\x1b\x18\x05\xbd\x98\xe3\x97\xa2\x19\n\x8ad\xd3\x0c]\x0f\x03{\xf0xD("a(;\xcb\x07\xf3\x1d\xc9|\xb5\xabL\x83"\xaa\x11\xdd\xfa\x03\x13\xe8\xf9OeX\xfc\xe5N\xbc\x18\x17\n\xf4\x8b\xf2\x1e\x06\xe2o\xf1\xc6C\x92\x87\xb3\xa0\xe3\x88\xb6\x00\xda\x19S\xf9>\x18W\x9a\xb8\x9a\x9d\xf6S\xbb\xe7\x9an\x83&Z\xd0\x96\xc3A\xe4\x19T@5]\xe8G\x99u6\x91\xe9\x0b\x7f\xa0w5\xcd"dg\xa6K\xf0\x1d\xfc\xc6?\xbcH\x8c\xba\xf3d\xa8\xbc\x85\x85!\x06\xe8Cx\xe8M\xccP\xd0\xc4\x02{\x83\xc2\\^Y\xdf\xae0\x99\xce\x9c\x7f\xcf\x8f\xe1-\xc5\xa6By\xa1s\xc1\xc08\xf5\xdb\x06\x18\xaf\x1a\xbf\xc2U`\x12\xb9*#\xb7J\x8c\xd2!\x8bcx\x02,\xcf\xdc\xe8!\xd7\xd19\x94eK\xef\t\xff\xef\xadR\xd01\xd08\x97\x1d\xeb\x87\xdfb\x8c\x96vz\xbc\xc0\xd4\x17\'\x95E"\x81f4\xe3\x7fDl\xa9H-\x05%\xb52\x90\x80\x08\xe9h\x0e\xb8\xa4\xac\x81\x9c\xb8B?~9Z\x0c\x0bb\x80M\x1f\xc9Q\xf2\x01\xe7;\x0c\\\x8c\xe0\rB\x83\r\x10\xbc\x84Y\x17^\xe3\xb3f\xd2\x02\xc1\xb3\x84\xa3@\xa3\xe9\xdclZjV\x95\x10\x1bD\x06^\xd5\x00\xa9Q`|\x18\x9f(\x05&p\x11=\x9b\x8d\x81\xf9m\x88\xa2P\x8f\r\xcd\xca\xfd\xe3\x0c\xd3\x15\x03v&\xdca8<86\rQ\x088\xbd\xf98\x95q<\x81\x8e\xc9\x00\xfaSy\x15\x11\x03\x1c\x0f8\xdf\xe0\r\x85\x94\xcc*\xf9MCC\xd7Z\xdc\xa5\xe5\rd\xe7\x91\xc3\x11\x10K\x1b\x0f\x04q\xa4\x072\xbb\x0b\x12\xf1\x13=\xa7\x0b\x0c\xcfN>y2ij\xaa\xe3\x1fg\x18\xd3\xf4;4\x9cdke\xce\x00\x0c\n\xafm\x808h\xf4\x06\xbe;{\x80\xeac\xe2\x055\x15\x18\x17^\xef@M\x07&\xd6S\xc7\xff\x00_\xcb\xf2\x97\x9e\xa5\x9c\xbb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 12:15:10,379 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 04:15:10 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=4z470vl986x21rm7rd9knox8v;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 12:15:10,379 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 12:15:10,379 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 12:15:10,379 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 12:15:10,380 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 12:15:10,380 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,380 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,380 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 12:15:10,381 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串：200”
2018-02-05 12:15:10,381 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 12:15:10,381 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517804110', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Token': 'asfdacfdasfasfa'}", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'消息': 'FAILURE#请求验证码识别', '模式': '200'}]", '', '成功', '', '2018-02-05 12:15:10')
2018-02-05 12:15:10,448 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 12:15:10,448 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 12:15:10,449 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517804110', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 12:15:10', '0天 0小时 0分 0秒')
2018-02-05 12:15:10,516 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 12:15:10,517 test_case.py[line: 31] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 12:15:10,517 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 12:15:10,528 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 12:15:10,528 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 12:15:10,529 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 12:15:10,529 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 12:15:10,530 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 12:15:10,530 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 12:15:10,531 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,531 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,532 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 12:15:10,532 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 12:15:10,533 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 12:15:10,533 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,534 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,534 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 12:15:10,535 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 12:15:10,535 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,536 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,536 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 12:15:10,537 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 12:15:10,537 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,538 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,538 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 12:15:10,540 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 12:15:10,540 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 12:15:10,541 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 12:15:10,541 httpprotocol.py[line: 106] INFO: 请求头为：{'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36', 'Cache-Control': 'no-cache'}
2018-02-05 12:15:10,604 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 12:15:10,608 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 12:15:10,608 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 04:15:10 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 04:15:10 GMT')]
2018-02-05 12:15:10,609 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 12:15:10,609 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 12:15:10,609 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 12:15:10,610 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 12:15:10,611 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,611 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,611 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 12:15:10,612 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 12:15:10,612 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 12:15:10,613 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517804110', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36', 'Cache-Control': 'no-cache'}", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'消息\': \'FAILURE#灯塔用户登录失败\', \'模式\': \'"result":200\'}]', '', '成功', '', '2018-02-05 12:15:10')
2018-02-05 12:15:10,681 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 12:15:10,681 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 12:15:10,682 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517804110', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 12:15:10', '0天 0小时 0分 0秒')
2018-02-05 12:15:10,757 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 12:15:10,758 test_case.py[line: 31] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 12:15:10,759 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 12:15:10,770 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 12:15:10,771 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 12:15:10,772 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 12:15:10,772 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 12:15:10,773 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 12:15:10,773 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 12:15:10,774 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,774 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,775 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 12:15:10,775 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 12:15:10,776 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 12:15:10,776 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,777 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,777 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 12:15:10,778 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 12:15:10,778 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,779 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,779 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 12:15:10,780 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 12:15:10,782 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 12:15:10,782 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 12:15:10,783 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 12:15:10,820 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 12:15:10,821 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 12:15:10,821 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 04:15:10 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 12:15:10,821 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 12:15:10,821 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 12:15:10,822 unittesttestcase.py[line: 387] INFO: 使用正则表达式提取
2018-02-05 12:15:10,822 unittesttestcase.py[line: 389] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 12:15:10,822 unittesttestcase.py[line: 398] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 12:15:10,822 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 12:15:10,823 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 12:15:10,823 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,823 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,823 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 12:15:10,823 unittesttestcase.py[line: 133] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 12:15:10,824 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 12:15:10,824 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517804110', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'消息\': \'FAILURE#不符合断言时返回的消息\', \'模式\': \'"qq"(.+?)"\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 12:15:10')
2018-02-05 12:15:10,948 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 12:15:10,949 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 12:15:10,949 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 12:15:10,949 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 12:15:10,949 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 12:15:10,949 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,950 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,950 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 12:15:10,950 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 12:15:10,950 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 12:15:10,950 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,951 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,951 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 12:15:10,951 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 12:15:10,951 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:10,951 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 12:15:10,952 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 12:15:10,952 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 12:15:10,952 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 12:15:10,953 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 12:15:10,953 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 12:15:10,971 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 12:15:10,971 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 12:15:10,971 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 04:15:11 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 12:15:10,971 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 12:15:10,972 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 12:15:10,972 unittesttestcase.py[line: 379] INFO: 使用键值提取
2018-02-05 12:15:10,972 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 12:15:10,972 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 12:15:10,972 unittesttestcase.py[line: 381] INFO: 获取到的变量的值为：数据监视器
2018-02-05 12:15:10,973 unittesttestcase.py[line: 384] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 12:15:10,973 unittesttestcase.py[line: 379] INFO: 使用键值提取
2018-02-05 12:15:10,973 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 12:15:10,973 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 12:15:10,973 unittesttestcase.py[line: 381] INFO: 获取到的变量的值为：dataviewer
2018-02-05 12:15:10,974 unittesttestcase.py[line: 384] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 12:15:10,974 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 12:15:10,974 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 12:15:10,974 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 12:15:10,974 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName': 'dataviewer'}
2018-02-05 12:15:10,975 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 12:15:10,975 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 12:15:10,975 unittesttestcase.py[line: 114] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 12:15:10,975 unittesttestcase.py[line: 117] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 12:15:10,976 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 12:15:10,976 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517804110', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'消息': 'FAILURE#用户名不为dataviewer', '模式': {'userName': 'dataviewer'}}]", "{'dic': {'atten': {'atten': 'value'}, 'userName': {'userName': 'value'}}}", '成功', '', '2018-02-05 12:15:10')
2018-02-05 12:15:11,039 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 12:15:11,040 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 12:15:11,040 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517804110', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 12:15:10', '0天 0小时 0分 0秒')
2018-02-05 12:15:11,108 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 12:15:11,108 test_case.py[line: 31] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 12:15:11,109 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 12:15:11,118 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 12:15:11,118 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 12:15:11,118 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 12:15:11,119 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 12:15:11,119 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_xml
2018-02-05 12:15:11,119 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 12:15:11,119 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:11,119 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName': 'dataviewer'}
2018-02-05 12:15:11,119 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：
2018-02-05 12:15:11,120 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 12:15:11,120 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 12:15:11,120 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 12:15:11,120 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName': 'dataviewer'}
2018-02-05 12:15:11,120 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 12:15:11,121 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 12:15:11,121 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 12:15:11,121 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 12:15:11,121 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName': 'dataviewer'}
2018-02-05 12:15:11,121 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 12:15:11,122 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 12:15:11,122 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 12:15:11,122 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName': 'dataviewer'}
2018-02-05 12:15:11,122 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_host$
2018-02-05 12:15:11,122 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 12:15:11,123 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 12:15:11,123 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 12:15:11,123 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 12:15:11,124 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 12:15:11,138 APIUnittestTestCase.py[line: 239] INFO: 正在对服务器返回body进行解码
2018-02-05 12:15:11,139 APIUnittestTestCase.py[line: 262] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 12:15:11,139 APIUnittestTestCase.py[line: 263] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 12:15:11,139 APIUnittestTestCase.py[line: 264] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 12:15:11,140 APIUnittestTestCase.py[line: 268] INFO: 正在提取目标返回结果值
2018-02-05 12:15:11,140 unittesttestcase.py[line: 402] INFO: 使用xpath提取
2018-02-05 12:15:11,140 unittesttestcase.py[line: 325] INFO: xpath表达式为：.//return
2018-02-05 12:15:11,140 unittesttestcase.py[line: 330] INFO: 正在获取xmlns定义
2018-02-05 12:15:11,141 unittesttestcase.py[line: 404] INFO: 获取到的变量的值为：[]
2018-02-05 12:15:11,141 APIUnittestTestCase.py[line: 271] INFO: 正在执行断言
2018-02-05 12:15:11,141 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 12:15:11,142 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 12:15:11,142 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName': 'dataviewer'}
2018-02-05 12:15:11,142 test_case_step.py[line: 56] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 12:15:11,142 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'groupCode_1'
2018-02-05 12:15:11,143 unittesttestcase.py[line: 227] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 12:15:11,143 unittesttestcase.py[line: 234] INFO: 正在获取xmlns定义
2018-02-05 12:15:11,143 unittesttestcase.py[line: 243] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 12:15:11,143 unittesttestcase.py[line: 248] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 12:15:11,144 unittesttestcase.py[line: 250] INFO: 正在转换元素结点前缀
2018-02-05 12:15:11,144 unittesttestcase.py[line: 259] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 12:15:11,144 unittesttestcase.py[line: 265] INFO: 查找到的元素为：[<Element 'return' at 0x0000000004173B38>]
2018-02-05 12:15:11,144 unittesttestcase.py[line: 267] INFO: 正在进行断言
2018-02-05 12:15:11,144 unittesttestcase.py[line: 273] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 12:15:11,145 unittesttestcase.py[line: 274] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 12:15:11,145 unittesttestcase.py[line: 227] INFO: 校验规则为：“xpath断言：{'.//return': '$groupCode_1$'}
2018-02-05 12:15:11,145 unittesttestcase.py[line: 234] INFO: 正在获取xmlns定义
2018-02-05 12:15:11,145 unittesttestcase.py[line: 243] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 12:15:11,145 unittesttestcase.py[line: 248] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 12:15:11,146 unittesttestcase.py[line: 250] INFO: 正在转换元素结点前缀
2018-02-05 12:15:11,146 unittesttestcase.py[line: 259] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 12:15:11,146 unittesttestcase.py[line: 265] INFO: 查找到的元素为：[<Element 'return' at 0x0000000004173B38>]
2018-02-05 12:15:11,146 unittesttestcase.py[line: 267] INFO: 正在进行断言
2018-02-05 12:15:11,146 unittesttestcase.py[line: 273] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 12:15:11,146 unittesttestcase.py[line: 274] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 12:15:11,151 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 12:15:11,151 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517804110', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', "[{'消息': 'FAILURE#获取的实体集团卡号错误', '模式': {'.//return': 'dataviewer'}}, {'消息': 'FAILURE#获取的实体集团卡号错误', '模式': {'.//return': '$groupCode_1$'}}]", "{'xpath': {'groupCode': './/return'}}", '失败', '获取的实体集团卡号错', '2018-02-05 12:15:11')
2018-02-05 12:15:11,214 test_case.py[line: 84] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 12:15:11,215 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 12:15:11,215 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 12:15:11,216 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517804110', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 12:15:11', '0天 0小时 0分 0秒')
2018-02-05 12:15:11,290 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 12:15:11,291 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 12:15:11,291 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517804110', 1)
2018-02-05 12:15:11,291 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517804110 AND plan_id=1
2018-02-05 12:15:11,302 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 12:15:11,303 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517804110', 1)
2018-02-05 12:15:11,303 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517804110 AND plan_id=1
2018-02-05 12:15:11,309 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 12:15:11,310 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517804110', 1)
2018-02-05 12:15:11,310 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517804110 AND plan_id=1
2018-02-05 12:15:11,327 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 12:15:11', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=3, case_fail_num=1, case_block_num=0 WHERE execution_num='1517804110' AND plan_id=1
2018-02-05 12:15:11,390 running_plan.py[line: 80] INFO: 正在释放资源
2018-02-05 12:15:11,392 running_plan.py[line: 81] INFO: 正在断开与项目关联的数据库连接
2018-02-05 12:15:11,392 running_plan.py[line: 87] INFO: 正在清理与项目关联的全局变量
2018-02-05 12:15:11,393 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 12:15:11,393 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 13:45:51,518 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 13:45:51,533 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 13:45:51,535 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 13:45:51,536 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 13:45:51,537 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 13:45:51,538 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 13:45:51,543 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 13:45:51,554 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 13:45:51,555 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 13:45:51,556 running_plan.py[line: 26] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 13:45:51,557 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 13:45:51,558 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 13:45:51,568 running_plan.py[line: 32] INFO: 正在查询与项目关联的数据库信息
2018-02-05 13:45:51,569 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 13:45:51,601 running_plan.py[line: 46] INFO: 正在查询与项目关联的全局变量
2018-02-05 13:45:51,603 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 13:45:51,612 running_plan.py[line: 60] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 13:45:51,613 test_project.py[line: 26] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 13:45:51,614 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 13:45:51,615 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 13:45:51,623 test_project.py[line: 31] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 13:45:51,624 test_plan.py[line: 26] INFO: 正在查询测试计划关联的测试用例
2018-02-05 13:45:51,625 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 13:45:51,634 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 13:45:51,635 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517809551', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 13:45:51', '', '', 0, 0, 0, 0)
2018-02-05 13:45:51,709 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 13:45:51,710 test_case.py[line: 31] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 13:45:51,711 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 13:45:51,723 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 13:45:51,725 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 13:45:51,726 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:45:51,727 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:45:51,728 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 13:45:51,729 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:45:51,731 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 13:45:51,732 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:51,734 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_token$
2018-02-05 13:45:51,735 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 13:45:51,736 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:45:51,737 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:45:51,738 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 13:45:51,740 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:51,741 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 13:45:51,742 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 13:45:51,743 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:45:51,744 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:51,745 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:51,747 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:45:51,754 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 13:45:51,756 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 13:45:51,757 httpprotocol.py[line: 81] INFO: 请求头为：{'Token': 'asfdacfdasfasfa'}
2018-02-05 13:45:51,936 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 13:45:51,937 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11)IDATx\xda\xd5[\x07{T\xd5\x16\xcd\xdf\x10,\x08\xf8T\x9e\xfa,\xe8C\x04\xe95 UA:\x82R\xa4\tAx\x14\x11)"*\x1d\x01\x91^\x04\x04S!\x01\xd2{\xef\xbd\xf7\xde{\x1b\xf6\xdbkg\xee\xe4\xcedf\x18&\x89\xe2\xf9\xbe\xfb\xc9\x17\xe7\xde{\xce\xd9m\xad\xb5\xcf\xb5!3c\xc7\xd1\x18\x9a\xb8\xcc\x93\x86\xcd{H\xef\xcct\xa3\xd7\xa6\xdc\xa5\x7fMp\xa6~\xa3\x1d\xe9\xb9\x11\x0e\xd4g\xb8==3\xac\xf3z\xf6C{za\x94\x03\r\x1c\xe7D\xff\xb6u\xa1%[\x83(!\xad\x9a\x1e=z\xa4\xf7\xdc\xf8\xb4*\xfa\xe9|\x12]\xfc3\x83\xee\xf9\x14PDB\x05\x15\x944t\xf9\xdd\xd3<\xca*\x9b)$\xa6\x9c.\xd9g\xd2\xba=\xe14j\xa1;\r\x9a|\xb7\xcb\x9e\xbc4\xde\x99\xa6\xad\xf6\xe1\xf5&RrF555\xb7Y\xb4N\x1bs\xffs\'\x1bf\xf0,7z{\x86\xab\\Oj\x98\x85\x9b\x03)*\xb1\x92\xda\xdb\xf5\'\x92\xc8\x13<r9\x99.\xdc\xc9\xa0\xbb\xde\x05\x14\x1e_A\xf9\xc5\r\xa4\xd1<\xbd\x86ik\xd3PEU3;Z\x159z\xe4\xd1\xaec\xb14{\xad\x1f\xfd\xf7\xe3\xfb4`\xac\x93\xac\xff\xf9\x91\x0e\xf4\x9fi\xf7h\xeaJo\xda\xf4C$]u\xca\xa4\xc0\xc82J\xc9\xac\xa1\xa2\xb2Fjlj\x935v\xdb0\xe7y\xe3^\x9fzO\xb7\xf10\xc6\x0b\xfcrL\x00F0g\x98A\x93]h\xceW\xfe\xe4\x1bVB\xcd-\xedz\xcfM\xcb\xa9\xa1\xd37\xd2\xe8\xdc\xedtr\xf6\xcc\xa7\x90\xd8r\xca)\xac\xa7V^\xfc\xd38\xb0\x91\x88j\xcc\xf9\xf3\x1d\xc14x\xa6\xab\xacU\xbdv\xec\xc9,6\xd4\x0fg\x13\xc8\xcd\xb7\x902\xf3\xea$:\xac\x1df\r\xe3\x17^B\x138\x95\xa9\'`\xeeR\x0c\x03\x0fz\x95\r\x83\x10vp\xcf\xa3\x9a\xbaV\xbd\xe7\xe6\xb2\x11\xae\xb07\xfdz3\x8d\xec\x1f\xe6Q`T\x99,\xa4\xb1\xb9\xfd\xa91DEu3\x85\xb2\xc3\\r\xc8\xa4\x8d\xdfG\xd0\xf4/}8:\xdc\xc4\xe9\xfa\xf0Z_\x1c\xe3H\xef\xcfy@\x8b\xb7\x04\xd1Q\x8e~8`JV\r\x95V4Id\xb4[\x18\x19V\x19&\xbb\xa0\x9e\xd6\xed\r\xa7\xbe\xda\xc8@z\x9a\xce\x9bm\xfb\x85\xb7\xa44s\x06z\x91\xd3\xdd\xa8E\xeet\xfa\xf74*)o\xd2{nie\x139y\xe6\xd1\xc9k\xa9\xf4\x87k\x0e\xf9h\x17eh\xc0\xbfk`c=\x83\x8b$:\xde\xe5Tn\xb8\xbe\x97\xd88\x8b\xbe\x0e\xe4\xb5\xa5J\x9d\xa9d#\xf6\xf40k\x98\xfa\xc6V\xba\xe6\x94E\xcf\x8e\xe8\x98\xd0\xcb\x13\x9dh\xc3\xbe0\x8aL\xa8$\xef\x90b\xba\xcc\xde\xb4\xf3H\x0c\xcd\xe5\x94\xf5\x1e\xe7Z\xc3\x05\xbc:\xc9\x85\xb6\x1f\x8e\xa6\xbc\xa2z\xbd\xe7b!7]\xb3i\xeb\xcf\xd1t\xfcJ2GM.\x85\xc6\x95Sai\xa3.\x07\xab\xaf\xde\x88\x08\\\xa6\xf2=\xeaIx|9\x8d[\xea\xa1\x97\xae_\x9d\xe4L\xcb\xb6\x05\x93Oh\te\xe4\xd6ReM\x0b\xb5\xb4jze\x8e6\x8f\xfbAvA\x9d\xa4%er3\xd7\xf8R]}\xabL\xa6\xbe\xa1\x95\xf2\n\x1b(&\xb9\x92\xdc\x03\x8b\xc4\x88\xbbO\xc41\x1a\x0b\xe6Ey\xd2\x9b\\\x087\xec\x8f\x90\xd4\xd5nP\xd8\xf7\x9d\x8a\xa3wf\xb8\xd1\x07\x9f>\xa0)\\,\x17o\r$\xbb\x83\x91t\xe4b2\xddb\xa3\x05D\x94Rfn\x9dx/ru\x13\xa7\xb9\xf6v\xeb6\x01\xf7\xb5\xf1\xd5\xae\xd1\x881\x1a\x1a\xdb\x04-&eVSmC\x8bI\xd0\xb1\xebX\x0c\xf5\x1f\xeb\xa8[;2\xc6\xb2mA\x94\xcc\xd1\x8dg\xf6\xe6x\xaca\xeax\xf3\xd7\xee\t\xd3y\xce\x87\xf3\x1f\x8a\x11\x14\xcf\xc3\xa20\xc9\xe6\x966NE-\xe2IAQ\xa5t\xe7~\x0e\x1d\xe6MF\x1dI\xce\xa8\x91\x8dQ\x8f\xc3\x17\x92\x04\xe5\xa9#l\x00o\xc2\xbb\xb3\xddh\xd2rOZ`\x17 it\xcf/qt\xf6V\x1a\xd7\xaa\\J\xd2\xc2M\xf5hmmg\x0fo\x97\xb9\xc0x@NE\x1cy@y\x05|\x153\x1aJfT\x84zy\x8b\xd3\xe6!~/j\xc6\xbc\x8d\x01\x82:Cb\xca$3\x18\x1bA\xd1e4g\x83\x9fn\xed\xfdF;\xd0\x88\x05\x0f\xe9\xe7\x0b\x89\x94\x99_\xfb\xf7\x1a\x06^\xe6\x15R\xa4Jg.\x02\x15M\xa5\x08\x18\xa0\x917\xaf\xaa\xb6\x85\nK\x1a)+\xbf\x8e\xca\xab\x9a\xbaxz0o\x08\n\xe8\xe3\xc0\xc4\x1bS\xef\x8a3L[\xe5-\x1b\x99SX\xa7\xf7\x9c*N\'\x00\x18\xbf\\O\xa537R\x199\xa5\xd2\x89+)\xf4\xe3\xb9D\xfa\x86=~=s\x0cD\xf0\xf4/}i8?\xe7\x95I\x9d\xd1\xff\x0eS\x8037Sy\x9e\r&Ry\x1b\xdd\xf7+\xa4\xf7?\xb9\xaf3\x0e\x9cg\xda*\x1fA\xac\xc8\x1c\x86\xe9\xd1X\xb4\xc2aZ\xd8\x81\x9e\x84\x0e\xd8X\xf2#\xe4\\x\x8a\xb2 \x00\x80\x02\xdetK\x87\xc6\xc8\xa4Q\xe8A\\;\x0c\xc00|\x94#\xf5\xfd\xd0<\xea\x03\x89\x0b\x8c,\x95(Q\x8fM\x07"\xe8\x83\xb9\x0fh\xe8\xdc\xfb4\x8cS\xe3PFK \xc40\x82!\xa4W\xc3\xdbW&:\xd3\x8e#\xd1\x92\x8a[[\x8d\xa7&8\xda\xcfL\x86_\xb3\xed4(\x9e;\x83Q\x9a\x8bW\xbe\xa4se\x8d\xa8\x9d\x89\x9c"\x01\x1c\xc0u\x90Y\xfc9R]}\xf3\xf9\xdf\x85\x14\xceu\x14D\xba\xcd\x02Z`ci\xb1\xbcp\']\xb7qC\xd8\x83.;fv+T\xf3\x8a\x1ah\xe7\xe1\x18\xedB\x9di\xde&\x7f\xfa\x8aS\x0c\xbc\xf1u\x8e\x12@R\xb9\x86w\xf2%\xd4\xa3k\x0c\xb3\r\xd3\x19\xe6\xf2\xdc\x08\xcb =\x10&j\xc5\'\xeb\xfd\xe8\xbb\x93q\x12\x11%\xe5\x8d\xcc\xa1LC\xf5\x0c\xaeu\x88\xd6\x7fMp\xd2=\xe7\xb5).\xb4|{0\xdd\xf3\xce\xa7j\xce\x0e\xa8\xc5\x97\xed3$\xfd\x82&\x0c\x9ds_\xd0\x9b\xb2> T\xbc\xd3\x8e\x89\xe7u\x97,\xe1m\xdd6\x8cx\x04\xa7\xb4\x01\xdaB\x88\xc5}\xb13\xa4\xdb\x84\xf0\xc8\xa5$\x1dQE\x1dCA\x06wp\x0f,f\xf2\x99A\xdf\x1c\x8d\x15Yg\xfcg\x9e\x92\xd2P\x93N^M\xe9Rx\x9b\x18 \xf4\xd7\xa6E<\x0b<\np\x1e\x9c\x03\xbcj\x08G\xd0\xa7\\Sv0\x82\x84\x84\x82z\x03Y\x08u\xa8\xae\xc12\x88\x8eh\x00"{~d\xa7\x91\x07M\xc6\x86?\xa4\xd1\x8b=\xba\x18_q&8\xb3:\x13\x80F\x00\x14\xcd\xd9\xe0O\x91\xf1\x15&\xd3\x9b\xc5\x86A\x81=\xf8[\xa2\xbc\x14\xa9g\xf2\xe7^\xecm\x05\xdd2\xcc\xcd{\xd9L\xd2\xeeK\x1a\x83\xa1c\x92\xab\xe4\xefP\n\xca\x98\xeb\xc0S\x91f\x82\x98\x80BS\xbbh\x0f\t\'_<\\\x8f\x171\xa9\xdb\xcc\x88\x0e\x11\x86g\x01<\xec>\x1e\'\x92\xcf\x03\xff"\n\x8e.\xa7\xc4\xf4\x1a6D#\xa7\x1e\xeb\xd9x\x18\xa7\xa2\xa5\xff\x0b\xd2mz\x9f\xe1\xf6:\xc7\xea+\xf5\xf0\x1e\x8d]\xe2A3\xd6\xf8\xd0\xac\xb5\xbeR\x17\xa7\xaf\xf6\xa6)+\xbc%\xc5\xaa\xb9\x1fT\x14D\xd5u\xe7L\xa3\xb5\xc9b\xc3<\xd2\xe6P%e\xa0po\xf9)R\n\xbd\xc6J\x96\x0b\x0e\x800\x97\xf4\xc8\x93\x8ce#\x98z7\x90S\x19\x1b\xa0\x807\xb7\xa1\xa9\xcd \x9a\x1f\xd1m\xb7l1\x0c\x9e5f\x89;?\xabJ\xeaXO\xeaoxV6\x83\x19l\xb4\xbavA\x1f\x9b\xcf(\xf2\xfb3\t\x1d\x9c\x8c\xa3\x1e\xe8\x14(\xb5\xa2\xbaI\x9c\x0b\x0e\xb5\xfft\xbc^\xad\x16\xa4\xc7\x8e\x84zd\xb5a0j\x19\x85\xec<\x1a\xad\x9b\xd4\x1b\x1f\xddeO\x8d\x10\xb2YT\xfa\xe4\xea0"\x03y\x1e\x1b\x8a\xf0\xbe\xee\x9ce5Y\xf3\x0f/\x95\xdc.hk\xa6+]\xe1\xbac\xa8\xd1\xf5\x94q\xb0^\xa45h\x81G/%S\x18\x1b\x02F\xc0\x05\x8e\xd4f\x84o\xa1\xe0C\x01\xf1`@\xb0`s\x80\x9eq\xc6,v\'W\x9f\x02\xeb\r\x83I%\xa6W\xeb\tx\xc8\xe3\xa8\x01k\xbf\x0b\xa3\xdf\xb9\xa8\xa5d\xd6\n)\xb4d\x83Q+|\x99E+E~\xbe\x9d\xbf\xd5\x1b\x86z\x87\xc2\xab\xa4\x98\x8f\xd7\xfbRKK\xefho\xa0\x10(\xf6P\x00 \xff\xb7YXk\xb1\'\x80\xcd9|\xef\xe4/\xbc\xf4\x8c\x03@e\xb5a0@\xe0\x0e\x9eM\x14\x83\x18"\x1e\x14\xb6\x05v\x81B.Q\x07\xb0\x80\xc7\r\x9f\xd0b\x9a\xa1\xf5\xf4\x19\xcc5\xfc\xd8\xf3\xad\x1dp\x0cE\xdb\x82\x1c\x8fy\xf4f+\xc1\x9a\x14\x8e\xdf\x03\xee\xff\xc9s\x03\xfcW;\xf8\xd9[\xe9\xba\xe7=\xb1apc13k4\xb9\xf6\x9f\x8e\x93\x9e\xcb{\xcc\xd6\x15\xb2\x88h\xc2\xe6\xecbx\x99\x9a]\xf3\xd8\x8dA\xba\x81A\x04\x822\xf2\x02Y\xb4v\x80\xc8\x01\x96*\xc8h\xde\xa6\x00\x8b6\xae\xb749s\xef\x03\xe4\xdf~(J\xcf\xb1G\xf3\xdc\x95\xe8\xb3\xb1*\x949\x05\xd5r>\x858\t\xb1\x0f\x1cg\xd5\xaeP6\x88\xab\x10\xb7\x0e\xf9\xc2\x91>^\xe7\xc7\xa8\xa8P6\xcc\xdc\xd8\xc3u\x06\x1b\x89\x1e\x0e$t\x88\x83\xd6n\x14\xa4\x9e\x01\xdah\x1e\xca\xa4\xd3\xd1=W\xa7\xb1)\x17\x16\x0fe\x02\xfc\x03\xe9\x0e5\xa1\xa4\xacQ\xeadUm\xb3\xa4\x1b\xa4c\xfcN\xa3\xe9=!\xd5\x89\x8b\xbe\xe2H\xb8\xe0\xe0w\xdc:\xa2\xdc\xa6[\xb9\x96\x17\x04\xc6\x0c\xf6\x9b\x9aU#R\xfeg\xdb\x82h\xe0x\'\x9d\xd7\x8e]\xeaA.\xde\x05\xd4d"\xdfc\x82`\xc3\n\x0c\x07\xa3F\x14\x817Y\xb3!H\xb5/k\x89\xe0s\xec$K\xb6\x06\x8a$\x04D\x99\xc3\x88*"\xa1\x9c\xa1w>\x9d\xfb#\x9d\x0e\xfc\x1aO\xab\xbf\r\x959C\x01\x80\x82\xb0a_8;J,\xfdv3M\xc8\'\x90"\xd6\xd9\xd2\xaa\xe9q\xc3\xc09\xa0\t\xaa\xd5\x08\xbb\x1f"\xe4}6=\xfd2p\x8f\x13L\x02\xe1\t\xc0\xeax\xe1\xc8\x05\x8c:|\x0b\xc4\x0b\x8d\r\xb4k\xe7~\xe5\xa7\xd5\xaf\xee\xd1\x8d\xbbY\xe2\xcd\x1d\x02\xa5F\xaf\x15`\xc9\xc0\x06+=\xa4\xc139\xad\x1e\x8fe#$\x08Y\x05w\x80Z\x0e\x14\x08\xc2\xda_\xa5\xd7)}$e\x93\x10q\x9fl\xf0\xa3\x9f\xce%\n\x12\x03_\xea\xc9\xbdjd\n`\xc7s\xed\xcc2\x0e\xb4\xe6\xbbP\x11kmz#D!,\x02\xb7OY\xe9\xa5\xe3\x16#\x17>\xa4\x90\xe82\xa3\xf7@\x05V\x10\x95\xb2)0\xec\xba}a"s\xc4\xa6T\x9a\x95\xe7\r\x07\x88\xaa\xe2\x14\xa6\xc4Q\xa4Z\x05\xf6\x83\x9b\xe1\xd0\x84\xb2Az\xbf\xe5\xe7\x0c\x1c\xeb$R\x11\x1ac\x8a\x92\xdd\x13\xc0\x01\xb5\xfa\xdbc\xb1z\xe0i\xf1\xd7\x81\x14\x93T\xd9\xf3\x86Q\x17bgNm T\xca\x06\xac\xfc&D\xd4fc\x1b\x8c\x14\xa2\x1cjP_\xd0\xa4\x16m\t\xa4\xdb\x8cbp\xafr\xa0\xe1qCH\xa0\xf6\x19P\x03\x06\xd9\xba\x88\xb8i\xcb0\x15\xd1\t\t\x08\x84\xef\xd8\xe5$\xda{*N\x94\xe8u{\xc3h\xf6:_1\x12\xeeQ\x93HD\xe0[\xd3]\x99\xc8\xe6\xb0\xe35w\xdb8\xe8O\xc5\xa5VI\x7fKq"\x91\xa6\x98v$\xa5W\xf5\x9eaD6\xe7\xda\x03`\xf0\xe6\xb4\x8e\xbe\x0bN\xda@\x9e\xaf\xd56\xda\xd4Q\x86~\x0b\xb0\xfc\xf3&<\x1dpr\xdeF\x7f\xd9\x18\xc8\xf4\x8f\xd3\xe9\xa0\x89A=\x86`\xf9)\xdf\xb7\xf7\x978\xba\xca\xa4\x13ml\xa0E\xd45\xa4K\xcc\x05\x86\x86f\x06n\x12\xc7\xd1y\xc51K$\x15\x10h\xc3yL]\xe9#R\x94F\xa3\xb1:\xa3\xa0\x86\xa4e\xd72\xb9\x8e\xa5\xb7\xa7w\x1ev\x81x\x8b\xfa\x06\x9e\xd3\xab\x86Q\xd2\xda\n\x8e\x14\xc5\xeb&}\xee\xd5\xc5\xe3$\xdf6\xb5ShL\x19\x13\xceb\xfa\xf5V\xc7i\x14H+/\x8dwR\xe9K\xf6\xa2E\xa1\xd9\x95\x9e[\xdb\xa5\xf9f\xa8R\xdc\xbc\x9b-F\xa8\xe69\xa0w\x82\xbf\x99S\x03d\xd34\x8f$*!\xf1@\x17{y\xa2s\x17\x07\xd9\xb0?\xdch\x9b\x00\xf7C\x06J\xcf\xa9\x95\xe8\xc6o\xf0\xde\x9c\x82z\x06G\xb5\xd2\x12@\xadR\xd6\x87\xc3\x1d\x8a\xc0\x89\xbd\x19\xb7\xd4]P$\xa0t\xaf\x1aF\x99\xac\xb3G\xbe\xa4\x01\xa5~x\x05\x17\x19\x95\xd9\xb1iH\x81\x80\xe2(\x80.\x9e\xf9R\xc8\x073\x0c\xef\xa7J-\x90\\\xd0\xd9L\xc9\xac\x16hk*\xad@\x1e\xb16\xe5\x14\x14\xd7K\x13\xcdv\x85\x97(\xd4\x9d\x86q\xa4e\xdb\x83)*\xa9\xa2K_\x08\x03\xde\x8ecY\x8b\xb6\x04\xd1\x98\xc5\x1er\xc6l>\xf3)\xb4\x08p\xdfL\xe6l\x00\x15h\t\xa8Ug\x88\x9c\x00\x19\xf9LAz\x1c\x95\x99*r\xc1\\\xf4\xd1\x8b\xe8P\x7f\x1d\xa4\xb7a\xaakh8\xa0?A\xa6\xc7\x01:\xa4Be1\x10\x0ea\x1cx\xa7\xb5g\x01\xcc\xaa\xe9\xfcL4\xb9\xb0\xa10\x86Z\x15^\xbd;T\x90\xa41\xe7\xc2\xbap2\x08]\xd7\xbe&\x9at\xea\xda\xf5\xcaD\x17\xaek~\x8cd\x93)\x99\x1d\xadU\x0b.z\xdd0\x18I\x195\xbat\x86\xa2\xba|{\x10\xe7\xd8\x1a\x8b#\x0e\x9e\x1f\xc9\xfc\x03\x06}\x9b\xa3E\x179l\xa8C\xe7\x13%\xd2z\xda00v|j%\xadg\xb4\xa8\xdeH@\xec\xfd\xa7\xe2)\x97=\xdb\xd8;\x91.\x81H?Z\xe5\xad#\xda8-\x04GzovG\x87\x15\x91\x04c\xacg\xc0s\x8c\t\xf5\x03\xe6K\x85Ln\xd5\x0e\xf6\x97\x18\x06\r)\xc50\x88\x1a\xf4r\x0c{*\x96\xb4\x08bR\xaa\xe8K\xf6\xd6\x17\xc7t\xa2\x18\xa0\xbe\x80\x88\x92\x1e5\x8c8\x03\xd7\x19\xa4\xdcI\xcb;!?\xa2\x05\xf2\x11\xea\x84\xc6\xc4\xfb\xc0\xbb\xb0\xde\x07\xfe\x05t\xfe\xcft:|1\x91\x0e\x9c\x89\x17E\x03\xfd!\xf4\xa0 \xf3Ce\x8eJ\xac\x90}h\xd1:\x96z\r\x7fI\x8d\x81\x17\xa1\x90*^\x07rg\r\xaaA=qc\xef\xc2\xfd\xcf\xe8\xa0\xb0\x03m;\x14%\x1b\xd2S\xc6\xc1\xdc2\xf3jE\xefS\xd2\x18\x9c`\xe4BwAv\xc6j\x8bz\xbd\x98KCS\xab\x14q\xe5\x14\x11P$\xd4\x0f\x18\x1c\xbd%\xfcW9\xa0\xd1\xadF\x99\xb5\xa2\x1f<\x0b\xa7,mU2\xf7\x08\xce\xbf\xd6\x9c\xcb\xeah\x98\xb5\xd1\xe4\xe5\xfa\xc7v\x07sJ3\x84\xe0\xd6\xae\x0bF)\xadl\x94\x14\x03\x90\xa1\xbc\x03\x9dV\x1c\xa3Bg\xd5\xdc{z\xea\xb0\xa2\xd5\x86\xa9g&\x0e\xf4d\xc9B\x9d\x18\x02\xbe1\xb5\xf3\x94\xc9f.\xe4\x86_\x00<\xc9\xbb\xd7194\xec\xb1w\xf7k\x81\x8e\xc8n\xa1\xb0\xb82\x89\xc0\xb7\xb4Q\x89\x9a8\x91\xd3\x19\xa0\xf7\xe3\x8c\xd2\x93\xc3ju\x19\xc5\x18\xca\xb1\xb9f\x94\x107^,X\xb6\xd2\\\xc3\xd7\x02 \x93\xd6n"j\xcd\x96\x1f\xa3\xba\xb4g\xe3\x99E[\xfbL\xdc\x87V0`.\x14q\xcc\x15\x02(\xd4^\xbb\x03\x91\xd2\xebohh\xfbK[\x03V\x19\x06$\xea\xf8\x95\x14f\xc7>\xf4\x87k\xb6\xb0hC\xc2\xa5\xd1\xd6\x16\xb0\xe4~Z\x1e\x00\xa8\x0b\r\x0c\'%\xad\x1dP\x89A\xf0\xd4\x86\xc1\xa7"\xc1Q\xa5\x16\x1b\x06$\x12\xcf\xc1w+h\xd4\xa1\r\rX\x8c\xf3\xd7\xa8Y\xcfr\x04\x82\xf9\xff\xc6\x86B\x8f\xff\xef\xf8\xa0\xca*\xc3\xa41w\xc0B\xfa\x8fu\x12\xad\xe7\xdc\xed4\x91\xfd\x95\x83}\x80\xaf\xf8P\x07\xb29\x8e\xe9\xe8\x8e\xfb\xd8\xde\x15\xee\xd1\x9dt\x83\xcdT\x94h\xa5(O\xf8\xcc\x83\x02"K\xcd\xeavh\x07t\xf4\xe4[\x05\r\xe1\xd4\xe6\x1aFx\xc3\xe6=\xd0\x9e\xb0t\x92\xe3\xb9P\x93\xf1\x15BtRe\x8f\x1f\xe6\xe8U\xc3\x00q\xe0\x84\xe1\xf8\xa5\x9e\xbaO\xd9\x80\xd9\x0f\x9eM\x90~\x8cGP\x91D\xc9\xf1\xab)b\xb4>*Ew\xc1\xe6@\n\x8d-\xeb\x16ZBsi\xc8\'\x9d\x9fF\xe0\xc8\xee\xc6\x03\x11B\xf8\x8c\xcd\x15\x07 @Pa\x08\x08\x84\x13\x198\xa0\x15\x80\x93\x95Ps!\xf9\x0c\xe1H\xc1\xe7z7\xb8\x8e\xa0m\xf14\x8c\'6\x0c \xa0\x9bo\xbe\x1cvPR\x94\xf2\x11\x0f\x0c\x04U\x17\xc5\x12\x02`\x1f\xb5\xf8\xb7\xc2G\xa0.P\x95\xb5\xd1RQ\xd5$\xe4T}\xea\x12\x1b\r]\x0b\x82d\x17\x89\x87\xe1\xe8\x83\x80BQ\x8dq\xe6\xab\x8f\xb6\x19\x87\xfa\x01\x99\x07\xad\xe7C\x17\x93\xe4SC\xdc\xff4}j\xf8\xc4\x86A\xe1G\xde\x05t\x9c\xb5\xc6G>{\x1b8\xceY\x16\xacD\x86.\xcdhQ\xcdl\xce\xd7 TH)\xea|\rl\xdf\xd1\xad4\r/\x95\xbf\xc3!\xf0\x19\x9dZ\xd4\x84z\xbc\x8fS#N\xaa\x18\xdbT\xfc\rQ\x8c\xb4\x8b\xc3\x19\xe39\xe5\xe1\xe8\xd0\xc6\xef\xc3\xe9\x92}\x06E\xb0A*\xab[\xe8i\x1cV\xd5\x18\x10,H\xe4(\xfc[\x0eFq\xa4\xf8\xd0[3:I\x1f"\x08r\t\x8e5\xed>\x11+\x1f\xc8\xb6\x18\x902\x1c\x14\x04\x12B\n\xaa\xaem\xee\xd2\x97W\xa06N\xda\xa0^\x1d\xbb\x92\xa4;\xc9\x08\xcf\xc7\x91\xd9\xaf\x0fF\xcaq*S,\xbc\x86\xa3\xe0!G\xcca\x8e\x8a\x93\xd7R$\xc5\xe6\x16\xd5\xd3?at\x8b\xf9C\xd2\x8eO\xad\x96\xef)\xf1i\x06\x0eL\x031m;\x14M\xa7\xae\xa7\xc8\xb9\xab\xca\x9af\xa3\x1b\x87O\xab\xf15\x19$|\xcf\xa0B\x89\xc2\x1a\xed\xe1\x08\x18\tFi\xe6\x08C\xa4\xcdY\xef\'mWE\x16A\x8d\x81\xc1!\xa3\x9b;\xd3\x85(\xc3\x91X\xb4\x1eP\xc8[\xdb4\xff\x98O\xd6\xff\x0f\x10\xca\x07\x8d\x94e\xfc\xe8\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 13:45:51,943 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 05:45:51 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1obi8fx34haeyg59cgg4us3ns;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 13:45:51,944 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:45:51,945 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 13:45:51,946 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 13:45:51,947 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:45:51,949 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:51,950 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:51,952 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 13:45:51,953 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串：200”
2018-02-05 13:45:51,956 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:45:51,957 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809551', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Token': 'asfdacfdasfasfa'}", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'消息': 'FAILURE#请求验证码识别', '模式': '200'}]", '', '成功', '', '2018-02-05 13:45:51')
2018-02-05 13:45:52,044 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 13:45:52,045 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 13:45:52,046 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809551', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 13:45:51', '0天 0小时 0分 0秒')
2018-02-05 13:45:52,134 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 13:45:52,135 test_case.py[line: 31] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 13:45:52,136 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 13:45:52,150 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 13:45:52,151 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 13:45:52,152 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:45:52,154 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:45:52,155 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 13:45:52,158 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:45:52,159 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,160 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,161 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 13:45:52,163 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:45:52,164 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 13:45:52,165 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,167 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,168 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 13:45:52,169 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:45:52,170 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,171 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,172 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 13:45:52,174 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:45:52,175 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,176 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,177 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:45:52,180 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 13:45:52,182 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 13:45:52,183 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 13:45:52,184 httpprotocol.py[line: 106] INFO: 请求头为：{'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36', 'Cache-Control': 'no-cache'}
2018-02-05 13:45:52,364 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 13:45:52,370 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 13:45:52,371 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 05:45:52 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 05:45:52 GMT')]
2018-02-05 13:45:52,372 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:45:52,373 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 13:45:52,374 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 13:45:52,375 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:45:52,376 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,377 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,379 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 13:45:52,380 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 13:45:52,383 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:45:52,385 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809551', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36', 'Cache-Control': 'no-cache'}", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'消息\': \'FAILURE#灯塔用户登录失败\', \'模式\': \'"result":200\'}]', '', '成功', '', '2018-02-05 13:45:52')
2018-02-05 13:45:52,467 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 13:45:52,468 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 13:45:52,469 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809551', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 13:45:52', '0天 0小时 0分 0秒')
2018-02-05 13:45:52,542 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 13:45:52,543 test_case.py[line: 31] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 13:45:52,544 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 13:45:52,557 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 13:45:52,559 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 13:45:52,560 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:45:52,561 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:45:52,562 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 13:45:52,562 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:45:52,563 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,564 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,565 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 13:45:52,566 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:45:52,567 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:45:52,568 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,569 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,570 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 13:45:52,571 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:45:52,572 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,573 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,574 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:45:52,576 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 13:45:52,577 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 13:45:52,578 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 13:45:52,579 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 13:45:52,678 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 13:45:52,679 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 13:45:52,680 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 05:45:52 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 13:45:52,681 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:45:52,682 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 13:45:52,683 unittesttestcase.py[line: 387] INFO: 使用正则表达式提取
2018-02-05 13:45:52,685 unittesttestcase.py[line: 389] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 13:45:52,686 unittesttestcase.py[line: 398] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 13:45:52,687 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 13:45:52,688 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:45:52,689 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,690 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,691 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 13:45:52,693 unittesttestcase.py[line: 133] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 13:45:52,695 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:45:52,696 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809551', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'消息\': \'FAILURE#不符合断言时返回的消息\', \'模式\': \'"qq"(.+?)"\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 13:45:52')
2018-02-05 13:45:52,834 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 13:45:52,837 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:45:52,839 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:45:52,842 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 13:45:52,844 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:45:52,847 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,849 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,852 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 13:45:52,854 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:45:52,857 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:45:52,860 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,863 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,865 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 13:45:52,868 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:45:52,870 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:52,873 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 13:45:52,875 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:45:52,880 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 13:45:52,883 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 13:45:52,885 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 13:45:52,886 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 13:45:52,936 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 13:45:52,938 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 13:45:52,939 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 05:45:52 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 13:45:52,940 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:45:52,941 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 13:45:52,942 unittesttestcase.py[line: 379] INFO: 使用键值提取
2018-02-05 13:45:52,943 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 13:45:52,944 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 13:45:52,945 unittesttestcase.py[line: 381] INFO: 获取到的变量的值为：dataviewer
2018-02-05 13:45:52,946 unittesttestcase.py[line: 384] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 13:45:52,947 unittesttestcase.py[line: 379] INFO: 使用键值提取
2018-02-05 13:45:52,948 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 13:45:52,950 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 13:45:52,951 unittesttestcase.py[line: 381] INFO: 获取到的变量的值为：数据监视器
2018-02-05 13:45:52,952 unittesttestcase.py[line: 384] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 13:45:52,953 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 13:45:52,954 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:45:52,955 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 13:45:52,956 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-05 13:45:52,957 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 13:45:52,958 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 13:45:52,959 unittesttestcase.py[line: 114] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 13:45:52,960 unittesttestcase.py[line: 117] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 13:45:52,963 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:45:52,964 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809551', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'消息': 'FAILURE#用户名不为dataviewer', '模式': {'userName': 'dataviewer'}}]", "{'dic': {'userName': {'userName': 'value'}, 'atten': {'atten': 'value'}}}", '成功', '', '2018-02-05 13:45:52')
2018-02-05 13:45:53,031 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 13:45:53,033 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 13:45:53,034 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809551', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 13:45:52', '0天 0小时 0分 0秒')
2018-02-05 13:45:53,108 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 13:45:53,109 test_case.py[line: 31] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 13:45:53,110 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 13:45:53,126 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 13:45:53,127 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 13:45:53,128 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:45:53,128 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:45:53,129 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_xml
2018-02-05 13:45:53,130 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:45:53,132 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:53,133 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-05 13:45:53,134 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：
2018-02-05 13:45:53,135 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:45:53,135 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 13:45:53,136 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 13:45:53,137 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-05 13:45:53,138 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 13:45:53,139 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 13:45:53,140 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:45:53,141 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:45:53,142 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-05 13:45:53,143 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 13:45:53,144 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:45:53,145 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 13:45:53,145 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-05 13:45:53,146 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_host$
2018-02-05 13:45:53,147 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 13:45:53,149 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 13:45:53,150 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 13:45:53,151 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 13:45:53,152 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 13:45:53,206 APIUnittestTestCase.py[line: 239] INFO: 正在对服务器返回body进行解码
2018-02-05 13:45:53,208 APIUnittestTestCase.py[line: 262] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 13:45:53,209 APIUnittestTestCase.py[line: 263] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 13:45:53,210 APIUnittestTestCase.py[line: 264] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:45:53,211 APIUnittestTestCase.py[line: 268] INFO: 正在提取目标返回结果值
2018-02-05 13:45:53,212 unittesttestcase.py[line: 402] INFO: 使用xpath提取
2018-02-05 13:46:04,938 unittesttestcase.py[line: 325] INFO: xpath表达式为：.//return
2018-02-05 13:46:07,446 unittesttestcase.py[line: 330] INFO: 正在获取xmlns定义
2018-02-05 13:51:59,367 unittesttestcase.py[line: 404] INFO: 获取到的变量的值为：[]
2018-02-05 13:52:00,466 APIUnittestTestCase.py[line: 271] INFO: 正在执行断言
2018-02-05 13:52:00,646 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:52:00,648 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 13:52:00,649 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-05 13:52:00,651 test_case_step.py[line: 56] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 13:52:00,657 test_case_step.py[line: 62] ERROR: 替换动态变量出错：'groupCode_1'
2018-02-05 13:52:00,661 unittesttestcase.py[line: 227] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 13:52:00,662 unittesttestcase.py[line: 234] INFO: 正在获取xmlns定义
2018-02-05 13:52:00,663 unittesttestcase.py[line: 243] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 13:52:00,666 unittesttestcase.py[line: 248] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 13:52:00,668 unittesttestcase.py[line: 250] INFO: 正在转换元素结点前缀
2018-02-05 13:52:00,668 unittesttestcase.py[line: 259] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 13:52:00,670 unittesttestcase.py[line: 265] INFO: 查找到的元素为：[<Element 'return' at 0x0000000006A8EF48>]
2018-02-05 13:52:00,671 unittesttestcase.py[line: 267] INFO: 正在进行断言
2018-02-05 13:52:00,672 unittesttestcase.py[line: 273] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 13:52:00,673 unittesttestcase.py[line: 274] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 13:52:00,674 unittesttestcase.py[line: 227] INFO: 校验规则为：“xpath断言：{'.//return': '$groupCode_1$'}
2018-02-05 13:52:00,675 unittesttestcase.py[line: 234] INFO: 正在获取xmlns定义
2018-02-05 13:52:00,676 unittesttestcase.py[line: 243] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 13:52:00,677 unittesttestcase.py[line: 248] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 13:52:00,679 unittesttestcase.py[line: 250] INFO: 正在转换元素结点前缀
2018-02-05 13:52:00,680 unittesttestcase.py[line: 259] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 13:52:00,681 unittesttestcase.py[line: 265] INFO: 查找到的元素为：[<Element 'return' at 0x0000000006A8EF48>]
2018-02-05 13:52:00,682 unittesttestcase.py[line: 267] INFO: 正在进行断言
2018-02-05 13:52:00,682 unittesttestcase.py[line: 273] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 13:52:00,683 unittesttestcase.py[line: 274] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 13:52:05,733 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:05,736 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809551', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', "[{'消息': 'FAILURE#获取的实体集团卡号错误', '模式': {'.//return': 'dataviewer'}}, {'消息': 'FAILURE#获取的实体集团卡号错误', '模式': {'.//return': '$groupCode_1$'}}]", "{'xpath': {'groupCode': './/return'}}", '失败', '获取的实体集团卡号错', '2018-02-05 13:45:53')
2018-02-05 13:52:06,078 test_case.py[line: 84] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 13:52:06,083 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 13:52:06,085 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 13:52:06,086 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809551', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 13:45:53', '0天 0小时 6分 12秒')
2018-02-05 13:52:06,841 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 13:52:06,842 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 13:52:06,844 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517809551', 1)
2018-02-05 13:52:06,846 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517809551 AND plan_id=1
2018-02-05 13:52:06,854 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 13:52:06,856 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517809551', 1)
2018-02-05 13:52:06,857 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517809551 AND plan_id=1
2018-02-05 13:52:06,866 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 13:52:06,868 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517809551', 1)
2018-02-05 13:52:06,871 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517809551 AND plan_id=1
2018-02-05 13:52:06,880 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 13:52:06', time_took='0天 0小时 6分 15秒', case_total_num=4, case_pass_num=3, case_fail_num=1, case_block_num=0 WHERE execution_num='1517809551' AND plan_id=1
2018-02-05 13:52:07,924 running_plan.py[line: 80] INFO: 正在释放资源
2018-02-05 13:52:07,926 running_plan.py[line: 81] INFO: 正在断开与项目关联的数据库连接
2018-02-05 13:52:07,928 running_plan.py[line: 87] INFO: 正在清理与项目关联的全局变量
2018-02-05 13:52:10,235 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 13:52:10,238 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 13:52:53,236 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 13:52:53,237 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 13:52:53,238 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 13:52:53,238 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 13:52:53,238 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 13:52:53,238 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 13:52:53,238 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 13:52:53,244 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 13:52:53,245 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 13:52:53,245 running_plan.py[line: 26] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 13:52:53,245 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 13:52:53,245 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 13:52:53,251 running_plan.py[line: 32] INFO: 正在查询与项目关联的数据库信息
2018-02-05 13:52:53,252 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 13:52:53,275 running_plan.py[line: 46] INFO: 正在查询与项目关联的全局变量
2018-02-05 13:52:53,275 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 13:52:53,282 running_plan.py[line: 60] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 13:52:53,282 test_project.py[line: 26] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 13:52:53,283 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 13:52:53,283 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 13:52:53,289 test_project.py[line: 31] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 13:52:53,289 test_plan.py[line: 26] INFO: 正在查询测试计划关联的测试用例
2018-02-05 13:52:53,290 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 13:52:53,296 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 13:52:53,296 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517809973', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 13:52:53', '', '', 0, 0, 0, 0)
2018-02-05 13:52:53,357 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 13:52:53,358 test_case.py[line: 31] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 13:52:53,358 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 13:52:53,365 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 13:52:53,365 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 13:52:53,366 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:52:53,366 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:52:53,366 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 13:52:53,366 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:52:53,367 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 13:52:53,367 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,367 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_token$
2018-02-05 13:52:53,367 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 13:52:53,367 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:52:53,368 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:52:53,368 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 13:52:53,368 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,368 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 13:52:53,368 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 13:52:53,369 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:52:53,369 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,369 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,369 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:52:53,370 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 13:52:53,370 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 13:52:53,370 httpprotocol.py[line: 81] INFO: 请求头为：{'Token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,467 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 13:52:53,467 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11)IDATx\xda\xd5[\x07{T\xd5\x16\xcd\xdf\x10,\x08\xf8T\x9e\xfa,\xe8C\x04\xe95 UA:\x82R\xa4\tAx\x14\x11)"*\x1d\x01\x91^\x04\x04S!\x01\xd2{\xef\xbd\xf7\xde{\x1b\xf6\xdbkg\xee\xe4\xcedf\x18&\x89\xe2\xf9\xbe\xfb\xc9\x17\xe7\xde{\xce\xd9m\xad\xb5\xcf\xb5!3c\xc7\xd1\x18\x9a\xb8\xcc\x93\x86\xcd{H\xef\xcct\xa3\xd7\xa6\xdc\xa5\x7fMp\xa6~\xa3\x1d\xe9\xb9\x11\x0e\xd4g\xb8==3\xac\xf3z\xf6C{za\x94\x03\r\x1c\xe7D\xff\xb6u\xa1%[\x83(!\xad\x9a\x1e=z\xa4\xf7\xdc\xf8\xb4*\xfa\xe9|\x12]\xfc3\x83\xee\xf9\x14PDB\x05\x15\x944t\xf9\xdd\xd3<\xca*\x9b)$\xa6\x9c.\xd9g\xd2\xba=\xe14j\xa1;\r\x9a|\xb7\xcb\x9e\xbc4\xde\x99\xa6\xad\xf6\xe1\xf5&RrF555\xb7Y\xb4N\x1bs\xffs\'\x1bf\xf0,7z{\x86\xab\\Oj\x98\x85\x9b\x03)*\xb1\x92\xda\xdb\xf5\'\x92\xc8\x13<r9\x99.\xdc\xc9\xa0\xbb\xde\x05\x14\x1e_A\xf9\xc5\r\xa4\xd1<\xbd\x86ik\xd3PEU3;Z\x159z\xe4\xd1\xaec\xb14{\xad\x1f\xfd\xf7\xe3\xfb4`\xac\x93\xac\xff\xf9\x91\x0e\xf4\x9fi\xf7h\xeaJo\xda\xf4C$]u\xca\xa4\xc0\xc82J\xc9\xac\xa1\xa2\xb2Fjlj\x935v\xdb0\xe7y\xe3^\x9fzO\xb7\xf10\xc6\x0b\xfcrL\x00F0g\x98A\x93]h\xceW\xfe\xe4\x1bVB\xcd-\xedz\xcfM\xcb\xa9\xa1\xd37\xd2\xe8\xdc\xedtr\xf6\xcc\xa7\x90\xd8r\xca)\xac\xa7V^\xfc\xd38\xb0\x91\x88j\xcc\xf9\xf3\x1d\xc14x\xa6\xab\xacU\xbdv\xec\xc9,6\xd4\x0fg\x13\xc8\xcd\xb7\x902\xf3\xea$:\xac\x1df\r\xe3\x17^B\x138\x95\xa9\'`\xeeR\x0c\x03\x0fz\x95\r\x83\x10vp\xcf\xa3\x9a\xbaV\xbd\xe7\xe6\xb2\x11\xae\xb07\xfdz3\x8d\xec\x1f\xe6Q`T\x99,\xa4\xb1\xb9\xfd\xa91DEu3\x85\xb2\xc3\\r\xc8\xa4\x8d\xdfG\xd0\xf4/}8:\xdc\xc4\xe9\xfa\xf0Z_\x1c\xe3H\xef\xcfy@\x8b\xb7\x04\xd1Q\x8e~8`JV\r\x95V4Id\xb4[\x18\x19V\x19&\xbb\xa0\x9e\xd6\xed\r\xa7\xbe\xda\xc8@z\x9a\xce\x9bm\xfb\x85\xb7\xa44s\x06z\x91\xd3\xdd\xa8E\xeet\xfa\xf74*)o\xd2{nie\x139y\xe6\xd1\xc9k\xa9\xf4\x87k\x0e\xf9h\x17eh\xc0\xbfk`c=\x83\x8b$:\xde\xe5Tn\xb8\xbe\x97\xd88\x8b\xbe\x0e\xe4\xb5\xa5J\x9d\xa9d#\xf6\xf40k\x98\xfa\xc6V\xba\xe6\x94E\xcf\x8e\xe8\x98\xd0\xcb\x13\x9dh\xc3\xbe0\x8aL\xa8$\xef\x90b\xba\xcc\xde\xb4\xf3H\x0c\xcd\xe5\x94\xf5\x1e\xe7Z\xc3\x05\xbc:\xc9\x85\xb6\x1f\x8e\xa6\xbc\xa2z\xbd\xe7b!7]\xb3i\xeb\xcf\xd1t\xfcJ2GM.\x85\xc6\x95Sai\xa3.\x07\xab\xaf\xde\x88\x08\\\xa6\xf2=\xeaIx|9\x8d[\xea\xa1\x97\xae_\x9d\xe4L\xcb\xb6\x05\x93Oh\te\xe4\xd6ReM\x0b\xb5\xb4jze\x8e6\x8f\xfbAvA\x9d\xa4%er3\xd7\xf8R]}\xabL\xa6\xbe\xa1\x95\xf2\n\x1b(&\xb9\x92\xdc\x03\x8b\xc4\x88\xbbO\xc41\x1a\x0b\xe6Ey\xd2\x9b\\\x087\xec\x8f\x90\xd4\xd5nP\xd8\xf7\x9d\x8a\xa3wf\xb8\xd1\x07\x9f>\xa0)\\,\x17o\r$\xbb\x83\x91t\xe4b2\xddb\xa3\x05D\x94Rfn\x9dx/ru\x13\xa7\xb9\xf6v\xeb6\x01\xf7\xb5\xf1\xd5\xae\xd1\x881\x1a\x1a\xdb\x04-&eVSmC\x8bI\xd0\xb1\xebX\x0c\xf5\x1f\xeb\xa8[;2\xc6\xb2mA\x94\xcc\xd1\x8dg\xf6\xe6x\xaca\xeax\xf3\xd7\xee\t\xd3y\xce\x87\xf3\x1f\x8a\x11\x14\xcf\xc3\xa20\xc9\xe6\x966NE-\xe2IAQ\xa5t\xe7~\x0e\x1d\xe6MF\x1dI\xce\xa8\x91\x8dQ\x8f\xc3\x17\x92\x04\xe5\xa9#l\x00o\xc2\xbb\xb3\xddh\xd2rOZ`\x17 it\xcf/qt\xf6V\x1a\xd7\xaa\\J\xd2\xc2M\xf5hmmg\x0fo\x97\xb9\xc0x@NE\x1cy@y\x05|\x153\x1aJfT\x84zy\x8b\xd3\xe6!~/j\xc6\xbc\x8d\x01\x82:Cb\xca$3\x18\x1bA\xd1e4g\x83\x9fn\xed\xfdF;\xd0\x88\x05\x0f\xe9\xe7\x0b\x89\x94\x99_\xfb\xf7\x1a\x06^\xe6\x15R\xa4Jg.\x02\x15M\xa5\x08\x18\xa0\x917\xaf\xaa\xb6\x85\nK\x1a)+\xbf\x8e\xca\xab\x9a\xbaxz0o\x08\n\xe8\xe3\xc0\xc4\x1bS\xef\x8a3L[\xe5-\x1b\x99SX\xa7\xf7\x9c*N\'\x00\x18\xbf\\O\xa537R\x199\xa5\xd2\x89+)\xf4\xe3\xb9D\xfa\x86=~=s\x0cD\xf0\xf4/}i8?\xe7\x95I\x9d\xd1\xff\x0eS\x8037Sy\x9e\r&Ry\x1b\xdd\xf7+\xa4\xf7?\xb9\xaf3\x0e\x9cg\xda*\x1fA\xac\xc8\x1c\x86\xe9\xd1X\xb4\xc2aZ\xd8\x81\x9e\x84\x0e\xd8X\xf2#\xe4\\x\x8a\xb2 \x00\x80\x02\xdetK\x87\xc6\xc8\xa4Q\xe8A\\;\x0c\xc00|\x94#\xf5\xfd\xd0<\xea\x03\x89\x0b\x8c,\x95(Q\x8fM\x07"\xe8\x83\xb9\x0fh\xe8\xdc\xfb4\x8cS\xe3PFK \xc40\x82!\xa4W\xc3\xdbW&:\xd3\x8e#\xd1\x92\x8a[[\x8d\xa7&8\xda\xcfL\x86_\xb3\xed4(\x9e;\x83Q\x9a\x8bW\xbe\xa4se\x8d\xa8\x9d\x89\x9c"\x01\x1c\xc0u\x90Y\xfc9R]}\xf3\xf9\xdf\x85\x14\xceu\x14D\xba\xcd\x02Z`ci\xb1\xbcp\']\xb7qC\xd8\x83.;fv+T\xf3\x8a\x1ah\xe7\xe1\x18\xedB\x9di\xde&\x7f\xfa\x8aS\x0c\xbc\xf1u\x8e\x12@R\xb9\x86w\xf2%\xd4\xa3k\x0c\xb3\r\xd3\x19\xe6\xf2\xdc\x08\xcb =\x10&j\xc5\'\xeb\xfd\xe8\xbb\x93q\x12\x11%\xe5\x8d\xcc\xa1LC\xf5\x0c\xaeu\x88\xd6\x7fMp\xd2=\xe7\xb5).\xb4|{0\xdd\xf3\xce\xa7j\xce\x0e\xa8\xc5\x97\xed3$\xfd\x82&\x0c\x9ds_\xd0\x9b\xb2> T\xbc\xd3\x8e\x89\xe7u\x97,\xe1m\xdd6\x8cx\x04\xa7\xb4\x01\xdaB\x88\xc5}\xb13\xa4\xdb\x84\xf0\xc8\xa5$\x1dQE\x1dCA\x06wp\x0f,f\xf2\x99A\xdf\x1c\x8d\x15Yg\xfcg\x9e\x92\xd2P\x93N^M\xe9Rx\x9b\x18 \xf4\xd7\xa6E<\x0b<\np\x1e\x9c\x03\xbcj\x08G\xd0\xa7\\Sv0\x82\x84\x84\x82z\x03Y\x08u\xa8\xae\xc12\x88\x8eh\x00"{~d\xa7\x91\x07M\xc6\x86?\xa4\xd1\x8b=\xba\x18_q&8\xb3:\x13\x80F\x00\x14\xcd\xd9\xe0O\x91\xf1\x15&\xd3\x9b\xc5\x86A\x81=\xf8[\xa2\xbc\x14\xa9g\xf2\xe7^\xecm\x05\xdd2\xcc\xcd{\xd9L\xd2\xeeK\x1a\x83\xa1c\x92\xab\xe4\xefP\n\xca\x98\xeb\xc0S\x91f\x82\x98\x80BS\xbbh\x0f\t\'_<\\\x8f\x171\xa9\xdb\xcc\x88\x0e\x11\x86g\x01<\xec>\x1e\'\x92\xcf\x03\xff"\n\x8e.\xa7\xc4\xf4\x1a6D#\xa7\x1e\xeb\xd9x\x18\xa7\xa2\xa5\xff\x0b\xd2mz\x9f\xe1\xf6:\xc7\xea+\xf5\xf0\x1e\x8d]\xe2A3\xd6\xf8\xd0\xac\xb5\xbeR\x17\xa7\xaf\xf6\xa6)+\xbc%\xc5\xaa\xb9\x1fT\x14D\xd5u\xe7L\xa3\xb5\xc9b\xc3<\xd2\xe6P%e\xa0po\xf9)R\n\xbd\xc6J\x96\x0b\x0e\x800\x97\xf4\xc8\x93\x8ce#\x98z7\x90S\x19\x1b\xa0\x807\xb7\xa1\xa9\xcd \x9a\x1f\xd1m\xb7l1\x0c\x9e5f\x89;?\xabJ\xeaXO\xeaoxV6\x83\x19l\xb4\xbavA\x1f\x9b\xcf(\xf2\xfb3\t\x1d\x9c\x8c\xa3\x1e\xe8\x14(\xb5\xa2\xbaI\x9c\x0b\x0e\xb5\xfft\xbc^\xad\x16\xa4\xc7\x8e\x84zd\xb5a0j\x19\x85\xec<\x1a\xad\x9b\xd4\x1b\x1f\xddeO\x8d\x10\xb2YT\xfa\xe4\xea0"\x03y\x1e\x1b\x8a\xf0\xbe\xee\x9ce5Y\xf3\x0f/\x95\xdc.hk\xa6+]\xe1\xbac\xa8\xd1\xf5\x94q\xb0^\xa45h\x81G/%S\x18\x1b\x02F\xc0\x05\x8e\xd4f\x84o\xa1\xe0C\x01\xf1`@\xb0`s\x80\x9eq\xc6,v\'W\x9f\x02\xeb\r\x83I%\xa6W\xeb\tx\xc8\xe3\xa8\x01k\xbf\x0b\xa3\xdf\xb9\xa8\xa5d\xd6\n)\xb4d\x83Q+|\x99E+E~\xbe\x9d\xbf\xd5\x1b\x86z\x87\xc2\xab\xa4\x98\x8f\xd7\xfbRKK\xefho\xa0\x10(\xf6P\x00 \xff\xb7YXk\xb1\'\x80\xcd9|\xef\xe4/\xbc\xf4\x8c\x03@e\xb5a0@\xe0\x0e\x9eM\x14\x83\x18"\x1e\x14\xb6\x05v\x81B.Q\x07\xb0\x80\xc7\r\x9f\xd0b\x9a\xa1\xf5\xf4\x19\xcc5\xfc\xd8\xf3\xad\x1dp\x0cE\xdb\x82\x1c\x8fy\xf4f+\xc1\x9a\x14\x8e\xdf\x03\xee\xff\xc9s\x03\xfcW;\xf8\xd9[\xe9\xba\xe7=\xb1apc13k4\xb9\xf6\x9f\x8e\x93\x9e\xcb{\xcc\xd6\x15\xb2\x88h\xc2\xe6\xecbx\x99\x9a]\xf3\xd8\x8dA\xba\x81A\x04\x822\xf2\x02Y\xb4v\x80\xc8\x01\x96*\xc8h\xde\xa6\x00\x8b6\xae\xb749s\xef\x03\xe4\xdf~(J\xcf\xb1G\xf3\xdc\x95\xe8\xb3\xb1*\x949\x05\xd5r>\x858\t\xb1\x0f\x1cg\xd5\xaeP6\x88\xab\x10\xb7\x0e\xf9\xc2\x91>^\xe7\xc7\xa8\xa8P6\xcc\xdc\xd8\xc3u\x06\x1b\x89\x1e\x0e$t\x88\x83\xd6n\x14\xa4\x9e\x01\xdah\x1e\xca\xa4\xd3\xd1=W\xa7\xb1)\x17\x16\x0fe\x02\xfc\x03\xe9\x0e5\xa1\xa4\xacQ\xeadUm\xb3\xa4\x1b\xa4c\xfcN\xa3\xe9=!\xd5\x89\x8b\xbe\xe2H\xb8\xe0\xe0w\xdc:\xa2\xdc\xa6[\xb9\x96\x17\x04\xc6\x0c\xf6\x9b\x9aU#R\xfeg\xdb\x82h\xe0x\'\x9d\xd7\x8e]\xeaA.\xde\x05\xd4d"\xdfc\x82`\xc3\n\x0c\x07\xa3F\x14\x817Y\xb3!H\xb5/k\x89\xe0s\xec$K\xb6\x06\x8a$\x04D\x99\xc3\x88*"\xa1\x9c\xa1w>\x9d\xfb#\x9d\x0e\xfc\x1aO\xab\xbf\r\x959C\x01\x80\x82\xb0a_8;J,\xfdv3M\xc8\'\x90"\xd6\xd9\xd2\xaa\xe9q\xc3\xc09\xa0\t\xaa\xd5\x08\xbb\x1f"\xe4}6=\xfd2p\x8f\x13L\x02\xe1\t\xc0\xeax\xe1\xc8\x05\x8c:|\x0b\xc4\x0b\x8d\r\xb4k\xe7~\xe5\xa7\xd5\xaf\xee\xd1\x8d\xbbY\xe2\xcd\x1d\x02\xa5F\xaf\x15`\xc9\xc0\x06+=\xa4\xc139\xad\x1e\x8fe#$\x08Y\x05w\x80Z\x0e\x14\x08\xc2\xda_\xa5\xd7)}$e\x93\x10q\x9fl\xf0\xa3\x9f\xce%\n\x12\x03_\xea\xc9\xbdjd\n`\xc7s\xed\xcc2\x0e\xb4\xe6\xbbP\x11kmz#D!,\x02\xb7OY\xe9\xa5\xe3\x16#\x17>\xa4\x90\xe82\xa3\xf7@\x05V\x10\x95\xb2)0\xec\xba}a"s\xc4\xa6T\x9a\x95\xe7\r\x07\x88\xaa\xe2\x14\xa6\xc4Q\xa4Z\x05\xf6\x83\x9b\xe1\xd0\x84\xb2Az\xbf\xe5\xe7\x0c\x1c\xeb$R\x11\x1ac\x8a\x92\xdd\x13\xc0\x01\xb5\xfa\xdbc\xb1z\xe0i\xf1\xd7\x81\x14\x93T\xd9\xf3\x86Q\x17bgNm T\xca\x06\xac\xfc&D\xd4fc\x1b\x8c\x14\xa2\x1cjP_\xd0\xa4\x16m\t\xa4\xdb\x8cbp\xafr\xa0\xe1qCH\xa0\xf6\x19P\x03\x06\xd9\xba\x88\xb8i\xcb0\x15\xd1\t\t\x08\x84\xef\xd8\xe5$\xda{*N\x94\xe8u{\xc3h\xf6:_1\x12\xeeQ\x93HD\xe0[\xd3]\x99\xc8\xe6\xb0\xe35w\xdb8\xe8O\xc5\xa5VI\x7fKq"\x91\xa6\x98v$\xa5W\xf5\x9eaD6\xe7\xda\x03`\xf0\xe6\xb4\x8e\xbe\x0bN\xda@\x9e\xaf\xd56\xda\xd4Q\x86~\x0b\xb0\xfc\xf3&<\x1dpr\xdeF\x7f\xd9\x18\xc8\xf4\x8f\xd3\xe9\xa0\x89A=\x86`\xf9)\xdf\xb7\xf7\x978\xba\xca\xa4\x13ml\xa0E\xd45\xa4K\xcc\x05\x86\x86f\x06n\x12\xc7\xd1y\xc51K$\x15\x10h\xc3yL]\xe9#R\x94F\xa3\xb1:\xa3\xa0\x86\xa4e\xd72\xb9\x8e\xa5\xb7\xa7w\x1ev\x81x\x8b\xfa\x06\x9e\xd3\xab\x86Q\xd2\xda\n\x8e\x14\xc5\xeb&}\xee\xd5\xc5\xe3$\xdf6\xb5ShL\x19\x13\xceb\xfa\xf5V\xc7i\x14H+/\x8dwR\xe9K\xf6\xa2E\xa1\xd9\x95\x9e[\xdb\xa5\xf9f\xa8R\xdc\xbc\x9b-F\xa8\xe69\xa0w\x82\xbf\x99S\x03d\xd34\x8f$*!\xf1@\x17{y\xa2s\x17\x07\xd9\xb0?\xdch\x9b\x00\xf7C\x06J\xcf\xa9\x95\xe8\xc6o\xf0\xde\x9c\x82z\x06G\xb5\xd2\x12@\xadR\xd6\x87\xc3\x1d\x8a\xc0\x89\xbd\x19\xb7\xd4]P$\xa0t\xaf\x1aF\x99\xac\xb3G\xbe\xa4\x01\xa5~x\x05\x17\x19\x95\xd9\xb1iH\x81\x80\xe2(\x80.\x9e\xf9R\xc8\x073\x0c\xef\xa7J-\x90\\\xd0\xd9L\xc9\xac\x16hk*\xad@\x1e\xb16\xe5\x14\x14\xd7K\x13\xcdv\x85\x97(\xd4\x9d\x86q\xa4e\xdb\x83)*\xa9\xa2K_\x08\x03\xde\x8ecY\x8b\xb6\x04\xd1\x98\xc5\x1er\xc6l>\xf3)\xb4\x08p\xdfL\xe6l\x00\x15h\t\xa8Ug\x88\x9c\x00\x19\xf9LAz\x1c\x95\x99*r\xc1\\\xf4\xd1\x8b\xe8P\x7f\x1d\xa4\xb7a\xaakh8\xa0?A\xa6\xc7\x01:\xa4Be1\x10\x0ea\x1cx\xa7\xb5g\x01\xcc\xaa\xe9\xfcL4\xb9\xb0\xa10\x86Z\x15^\xbd;T\x90\xa41\xe7\xc2\xbap2\x08]\xd7\xbe&\x9at\xea\xda\xf5\xcaD\x17\xaek~\x8cd\x93)\x99\x1d\xadU\x0b.z\xdd0\x18I\x195\xbat\x86\xa2\xba|{\x10\xe7\xd8\x1a\x8b#\x0e\x9e\x1f\xc9\xfc\x03\x06}\x9b\xa3E\x179l\xa8C\xe7\x13%\xd2z\xda00v|j%\xadg\xb4\xa8\xdeH@\xec\xfd\xa7\xe2)\x97=\xdb\xd8;\x91.\x81H?Z\xe5\xad#\xda8-\x04GzovG\x87\x15\x91\x04c\xacg\xc0s\x8c\t\xf5\x03\xe6K\x85Ln\xd5\x0e\xf6\x97\x18\x06\r)\xc50\x88\x1a\xf4r\x0c{*\x96\xb4\x08bR\xaa\xe8K\xf6\xd6\x17\xc7t\xa2\x18\xa0\xbe\x80\x88\x92\x1e5\x8c8\x03\xd7\x19\xa4\xdcI\xcb;!?\xa2\x05\xf2\x11\xea\x84\xc6\xc4\xfb\xc0\xbb\xb0\xde\x07\xfe\x05t\xfe\xcft:|1\x91\x0e\x9c\x89\x17E\x03\xfd!\xf4\xa0 \xf3Ce\x8eJ\xac\x90}h\xd1:\x96z\r\x7fI\x8d\x81\x17\xa1\x90*^\x07rg\r\xaaA=qc\xef\xc2\xfd\xcf\xe8\xa0\xb0\x03m;\x14%\x1b\xd2S\xc6\xc1\xdc2\xf3jE\xefS\xd2\x18\x9c`\xe4BwAv\xc6j\x8bz\xbd\x98KCS\xab\x14q\xe5\x14\x11P$\xd4\x0f\x18\x1c\xbd%\xfcW9\xa0\xd1\xadF\x99\xb5\xa2\x1f<\x0b\xa7,mU2\xf7\x08\xce\xbf\xd6\x9c\xcb\xeah\x98\xb5\xd1\xe4\xe5\xfa\xc7v\x07sJ3\x84\xe0\xd6\xae\x0bF)\xadl\x94\x14\x03\x90\xa1\xbc\x03\x9dV\x1c\xa3Bg\xd5\xdc{z\xea\xb0\xa2\xd5\x86\xa9g&\x0e\xf4d\xc9B\x9d\x18\x02\xbe1\xb5\xf3\x94\xc9f.\xe4\x86_\x00<\xc9\xbb\xd7194\xec\xb1w\xf7k\x81\x8e\xc8n\xa1\xb0\xb82\x89\xc0\xb7\xb4Q\x89\x9a8\x91\xd3\x19\xa0\xf7\xe3\x8c\xd2\x93\xc3ju\x19\xc5\x18\xca\xb1\xb9f\x94\x107^,X\xb6\xd2\\\xc3\xd7\x02 \x93\xd6n"j\xcd\x96\x1f\xa3\xba\xb4g\xe3\x99E[\xfbL\xdc\x87V0`.\x14q\xcc\x15\x02(\xd4^\xbb\x03\x91\xd2\xebohh\xfbK[\x03V\x19\x06$\xea\xf8\x95\x14f\xc7>\xf4\x87k\xb6\xb0hC\xc2\xa5\xd1\xd6\x16\xb0\xe4~Z\x1e\x00\xa8\x0b\r\x0c\'%\xad\x1dP\x89A\xf0\xd4\x86\xc1\xa7"\xc1Q\xa5\x16\x1b\x06$\x12\xcf\xc1w+h\xd4\xa1\r\rX\x8c\xf3\xd7\xa8Y\xcfr\x04\x82\xf9\xff\xc6\x86B\x8f\xff\xef\xf8\xa0\xca*\xc3\xa41w\xc0B\xfa\x8fu\x12\xad\xe7\xdc\xed4\x91\xfd\x95\x83}\x80\xaf\xf8P\x07\xb29\x8e\xe9\xe8\x8e\xfb\xd8\xde\x15\xee\xd1\x9dt\x83\xcdT\x94h\xa5(O\xf8\xcc\x83\x02"K\xcd\xeavh\x07t\xf4\xe4[\x05\r\xe1\xd4\xe6\x1aFx\xc3\xe6=\xd0\x9e\xb0t\x92\xe3\xb9P\x93\xf1\x15BtRe\x8f\x1f\xe6\xe8U\xc3\x00q\xe0\x84\xe1\xf8\xa5\x9e\xbaO\xd9\x80\xd9\x0f\x9eM\x90~\x8cGP\x91D\xc9\xf1\xab)b\xb4>*Ew\xc1\xe6@\n\x8d-\xeb\x16ZBsi\xc8\'\x9d\x9fF\xe0\xc8\xee\xc6\x03\x11B\xf8\x8c\xcd\x15\x07 @Pa\x08\x08\x84\x13\x198\xa0\x15\x80\x93\x95Ps!\xf9\x0c\xe1H\xc1\xe7z7\xb8\x8e\xa0m\xf14\x8c\'6\x0c \xa0\x9bo\xbe\x1cvPR\x94\xf2\x11\x0f\x0c\x04U\x17\xc5\x12\x02`\x1f\xb5\xf8\xb7\xc2G\xa0.P\x95\xb5\xd1RQ\xd5$\xe4T}\xea\x12\x1b\r]\x0b\x82d\x17\x89\x87\xe1\xe8\x83\x80BQ\x8dq\xe6\xab\x8f\xb6\x19\x87\xfa\x01\x99\x07\xad\xe7C\x17\x93\xe4SC\xdc\xff4}j\xf8\xc4\x86A\xe1G\xde\x05t\x9c\xb5\xc6G>{\x1b8\xceY\x16\xacD\x86.\xcdhQ\xcdl\xce\xd7 TH)\xea|\rl\xdf\xd1\xad4\r/\x95\xbf\xc3!\xf0\x19\x9dZ\xd4\x84z\xbc\x8fS#N\xaa\x18\xdbT\xfc\rQ\x8c\xb4\x8b\xc3\x19\xe39\xe5\xe1\xe8\xd0\xc6\xef\xc3\xe9\x92}\x06E\xb0A*\xab[\xe8i\x1cV\xd5\x18\x10,H\xe4(\xfc[\x0eFq\xa4\xf8\xd0[3:I\x1f"\x08r\t\x8e5\xed>\x11+\x1f\xc8\xb6\x18\x902\x1c\x14\x04\x12B\n\xaa\xaem\xee\xd2\x97W\xa06N\xda\xa0^\x1d\xbb\x92\xa4;\xc9\x08\xcf\xc7\x91\xd9\xaf\x0fF\xcaq*S,\xbc\x86\xa3\xe0!G\xcca\x8e\x8a\x93\xd7R$\xc5\xe6\x16\xd5\xd3?at\x8b\xf9C\xd2\x8eO\xad\x96\xef)\xf1i\x06\x0eL\x031m;\x14M\xa7\xae\xa7\xc8\xb9\xab\xca\x9af\xa3\x1b\x87O\xab\xf15\x19$|\xcf\xa0B\x89\xc2\x1a\xed\xe1\x08\x18\tFi\xe6\x08C\xa4\xcdY\xef\'mWE\x16A\x8d\x81\xc1!\xa3\x9b;\xd3\x85(\xc3\x91X\xb4\x1eP\xc8[\xdb4\xff\x98O\xd6\xff\x0f\x10\xca\x07\x8d\x94e\xfc\xe8\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 13:52:53,481 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 05:52:53 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=s1wgu5o1uveky8262op1x5fv;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 13:52:53,482 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:52:53,482 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 13:52:53,483 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 13:52:53,483 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:52:53,483 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,483 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,484 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 13:52:53,484 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串：200”
2018-02-05 13:52:53,484 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:53,485 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Token': 'asfdacfdasfasfa'}", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'消息': 'FAILURE#请求验证码识别', '模式': '200'}]", '', '成功', '', '2018-02-05 13:52:53')
2018-02-05 13:52:53,565 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 13:52:53,566 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 13:52:53,566 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 13:52:53', '0天 0小时 0分 0秒')
2018-02-05 13:52:53,631 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 13:52:53,632 test_case.py[line: 31] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 13:52:53,632 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 13:52:53,640 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 13:52:53,640 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 13:52:53,641 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:52:53,641 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:52:53,641 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_urlencode
2018-02-05 13:52:53,641 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:52:53,641 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,642 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,642 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 13:52:53,642 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:52:53,643 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 13:52:53,643 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,643 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,643 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 13:52:53,643 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:52:53,644 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,644 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,644 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 13:52:53,644 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:52:53,645 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,645 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,645 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:52:53,646 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 13:52:53,646 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 13:52:53,646 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 13:52:53,647 httpprotocol.py[line: 106] INFO: 请求头为：{'Cache-Control': 'no-cache', 'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'}
2018-02-05 13:52:53,702 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 13:52:53,706 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 13:52:53,706 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 05:52:53 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 05:52:53 GMT')]
2018-02-05 13:52:53,706 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:52:53,706 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 13:52:53,706 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 13:52:53,707 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:52:53,707 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,707 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,707 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 13:52:53,707 unittesttestcase.py[line: 76] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 13:52:53,708 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:53,708 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "{'Cache-Control': 'no-cache', 'User-Agent': 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'}", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'消息\': \'FAILURE#灯塔用户登录失败\', \'模式\': \'"result":200\'}]', '', '成功', '', '2018-02-05 13:52:53')
2018-02-05 13:52:53,782 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 13:52:53,783 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 13:52:53,783 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 13:52:53', '0天 0小时 0分 0秒')
2018-02-05 13:52:53,847 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 13:52:53,848 test_case.py[line: 31] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 13:52:53,848 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 13:52:53,856 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 13:52:53,856 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 13:52:53,857 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:52:53,857 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:52:53,857 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 13:52:53,857 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:52:53,857 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,857 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,858 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 13:52:53,858 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:52:53,858 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:52:53,858 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,858 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,859 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 13:52:53,859 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:52:53,859 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,859 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,859 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:52:53,860 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 13:52:53,860 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 13:52:53,860 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 13:52:53,860 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 13:52:53,878 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 13:52:53,878 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 13:52:53,878 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 05:52:53 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 13:52:53,878 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:52:53,879 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 13:52:53,879 unittesttestcase.py[line: 385] INFO: 使用正则表达式提取
2018-02-05 13:52:53,879 unittesttestcase.py[line: 387] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 13:52:53,879 unittesttestcase.py[line: 396] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 13:52:53,880 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 13:52:53,880 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:52:53,880 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,880 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,880 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 13:52:53,881 unittesttestcase.py[line: 133] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 13:52:53,882 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:53,882 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'消息\': \'FAILURE#不符合断言时返回的消息\', \'模式\': \'"qq"(.+?)"\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 13:52:53')
2018-02-05 13:52:53,964 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 13:52:53,965 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:52:53,965 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:52:53,965 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_json
2018-02-05 13:52:53,965 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:52:53,965 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,966 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,966 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 13:52:53,966 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:52:53,966 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:52:53,966 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,966 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,967 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 13:52:53,967 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:52:53,967 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:53,967 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,967 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:52:53,968 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 13:52:53,968 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 13:52:53,968 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 13:52:53,968 httpprotocol.py[line: 106] INFO: 请求头为：{'Accept': 'application/json'}
2018-02-05 13:52:53,987 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 13:52:53,988 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 13:52:53,988 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 05:52:53 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 13:52:53,988 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:52:53,989 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 13:52:53,989 unittesttestcase.py[line: 377] INFO: 使用键值提取
2018-02-05 13:52:53,989 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 13:52:53,989 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 13:52:53,989 unittesttestcase.py[line: 379] INFO: 获取到的变量的值为：数据监视器
2018-02-05 13:52:53,990 unittesttestcase.py[line: 382] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 13:52:53,990 unittesttestcase.py[line: 377] INFO: 使用键值提取
2018-02-05 13:52:53,990 unittesttestcase.py[line: 293] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 13:52:53,990 unittesttestcase.py[line: 307] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 13:52:53,990 unittesttestcase.py[line: 379] INFO: 获取到的变量的值为：dataviewer
2018-02-05 13:52:53,991 unittesttestcase.py[line: 382] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 13:52:53,991 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 13:52:53,991 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:52:53,991 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 13:52:53,991 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:53,992 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 13:52:53,992 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 13:52:53,992 unittesttestcase.py[line: 114] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 13:52:53,992 unittesttestcase.py[line: 117] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 13:52:53,993 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:53,993 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "{'Accept': 'application/json'}", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'消息': 'FAILURE#用户名不为dataviewer', '模式': {'userName': 'dataviewer'}}]", "{'dic': {'atten': {'atten': 'value'}, 'userName': {'userName': 'value'}}}", '成功', '', '2018-02-05 13:52:53')
2018-02-05 13:52:54,065 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 13:52:54,066 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 13:52:54,066 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 13:52:53', '0天 0小时 0分 0秒')
2018-02-05 13:52:54,131 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 13:52:54,131 test_case.py[line: 31] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 13:52:54,131 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 13:52:54,139 test_case.py[line: 40] INFO: 开始执行测试步骤
2018-02-05 13:52:54,139 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 13:52:54,139 test_case_step.py[line: 71] INFO: 步骤类型：请求接口
2018-02-05 13:52:54,140 test_case_step.py[line: 72] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 13:52:54,140 test_case_step.py[line: 73] INFO: 执行操作：test_api_for_xml
2018-02-05 13:52:54,140 test_case_step.py[line: 75] INFO: 正在替换“请求头”中的动态参数
2018-02-05 13:52:54,140 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,140 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,141 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：
2018-02-05 13:52:54,141 test_case_step.py[line: 78] INFO: 正在转换字符串请求头为json格式
2018-02-05 13:52:54,141 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 13:52:54,141 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 13:52:54,141 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,141 test_case_step.py[line: 56] INFO: 正在替换动态变量：$userName$
2018-02-05 13:52:54,142 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 13:52:54,142 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:52:54,142 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,142 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,142 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 13:52:54,143 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:52:54,143 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 13:52:54,143 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,143 test_case_step.py[line: 56] INFO: 正在替换动态变量：$global_host$
2018-02-05 13:52:54,143 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 13:52:54,144 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 13:52:54,144 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 13:52:54,144 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 13:52:54,144 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 13:52:54,158 APIUnittestTestCase.py[line: 239] INFO: 正在对服务器返回body进行解码
2018-02-05 13:52:54,158 APIUnittestTestCase.py[line: 262] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 13:52:54,158 APIUnittestTestCase.py[line: 263] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 13:52:54,159 APIUnittestTestCase.py[line: 264] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 13:52:54,159 APIUnittestTestCase.py[line: 268] INFO: 正在提取目标返回结果值
2018-02-05 13:52:54,159 unittesttestcase.py[line: 400] INFO: 使用xpath提取
2018-02-05 13:52:54,159 unittesttestcase.py[line: 325] INFO: xpath表达式为：.//return
2018-02-05 13:52:54,159 unittesttestcase.py[line: 330] INFO: 正在获取xmlns定义
2018-02-05 13:52:54,160 unittesttestcase.py[line: 339] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 13:52:54,160 unittesttestcase.py[line: 344] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 13:52:54,160 unittesttestcase.py[line: 346] INFO: 正在转换元素结点前缀
2018-02-05 13:52:54,161 unittesttestcase.py[line: 354] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 13:52:54,161 unittesttestcase.py[line: 360] INFO: 查找到的元素为：[<Element 'return' at 0x00000000042D6DB8>]
2018-02-05 13:52:54,161 unittesttestcase.py[line: 402] INFO: 获取到的变量的值为：[<Element 'return' at 0x00000000042D6DB8>]
2018-02-05 13:52:54,161 unittesttestcase.py[line: 406] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:groupCode_1-dataviewer
2018-02-05 13:52:54,161 APIUnittestTestCase.py[line: 271] INFO: 正在执行断言
2018-02-05 13:52:54,162 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:52:54,162 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 13:52:54,162 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,162 test_case_step.py[line: 56] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 13:52:54,163 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
},
{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
}
]
2018-02-05 13:52:54,163 unittesttestcase.py[line: 227] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 13:52:54,163 unittesttestcase.py[line: 234] INFO: 正在获取xmlns定义
2018-02-05 13:52:54,163 unittesttestcase.py[line: 243] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 13:52:54,163 unittesttestcase.py[line: 248] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 13:52:54,164 unittesttestcase.py[line: 250] INFO: 正在转换元素结点前缀
2018-02-05 13:52:54,164 unittesttestcase.py[line: 259] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 13:52:54,164 unittesttestcase.py[line: 265] INFO: 查找到的元素为：[<Element 'return' at 0x00000000042D6C28>]
2018-02-05 13:52:54,164 unittesttestcase.py[line: 267] INFO: 正在进行断言
2018-02-05 13:52:54,164 unittesttestcase.py[line: 273] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 13:52:54,165 unittesttestcase.py[line: 274] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 13:52:54,165 unittesttestcase.py[line: 227] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 13:52:54,165 unittesttestcase.py[line: 234] INFO: 正在获取xmlns定义
2018-02-05 13:52:54,165 unittesttestcase.py[line: 243] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 13:52:54,165 unittesttestcase.py[line: 248] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 13:52:54,166 unittesttestcase.py[line: 250] INFO: 正在转换元素结点前缀
2018-02-05 13:52:54,166 unittesttestcase.py[line: 259] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 13:52:54,166 unittesttestcase.py[line: 265] INFO: 查找到的元素为：[<Element 'return' at 0x00000000042D6C28>]
2018-02-05 13:52:54,166 unittesttestcase.py[line: 267] INFO: 正在进行断言
2018-02-05 13:52:54,166 unittesttestcase.py[line: 273] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 13:52:54,167 unittesttestcase.py[line: 274] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 13:52:54,167 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:54,167 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', "[{'消息': 'FAILURE#获取的实体集团卡号错误', '模式': {'.//return': 'dataviewer'}}, {'消息': 'FAILURE#获取的实体集团卡号错误', '模式': {'.//return': 'dataviewer'}}]", "{'xpath': {'groupCode': './/return'}}", '成功', '', '2018-02-05 13:52:54')
2018-02-05 13:52:54,240 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 4 步, 步骤ID: 4]======================
2018-02-05 13:52:54,241 test_case_step.py[line: 86] INFO: 步骤类型：操作数据库
2018-02-05 13:52:54,241 test_case_step.py[line: 87] INFO: 步骤操作对象：ddtm
2018-02-05 13:52:54,241 test_case_step.py[line: 88] INFO: 执行操作：select_one_record
2018-02-05 13:52:54,241 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:52:54,241 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,241 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,242 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 13:52:54,243 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:52:54,243 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,243 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,243 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:52:54,244 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";  data：
2018-02-05 13:52:54,244 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 13:52:54,250 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 13:52:54,251 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 13:52:54,251 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 13:52:54,251 unittesttestcase.py[line: 44] WARNING: 没有配置校验规则，返回程序
2018-02-05 13:52:54,251 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:54,252 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 7, 4, 4, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '{}', '--', 'SELECT phone FROM ddt_user WHERE user_name = "dataviewer";', '', 'body', '', '', '', '成功', '', '2018-02-05 13:52:54')
2018-02-05 13:52:54,314 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 5 步, 步骤ID: 5]======================
2018-02-05 13:52:54,314 test_case_step.py[line: 86] INFO: 步骤类型：操作数据库
2018-02-05 13:52:54,314 test_case_step.py[line: 87] INFO: 步骤操作对象：ddtm
2018-02-05 13:52:54,315 test_case_step.py[line: 88] INFO: 执行操作：update_record
2018-02-05 13:52:54,315 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:52:54,315 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,315 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,315 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 13:52:54,316 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:52:54,316 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,316 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,316 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:52:54,317 mydb.py[line: 81] INFO: update_query：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 13:52:54,324 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:54,324 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 7, 5, 5, '操作数据库', 'ddtm', 1, 'update_record', 'http', '10.202.95.88', 8080, '{}', '--', 'UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"', '', 'body', '', '', '', '成功', '', '2018-02-05 13:52:54')
2018-02-05 13:52:54,398 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 6 步, 步骤ID: 7]======================
2018-02-05 13:52:54,398 test_case_step.py[line: 86] INFO: 步骤类型：操作数据库
2018-02-05 13:52:54,399 test_case_step.py[line: 87] INFO: 步骤操作对象：ddtm
2018-02-05 13:52:54,399 test_case_step.py[line: 88] INFO: 执行操作：select_one_record
2018-02-05 13:52:54,399 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 13:52:54,399 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,399 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,399 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：1033553122
2018-02-05 13:52:54,400 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:52:54,400 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,400 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,400 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;
2018-02-05 13:52:54,400 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:52:54,401 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,401 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,401 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:52:54,401 mydb.py[line: 96] INFO: query：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;  data：(1033553122,)
2018-02-05 13:52:54,402 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone,user_name, atten FROM ddt_user WHERE qq= 1033553122 ORDER BY id desc;
2018-02-05 13:52:54,408 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414', 'dataviewer', '数据监视器'], flag：True
2018-02-05 13:52:54,408 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 13:52:54,408 unittesttestcase.py[line: 410] INFO: 提取数据库查询结果
2018-02-05 13:52:54,409 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 13:52:54,409 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:52:54,409 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 13:52:54,409 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'phone': '18159001414', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'user_name': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,410 test_case_step.py[line: 56] INFO: 正在替换动态变量：$user_name$
2018-02-05 13:52:54,410 test_case_step.py[line: 56] INFO: 正在替换动态变量：$phone$
2018-02-05 13:52:54,410 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 13:52:54,411 unittesttestcase.py[line: 279] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 13:52:54,411 unittesttestcase.py[line: 279] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 13:52:54,412 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:54,413 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 7, 7, 6, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '{}', '--', 'SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;', '1033553122', 'body', 'db列值相等', "[{'消息': 'FAILURE#姓名不为dataviewer', '模式': ['dataviewer', 'dataviewer']}, {'消息': 'FAILURE#手机号不为18189001424', '模式': ['18159001414', '18159001414']}]", "{'db': {'phone': 1, 'user_name': 2}}", '成功', '', '2018-02-05 13:52:54')
2018-02-05 13:52:54,490 test_case.py[line: 81] INFO: ======================开始运行测试步骤[第 7 步, 步骤ID: 6]======================
2018-02-05 13:52:54,490 test_case_step.py[line: 86] INFO: 步骤类型：操作数据库
2018-02-05 13:52:54,490 test_case_step.py[line: 87] INFO: 步骤操作对象：ddtm
2018-02-05 13:52:54,491 test_case_step.py[line: 88] INFO: 执行操作：select_one_record
2018-02-05 13:52:54,491 test_case_step.py[line: 93] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 13:52:54,491 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,491 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'phone': '18159001414', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'user_name': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,491 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：1033553122, "dataviewer"
2018-02-05 13:52:54,491 test_case_step.py[line: 97] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 13:52:54,492 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,492 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'phone': '18159001414', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'user_name': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,492 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";
2018-02-05 13:52:54,492 test_case_step.py[line: 101] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 13:52:54,493 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 13:52:54,493 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'phone': '18159001414', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'user_name': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,493 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 13:52:54,493 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";  data：(1033553122, 'dataviewer')
2018-02-05 13:52:54,494 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE qq= 1033553122 AND user_name='dataviewer';
2018-02-05 13:52:54,500 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 13:52:54,500 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 13:52:54,500 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 13:52:54,500 unittesttestcase.py[line: 37] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 13:52:54,501 test_case_step.py[line: 53] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 13:52:54,501 test_case_step.py[line: 54] INFO: 已保存的全局变量有：{'phone': '18159001414', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'global_headers': '{"Accept-Encoding":"gzip, deflate"}', 'global_host': '10.202.64.168', 'user_name': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 13:52:54,501 test_case_step.py[line: 56] INFO: 正在替换动态变量：$user_name$
2018-02-05 13:52:54,501 test_case_step.py[line: 56] INFO: 正在替换动态变量：$phone$
2018-02-05 13:52:54,502 test_case_step.py[line: 60] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 13:52:54,502 unittesttestcase.py[line: 279] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 13:52:54,502 unittesttestcase.py[line: 279] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 13:52:54,503 test_case_step.py[line: 138] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 13:52:54,503 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 7, 6, 7, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '{}', '--', 'SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";', '1033553122, "dataviewer"', 'body', 'db列值相等', "[{'消息': 'FAILURE#姓名不为dataviewer', '模式': ['dataviewer', 'dataviewer']}, {'消息': 'FAILURE#手机号不为18189001424', '模式': ['18159001414', '18159001414']}]", '', '成功', '', '2018-02-05 13:52:54')
2018-02-05 13:52:54,591 test_case.py[line: 97] INFO: 正在计算运行耗时
2018-02-05 13:52:54,591 test_case.py[line: 103] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 13:52:54,592 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517809973', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '成功', '', '2018-02-05 13:52:54', '0天 0小时 0分 0秒')
2018-02-05 13:52:54,647 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 13:52:54,647 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 13:52:54,648 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517809973', 1)
2018-02-05 13:52:54,648 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517809973 AND plan_id=1
2018-02-05 13:52:54,654 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 13:52:54,655 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517809973', 1)
2018-02-05 13:52:54,655 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517809973 AND plan_id=1
2018-02-05 13:52:54,661 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 13:52:54,661 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517809973', 1)
2018-02-05 13:52:54,661 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517809973 AND plan_id=1
2018-02-05 13:52:54,667 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 13:52:54', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=4, case_fail_num=0, case_block_num=0 WHERE execution_num='1517809973' AND plan_id=1
2018-02-05 13:52:54,738 running_plan.py[line: 80] INFO: 正在释放资源
2018-02-05 13:52:54,739 running_plan.py[line: 81] INFO: 正在断开与项目关联的数据库连接
2018-02-05 13:52:54,739 running_plan.py[line: 87] INFO: 正在清理与项目关联的全局变量
2018-02-05 13:52:54,740 main.py[line: 38] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-02-05 13:52:54,740 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行成功', remark='' WHERE running_plan_num= 1517487657
2018-02-05 14:54:18,792 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 14:54:18,798 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 14:54:18,798 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 14:54:18,798 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 14:54:18,798 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 14:54:18,799 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 14:54:18,799 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 14:54:18,806 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 14:54:18,806 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 14:54:18,806 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 14:54:18,807 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 14:54:18,807 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 14:54:18,823 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 14:54:18,823 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 14:54:18,868 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 14:54:18,869 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 14:54:18,878 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 14:54:18,878 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 14:54:18,879 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 14:54:18,879 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 14:54:18,887 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 14:54:18,888 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 14:54:18,888 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 14:54:18,896 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 14:54:18,897 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517813658', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 14:54:18', '', '', 0, 0, 0, 0)
2018-02-05 14:54:18,959 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 14:54:18,960 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 14:54:18,961 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 14:54:18,971 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:54:18,971 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 14:54:18,972 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:54:18,972 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:54:18,973 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 14:54:18,973 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:54:18,975 test_case_step.py[line: 141] ERROR: 'TestCaseStep' object has no attribute 'request_header'
2018-02-05 14:54:18,975 test_case_step.py[line: 145] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:54:18,976 test_case.py[line: 95] ERROR: local variable 'request_header' referenced before assignment
2018-02-05 14:54:18,976 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:54:18,977 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:54:18,977 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813658', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '阻塞', "local variable 'request_header' referenced before assignment", '2018-02-05 14:54:18', '0天 0小时 0分 0秒')
2018-02-05 14:54:19,040 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 14:54:19,041 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 14:54:19,041 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 14:54:19,049 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:54:19,050 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 14:54:19,050 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:54:19,050 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:54:19,050 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 14:54:19,051 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:54:19,051 test_case_step.py[line: 141] ERROR: 'TestCaseStep' object has no attribute 'request_header'
2018-02-05 14:54:19,051 test_case_step.py[line: 145] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:54:19,051 test_case.py[line: 95] ERROR: local variable 'request_header' referenced before assignment
2018-02-05 14:54:19,051 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:54:19,052 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:54:19,052 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813658', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '阻塞', "local variable 'request_header' referenced before assignment", '2018-02-05 14:54:19', '0天 0小时 0分 0秒')
2018-02-05 14:54:19,115 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 14:54:19,115 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 14:54:19,115 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 14:54:19,123 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:54:19,124 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 14:54:19,124 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:54:19,124 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:54:19,124 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 14:54:19,124 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:54:19,125 test_case_step.py[line: 141] ERROR: 'TestCaseStep' object has no attribute 'request_header'
2018-02-05 14:54:19,125 test_case_step.py[line: 145] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:54:19,125 test_case.py[line: 95] ERROR: local variable 'request_header' referenced before assignment
2018-02-05 14:54:19,125 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:54:19,125 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:54:19,126 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813658', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '阻塞', "local variable 'request_header' referenced before assignment", '2018-02-05 14:54:19', '0天 0小时 0分 0秒')
2018-02-05 14:54:19,209 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 14:54:19,209 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 14:54:19,210 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 14:54:19,217 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:54:19,218 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 14:54:19,218 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:54:19,218 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:54:19,218 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 14:54:19,218 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:54:19,218 test_case_step.py[line: 141] ERROR: 'TestCaseStep' object has no attribute 'request_header'
2018-02-05 14:54:19,219 test_case_step.py[line: 145] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:54:19,219 test_case.py[line: 95] ERROR: local variable 'request_header' referenced before assignment
2018-02-05 14:54:19,219 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:54:19,219 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:54:19,219 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813658', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '阻塞', "local variable 'request_header' referenced before assignment", '2018-02-05 14:54:19', '0天 0小时 0分 0秒')
2018-02-05 14:54:19,339 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 14:54:19,340 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 14:54:19,340 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517813658', 1)
2018-02-05 14:54:19,340 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517813658 AND plan_id=1
2018-02-05 14:54:19,346 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 14:54:19,347 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517813658', 1)
2018-02-05 14:54:19,347 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517813658 AND plan_id=1
2018-02-05 14:54:19,352 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 14:54:19,353 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517813658', 1)
2018-02-05 14:54:19,353 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517813658 AND plan_id=1
2018-02-05 14:54:19,359 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 14:54:19', time_took='0天 0小时 0分 0秒', case_total_num=4, case_pass_num=0, case_fail_num=0, case_block_num=4 WHERE execution_num='1517813658' AND plan_id=1
2018-02-05 14:54:19,456 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 14:54:19,457 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 14:54:19,457 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 14:54:19,457 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 14:54:19,458 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 14:56:42,458 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 14:56:42,459 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 14:56:42,459 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 14:56:42,459 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 14:56:42,460 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 14:56:42,460 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 14:56:42,460 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 14:56:42,467 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 14:56:42,467 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 14:56:42,467 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 14:56:42,468 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 14:56:42,468 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 14:56:42,473 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 14:56:42,473 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 14:56:42,497 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 14:56:42,498 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 14:56:42,504 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 14:56:42,504 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 14:56:42,504 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 14:56:42,505 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 14:56:42,510 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 14:56:42,510 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 14:56:42,510 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 14:56:42,516 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 14:56:42,516 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517813802', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 14:56:42', '', '', 0, 0, 0, 0)
2018-02-05 14:56:42,567 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 14:56:42,568 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 14:56:42,568 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 14:56:42,574 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:56:42,575 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 14:56:42,575 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:56:42,575 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:56:42,576 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 14:56:42,576 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:56:42,576 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 14:56:42,576 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,577 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 14:56:42,577 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 14:56:42,577 test_case_step.py[line: 104] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 14:56:42,577 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 14:56:42,578 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,578 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 14:56:42,578 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 14:56:42,578 test_case_step.py[line: 108] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 14:56:42,578 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,579 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,579 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 14:56:42,579 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 14:56:42,580 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 14:56:42,580 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 14:56:42,671 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 14:56:42,671 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11)IDATx\xda\xd5[\x07{T\xd5\x16\xcd\xdf\x10,\x08\xf8T\x9e\xfa,\xe8C\x04\xe95 UA:\x82R\xa4\tAx\x14\x11)"*\x1d\x01\x91^\x04\x04S!\x01\xd2{\xef\xbd\xf7\xde{\x1b\xf6\xdbkg\xee\xe4\xcedf\x18&\x89\xe2\xf9\xbe\xfb\xc9\x17\xe7\xde{\xce\xd9m\xad\xb5\xcf\xb5!3c\xc7\xd1\x18\x9a\xb8\xcc\x93\x86\xcd{H\xef\xcct\xa3\xd7\xa6\xdc\xa5\x7fMp\xa6~\xa3\x1d\xe9\xb9\x11\x0e\xd4g\xb8==3\xac\xf3z\xf6C{za\x94\x03\r\x1c\xe7D\xff\xb6u\xa1%[\x83(!\xad\x9a\x1e=z\xa4\xf7\xdc\xf8\xb4*\xfa\xe9|\x12]\xfc3\x83\xee\xf9\x14PDB\x05\x15\x944t\xf9\xdd\xd3<\xca*\x9b)$\xa6\x9c.\xd9g\xd2\xba=\xe14j\xa1;\r\x9a|\xb7\xcb\x9e\xbc4\xde\x99\xa6\xad\xf6\xe1\xf5&RrF555\xb7Y\xb4N\x1bs\xffs\'\x1bf\xf0,7z{\x86\xab\\Oj\x98\x85\x9b\x03)*\xb1\x92\xda\xdb\xf5\'\x92\xc8\x13<r9\x99.\xdc\xc9\xa0\xbb\xde\x05\x14\x1e_A\xf9\xc5\r\xa4\xd1<\xbd\x86ik\xd3PEU3;Z\x159z\xe4\xd1\xaec\xb14{\xad\x1f\xfd\xf7\xe3\xfb4`\xac\x93\xac\xff\xf9\x91\x0e\xf4\x9fi\xf7h\xeaJo\xda\xf4C$]u\xca\xa4\xc0\xc82J\xc9\xac\xa1\xa2\xb2Fjlj\x935v\xdb0\xe7y\xe3^\x9fzO\xb7\xf10\xc6\x0b\xfcrL\x00F0g\x98A\x93]h\xceW\xfe\xe4\x1bVB\xcd-\xedz\xcfM\xcb\xa9\xa1\xd37\xd2\xe8\xdc\xedtr\xf6\xcc\xa7\x90\xd8r\xca)\xac\xa7V^\xfc\xd38\xb0\x91\x88j\xcc\xf9\xf3\x1d\xc14x\xa6\xab\xacU\xbdv\xec\xc9,6\xd4\x0fg\x13\xc8\xcd\xb7\x902\xf3\xea$:\xac\x1df\r\xe3\x17^B\x138\x95\xa9\'`\xeeR\x0c\x03\x0fz\x95\r\x83\x10vp\xcf\xa3\x9a\xbaV\xbd\xe7\xe6\xb2\x11\xae\xb07\xfdz3\x8d\xec\x1f\xe6Q`T\x99,\xa4\xb1\xb9\xfd\xa91DEu3\x85\xb2\xc3\\r\xc8\xa4\x8d\xdfG\xd0\xf4/}8:\xdc\xc4\xe9\xfa\xf0Z_\x1c\xe3H\xef\xcfy@\x8b\xb7\x04\xd1Q\x8e~8`JV\r\x95V4Id\xb4[\x18\x19V\x19&\xbb\xa0\x9e\xd6\xed\r\xa7\xbe\xda\xc8@z\x9a\xce\x9bm\xfb\x85\xb7\xa44s\x06z\x91\xd3\xdd\xa8E\xeet\xfa\xf74*)o\xd2{nie\x139y\xe6\xd1\xc9k\xa9\xf4\x87k\x0e\xf9h\x17eh\xc0\xbfk`c=\x83\x8b$:\xde\xe5Tn\xb8\xbe\x97\xd88\x8b\xbe\x0e\xe4\xb5\xa5J\x9d\xa9d#\xf6\xf40k\x98\xfa\xc6V\xba\xe6\x94E\xcf\x8e\xe8\x98\xd0\xcb\x13\x9dh\xc3\xbe0\x8aL\xa8$\xef\x90b\xba\xcc\xde\xb4\xf3H\x0c\xcd\xe5\x94\xf5\x1e\xe7Z\xc3\x05\xbc:\xc9\x85\xb6\x1f\x8e\xa6\xbc\xa2z\xbd\xe7b!7]\xb3i\xeb\xcf\xd1t\xfcJ2GM.\x85\xc6\x95Sai\xa3.\x07\xab\xaf\xde\x88\x08\\\xa6\xf2=\xeaIx|9\x8d[\xea\xa1\x97\xae_\x9d\xe4L\xcb\xb6\x05\x93Oh\te\xe4\xd6ReM\x0b\xb5\xb4jze\x8e6\x8f\xfbAvA\x9d\xa4%er3\xd7\xf8R]}\xabL\xa6\xbe\xa1\x95\xf2\n\x1b(&\xb9\x92\xdc\x03\x8b\xc4\x88\xbbO\xc41\x1a\x0b\xe6Ey\xd2\x9b\\\x087\xec\x8f\x90\xd4\xd5nP\xd8\xf7\x9d\x8a\xa3wf\xb8\xd1\x07\x9f>\xa0)\\,\x17o\r$\xbb\x83\x91t\xe4b2\xddb\xa3\x05D\x94Rfn\x9dx/ru\x13\xa7\xb9\xf6v\xeb6\x01\xf7\xb5\xf1\xd5\xae\xd1\x881\x1a\x1a\xdb\x04-&eVSmC\x8bI\xd0\xb1\xebX\x0c\xf5\x1f\xeb\xa8[;2\xc6\xb2mA\x94\xcc\xd1\x8dg\xf6\xe6x\xaca\xeax\xf3\xd7\xee\t\xd3y\xce\x87\xf3\x1f\x8a\x11\x14\xcf\xc3\xa20\xc9\xe6\x966NE-\xe2IAQ\xa5t\xe7~\x0e\x1d\xe6MF\x1dI\xce\xa8\x91\x8dQ\x8f\xc3\x17\x92\x04\xe5\xa9#l\x00o\xc2\xbb\xb3\xddh\xd2rOZ`\x17 it\xcf/qt\xf6V\x1a\xd7\xaa\\J\xd2\xc2M\xf5hmmg\x0fo\x97\xb9\xc0x@NE\x1cy@y\x05|\x153\x1aJfT\x84zy\x8b\xd3\xe6!~/j\xc6\xbc\x8d\x01\x82:Cb\xca$3\x18\x1bA\xd1e4g\x83\x9fn\xed\xfdF;\xd0\x88\x05\x0f\xe9\xe7\x0b\x89\x94\x99_\xfb\xf7\x1a\x06^\xe6\x15R\xa4Jg.\x02\x15M\xa5\x08\x18\xa0\x917\xaf\xaa\xb6\x85\nK\x1a)+\xbf\x8e\xca\xab\x9a\xbaxz0o\x08\n\xe8\xe3\xc0\xc4\x1bS\xef\x8a3L[\xe5-\x1b\x99SX\xa7\xf7\x9c*N\'\x00\x18\xbf\\O\xa537R\x199\xa5\xd2\x89+)\xf4\xe3\xb9D\xfa\x86=~=s\x0cD\xf0\xf4/}i8?\xe7\x95I\x9d\xd1\xff\x0eS\x8037Sy\x9e\r&Ry\x1b\xdd\xf7+\xa4\xf7?\xb9\xaf3\x0e\x9cg\xda*\x1fA\xac\xc8\x1c\x86\xe9\xd1X\xb4\xc2aZ\xd8\x81\x9e\x84\x0e\xd8X\xf2#\xe4\\x\x8a\xb2 \x00\x80\x02\xdetK\x87\xc6\xc8\xa4Q\xe8A\\;\x0c\xc00|\x94#\xf5\xfd\xd0<\xea\x03\x89\x0b\x8c,\x95(Q\x8fM\x07"\xe8\x83\xb9\x0fh\xe8\xdc\xfb4\x8cS\xe3PFK \xc40\x82!\xa4W\xc3\xdbW&:\xd3\x8e#\xd1\x92\x8a[[\x8d\xa7&8\xda\xcfL\x86_\xb3\xed4(\x9e;\x83Q\x9a\x8bW\xbe\xa4se\x8d\xa8\x9d\x89\x9c"\x01\x1c\xc0u\x90Y\xfc9R]}\xf3\xf9\xdf\x85\x14\xceu\x14D\xba\xcd\x02Z`ci\xb1\xbcp\']\xb7qC\xd8\x83.;fv+T\xf3\x8a\x1ah\xe7\xe1\x18\xedB\x9di\xde&\x7f\xfa\x8aS\x0c\xbc\xf1u\x8e\x12@R\xb9\x86w\xf2%\xd4\xa3k\x0c\xb3\r\xd3\x19\xe6\xf2\xdc\x08\xcb =\x10&j\xc5\'\xeb\xfd\xe8\xbb\x93q\x12\x11%\xe5\x8d\xcc\xa1LC\xf5\x0c\xaeu\x88\xd6\x7fMp\xd2=\xe7\xb5).\xb4|{0\xdd\xf3\xce\xa7j\xce\x0e\xa8\xc5\x97\xed3$\xfd\x82&\x0c\x9ds_\xd0\x9b\xb2> T\xbc\xd3\x8e\x89\xe7u\x97,\xe1m\xdd6\x8cx\x04\xa7\xb4\x01\xdaB\x88\xc5}\xb13\xa4\xdb\x84\xf0\xc8\xa5$\x1dQE\x1dCA\x06wp\x0f,f\xf2\x99A\xdf\x1c\x8d\x15Yg\xfcg\x9e\x92\xd2P\x93N^M\xe9Rx\x9b\x18 \xf4\xd7\xa6E<\x0b<\np\x1e\x9c\x03\xbcj\x08G\xd0\xa7\\Sv0\x82\x84\x84\x82z\x03Y\x08u\xa8\xae\xc12\x88\x8eh\x00"{~d\xa7\x91\x07M\xc6\x86?\xa4\xd1\x8b=\xba\x18_q&8\xb3:\x13\x80F\x00\x14\xcd\xd9\xe0O\x91\xf1\x15&\xd3\x9b\xc5\x86A\x81=\xf8[\xa2\xbc\x14\xa9g\xf2\xe7^\xecm\x05\xdd2\xcc\xcd{\xd9L\xd2\xeeK\x1a\x83\xa1c\x92\xab\xe4\xefP\n\xca\x98\xeb\xc0S\x91f\x82\x98\x80BS\xbbh\x0f\t\'_<\\\x8f\x171\xa9\xdb\xcc\x88\x0e\x11\x86g\x01<\xec>\x1e\'\x92\xcf\x03\xff"\n\x8e.\xa7\xc4\xf4\x1a6D#\xa7\x1e\xeb\xd9x\x18\xa7\xa2\xa5\xff\x0b\xd2mz\x9f\xe1\xf6:\xc7\xea+\xf5\xf0\x1e\x8d]\xe2A3\xd6\xf8\xd0\xac\xb5\xbeR\x17\xa7\xaf\xf6\xa6)+\xbc%\xc5\xaa\xb9\x1fT\x14D\xd5u\xe7L\xa3\xb5\xc9b\xc3<\xd2\xe6P%e\xa0po\xf9)R\n\xbd\xc6J\x96\x0b\x0e\x800\x97\xf4\xc8\x93\x8ce#\x98z7\x90S\x19\x1b\xa0\x807\xb7\xa1\xa9\xcd \x9a\x1f\xd1m\xb7l1\x0c\x9e5f\x89;?\xabJ\xeaXO\xeaoxV6\x83\x19l\xb4\xbavA\x1f\x9b\xcf(\xf2\xfb3\t\x1d\x9c\x8c\xa3\x1e\xe8\x14(\xb5\xa2\xbaI\x9c\x0b\x0e\xb5\xfft\xbc^\xad\x16\xa4\xc7\x8e\x84zd\xb5a0j\x19\x85\xec<\x1a\xad\x9b\xd4\x1b\x1f\xddeO\x8d\x10\xb2YT\xfa\xe4\xea0"\x03y\x1e\x1b\x8a\xf0\xbe\xee\x9ce5Y\xf3\x0f/\x95\xdc.hk\xa6+]\xe1\xbac\xa8\xd1\xf5\x94q\xb0^\xa45h\x81G/%S\x18\x1b\x02F\xc0\x05\x8e\xd4f\x84o\xa1\xe0C\x01\xf1`@\xb0`s\x80\x9eq\xc6,v\'W\x9f\x02\xeb\r\x83I%\xa6W\xeb\tx\xc8\xe3\xa8\x01k\xbf\x0b\xa3\xdf\xb9\xa8\xa5d\xd6\n)\xb4d\x83Q+|\x99E+E~\xbe\x9d\xbf\xd5\x1b\x86z\x87\xc2\xab\xa4\x98\x8f\xd7\xfbRKK\xefho\xa0\x10(\xf6P\x00 \xff\xb7YXk\xb1\'\x80\xcd9|\xef\xe4/\xbc\xf4\x8c\x03@e\xb5a0@\xe0\x0e\x9eM\x14\x83\x18"\x1e\x14\xb6\x05v\x81B.Q\x07\xb0\x80\xc7\r\x9f\xd0b\x9a\xa1\xf5\xf4\x19\xcc5\xfc\xd8\xf3\xad\x1dp\x0cE\xdb\x82\x1c\x8fy\xf4f+\xc1\x9a\x14\x8e\xdf\x03\xee\xff\xc9s\x03\xfcW;\xf8\xd9[\xe9\xba\xe7=\xb1apc13k4\xb9\xf6\x9f\x8e\x93\x9e\xcb{\xcc\xd6\x15\xb2\x88h\xc2\xe6\xecbx\x99\x9a]\xf3\xd8\x8dA\xba\x81A\x04\x822\xf2\x02Y\xb4v\x80\xc8\x01\x96*\xc8h\xde\xa6\x00\x8b6\xae\xb749s\xef\x03\xe4\xdf~(J\xcf\xb1G\xf3\xdc\x95\xe8\xb3\xb1*\x949\x05\xd5r>\x858\t\xb1\x0f\x1cg\xd5\xaeP6\x88\xab\x10\xb7\x0e\xf9\xc2\x91>^\xe7\xc7\xa8\xa8P6\xcc\xdc\xd8\xc3u\x06\x1b\x89\x1e\x0e$t\x88\x83\xd6n\x14\xa4\x9e\x01\xdah\x1e\xca\xa4\xd3\xd1=W\xa7\xb1)\x17\x16\x0fe\x02\xfc\x03\xe9\x0e5\xa1\xa4\xacQ\xeadUm\xb3\xa4\x1b\xa4c\xfcN\xa3\xe9=!\xd5\x89\x8b\xbe\xe2H\xb8\xe0\xe0w\xdc:\xa2\xdc\xa6[\xb9\x96\x17\x04\xc6\x0c\xf6\x9b\x9aU#R\xfeg\xdb\x82h\xe0x\'\x9d\xd7\x8e]\xeaA.\xde\x05\xd4d"\xdfc\x82`\xc3\n\x0c\x07\xa3F\x14\x817Y\xb3!H\xb5/k\x89\xe0s\xec$K\xb6\x06\x8a$\x04D\x99\xc3\x88*"\xa1\x9c\xa1w>\x9d\xfb#\x9d\x0e\xfc\x1aO\xab\xbf\r\x959C\x01\x80\x82\xb0a_8;J,\xfdv3M\xc8\'\x90"\xd6\xd9\xd2\xaa\xe9q\xc3\xc09\xa0\t\xaa\xd5\x08\xbb\x1f"\xe4}6=\xfd2p\x8f\x13L\x02\xe1\t\xc0\xeax\xe1\xc8\x05\x8c:|\x0b\xc4\x0b\x8d\r\xb4k\xe7~\xe5\xa7\xd5\xaf\xee\xd1\x8d\xbbY\xe2\xcd\x1d\x02\xa5F\xaf\x15`\xc9\xc0\x06+=\xa4\xc139\xad\x1e\x8fe#$\x08Y\x05w\x80Z\x0e\x14\x08\xc2\xda_\xa5\xd7)}$e\x93\x10q\x9fl\xf0\xa3\x9f\xce%\n\x12\x03_\xea\xc9\xbdjd\n`\xc7s\xed\xcc2\x0e\xb4\xe6\xbbP\x11kmz#D!,\x02\xb7OY\xe9\xa5\xe3\x16#\x17>\xa4\x90\xe82\xa3\xf7@\x05V\x10\x95\xb2)0\xec\xba}a"s\xc4\xa6T\x9a\x95\xe7\r\x07\x88\xaa\xe2\x14\xa6\xc4Q\xa4Z\x05\xf6\x83\x9b\xe1\xd0\x84\xb2Az\xbf\xe5\xe7\x0c\x1c\xeb$R\x11\x1ac\x8a\x92\xdd\x13\xc0\x01\xb5\xfa\xdbc\xb1z\xe0i\xf1\xd7\x81\x14\x93T\xd9\xf3\x86Q\x17bgNm T\xca\x06\xac\xfc&D\xd4fc\x1b\x8c\x14\xa2\x1cjP_\xd0\xa4\x16m\t\xa4\xdb\x8cbp\xafr\xa0\xe1qCH\xa0\xf6\x19P\x03\x06\xd9\xba\x88\xb8i\xcb0\x15\xd1\t\t\x08\x84\xef\xd8\xe5$\xda{*N\x94\xe8u{\xc3h\xf6:_1\x12\xeeQ\x93HD\xe0[\xd3]\x99\xc8\xe6\xb0\xe35w\xdb8\xe8O\xc5\xa5VI\x7fKq"\x91\xa6\x98v$\xa5W\xf5\x9eaD6\xe7\xda\x03`\xf0\xe6\xb4\x8e\xbe\x0bN\xda@\x9e\xaf\xd56\xda\xd4Q\x86~\x0b\xb0\xfc\xf3&<\x1dpr\xdeF\x7f\xd9\x18\xc8\xf4\x8f\xd3\xe9\xa0\x89A=\x86`\xf9)\xdf\xb7\xf7\x978\xba\xca\xa4\x13ml\xa0E\xd45\xa4K\xcc\x05\x86\x86f\x06n\x12\xc7\xd1y\xc51K$\x15\x10h\xc3yL]\xe9#R\x94F\xa3\xb1:\xa3\xa0\x86\xa4e\xd72\xb9\x8e\xa5\xb7\xa7w\x1ev\x81x\x8b\xfa\x06\x9e\xd3\xab\x86Q\xd2\xda\n\x8e\x14\xc5\xeb&}\xee\xd5\xc5\xe3$\xdf6\xb5ShL\x19\x13\xceb\xfa\xf5V\xc7i\x14H+/\x8dwR\xe9K\xf6\xa2E\xa1\xd9\x95\x9e[\xdb\xa5\xf9f\xa8R\xdc\xbc\x9b-F\xa8\xe69\xa0w\x82\xbf\x99S\x03d\xd34\x8f$*!\xf1@\x17{y\xa2s\x17\x07\xd9\xb0?\xdch\x9b\x00\xf7C\x06J\xcf\xa9\x95\xe8\xc6o\xf0\xde\x9c\x82z\x06G\xb5\xd2\x12@\xadR\xd6\x87\xc3\x1d\x8a\xc0\x89\xbd\x19\xb7\xd4]P$\xa0t\xaf\x1aF\x99\xac\xb3G\xbe\xa4\x01\xa5~x\x05\x17\x19\x95\xd9\xb1iH\x81\x80\xe2(\x80.\x9e\xf9R\xc8\x073\x0c\xef\xa7J-\x90\\\xd0\xd9L\xc9\xac\x16hk*\xad@\x1e\xb16\xe5\x14\x14\xd7K\x13\xcdv\x85\x97(\xd4\x9d\x86q\xa4e\xdb\x83)*\xa9\xa2K_\x08\x03\xde\x8ecY\x8b\xb6\x04\xd1\x98\xc5\x1er\xc6l>\xf3)\xb4\x08p\xdfL\xe6l\x00\x15h\t\xa8Ug\x88\x9c\x00\x19\xf9LAz\x1c\x95\x99*r\xc1\\\xf4\xd1\x8b\xe8P\x7f\x1d\xa4\xb7a\xaakh8\xa0?A\xa6\xc7\x01:\xa4Be1\x10\x0ea\x1cx\xa7\xb5g\x01\xcc\xaa\xe9\xfcL4\xb9\xb0\xa10\x86Z\x15^\xbd;T\x90\xa41\xe7\xc2\xbap2\x08]\xd7\xbe&\x9at\xea\xda\xf5\xcaD\x17\xaek~\x8cd\x93)\x99\x1d\xadU\x0b.z\xdd0\x18I\x195\xbat\x86\xa2\xba|{\x10\xe7\xd8\x1a\x8b#\x0e\x9e\x1f\xc9\xfc\x03\x06}\x9b\xa3E\x179l\xa8C\xe7\x13%\xd2z\xda00v|j%\xadg\xb4\xa8\xdeH@\xec\xfd\xa7\xe2)\x97=\xdb\xd8;\x91.\x81H?Z\xe5\xad#\xda8-\x04GzovG\x87\x15\x91\x04c\xacg\xc0s\x8c\t\xf5\x03\xe6K\x85Ln\xd5\x0e\xf6\x97\x18\x06\r)\xc50\x88\x1a\xf4r\x0c{*\x96\xb4\x08bR\xaa\xe8K\xf6\xd6\x17\xc7t\xa2\x18\xa0\xbe\x80\x88\x92\x1e5\x8c8\x03\xd7\x19\xa4\xdcI\xcb;!?\xa2\x05\xf2\x11\xea\x84\xc6\xc4\xfb\xc0\xbb\xb0\xde\x07\xfe\x05t\xfe\xcft:|1\x91\x0e\x9c\x89\x17E\x03\xfd!\xf4\xa0 \xf3Ce\x8eJ\xac\x90}h\xd1:\x96z\r\x7fI\x8d\x81\x17\xa1\x90*^\x07rg\r\xaaA=qc\xef\xc2\xfd\xcf\xe8\xa0\xb0\x03m;\x14%\x1b\xd2S\xc6\xc1\xdc2\xf3jE\xefS\xd2\x18\x9c`\xe4BwAv\xc6j\x8bz\xbd\x98KCS\xab\x14q\xe5\x14\x11P$\xd4\x0f\x18\x1c\xbd%\xfcW9\xa0\xd1\xadF\x99\xb5\xa2\x1f<\x0b\xa7,mU2\xf7\x08\xce\xbf\xd6\x9c\xcb\xeah\x98\xb5\xd1\xe4\xe5\xfa\xc7v\x07sJ3\x84\xe0\xd6\xae\x0bF)\xadl\x94\x14\x03\x90\xa1\xbc\x03\x9dV\x1c\xa3Bg\xd5\xdc{z\xea\xb0\xa2\xd5\x86\xa9g&\x0e\xf4d\xc9B\x9d\x18\x02\xbe1\xb5\xf3\x94\xc9f.\xe4\x86_\x00<\xc9\xbb\xd7194\xec\xb1w\xf7k\x81\x8e\xc8n\xa1\xb0\xb82\x89\xc0\xb7\xb4Q\x89\x9a8\x91\xd3\x19\xa0\xf7\xe3\x8c\xd2\x93\xc3ju\x19\xc5\x18\xca\xb1\xb9f\x94\x107^,X\xb6\xd2\\\xc3\xd7\x02 \x93\xd6n"j\xcd\x96\x1f\xa3\xba\xb4g\xe3\x99E[\xfbL\xdc\x87V0`.\x14q\xcc\x15\x02(\xd4^\xbb\x03\x91\xd2\xebohh\xfbK[\x03V\x19\x06$\xea\xf8\x95\x14f\xc7>\xf4\x87k\xb6\xb0hC\xc2\xa5\xd1\xd6\x16\xb0\xe4~Z\x1e\x00\xa8\x0b\r\x0c\'%\xad\x1dP\x89A\xf0\xd4\x86\xc1\xa7"\xc1Q\xa5\x16\x1b\x06$\x12\xcf\xc1w+h\xd4\xa1\r\rX\x8c\xf3\xd7\xa8Y\xcfr\x04\x82\xf9\xff\xc6\x86B\x8f\xff\xef\xf8\xa0\xca*\xc3\xa41w\xc0B\xfa\x8fu\x12\xad\xe7\xdc\xed4\x91\xfd\x95\x83}\x80\xaf\xf8P\x07\xb29\x8e\xe9\xe8\x8e\xfb\xd8\xde\x15\xee\xd1\x9dt\x83\xcdT\x94h\xa5(O\xf8\xcc\x83\x02"K\xcd\xeavh\x07t\xf4\xe4[\x05\r\xe1\xd4\xe6\x1aFx\xc3\xe6=\xd0\x9e\xb0t\x92\xe3\xb9P\x93\xf1\x15BtRe\x8f\x1f\xe6\xe8U\xc3\x00q\xe0\x84\xe1\xf8\xa5\x9e\xbaO\xd9\x80\xd9\x0f\x9eM\x90~\x8cGP\x91D\xc9\xf1\xab)b\xb4>*Ew\xc1\xe6@\n\x8d-\xeb\x16ZBsi\xc8\'\x9d\x9fF\xe0\xc8\xee\xc6\x03\x11B\xf8\x8c\xcd\x15\x07 @Pa\x08\x08\x84\x13\x198\xa0\x15\x80\x93\x95Ps!\xf9\x0c\xe1H\xc1\xe7z7\xb8\x8e\xa0m\xf14\x8c\'6\x0c \xa0\x9bo\xbe\x1cvPR\x94\xf2\x11\x0f\x0c\x04U\x17\xc5\x12\x02`\x1f\xb5\xf8\xb7\xc2G\xa0.P\x95\xb5\xd1RQ\xd5$\xe4T}\xea\x12\x1b\r]\x0b\x82d\x17\x89\x87\xe1\xe8\x83\x80BQ\x8dq\xe6\xab\x8f\xb6\x19\x87\xfa\x01\x99\x07\xad\xe7C\x17\x93\xe4SC\xdc\xff4}j\xf8\xc4\x86A\xe1G\xde\x05t\x9c\xb5\xc6G>{\x1b8\xceY\x16\xacD\x86.\xcdhQ\xcdl\xce\xd7 TH)\xea|\rl\xdf\xd1\xad4\r/\x95\xbf\xc3!\xf0\x19\x9dZ\xd4\x84z\xbc\x8fS#N\xaa\x18\xdbT\xfc\rQ\x8c\xb4\x8b\xc3\x19\xe39\xe5\xe1\xe8\xd0\xc6\xef\xc3\xe9\x92}\x06E\xb0A*\xab[\xe8i\x1cV\xd5\x18\x10,H\xe4(\xfc[\x0eFq\xa4\xf8\xd0[3:I\x1f"\x08r\t\x8e5\xed>\x11+\x1f\xc8\xb6\x18\x902\x1c\x14\x04\x12B\n\xaa\xaem\xee\xd2\x97W\xa06N\xda\xa0^\x1d\xbb\x92\xa4;\xc9\x08\xcf\xc7\x91\xd9\xaf\x0fF\xcaq*S,\xbc\x86\xa3\xe0!G\xcca\x8e\x8a\x93\xd7R$\xc5\xe6\x16\xd5\xd3?at\x8b\xf9C\xd2\x8eO\xad\x96\xef)\xf1i\x06\x0eL\x031m;\x14M\xa7\xae\xa7\xc8\xb9\xab\xca\x9af\xa3\x1b\x87O\xab\xf15\x19$|\xcf\xa0B\x89\xc2\x1a\xed\xe1\x08\x18\tFi\xe6\x08C\xa4\xcdY\xef\'mWE\x16A\x8d\x81\xc1!\xa3\x9b;\xd3\x85(\xc3\x91X\xb4\x1eP\xc8[\xdb4\xff\x98O\xd6\xff\x0f\x10\xca\x07\x8d\x94e\xfc\xe8\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 14:56:42,673 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 06:56:42 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=a1zpbq46sueeswkqbl8sfdmn;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 14:56:42,674 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 14:56:42,674 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 14:56:42,674 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 14:56:42,674 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 14:56:42,674 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,675 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,675 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 14:56:42,675 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 14:56:42,676 test_case_step.py[line: 145] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:56:42,676 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813802', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'消息': 'FAILURE#请求验证码识别', '模式': '200'}]", '', '成功', '', '2018-02-05 14:56:42')
2018-02-05 14:56:42,736 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:56:42,736 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:56:42,736 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813802', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 14:56:42', '0天 0小时 0分 0秒')
2018-02-05 14:56:42,794 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 14:56:42,794 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 14:56:42,795 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 14:56:42,803 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:56:42,803 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 14:56:42,803 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:56:42,804 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:56:42,804 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 14:56:42,804 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:56:42,804 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,804 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,805 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 14:56:42,805 test_case_step.py[line: 100] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 14:56:42,805 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,806 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,806 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 14:56:42,806 test_case_step.py[line: 104] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 14:56:42,807 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,807 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,807 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 14:56:42,807 test_case_step.py[line: 108] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 14:56:42,808 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,808 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,808 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 14:56:42,809 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 14:56:42,809 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 14:56:42,809 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 14:56:42,809 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Cache-Control', 'no-cache'), ('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 14:56:42,848 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 14:56:42,852 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 14:56:42,852 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 06:56:42 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 06:56:42 GMT')]
2018-02-05 14:56:42,852 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 14:56:42,853 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 14:56:42,853 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 14:56:42,853 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 14:56:42,853 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,854 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,854 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 14:56:42,854 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 14:56:42,855 test_case_step.py[line: 145] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:56:42,855 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813802', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "OrderedDict([('Cache-Control', 'no-cache'), ('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'消息\': \'FAILURE#灯塔用户登录失败\', \'模式\': \'"result":200\'}]', '', '成功', '', '2018-02-05 14:56:42')
2018-02-05 14:56:42,917 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:56:42,917 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:56:42,917 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813802', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 14:56:42', '0天 0小时 0分 0秒')
2018-02-05 14:56:42,977 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 14:56:42,978 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 14:56:42,978 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 14:56:42,986 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:56:42,986 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 14:56:42,986 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:56:42,987 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:56:42,987 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 14:56:42,987 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:56:42,987 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,987 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,988 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 14:56:42,988 test_case_step.py[line: 104] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 14:56:42,988 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,988 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,988 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 14:56:42,989 test_case_step.py[line: 108] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 14:56:42,989 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:42,990 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:42,990 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 14:56:42,990 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 14:56:42,991 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 14:56:42,991 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 14:56:42,991 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 14:56:43,007 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 14:56:43,009 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 14:56:43,009 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 06:56:42 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 14:56:43,009 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 14:56:43,010 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 14:56:43,010 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-05 14:56:43,010 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 14:56:43,010 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 14:56:43,011 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 14:56:43,011 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 14:56:43,011 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:43,011 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:43,011 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 14:56:43,012 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 14:56:43,012 test_case_step.py[line: 145] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:56:43,013 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813802', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'消息\': \'FAILURE#不符合断言时返回的消息\', \'模式\': \'"qq"(.+?)"\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 14:56:42')
2018-02-05 14:56:43,076 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 14:56:43,076 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:56:43,076 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:56:43,076 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 14:56:43,077 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:56:43,077 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:43,077 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:43,077 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 14:56:43,078 test_case_step.py[line: 104] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 14:56:43,078 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:43,078 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:43,078 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 14:56:43,078 test_case_step.py[line: 108] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 14:56:43,078 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:43,079 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 14:56:43,079 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 14:56:43,079 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 14:56:43,079 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 14:56:43,080 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 14:56:43,080 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 14:56:43,097 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 14:56:43,097 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 14:56:43,097 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 06:56:43 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 14:56:43,097 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 14:56:43,098 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 14:56:43,098 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 14:56:43,098 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 14:56:43,098 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 14:56:43,098 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-05 14:56:43,099 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 14:56:43,099 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 14:56:43,099 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 14:56:43,099 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 14:56:43,099 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-05 14:56:43,100 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 14:56:43,100 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 14:56:43,100 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 14:56:43,100 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 14:56:43,100 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 14:56:43,101 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 14:56:43,101 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 14:56:43,101 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 14:56:43,101 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 14:56:43,102 test_case_step.py[line: 145] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:56:43,102 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813802', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'消息': 'FAILURE#用户名不为dataviewer', '模式': {'userName': 'dataviewer'}}]", "{'dic': {'atten': {'atten': 'value'}, 'userName': {'userName': 'value'}}}", '成功', '', '2018-02-05 14:56:43')
2018-02-05 14:56:43,170 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:56:43,171 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:56:43,171 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813802', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 14:56:42', '0天 0小时 0分 0秒')
2018-02-05 14:56:43,235 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 14:56:43,235 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 14:56:43,236 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 14:56:43,244 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:56:43,245 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 14:56:43,245 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:56:43,245 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:56:43,246 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 14:56:43,246 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:56:43,246 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:56:43,246 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 14:56:43,247 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：
2018-02-05 14:56:43,247 test_case_step.py[line: 141] ERROR: Expecting value: line 1 column 1 (char 0)
2018-02-05 14:56:43,247 test_case_step.py[line: 145] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:56:43,248 test_case.py[line: 95] ERROR: local variable 'request_headers' referenced before assignment
2018-02-05 14:56:43,248 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:56:43,248 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:56:43,248 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813802', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '阻塞', "local variable 'request_headers' referenced before assignment", '2018-02-05 14:56:43', '0天 0小时 0分 0秒')
2018-02-05 14:56:43,311 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 14:56:43,312 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 14:56:43,313 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517813802', 1)
2018-02-05 14:56:43,313 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517813802 AND plan_id=1
2018-02-05 14:56:43,320 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 14:56:43,321 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517813802', 1)
2018-02-05 14:56:43,321 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517813802 AND plan_id=1
2018-02-05 14:56:43,328 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 14:56:43,329 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517813802', 1)
2018-02-05 14:56:43,329 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517813802 AND plan_id=1
2018-02-05 14:56:43,336 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 14:56:43', time_took='0天 0小时 0分 0秒', case_total_num=4, case_pass_num=3, case_fail_num=0, case_block_num=1 WHERE execution_num='1517813802' AND plan_id=1
2018-02-05 14:56:43,403 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 14:56:43,404 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 14:56:43,404 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 14:56:43,404 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 14:56:43,405 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 14:59:31,989 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 14:59:31,990 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 14:59:31,990 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 14:59:31,990 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 14:59:31,990 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 14:59:31,991 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 14:59:31,991 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 14:59:31,997 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 14:59:31,998 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 14:59:31,998 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 14:59:31,998 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 14:59:31,998 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 14:59:32,004 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 14:59:32,004 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 14:59:32,025 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 14:59:32,026 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 14:59:32,032 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 14:59:32,032 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 14:59:32,033 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 14:59:32,033 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 14:59:32,038 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 14:59:32,039 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 14:59:32,039 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 14:59:32,045 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 14:59:32,046 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517813972', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 14:59:32', '', '', 0, 0, 0, 0)
2018-02-05 14:59:32,104 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 14:59:32,104 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 14:59:32,105 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 14:59:32,113 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:59:32,113 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 14:59:32,113 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:59:32,113 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:59:32,114 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 14:59:32,114 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:59:32,114 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 14:59:32,115 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,115 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 14:59:32,115 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 14:59:32,115 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 14:59:32,116 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 14:59:32,116 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,116 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 14:59:32,117 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 14:59:32,117 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 14:59:32,117 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,118 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,118 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 14:59:32,118 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 14:59:32,119 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 14:59:32,119 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 14:59:32,212 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 14:59:32,213 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11)IDATx\xda\xd5[\x07{T\xd5\x16\xcd\xdf\x10,\x08\xf8T\x9e\xfa,\xe8C\x04\xe95 UA:\x82R\xa4\tAx\x14\x11)"*\x1d\x01\x91^\x04\x04S!\x01\xd2{\xef\xbd\xf7\xde{\x1b\xf6\xdbkg\xee\xe4\xcedf\x18&\x89\xe2\xf9\xbe\xfb\xc9\x17\xe7\xde{\xce\xd9m\xad\xb5\xcf\xb5!3c\xc7\xd1\x18\x9a\xb8\xcc\x93\x86\xcd{H\xef\xcct\xa3\xd7\xa6\xdc\xa5\x7fMp\xa6~\xa3\x1d\xe9\xb9\x11\x0e\xd4g\xb8==3\xac\xf3z\xf6C{za\x94\x03\r\x1c\xe7D\xff\xb6u\xa1%[\x83(!\xad\x9a\x1e=z\xa4\xf7\xdc\xf8\xb4*\xfa\xe9|\x12]\xfc3\x83\xee\xf9\x14PDB\x05\x15\x944t\xf9\xdd\xd3<\xca*\x9b)$\xa6\x9c.\xd9g\xd2\xba=\xe14j\xa1;\r\x9a|\xb7\xcb\x9e\xbc4\xde\x99\xa6\xad\xf6\xe1\xf5&RrF555\xb7Y\xb4N\x1bs\xffs\'\x1bf\xf0,7z{\x86\xab\\Oj\x98\x85\x9b\x03)*\xb1\x92\xda\xdb\xf5\'\x92\xc8\x13<r9\x99.\xdc\xc9\xa0\xbb\xde\x05\x14\x1e_A\xf9\xc5\r\xa4\xd1<\xbd\x86ik\xd3PEU3;Z\x159z\xe4\xd1\xaec\xb14{\xad\x1f\xfd\xf7\xe3\xfb4`\xac\x93\xac\xff\xf9\x91\x0e\xf4\x9fi\xf7h\xeaJo\xda\xf4C$]u\xca\xa4\xc0\xc82J\xc9\xac\xa1\xa2\xb2Fjlj\x935v\xdb0\xe7y\xe3^\x9fzO\xb7\xf10\xc6\x0b\xfcrL\x00F0g\x98A\x93]h\xceW\xfe\xe4\x1bVB\xcd-\xedz\xcfM\xcb\xa9\xa1\xd37\xd2\xe8\xdc\xedtr\xf6\xcc\xa7\x90\xd8r\xca)\xac\xa7V^\xfc\xd38\xb0\x91\x88j\xcc\xf9\xf3\x1d\xc14x\xa6\xab\xacU\xbdv\xec\xc9,6\xd4\x0fg\x13\xc8\xcd\xb7\x902\xf3\xea$:\xac\x1df\r\xe3\x17^B\x138\x95\xa9\'`\xeeR\x0c\x03\x0fz\x95\r\x83\x10vp\xcf\xa3\x9a\xbaV\xbd\xe7\xe6\xb2\x11\xae\xb07\xfdz3\x8d\xec\x1f\xe6Q`T\x99,\xa4\xb1\xb9\xfd\xa91DEu3\x85\xb2\xc3\\r\xc8\xa4\x8d\xdfG\xd0\xf4/}8:\xdc\xc4\xe9\xfa\xf0Z_\x1c\xe3H\xef\xcfy@\x8b\xb7\x04\xd1Q\x8e~8`JV\r\x95V4Id\xb4[\x18\x19V\x19&\xbb\xa0\x9e\xd6\xed\r\xa7\xbe\xda\xc8@z\x9a\xce\x9bm\xfb\x85\xb7\xa44s\x06z\x91\xd3\xdd\xa8E\xeet\xfa\xf74*)o\xd2{nie\x139y\xe6\xd1\xc9k\xa9\xf4\x87k\x0e\xf9h\x17eh\xc0\xbfk`c=\x83\x8b$:\xde\xe5Tn\xb8\xbe\x97\xd88\x8b\xbe\x0e\xe4\xb5\xa5J\x9d\xa9d#\xf6\xf40k\x98\xfa\xc6V\xba\xe6\x94E\xcf\x8e\xe8\x98\xd0\xcb\x13\x9dh\xc3\xbe0\x8aL\xa8$\xef\x90b\xba\xcc\xde\xb4\xf3H\x0c\xcd\xe5\x94\xf5\x1e\xe7Z\xc3\x05\xbc:\xc9\x85\xb6\x1f\x8e\xa6\xbc\xa2z\xbd\xe7b!7]\xb3i\xeb\xcf\xd1t\xfcJ2GM.\x85\xc6\x95Sai\xa3.\x07\xab\xaf\xde\x88\x08\\\xa6\xf2=\xeaIx|9\x8d[\xea\xa1\x97\xae_\x9d\xe4L\xcb\xb6\x05\x93Oh\te\xe4\xd6ReM\x0b\xb5\xb4jze\x8e6\x8f\xfbAvA\x9d\xa4%er3\xd7\xf8R]}\xabL\xa6\xbe\xa1\x95\xf2\n\x1b(&\xb9\x92\xdc\x03\x8b\xc4\x88\xbbO\xc41\x1a\x0b\xe6Ey\xd2\x9b\\\x087\xec\x8f\x90\xd4\xd5nP\xd8\xf7\x9d\x8a\xa3wf\xb8\xd1\x07\x9f>\xa0)\\,\x17o\r$\xbb\x83\x91t\xe4b2\xddb\xa3\x05D\x94Rfn\x9dx/ru\x13\xa7\xb9\xf6v\xeb6\x01\xf7\xb5\xf1\xd5\xae\xd1\x881\x1a\x1a\xdb\x04-&eVSmC\x8bI\xd0\xb1\xebX\x0c\xf5\x1f\xeb\xa8[;2\xc6\xb2mA\x94\xcc\xd1\x8dg\xf6\xe6x\xaca\xeax\xf3\xd7\xee\t\xd3y\xce\x87\xf3\x1f\x8a\x11\x14\xcf\xc3\xa20\xc9\xe6\x966NE-\xe2IAQ\xa5t\xe7~\x0e\x1d\xe6MF\x1dI\xce\xa8\x91\x8dQ\x8f\xc3\x17\x92\x04\xe5\xa9#l\x00o\xc2\xbb\xb3\xddh\xd2rOZ`\x17 it\xcf/qt\xf6V\x1a\xd7\xaa\\J\xd2\xc2M\xf5hmmg\x0fo\x97\xb9\xc0x@NE\x1cy@y\x05|\x153\x1aJfT\x84zy\x8b\xd3\xe6!~/j\xc6\xbc\x8d\x01\x82:Cb\xca$3\x18\x1bA\xd1e4g\x83\x9fn\xed\xfdF;\xd0\x88\x05\x0f\xe9\xe7\x0b\x89\x94\x99_\xfb\xf7\x1a\x06^\xe6\x15R\xa4Jg.\x02\x15M\xa5\x08\x18\xa0\x917\xaf\xaa\xb6\x85\nK\x1a)+\xbf\x8e\xca\xab\x9a\xbaxz0o\x08\n\xe8\xe3\xc0\xc4\x1bS\xef\x8a3L[\xe5-\x1b\x99SX\xa7\xf7\x9c*N\'\x00\x18\xbf\\O\xa537R\x199\xa5\xd2\x89+)\xf4\xe3\xb9D\xfa\x86=~=s\x0cD\xf0\xf4/}i8?\xe7\x95I\x9d\xd1\xff\x0eS\x8037Sy\x9e\r&Ry\x1b\xdd\xf7+\xa4\xf7?\xb9\xaf3\x0e\x9cg\xda*\x1fA\xac\xc8\x1c\x86\xe9\xd1X\xb4\xc2aZ\xd8\x81\x9e\x84\x0e\xd8X\xf2#\xe4\\x\x8a\xb2 \x00\x80\x02\xdetK\x87\xc6\xc8\xa4Q\xe8A\\;\x0c\xc00|\x94#\xf5\xfd\xd0<\xea\x03\x89\x0b\x8c,\x95(Q\x8fM\x07"\xe8\x83\xb9\x0fh\xe8\xdc\xfb4\x8cS\xe3PFK \xc40\x82!\xa4W\xc3\xdbW&:\xd3\x8e#\xd1\x92\x8a[[\x8d\xa7&8\xda\xcfL\x86_\xb3\xed4(\x9e;\x83Q\x9a\x8bW\xbe\xa4se\x8d\xa8\x9d\x89\x9c"\x01\x1c\xc0u\x90Y\xfc9R]}\xf3\xf9\xdf\x85\x14\xceu\x14D\xba\xcd\x02Z`ci\xb1\xbcp\']\xb7qC\xd8\x83.;fv+T\xf3\x8a\x1ah\xe7\xe1\x18\xedB\x9di\xde&\x7f\xfa\x8aS\x0c\xbc\xf1u\x8e\x12@R\xb9\x86w\xf2%\xd4\xa3k\x0c\xb3\r\xd3\x19\xe6\xf2\xdc\x08\xcb =\x10&j\xc5\'\xeb\xfd\xe8\xbb\x93q\x12\x11%\xe5\x8d\xcc\xa1LC\xf5\x0c\xaeu\x88\xd6\x7fMp\xd2=\xe7\xb5).\xb4|{0\xdd\xf3\xce\xa7j\xce\x0e\xa8\xc5\x97\xed3$\xfd\x82&\x0c\x9ds_\xd0\x9b\xb2> T\xbc\xd3\x8e\x89\xe7u\x97,\xe1m\xdd6\x8cx\x04\xa7\xb4\x01\xdaB\x88\xc5}\xb13\xa4\xdb\x84\xf0\xc8\xa5$\x1dQE\x1dCA\x06wp\x0f,f\xf2\x99A\xdf\x1c\x8d\x15Yg\xfcg\x9e\x92\xd2P\x93N^M\xe9Rx\x9b\x18 \xf4\xd7\xa6E<\x0b<\np\x1e\x9c\x03\xbcj\x08G\xd0\xa7\\Sv0\x82\x84\x84\x82z\x03Y\x08u\xa8\xae\xc12\x88\x8eh\x00"{~d\xa7\x91\x07M\xc6\x86?\xa4\xd1\x8b=\xba\x18_q&8\xb3:\x13\x80F\x00\x14\xcd\xd9\xe0O\x91\xf1\x15&\xd3\x9b\xc5\x86A\x81=\xf8[\xa2\xbc\x14\xa9g\xf2\xe7^\xecm\x05\xdd2\xcc\xcd{\xd9L\xd2\xeeK\x1a\x83\xa1c\x92\xab\xe4\xefP\n\xca\x98\xeb\xc0S\x91f\x82\x98\x80BS\xbbh\x0f\t\'_<\\\x8f\x171\xa9\xdb\xcc\x88\x0e\x11\x86g\x01<\xec>\x1e\'\x92\xcf\x03\xff"\n\x8e.\xa7\xc4\xf4\x1a6D#\xa7\x1e\xeb\xd9x\x18\xa7\xa2\xa5\xff\x0b\xd2mz\x9f\xe1\xf6:\xc7\xea+\xf5\xf0\x1e\x8d]\xe2A3\xd6\xf8\xd0\xac\xb5\xbeR\x17\xa7\xaf\xf6\xa6)+\xbc%\xc5\xaa\xb9\x1fT\x14D\xd5u\xe7L\xa3\xb5\xc9b\xc3<\xd2\xe6P%e\xa0po\xf9)R\n\xbd\xc6J\x96\x0b\x0e\x800\x97\xf4\xc8\x93\x8ce#\x98z7\x90S\x19\x1b\xa0\x807\xb7\xa1\xa9\xcd \x9a\x1f\xd1m\xb7l1\x0c\x9e5f\x89;?\xabJ\xeaXO\xeaoxV6\x83\x19l\xb4\xbavA\x1f\x9b\xcf(\xf2\xfb3\t\x1d\x9c\x8c\xa3\x1e\xe8\x14(\xb5\xa2\xbaI\x9c\x0b\x0e\xb5\xfft\xbc^\xad\x16\xa4\xc7\x8e\x84zd\xb5a0j\x19\x85\xec<\x1a\xad\x9b\xd4\x1b\x1f\xddeO\x8d\x10\xb2YT\xfa\xe4\xea0"\x03y\x1e\x1b\x8a\xf0\xbe\xee\x9ce5Y\xf3\x0f/\x95\xdc.hk\xa6+]\xe1\xbac\xa8\xd1\xf5\x94q\xb0^\xa45h\x81G/%S\x18\x1b\x02F\xc0\x05\x8e\xd4f\x84o\xa1\xe0C\x01\xf1`@\xb0`s\x80\x9eq\xc6,v\'W\x9f\x02\xeb\r\x83I%\xa6W\xeb\tx\xc8\xe3\xa8\x01k\xbf\x0b\xa3\xdf\xb9\xa8\xa5d\xd6\n)\xb4d\x83Q+|\x99E+E~\xbe\x9d\xbf\xd5\x1b\x86z\x87\xc2\xab\xa4\x98\x8f\xd7\xfbRKK\xefho\xa0\x10(\xf6P\x00 \xff\xb7YXk\xb1\'\x80\xcd9|\xef\xe4/\xbc\xf4\x8c\x03@e\xb5a0@\xe0\x0e\x9eM\x14\x83\x18"\x1e\x14\xb6\x05v\x81B.Q\x07\xb0\x80\xc7\r\x9f\xd0b\x9a\xa1\xf5\xf4\x19\xcc5\xfc\xd8\xf3\xad\x1dp\x0cE\xdb\x82\x1c\x8fy\xf4f+\xc1\x9a\x14\x8e\xdf\x03\xee\xff\xc9s\x03\xfcW;\xf8\xd9[\xe9\xba\xe7=\xb1apc13k4\xb9\xf6\x9f\x8e\x93\x9e\xcb{\xcc\xd6\x15\xb2\x88h\xc2\xe6\xecbx\x99\x9a]\xf3\xd8\x8dA\xba\x81A\x04\x822\xf2\x02Y\xb4v\x80\xc8\x01\x96*\xc8h\xde\xa6\x00\x8b6\xae\xb749s\xef\x03\xe4\xdf~(J\xcf\xb1G\xf3\xdc\x95\xe8\xb3\xb1*\x949\x05\xd5r>\x858\t\xb1\x0f\x1cg\xd5\xaeP6\x88\xab\x10\xb7\x0e\xf9\xc2\x91>^\xe7\xc7\xa8\xa8P6\xcc\xdc\xd8\xc3u\x06\x1b\x89\x1e\x0e$t\x88\x83\xd6n\x14\xa4\x9e\x01\xdah\x1e\xca\xa4\xd3\xd1=W\xa7\xb1)\x17\x16\x0fe\x02\xfc\x03\xe9\x0e5\xa1\xa4\xacQ\xeadUm\xb3\xa4\x1b\xa4c\xfcN\xa3\xe9=!\xd5\x89\x8b\xbe\xe2H\xb8\xe0\xe0w\xdc:\xa2\xdc\xa6[\xb9\x96\x17\x04\xc6\x0c\xf6\x9b\x9aU#R\xfeg\xdb\x82h\xe0x\'\x9d\xd7\x8e]\xeaA.\xde\x05\xd4d"\xdfc\x82`\xc3\n\x0c\x07\xa3F\x14\x817Y\xb3!H\xb5/k\x89\xe0s\xec$K\xb6\x06\x8a$\x04D\x99\xc3\x88*"\xa1\x9c\xa1w>\x9d\xfb#\x9d\x0e\xfc\x1aO\xab\xbf\r\x959C\x01\x80\x82\xb0a_8;J,\xfdv3M\xc8\'\x90"\xd6\xd9\xd2\xaa\xe9q\xc3\xc09\xa0\t\xaa\xd5\x08\xbb\x1f"\xe4}6=\xfd2p\x8f\x13L\x02\xe1\t\xc0\xeax\xe1\xc8\x05\x8c:|\x0b\xc4\x0b\x8d\r\xb4k\xe7~\xe5\xa7\xd5\xaf\xee\xd1\x8d\xbbY\xe2\xcd\x1d\x02\xa5F\xaf\x15`\xc9\xc0\x06+=\xa4\xc139\xad\x1e\x8fe#$\x08Y\x05w\x80Z\x0e\x14\x08\xc2\xda_\xa5\xd7)}$e\x93\x10q\x9fl\xf0\xa3\x9f\xce%\n\x12\x03_\xea\xc9\xbdjd\n`\xc7s\xed\xcc2\x0e\xb4\xe6\xbbP\x11kmz#D!,\x02\xb7OY\xe9\xa5\xe3\x16#\x17>\xa4\x90\xe82\xa3\xf7@\x05V\x10\x95\xb2)0\xec\xba}a"s\xc4\xa6T\x9a\x95\xe7\r\x07\x88\xaa\xe2\x14\xa6\xc4Q\xa4Z\x05\xf6\x83\x9b\xe1\xd0\x84\xb2Az\xbf\xe5\xe7\x0c\x1c\xeb$R\x11\x1ac\x8a\x92\xdd\x13\xc0\x01\xb5\xfa\xdbc\xb1z\xe0i\xf1\xd7\x81\x14\x93T\xd9\xf3\x86Q\x17bgNm T\xca\x06\xac\xfc&D\xd4fc\x1b\x8c\x14\xa2\x1cjP_\xd0\xa4\x16m\t\xa4\xdb\x8cbp\xafr\xa0\xe1qCH\xa0\xf6\x19P\x03\x06\xd9\xba\x88\xb8i\xcb0\x15\xd1\t\t\x08\x84\xef\xd8\xe5$\xda{*N\x94\xe8u{\xc3h\xf6:_1\x12\xeeQ\x93HD\xe0[\xd3]\x99\xc8\xe6\xb0\xe35w\xdb8\xe8O\xc5\xa5VI\x7fKq"\x91\xa6\x98v$\xa5W\xf5\x9eaD6\xe7\xda\x03`\xf0\xe6\xb4\x8e\xbe\x0bN\xda@\x9e\xaf\xd56\xda\xd4Q\x86~\x0b\xb0\xfc\xf3&<\x1dpr\xdeF\x7f\xd9\x18\xc8\xf4\x8f\xd3\xe9\xa0\x89A=\x86`\xf9)\xdf\xb7\xf7\x978\xba\xca\xa4\x13ml\xa0E\xd45\xa4K\xcc\x05\x86\x86f\x06n\x12\xc7\xd1y\xc51K$\x15\x10h\xc3yL]\xe9#R\x94F\xa3\xb1:\xa3\xa0\x86\xa4e\xd72\xb9\x8e\xa5\xb7\xa7w\x1ev\x81x\x8b\xfa\x06\x9e\xd3\xab\x86Q\xd2\xda\n\x8e\x14\xc5\xeb&}\xee\xd5\xc5\xe3$\xdf6\xb5ShL\x19\x13\xceb\xfa\xf5V\xc7i\x14H+/\x8dwR\xe9K\xf6\xa2E\xa1\xd9\x95\x9e[\xdb\xa5\xf9f\xa8R\xdc\xbc\x9b-F\xa8\xe69\xa0w\x82\xbf\x99S\x03d\xd34\x8f$*!\xf1@\x17{y\xa2s\x17\x07\xd9\xb0?\xdch\x9b\x00\xf7C\x06J\xcf\xa9\x95\xe8\xc6o\xf0\xde\x9c\x82z\x06G\xb5\xd2\x12@\xadR\xd6\x87\xc3\x1d\x8a\xc0\x89\xbd\x19\xb7\xd4]P$\xa0t\xaf\x1aF\x99\xac\xb3G\xbe\xa4\x01\xa5~x\x05\x17\x19\x95\xd9\xb1iH\x81\x80\xe2(\x80.\x9e\xf9R\xc8\x073\x0c\xef\xa7J-\x90\\\xd0\xd9L\xc9\xac\x16hk*\xad@\x1e\xb16\xe5\x14\x14\xd7K\x13\xcdv\x85\x97(\xd4\x9d\x86q\xa4e\xdb\x83)*\xa9\xa2K_\x08\x03\xde\x8ecY\x8b\xb6\x04\xd1\x98\xc5\x1er\xc6l>\xf3)\xb4\x08p\xdfL\xe6l\x00\x15h\t\xa8Ug\x88\x9c\x00\x19\xf9LAz\x1c\x95\x99*r\xc1\\\xf4\xd1\x8b\xe8P\x7f\x1d\xa4\xb7a\xaakh8\xa0?A\xa6\xc7\x01:\xa4Be1\x10\x0ea\x1cx\xa7\xb5g\x01\xcc\xaa\xe9\xfcL4\xb9\xb0\xa10\x86Z\x15^\xbd;T\x90\xa41\xe7\xc2\xbap2\x08]\xd7\xbe&\x9at\xea\xda\xf5\xcaD\x17\xaek~\x8cd\x93)\x99\x1d\xadU\x0b.z\xdd0\x18I\x195\xbat\x86\xa2\xba|{\x10\xe7\xd8\x1a\x8b#\x0e\x9e\x1f\xc9\xfc\x03\x06}\x9b\xa3E\x179l\xa8C\xe7\x13%\xd2z\xda00v|j%\xadg\xb4\xa8\xdeH@\xec\xfd\xa7\xe2)\x97=\xdb\xd8;\x91.\x81H?Z\xe5\xad#\xda8-\x04GzovG\x87\x15\x91\x04c\xacg\xc0s\x8c\t\xf5\x03\xe6K\x85Ln\xd5\x0e\xf6\x97\x18\x06\r)\xc50\x88\x1a\xf4r\x0c{*\x96\xb4\x08bR\xaa\xe8K\xf6\xd6\x17\xc7t\xa2\x18\xa0\xbe\x80\x88\x92\x1e5\x8c8\x03\xd7\x19\xa4\xdcI\xcb;!?\xa2\x05\xf2\x11\xea\x84\xc6\xc4\xfb\xc0\xbb\xb0\xde\x07\xfe\x05t\xfe\xcft:|1\x91\x0e\x9c\x89\x17E\x03\xfd!\xf4\xa0 \xf3Ce\x8eJ\xac\x90}h\xd1:\x96z\r\x7fI\x8d\x81\x17\xa1\x90*^\x07rg\r\xaaA=qc\xef\xc2\xfd\xcf\xe8\xa0\xb0\x03m;\x14%\x1b\xd2S\xc6\xc1\xdc2\xf3jE\xefS\xd2\x18\x9c`\xe4BwAv\xc6j\x8bz\xbd\x98KCS\xab\x14q\xe5\x14\x11P$\xd4\x0f\x18\x1c\xbd%\xfcW9\xa0\xd1\xadF\x99\xb5\xa2\x1f<\x0b\xa7,mU2\xf7\x08\xce\xbf\xd6\x9c\xcb\xeah\x98\xb5\xd1\xe4\xe5\xfa\xc7v\x07sJ3\x84\xe0\xd6\xae\x0bF)\xadl\x94\x14\x03\x90\xa1\xbc\x03\x9dV\x1c\xa3Bg\xd5\xdc{z\xea\xb0\xa2\xd5\x86\xa9g&\x0e\xf4d\xc9B\x9d\x18\x02\xbe1\xb5\xf3\x94\xc9f.\xe4\x86_\x00<\xc9\xbb\xd7194\xec\xb1w\xf7k\x81\x8e\xc8n\xa1\xb0\xb82\x89\xc0\xb7\xb4Q\x89\x9a8\x91\xd3\x19\xa0\xf7\xe3\x8c\xd2\x93\xc3ju\x19\xc5\x18\xca\xb1\xb9f\x94\x107^,X\xb6\xd2\\\xc3\xd7\x02 \x93\xd6n"j\xcd\x96\x1f\xa3\xba\xb4g\xe3\x99E[\xfbL\xdc\x87V0`.\x14q\xcc\x15\x02(\xd4^\xbb\x03\x91\xd2\xebohh\xfbK[\x03V\x19\x06$\xea\xf8\x95\x14f\xc7>\xf4\x87k\xb6\xb0hC\xc2\xa5\xd1\xd6\x16\xb0\xe4~Z\x1e\x00\xa8\x0b\r\x0c\'%\xad\x1dP\x89A\xf0\xd4\x86\xc1\xa7"\xc1Q\xa5\x16\x1b\x06$\x12\xcf\xc1w+h\xd4\xa1\r\rX\x8c\xf3\xd7\xa8Y\xcfr\x04\x82\xf9\xff\xc6\x86B\x8f\xff\xef\xf8\xa0\xca*\xc3\xa41w\xc0B\xfa\x8fu\x12\xad\xe7\xdc\xed4\x91\xfd\x95\x83}\x80\xaf\xf8P\x07\xb29\x8e\xe9\xe8\x8e\xfb\xd8\xde\x15\xee\xd1\x9dt\x83\xcdT\x94h\xa5(O\xf8\xcc\x83\x02"K\xcd\xeavh\x07t\xf4\xe4[\x05\r\xe1\xd4\xe6\x1aFx\xc3\xe6=\xd0\x9e\xb0t\x92\xe3\xb9P\x93\xf1\x15BtRe\x8f\x1f\xe6\xe8U\xc3\x00q\xe0\x84\xe1\xf8\xa5\x9e\xbaO\xd9\x80\xd9\x0f\x9eM\x90~\x8cGP\x91D\xc9\xf1\xab)b\xb4>*Ew\xc1\xe6@\n\x8d-\xeb\x16ZBsi\xc8\'\x9d\x9fF\xe0\xc8\xee\xc6\x03\x11B\xf8\x8c\xcd\x15\x07 @Pa\x08\x08\x84\x13\x198\xa0\x15\x80\x93\x95Ps!\xf9\x0c\xe1H\xc1\xe7z7\xb8\x8e\xa0m\xf14\x8c\'6\x0c \xa0\x9bo\xbe\x1cvPR\x94\xf2\x11\x0f\x0c\x04U\x17\xc5\x12\x02`\x1f\xb5\xf8\xb7\xc2G\xa0.P\x95\xb5\xd1RQ\xd5$\xe4T}\xea\x12\x1b\r]\x0b\x82d\x17\x89\x87\xe1\xe8\x83\x80BQ\x8dq\xe6\xab\x8f\xb6\x19\x87\xfa\x01\x99\x07\xad\xe7C\x17\x93\xe4SC\xdc\xff4}j\xf8\xc4\x86A\xe1G\xde\x05t\x9c\xb5\xc6G>{\x1b8\xceY\x16\xacD\x86.\xcdhQ\xcdl\xce\xd7 TH)\xea|\rl\xdf\xd1\xad4\r/\x95\xbf\xc3!\xf0\x19\x9dZ\xd4\x84z\xbc\x8fS#N\xaa\x18\xdbT\xfc\rQ\x8c\xb4\x8b\xc3\x19\xe39\xe5\xe1\xe8\xd0\xc6\xef\xc3\xe9\x92}\x06E\xb0A*\xab[\xe8i\x1cV\xd5\x18\x10,H\xe4(\xfc[\x0eFq\xa4\xf8\xd0[3:I\x1f"\x08r\t\x8e5\xed>\x11+\x1f\xc8\xb6\x18\x902\x1c\x14\x04\x12B\n\xaa\xaem\xee\xd2\x97W\xa06N\xda\xa0^\x1d\xbb\x92\xa4;\xc9\x08\xcf\xc7\x91\xd9\xaf\x0fF\xcaq*S,\xbc\x86\xa3\xe0!G\xcca\x8e\x8a\x93\xd7R$\xc5\xe6\x16\xd5\xd3?at\x8b\xf9C\xd2\x8eO\xad\x96\xef)\xf1i\x06\x0eL\x031m;\x14M\xa7\xae\xa7\xc8\xb9\xab\xca\x9af\xa3\x1b\x87O\xab\xf15\x19$|\xcf\xa0B\x89\xc2\x1a\xed\xe1\x08\x18\tFi\xe6\x08C\xa4\xcdY\xef\'mWE\x16A\x8d\x81\xc1!\xa3\x9b;\xd3\x85(\xc3\x91X\xb4\x1eP\xc8[\xdb4\xff\x98O\xd6\xff\x0f\x10\xca\x07\x8d\x94e\xfc\xe8\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 14:59:32,218 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 06:59:32 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1lqtl2docxt8v1hcfq6lcgillm;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 14:59:32,218 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 14:59:32,218 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 14:59:32,219 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 14:59:32,219 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 14:59:32,219 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,219 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,219 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 14:59:32,220 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 14:59:32,220 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:59:32,221 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813972', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'模式': '200', '消息': 'FAILURE#请求验证码识别'}]", '', '成功', '', '2018-02-05 14:59:32')
2018-02-05 14:59:32,290 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:59:32,290 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:59:32,291 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813972', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 14:59:32', '0天 0小时 0分 0秒')
2018-02-05 14:59:32,354 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 14:59:32,355 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 14:59:32,355 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 14:59:32,363 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:59:32,364 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 14:59:32,364 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:59:32,364 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:59:32,364 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 14:59:32,365 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:59:32,365 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,365 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,365 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 14:59:32,366 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 14:59:32,366 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,366 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,366 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 14:59:32,367 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 14:59:32,367 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,367 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,367 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 14:59:32,368 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 14:59:32,368 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,368 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,368 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 14:59:32,369 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 14:59:32,369 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 14:59:32,369 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 14:59:32,370 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 14:59:32,409 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 14:59:32,412 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 14:59:32,412 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 06:59:32 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 06:59:32 GMT')]
2018-02-05 14:59:32,413 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 14:59:32,413 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 14:59:32,413 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 14:59:32,413 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 14:59:32,414 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,414 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,414 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 14:59:32,414 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 14:59:32,415 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:59:32,415 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813972', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'模式\': \'"result":200\', \'消息\': \'FAILURE#灯塔用户登录失败\'}]', '', '成功', '', '2018-02-05 14:59:32')
2018-02-05 14:59:32,473 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:59:32,474 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:59:32,474 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813972', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 14:59:32', '0天 0小时 0分 0秒')
2018-02-05 14:59:32,637 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 14:59:32,638 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 14:59:32,638 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 14:59:32,645 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:59:32,646 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 14:59:32,646 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:59:32,646 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:59:32,647 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 14:59:32,647 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:59:32,647 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,647 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,648 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 14:59:32,648 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 14:59:32,648 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,648 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,649 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 14:59:32,649 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 14:59:32,649 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,649 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-05 14:59:32,650 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 14:59:32,650 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 14:59:32,650 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 14:59:32,651 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 14:59:32,651 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 14:59:32,668 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 14:59:32,669 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 14:59:32,669 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 06:59:32 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 14:59:32,669 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 14:59:32,670 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 14:59:32,670 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-05 14:59:32,670 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 14:59:32,671 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 14:59:32,671 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 14:59:32,671 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 14:59:32,671 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,672 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer'}
2018-02-05 14:59:32,672 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 14:59:32,672 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 14:59:32,673 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:59:32,673 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813972', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'模式\': \'"qq"(.+?)"\', \'消息\': \'FAILURE#不符合断言时返回的消息\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 14:59:32')
2018-02-05 14:59:32,779 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 14:59:32,779 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:59:32,780 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:59:32,780 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 14:59:32,780 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:59:32,780 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,780 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer'}
2018-02-05 14:59:32,781 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 14:59:32,781 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 14:59:32,781 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,781 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer'}
2018-02-05 14:59:32,781 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 14:59:32,782 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 14:59:32,782 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 14:59:32,782 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer'}
2018-02-05 14:59:32,782 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 14:59:32,783 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 14:59:32,783 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 14:59:32,783 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 14:59:32,783 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 14:59:32,802 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 14:59:32,803 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 14:59:32,803 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 06:59:32 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 14:59:32,803 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 14:59:32,803 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 14:59:32,803 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 14:59:32,804 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 14:59:32,805 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 14:59:32,805 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-05 14:59:32,805 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 14:59:32,805 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 14:59:32,806 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 14:59:32,806 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 14:59:32,806 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-05 14:59:32,806 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 14:59:32,807 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 14:59:32,807 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 14:59:32,807 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 14:59:32,807 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer'}
2018-02-05 14:59:32,807 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 14:59:32,807 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 14:59:32,808 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 14:59:32,808 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 14:59:32,809 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:59:32,809 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813972', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'模式': {'userName': 'dataviewer'}, '消息': 'FAILURE#用户名不为dataviewer'}]", "{'dic': {'userName': {'userName': 'value'}, 'atten': {'atten': 'value'}}}", '成功', '', '2018-02-05 14:59:32')
2018-02-05 14:59:32,904 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:59:32,904 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:59:32,904 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813972', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 14:59:32', '0天 0小时 0分 0秒')
2018-02-05 14:59:32,995 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 14:59:32,995 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 14:59:32,995 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 14:59:33,004 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 14:59:33,004 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 14:59:33,005 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 14:59:33,005 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 14:59:33,005 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 14:59:33,005 test_case_step.py[line: 77] INFO: 正在替换“请求头”中的动态参数
2018-02-05 14:59:33,006 test_case_step.py[line: 144] ERROR: local variable 'request_headers' referenced before assignment
2018-02-05 14:59:33,006 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 14:59:33,006 test_case.py[line: 95] ERROR: local variable 'request_headers' referenced before assignment
2018-02-05 14:59:33,006 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 14:59:33,006 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 14:59:33,007 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517813972', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '阻塞', "local variable 'request_headers' referenced before assignment", '2018-02-05 14:59:32', '0天 0小时 0分 0秒')
2018-02-05 14:59:33,082 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 14:59:33,082 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 14:59:33,083 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517813972', 1)
2018-02-05 14:59:33,083 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517813972 AND plan_id=1
2018-02-05 14:59:33,090 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 14:59:33,090 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517813972', 1)
2018-02-05 14:59:33,091 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517813972 AND plan_id=1
2018-02-05 14:59:33,098 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 14:59:33,098 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517813972', 1)
2018-02-05 14:59:33,098 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517813972 AND plan_id=1
2018-02-05 14:59:33,105 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 14:59:33', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=3, case_fail_num=0, case_block_num=1 WHERE execution_num='1517813972' AND plan_id=1
2018-02-05 14:59:33,162 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 14:59:33,163 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 14:59:33,163 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 14:59:33,164 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 14:59:33,164 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 15:01:02,439 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 15:01:02,440 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 15:01:02,440 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 15:01:02,440 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 15:01:02,441 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 15:01:02,441 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 15:01:02,441 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 15:01:02,447 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 15:01:02,448 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 15:01:02,448 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 15:01:02,448 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 15:01:02,448 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 15:01:02,455 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 15:01:02,455 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 15:01:02,480 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 15:01:02,480 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 15:01:02,486 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 15:01:02,486 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 15:01:02,487 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 15:01:02,487 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 15:01:02,492 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 15:01:02,492 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 15:01:02,493 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 15:01:02,498 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 15:01:02,498 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517814062', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 15:01:02', '', '', 0, 0, 0, 0)
2018-02-05 15:01:02,563 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 15:01:02,564 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 15:01:02,564 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 15:01:02,571 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:01:02,572 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 15:01:02,572 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:01:02,572 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:01:02,572 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 15:01:02,572 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:01:02,573 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 15:01:02,573 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:02,573 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 15:01:02,573 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 15:01:02,574 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:01:02,575 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 15:01:02,575 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:02,575 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 15:01:02,575 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 15:01:02,575 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:01:02,576 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:02,576 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:02,576 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:01:02,577 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 15:01:02,577 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 15:01:02,577 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:01:02,658 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 15:01:02,658 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11)IDATx\xda\xd5[\x07{T\xd5\x16\xcd\xdf\x10,\x08\xf8T\x9e\xfa,\xe8C\x04\xe95 UA:\x82R\xa4\tAx\x14\x11)"*\x1d\x01\x91^\x04\x04S!\x01\xd2{\xef\xbd\xf7\xde{\x1b\xf6\xdbkg\xee\xe4\xcedf\x18&\x89\xe2\xf9\xbe\xfb\xc9\x17\xe7\xde{\xce\xd9m\xad\xb5\xcf\xb5!3c\xc7\xd1\x18\x9a\xb8\xcc\x93\x86\xcd{H\xef\xcct\xa3\xd7\xa6\xdc\xa5\x7fMp\xa6~\xa3\x1d\xe9\xb9\x11\x0e\xd4g\xb8==3\xac\xf3z\xf6C{za\x94\x03\r\x1c\xe7D\xff\xb6u\xa1%[\x83(!\xad\x9a\x1e=z\xa4\xf7\xdc\xf8\xb4*\xfa\xe9|\x12]\xfc3\x83\xee\xf9\x14PDB\x05\x15\x944t\xf9\xdd\xd3<\xca*\x9b)$\xa6\x9c.\xd9g\xd2\xba=\xe14j\xa1;\r\x9a|\xb7\xcb\x9e\xbc4\xde\x99\xa6\xad\xf6\xe1\xf5&RrF555\xb7Y\xb4N\x1bs\xffs\'\x1bf\xf0,7z{\x86\xab\\Oj\x98\x85\x9b\x03)*\xb1\x92\xda\xdb\xf5\'\x92\xc8\x13<r9\x99.\xdc\xc9\xa0\xbb\xde\x05\x14\x1e_A\xf9\xc5\r\xa4\xd1<\xbd\x86ik\xd3PEU3;Z\x159z\xe4\xd1\xaec\xb14{\xad\x1f\xfd\xf7\xe3\xfb4`\xac\x93\xac\xff\xf9\x91\x0e\xf4\x9fi\xf7h\xeaJo\xda\xf4C$]u\xca\xa4\xc0\xc82J\xc9\xac\xa1\xa2\xb2Fjlj\x935v\xdb0\xe7y\xe3^\x9fzO\xb7\xf10\xc6\x0b\xfcrL\x00F0g\x98A\x93]h\xceW\xfe\xe4\x1bVB\xcd-\xedz\xcfM\xcb\xa9\xa1\xd37\xd2\xe8\xdc\xedtr\xf6\xcc\xa7\x90\xd8r\xca)\xac\xa7V^\xfc\xd38\xb0\x91\x88j\xcc\xf9\xf3\x1d\xc14x\xa6\xab\xacU\xbdv\xec\xc9,6\xd4\x0fg\x13\xc8\xcd\xb7\x902\xf3\xea$:\xac\x1df\r\xe3\x17^B\x138\x95\xa9\'`\xeeR\x0c\x03\x0fz\x95\r\x83\x10vp\xcf\xa3\x9a\xbaV\xbd\xe7\xe6\xb2\x11\xae\xb07\xfdz3\x8d\xec\x1f\xe6Q`T\x99,\xa4\xb1\xb9\xfd\xa91DEu3\x85\xb2\xc3\\r\xc8\xa4\x8d\xdfG\xd0\xf4/}8:\xdc\xc4\xe9\xfa\xf0Z_\x1c\xe3H\xef\xcfy@\x8b\xb7\x04\xd1Q\x8e~8`JV\r\x95V4Id\xb4[\x18\x19V\x19&\xbb\xa0\x9e\xd6\xed\r\xa7\xbe\xda\xc8@z\x9a\xce\x9bm\xfb\x85\xb7\xa44s\x06z\x91\xd3\xdd\xa8E\xeet\xfa\xf74*)o\xd2{nie\x139y\xe6\xd1\xc9k\xa9\xf4\x87k\x0e\xf9h\x17eh\xc0\xbfk`c=\x83\x8b$:\xde\xe5Tn\xb8\xbe\x97\xd88\x8b\xbe\x0e\xe4\xb5\xa5J\x9d\xa9d#\xf6\xf40k\x98\xfa\xc6V\xba\xe6\x94E\xcf\x8e\xe8\x98\xd0\xcb\x13\x9dh\xc3\xbe0\x8aL\xa8$\xef\x90b\xba\xcc\xde\xb4\xf3H\x0c\xcd\xe5\x94\xf5\x1e\xe7Z\xc3\x05\xbc:\xc9\x85\xb6\x1f\x8e\xa6\xbc\xa2z\xbd\xe7b!7]\xb3i\xeb\xcf\xd1t\xfcJ2GM.\x85\xc6\x95Sai\xa3.\x07\xab\xaf\xde\x88\x08\\\xa6\xf2=\xeaIx|9\x8d[\xea\xa1\x97\xae_\x9d\xe4L\xcb\xb6\x05\x93Oh\te\xe4\xd6ReM\x0b\xb5\xb4jze\x8e6\x8f\xfbAvA\x9d\xa4%er3\xd7\xf8R]}\xabL\xa6\xbe\xa1\x95\xf2\n\x1b(&\xb9\x92\xdc\x03\x8b\xc4\x88\xbbO\xc41\x1a\x0b\xe6Ey\xd2\x9b\\\x087\xec\x8f\x90\xd4\xd5nP\xd8\xf7\x9d\x8a\xa3wf\xb8\xd1\x07\x9f>\xa0)\\,\x17o\r$\xbb\x83\x91t\xe4b2\xddb\xa3\x05D\x94Rfn\x9dx/ru\x13\xa7\xb9\xf6v\xeb6\x01\xf7\xb5\xf1\xd5\xae\xd1\x881\x1a\x1a\xdb\x04-&eVSmC\x8bI\xd0\xb1\xebX\x0c\xf5\x1f\xeb\xa8[;2\xc6\xb2mA\x94\xcc\xd1\x8dg\xf6\xe6x\xaca\xeax\xf3\xd7\xee\t\xd3y\xce\x87\xf3\x1f\x8a\x11\x14\xcf\xc3\xa20\xc9\xe6\x966NE-\xe2IAQ\xa5t\xe7~\x0e\x1d\xe6MF\x1dI\xce\xa8\x91\x8dQ\x8f\xc3\x17\x92\x04\xe5\xa9#l\x00o\xc2\xbb\xb3\xddh\xd2rOZ`\x17 it\xcf/qt\xf6V\x1a\xd7\xaa\\J\xd2\xc2M\xf5hmmg\x0fo\x97\xb9\xc0x@NE\x1cy@y\x05|\x153\x1aJfT\x84zy\x8b\xd3\xe6!~/j\xc6\xbc\x8d\x01\x82:Cb\xca$3\x18\x1bA\xd1e4g\x83\x9fn\xed\xfdF;\xd0\x88\x05\x0f\xe9\xe7\x0b\x89\x94\x99_\xfb\xf7\x1a\x06^\xe6\x15R\xa4Jg.\x02\x15M\xa5\x08\x18\xa0\x917\xaf\xaa\xb6\x85\nK\x1a)+\xbf\x8e\xca\xab\x9a\xbaxz0o\x08\n\xe8\xe3\xc0\xc4\x1bS\xef\x8a3L[\xe5-\x1b\x99SX\xa7\xf7\x9c*N\'\x00\x18\xbf\\O\xa537R\x199\xa5\xd2\x89+)\xf4\xe3\xb9D\xfa\x86=~=s\x0cD\xf0\xf4/}i8?\xe7\x95I\x9d\xd1\xff\x0eS\x8037Sy\x9e\r&Ry\x1b\xdd\xf7+\xa4\xf7?\xb9\xaf3\x0e\x9cg\xda*\x1fA\xac\xc8\x1c\x86\xe9\xd1X\xb4\xc2aZ\xd8\x81\x9e\x84\x0e\xd8X\xf2#\xe4\\x\x8a\xb2 \x00\x80\x02\xdetK\x87\xc6\xc8\xa4Q\xe8A\\;\x0c\xc00|\x94#\xf5\xfd\xd0<\xea\x03\x89\x0b\x8c,\x95(Q\x8fM\x07"\xe8\x83\xb9\x0fh\xe8\xdc\xfb4\x8cS\xe3PFK \xc40\x82!\xa4W\xc3\xdbW&:\xd3\x8e#\xd1\x92\x8a[[\x8d\xa7&8\xda\xcfL\x86_\xb3\xed4(\x9e;\x83Q\x9a\x8bW\xbe\xa4se\x8d\xa8\x9d\x89\x9c"\x01\x1c\xc0u\x90Y\xfc9R]}\xf3\xf9\xdf\x85\x14\xceu\x14D\xba\xcd\x02Z`ci\xb1\xbcp\']\xb7qC\xd8\x83.;fv+T\xf3\x8a\x1ah\xe7\xe1\x18\xedB\x9di\xde&\x7f\xfa\x8aS\x0c\xbc\xf1u\x8e\x12@R\xb9\x86w\xf2%\xd4\xa3k\x0c\xb3\r\xd3\x19\xe6\xf2\xdc\x08\xcb =\x10&j\xc5\'\xeb\xfd\xe8\xbb\x93q\x12\x11%\xe5\x8d\xcc\xa1LC\xf5\x0c\xaeu\x88\xd6\x7fMp\xd2=\xe7\xb5).\xb4|{0\xdd\xf3\xce\xa7j\xce\x0e\xa8\xc5\x97\xed3$\xfd\x82&\x0c\x9ds_\xd0\x9b\xb2> T\xbc\xd3\x8e\x89\xe7u\x97,\xe1m\xdd6\x8cx\x04\xa7\xb4\x01\xdaB\x88\xc5}\xb13\xa4\xdb\x84\xf0\xc8\xa5$\x1dQE\x1dCA\x06wp\x0f,f\xf2\x99A\xdf\x1c\x8d\x15Yg\xfcg\x9e\x92\xd2P\x93N^M\xe9Rx\x9b\x18 \xf4\xd7\xa6E<\x0b<\np\x1e\x9c\x03\xbcj\x08G\xd0\xa7\\Sv0\x82\x84\x84\x82z\x03Y\x08u\xa8\xae\xc12\x88\x8eh\x00"{~d\xa7\x91\x07M\xc6\x86?\xa4\xd1\x8b=\xba\x18_q&8\xb3:\x13\x80F\x00\x14\xcd\xd9\xe0O\x91\xf1\x15&\xd3\x9b\xc5\x86A\x81=\xf8[\xa2\xbc\x14\xa9g\xf2\xe7^\xecm\x05\xdd2\xcc\xcd{\xd9L\xd2\xeeK\x1a\x83\xa1c\x92\xab\xe4\xefP\n\xca\x98\xeb\xc0S\x91f\x82\x98\x80BS\xbbh\x0f\t\'_<\\\x8f\x171\xa9\xdb\xcc\x88\x0e\x11\x86g\x01<\xec>\x1e\'\x92\xcf\x03\xff"\n\x8e.\xa7\xc4\xf4\x1a6D#\xa7\x1e\xeb\xd9x\x18\xa7\xa2\xa5\xff\x0b\xd2mz\x9f\xe1\xf6:\xc7\xea+\xf5\xf0\x1e\x8d]\xe2A3\xd6\xf8\xd0\xac\xb5\xbeR\x17\xa7\xaf\xf6\xa6)+\xbc%\xc5\xaa\xb9\x1fT\x14D\xd5u\xe7L\xa3\xb5\xc9b\xc3<\xd2\xe6P%e\xa0po\xf9)R\n\xbd\xc6J\x96\x0b\x0e\x800\x97\xf4\xc8\x93\x8ce#\x98z7\x90S\x19\x1b\xa0\x807\xb7\xa1\xa9\xcd \x9a\x1f\xd1m\xb7l1\x0c\x9e5f\x89;?\xabJ\xeaXO\xeaoxV6\x83\x19l\xb4\xbavA\x1f\x9b\xcf(\xf2\xfb3\t\x1d\x9c\x8c\xa3\x1e\xe8\x14(\xb5\xa2\xbaI\x9c\x0b\x0e\xb5\xfft\xbc^\xad\x16\xa4\xc7\x8e\x84zd\xb5a0j\x19\x85\xec<\x1a\xad\x9b\xd4\x1b\x1f\xddeO\x8d\x10\xb2YT\xfa\xe4\xea0"\x03y\x1e\x1b\x8a\xf0\xbe\xee\x9ce5Y\xf3\x0f/\x95\xdc.hk\xa6+]\xe1\xbac\xa8\xd1\xf5\x94q\xb0^\xa45h\x81G/%S\x18\x1b\x02F\xc0\x05\x8e\xd4f\x84o\xa1\xe0C\x01\xf1`@\xb0`s\x80\x9eq\xc6,v\'W\x9f\x02\xeb\r\x83I%\xa6W\xeb\tx\xc8\xe3\xa8\x01k\xbf\x0b\xa3\xdf\xb9\xa8\xa5d\xd6\n)\xb4d\x83Q+|\x99E+E~\xbe\x9d\xbf\xd5\x1b\x86z\x87\xc2\xab\xa4\x98\x8f\xd7\xfbRKK\xefho\xa0\x10(\xf6P\x00 \xff\xb7YXk\xb1\'\x80\xcd9|\xef\xe4/\xbc\xf4\x8c\x03@e\xb5a0@\xe0\x0e\x9eM\x14\x83\x18"\x1e\x14\xb6\x05v\x81B.Q\x07\xb0\x80\xc7\r\x9f\xd0b\x9a\xa1\xf5\xf4\x19\xcc5\xfc\xd8\xf3\xad\x1dp\x0cE\xdb\x82\x1c\x8fy\xf4f+\xc1\x9a\x14\x8e\xdf\x03\xee\xff\xc9s\x03\xfcW;\xf8\xd9[\xe9\xba\xe7=\xb1apc13k4\xb9\xf6\x9f\x8e\x93\x9e\xcb{\xcc\xd6\x15\xb2\x88h\xc2\xe6\xecbx\x99\x9a]\xf3\xd8\x8dA\xba\x81A\x04\x822\xf2\x02Y\xb4v\x80\xc8\x01\x96*\xc8h\xde\xa6\x00\x8b6\xae\xb749s\xef\x03\xe4\xdf~(J\xcf\xb1G\xf3\xdc\x95\xe8\xb3\xb1*\x949\x05\xd5r>\x858\t\xb1\x0f\x1cg\xd5\xaeP6\x88\xab\x10\xb7\x0e\xf9\xc2\x91>^\xe7\xc7\xa8\xa8P6\xcc\xdc\xd8\xc3u\x06\x1b\x89\x1e\x0e$t\x88\x83\xd6n\x14\xa4\x9e\x01\xdah\x1e\xca\xa4\xd3\xd1=W\xa7\xb1)\x17\x16\x0fe\x02\xfc\x03\xe9\x0e5\xa1\xa4\xacQ\xeadUm\xb3\xa4\x1b\xa4c\xfcN\xa3\xe9=!\xd5\x89\x8b\xbe\xe2H\xb8\xe0\xe0w\xdc:\xa2\xdc\xa6[\xb9\x96\x17\x04\xc6\x0c\xf6\x9b\x9aU#R\xfeg\xdb\x82h\xe0x\'\x9d\xd7\x8e]\xeaA.\xde\x05\xd4d"\xdfc\x82`\xc3\n\x0c\x07\xa3F\x14\x817Y\xb3!H\xb5/k\x89\xe0s\xec$K\xb6\x06\x8a$\x04D\x99\xc3\x88*"\xa1\x9c\xa1w>\x9d\xfb#\x9d\x0e\xfc\x1aO\xab\xbf\r\x959C\x01\x80\x82\xb0a_8;J,\xfdv3M\xc8\'\x90"\xd6\xd9\xd2\xaa\xe9q\xc3\xc09\xa0\t\xaa\xd5\x08\xbb\x1f"\xe4}6=\xfd2p\x8f\x13L\x02\xe1\t\xc0\xeax\xe1\xc8\x05\x8c:|\x0b\xc4\x0b\x8d\r\xb4k\xe7~\xe5\xa7\xd5\xaf\xee\xd1\x8d\xbbY\xe2\xcd\x1d\x02\xa5F\xaf\x15`\xc9\xc0\x06+=\xa4\xc139\xad\x1e\x8fe#$\x08Y\x05w\x80Z\x0e\x14\x08\xc2\xda_\xa5\xd7)}$e\x93\x10q\x9fl\xf0\xa3\x9f\xce%\n\x12\x03_\xea\xc9\xbdjd\n`\xc7s\xed\xcc2\x0e\xb4\xe6\xbbP\x11kmz#D!,\x02\xb7OY\xe9\xa5\xe3\x16#\x17>\xa4\x90\xe82\xa3\xf7@\x05V\x10\x95\xb2)0\xec\xba}a"s\xc4\xa6T\x9a\x95\xe7\r\x07\x88\xaa\xe2\x14\xa6\xc4Q\xa4Z\x05\xf6\x83\x9b\xe1\xd0\x84\xb2Az\xbf\xe5\xe7\x0c\x1c\xeb$R\x11\x1ac\x8a\x92\xdd\x13\xc0\x01\xb5\xfa\xdbc\xb1z\xe0i\xf1\xd7\x81\x14\x93T\xd9\xf3\x86Q\x17bgNm T\xca\x06\xac\xfc&D\xd4fc\x1b\x8c\x14\xa2\x1cjP_\xd0\xa4\x16m\t\xa4\xdb\x8cbp\xafr\xa0\xe1qCH\xa0\xf6\x19P\x03\x06\xd9\xba\x88\xb8i\xcb0\x15\xd1\t\t\x08\x84\xef\xd8\xe5$\xda{*N\x94\xe8u{\xc3h\xf6:_1\x12\xeeQ\x93HD\xe0[\xd3]\x99\xc8\xe6\xb0\xe35w\xdb8\xe8O\xc5\xa5VI\x7fKq"\x91\xa6\x98v$\xa5W\xf5\x9eaD6\xe7\xda\x03`\xf0\xe6\xb4\x8e\xbe\x0bN\xda@\x9e\xaf\xd56\xda\xd4Q\x86~\x0b\xb0\xfc\xf3&<\x1dpr\xdeF\x7f\xd9\x18\xc8\xf4\x8f\xd3\xe9\xa0\x89A=\x86`\xf9)\xdf\xb7\xf7\x978\xba\xca\xa4\x13ml\xa0E\xd45\xa4K\xcc\x05\x86\x86f\x06n\x12\xc7\xd1y\xc51K$\x15\x10h\xc3yL]\xe9#R\x94F\xa3\xb1:\xa3\xa0\x86\xa4e\xd72\xb9\x8e\xa5\xb7\xa7w\x1ev\x81x\x8b\xfa\x06\x9e\xd3\xab\x86Q\xd2\xda\n\x8e\x14\xc5\xeb&}\xee\xd5\xc5\xe3$\xdf6\xb5ShL\x19\x13\xceb\xfa\xf5V\xc7i\x14H+/\x8dwR\xe9K\xf6\xa2E\xa1\xd9\x95\x9e[\xdb\xa5\xf9f\xa8R\xdc\xbc\x9b-F\xa8\xe69\xa0w\x82\xbf\x99S\x03d\xd34\x8f$*!\xf1@\x17{y\xa2s\x17\x07\xd9\xb0?\xdch\x9b\x00\xf7C\x06J\xcf\xa9\x95\xe8\xc6o\xf0\xde\x9c\x82z\x06G\xb5\xd2\x12@\xadR\xd6\x87\xc3\x1d\x8a\xc0\x89\xbd\x19\xb7\xd4]P$\xa0t\xaf\x1aF\x99\xac\xb3G\xbe\xa4\x01\xa5~x\x05\x17\x19\x95\xd9\xb1iH\x81\x80\xe2(\x80.\x9e\xf9R\xc8\x073\x0c\xef\xa7J-\x90\\\xd0\xd9L\xc9\xac\x16hk*\xad@\x1e\xb16\xe5\x14\x14\xd7K\x13\xcdv\x85\x97(\xd4\x9d\x86q\xa4e\xdb\x83)*\xa9\xa2K_\x08\x03\xde\x8ecY\x8b\xb6\x04\xd1\x98\xc5\x1er\xc6l>\xf3)\xb4\x08p\xdfL\xe6l\x00\x15h\t\xa8Ug\x88\x9c\x00\x19\xf9LAz\x1c\x95\x99*r\xc1\\\xf4\xd1\x8b\xe8P\x7f\x1d\xa4\xb7a\xaakh8\xa0?A\xa6\xc7\x01:\xa4Be1\x10\x0ea\x1cx\xa7\xb5g\x01\xcc\xaa\xe9\xfcL4\xb9\xb0\xa10\x86Z\x15^\xbd;T\x90\xa41\xe7\xc2\xbap2\x08]\xd7\xbe&\x9at\xea\xda\xf5\xcaD\x17\xaek~\x8cd\x93)\x99\x1d\xadU\x0b.z\xdd0\x18I\x195\xbat\x86\xa2\xba|{\x10\xe7\xd8\x1a\x8b#\x0e\x9e\x1f\xc9\xfc\x03\x06}\x9b\xa3E\x179l\xa8C\xe7\x13%\xd2z\xda00v|j%\xadg\xb4\xa8\xdeH@\xec\xfd\xa7\xe2)\x97=\xdb\xd8;\x91.\x81H?Z\xe5\xad#\xda8-\x04GzovG\x87\x15\x91\x04c\xacg\xc0s\x8c\t\xf5\x03\xe6K\x85Ln\xd5\x0e\xf6\x97\x18\x06\r)\xc50\x88\x1a\xf4r\x0c{*\x96\xb4\x08bR\xaa\xe8K\xf6\xd6\x17\xc7t\xa2\x18\xa0\xbe\x80\x88\x92\x1e5\x8c8\x03\xd7\x19\xa4\xdcI\xcb;!?\xa2\x05\xf2\x11\xea\x84\xc6\xc4\xfb\xc0\xbb\xb0\xde\x07\xfe\x05t\xfe\xcft:|1\x91\x0e\x9c\x89\x17E\x03\xfd!\xf4\xa0 \xf3Ce\x8eJ\xac\x90}h\xd1:\x96z\r\x7fI\x8d\x81\x17\xa1\x90*^\x07rg\r\xaaA=qc\xef\xc2\xfd\xcf\xe8\xa0\xb0\x03m;\x14%\x1b\xd2S\xc6\xc1\xdc2\xf3jE\xefS\xd2\x18\x9c`\xe4BwAv\xc6j\x8bz\xbd\x98KCS\xab\x14q\xe5\x14\x11P$\xd4\x0f\x18\x1c\xbd%\xfcW9\xa0\xd1\xadF\x99\xb5\xa2\x1f<\x0b\xa7,mU2\xf7\x08\xce\xbf\xd6\x9c\xcb\xeah\x98\xb5\xd1\xe4\xe5\xfa\xc7v\x07sJ3\x84\xe0\xd6\xae\x0bF)\xadl\x94\x14\x03\x90\xa1\xbc\x03\x9dV\x1c\xa3Bg\xd5\xdc{z\xea\xb0\xa2\xd5\x86\xa9g&\x0e\xf4d\xc9B\x9d\x18\x02\xbe1\xb5\xf3\x94\xc9f.\xe4\x86_\x00<\xc9\xbb\xd7194\xec\xb1w\xf7k\x81\x8e\xc8n\xa1\xb0\xb82\x89\xc0\xb7\xb4Q\x89\x9a8\x91\xd3\x19\xa0\xf7\xe3\x8c\xd2\x93\xc3ju\x19\xc5\x18\xca\xb1\xb9f\x94\x107^,X\xb6\xd2\\\xc3\xd7\x02 \x93\xd6n"j\xcd\x96\x1f\xa3\xba\xb4g\xe3\x99E[\xfbL\xdc\x87V0`.\x14q\xcc\x15\x02(\xd4^\xbb\x03\x91\xd2\xebohh\xfbK[\x03V\x19\x06$\xea\xf8\x95\x14f\xc7>\xf4\x87k\xb6\xb0hC\xc2\xa5\xd1\xd6\x16\xb0\xe4~Z\x1e\x00\xa8\x0b\r\x0c\'%\xad\x1dP\x89A\xf0\xd4\x86\xc1\xa7"\xc1Q\xa5\x16\x1b\x06$\x12\xcf\xc1w+h\xd4\xa1\r\rX\x8c\xf3\xd7\xa8Y\xcfr\x04\x82\xf9\xff\xc6\x86B\x8f\xff\xef\xf8\xa0\xca*\xc3\xa41w\xc0B\xfa\x8fu\x12\xad\xe7\xdc\xed4\x91\xfd\x95\x83}\x80\xaf\xf8P\x07\xb29\x8e\xe9\xe8\x8e\xfb\xd8\xde\x15\xee\xd1\x9dt\x83\xcdT\x94h\xa5(O\xf8\xcc\x83\x02"K\xcd\xeavh\x07t\xf4\xe4[\x05\r\xe1\xd4\xe6\x1aFx\xc3\xe6=\xd0\x9e\xb0t\x92\xe3\xb9P\x93\xf1\x15BtRe\x8f\x1f\xe6\xe8U\xc3\x00q\xe0\x84\xe1\xf8\xa5\x9e\xbaO\xd9\x80\xd9\x0f\x9eM\x90~\x8cGP\x91D\xc9\xf1\xab)b\xb4>*Ew\xc1\xe6@\n\x8d-\xeb\x16ZBsi\xc8\'\x9d\x9fF\xe0\xc8\xee\xc6\x03\x11B\xf8\x8c\xcd\x15\x07 @Pa\x08\x08\x84\x13\x198\xa0\x15\x80\x93\x95Ps!\xf9\x0c\xe1H\xc1\xe7z7\xb8\x8e\xa0m\xf14\x8c\'6\x0c \xa0\x9bo\xbe\x1cvPR\x94\xf2\x11\x0f\x0c\x04U\x17\xc5\x12\x02`\x1f\xb5\xf8\xb7\xc2G\xa0.P\x95\xb5\xd1RQ\xd5$\xe4T}\xea\x12\x1b\r]\x0b\x82d\x17\x89\x87\xe1\xe8\x83\x80BQ\x8dq\xe6\xab\x8f\xb6\x19\x87\xfa\x01\x99\x07\xad\xe7C\x17\x93\xe4SC\xdc\xff4}j\xf8\xc4\x86A\xe1G\xde\x05t\x9c\xb5\xc6G>{\x1b8\xceY\x16\xacD\x86.\xcdhQ\xcdl\xce\xd7 TH)\xea|\rl\xdf\xd1\xad4\r/\x95\xbf\xc3!\xf0\x19\x9dZ\xd4\x84z\xbc\x8fS#N\xaa\x18\xdbT\xfc\rQ\x8c\xb4\x8b\xc3\x19\xe39\xe5\xe1\xe8\xd0\xc6\xef\xc3\xe9\x92}\x06E\xb0A*\xab[\xe8i\x1cV\xd5\x18\x10,H\xe4(\xfc[\x0eFq\xa4\xf8\xd0[3:I\x1f"\x08r\t\x8e5\xed>\x11+\x1f\xc8\xb6\x18\x902\x1c\x14\x04\x12B\n\xaa\xaem\xee\xd2\x97W\xa06N\xda\xa0^\x1d\xbb\x92\xa4;\xc9\x08\xcf\xc7\x91\xd9\xaf\x0fF\xcaq*S,\xbc\x86\xa3\xe0!G\xcca\x8e\x8a\x93\xd7R$\xc5\xe6\x16\xd5\xd3?at\x8b\xf9C\xd2\x8eO\xad\x96\xef)\xf1i\x06\x0eL\x031m;\x14M\xa7\xae\xa7\xc8\xb9\xab\xca\x9af\xa3\x1b\x87O\xab\xf15\x19$|\xcf\xa0B\x89\xc2\x1a\xed\xe1\x08\x18\tFi\xe6\x08C\xa4\xcdY\xef\'mWE\x16A\x8d\x81\xc1!\xa3\x9b;\xd3\x85(\xc3\x91X\xb4\x1eP\xc8[\xdb4\xff\x98O\xd6\xff\x0f\x10\xca\x07\x8d\x94e\xfc\xe8\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 15:01:02,660 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:01:02 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1t5ky8uhuz542wli5wsim9rlk;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 15:01:02,660 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:01:02,660 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 15:01:02,661 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 15:01:02,661 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:01:02,661 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:02,661 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:02,662 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 15:01:02,662 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 15:01:02,663 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:01:02,664 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814062', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'模式': '200', '消息': 'FAILURE#请求验证码识别'}]", '', '成功', '', '2018-02-05 15:01:02')
2018-02-05 15:01:02,730 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:01:02,730 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:01:02,731 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814062', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 15:01:02', '0天 0小时 0分 0秒')
2018-02-05 15:01:02,790 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 15:01:02,791 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 15:01:02,791 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 15:01:02,798 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:01:02,798 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 15:01:02,798 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:01:02,798 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:01:02,799 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 15:01:02,799 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:01:02,799 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:02,799 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:02,799 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 15:01:02,800 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 15:01:02,800 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:02,800 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:02,800 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 15:01:02,801 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:01:02,801 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:02,801 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:02,801 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 15:01:02,801 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:01:02,801 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:02,802 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:02,802 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:01:02,802 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 15:01:02,803 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 15:01:02,803 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 15:01:02,803 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Cache-Control', 'no-cache'), ('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:01:02,842 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 15:01:02,845 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 15:01:02,846 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:01:02 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 07:01:02 GMT')]
2018-02-05 15:01:02,846 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:01:02,846 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 15:01:02,846 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 15:01:02,846 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:01:02,847 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:02,847 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:02,847 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 15:01:02,847 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 15:01:02,848 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:01:02,848 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814062', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "OrderedDict([('Cache-Control', 'no-cache'), ('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'模式\': \'"result":200\', \'消息\': \'FAILURE#灯塔用户登录失败\'}]', '', '成功', '', '2018-02-05 15:01:02')
2018-02-05 15:01:02,913 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:01:02,913 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:01:02,914 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814062', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 15:01:02', '0天 0小时 0分 0秒')
2018-02-05 15:01:02,992 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 15:01:02,992 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 15:01:02,992 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 15:01:03,000 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:01:03,000 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 15:01:03,001 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:01:03,001 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:01:03,001 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 15:01:03,001 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:01:03,002 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,002 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:03,002 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 15:01:03,002 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:01:03,002 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,003 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:03,003 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 15:01:03,003 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:01:03,003 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,003 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:03,004 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:01:03,004 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 15:01:03,004 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 15:01:03,004 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 15:01:03,005 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:01:03,021 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 15:01:03,022 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 15:01:03,022 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:01:02 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 15:01:03,022 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:01:03,023 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 15:01:03,023 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-05 15:01:03,023 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 15:01:03,024 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 15:01:03,024 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 15:01:03,024 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:01:03,024 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,024 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:03,025 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 15:01:03,025 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 15:01:03,026 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:01:03,026 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814062', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'模式\': \'"qq"(.+?)"\', \'消息\': \'FAILURE#不符合断言时返回的消息\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 15:01:03')
2018-02-05 15:01:03,088 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 15:01:03,088 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:01:03,088 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:01:03,089 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 15:01:03,089 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:01:03,089 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,089 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:03,091 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 15:01:03,091 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:01:03,091 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,091 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:03,092 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 15:01:03,092 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:01:03,092 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,092 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:01:03,092 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:01:03,093 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 15:01:03,093 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 15:01:03,093 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 15:01:03,093 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:01:03,111 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 15:01:03,111 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 15:01:03,111 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:01:03 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 15:01:03,112 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:01:03,112 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 15:01:03,112 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 15:01:03,112 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 15:01:03,112 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 15:01:03,113 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-05 15:01:03,113 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 15:01:03,113 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 15:01:03,113 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 15:01:03,113 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 15:01:03,114 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-05 15:01:03,114 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 15:01:03,114 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 15:01:03,114 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:01:03,114 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 15:01:03,115 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:01:03,127 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 15:01:03,127 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 15:01:03,127 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 15:01:03,128 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 15:01:03,129 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:01:03,129 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814062', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'模式': {'userName': 'dataviewer'}, '消息': 'FAILURE#用户名不为dataviewer'}]", "{'dic': {'atten': {'atten': 'value'}, 'userName': {'userName': 'value'}}}", '成功', '', '2018-02-05 15:01:03')
2018-02-05 15:01:03,199 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:01:03,200 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:01:03,200 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814062', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 15:01:02', '0天 0小时 0分 0秒')
2018-02-05 15:01:03,264 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 15:01:03,264 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 15:01:03,265 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 15:01:03,273 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:01:03,273 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 15:01:03,273 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:01:03,273 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:01:03,274 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 15:01:03,274 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 15:01:03,274 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 15:01:03,275 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:01:03,275 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 15:01:03,275 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 15:01:03,276 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:01:03,276 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,276 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:01:03,276 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 15:01:03,276 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:01:03,277 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 15:01:03,277 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:01:03,277 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-05 15:01:03,277 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 15:01:03,278 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 15:01:03,278 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 15:01:03,278 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 15:01:03,278 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 15:01:03,292 APIUnittestTestCase.py[line: 239] INFO: 正在对服务器返回body进行解码
2018-02-05 15:01:03,292 APIUnittestTestCase.py[line: 262] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 15:01:03,293 APIUnittestTestCase.py[line: 263] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 15:01:03,293 APIUnittestTestCase.py[line: 264] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:01:03,293 APIUnittestTestCase.py[line: 268] INFO: 正在提取目标返回结果值
2018-02-05 15:01:03,293 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-05 15:01:03,293 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-05 15:01:03,294 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-05 15:01:03,294 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 15:01:03,295 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 15:01:03,295 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-05 15:01:03,295 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 15:01:03,295 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[<Element 'return' at 0x00000000042050E8>]
2018-02-05 15:01:03,296 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[<Element 'return' at 0x00000000042050E8>]
2018-02-05 15:01:03,296 unittesttestcase.py[line: 403] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:groupCode_1-dataviewer
2018-02-05 15:01:03,296 APIUnittestTestCase.py[line: 271] INFO: 正在执行断言
2018-02-05 15:01:03,296 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:01:03,296 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 15:01:03,297 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:01:03,297 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 15:01:03,297 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
},
{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
}
]
2018-02-05 15:01:03,297 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 15:01:03,297 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 15:01:03,298 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 15:01:03,298 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 15:01:03,298 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 15:01:03,298 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 15:01:03,298 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000042050E8>]
2018-02-05 15:01:03,299 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 15:01:03,299 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 15:01:03,299 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 15:01:03,300 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 15:01:03,300 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 15:01:03,300 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 15:01:03,300 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 15:01:03,301 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 15:01:03,301 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 15:01:03,301 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000042050E8>]
2018-02-05 15:01:03,301 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 15:01:03,302 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 15:01:03,302 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 15:01:03,302 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:01:03,303 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814062', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', "[{'模式': {'.//return': 'dataviewer'}, '消息': 'FAILURE#获取的实体集团卡号错误'}, {'模式': {'.//return': 'dataviewer'}, '消息': 'FAILURE#获取的实体集团卡号错误'}]", "{'xpath': {'groupCode': './/return'}}", '成功', '', '2018-02-05 15:01:03')
2018-02-05 15:01:03,433 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 4 步, 步骤ID: 4]======================
2018-02-05 15:01:03,433 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 15:01:03,433 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 15:01:03,433 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 15:01:03,434 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:01:03,434 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,434 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:01:03,434 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 15:01:03,434 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:01:03,435 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:01:03,435 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'userName': 'dataviewer', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:01:03,435 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:01:03,435 test_case_step.py[line: 144] ERROR: local variable 'request_headers' referenced before assignment
2018-02-05 15:01:03,436 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:01:03,436 test_case.py[line: 95] ERROR: local variable 'request_headers' referenced before assignment
2018-02-05 15:01:03,436 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:01:03,436 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:01:03,437 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814062', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '阻塞', "local variable 'request_headers' referenced before assignment", '2018-02-05 15:01:03', '0天 0小时 0分 0秒')
2018-02-05 15:01:03,497 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 15:01:03,497 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 15:01:03,498 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517814062', 1)
2018-02-05 15:01:03,498 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517814062 AND plan_id=1
2018-02-05 15:01:03,504 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 15:01:03,504 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517814062', 1)
2018-02-05 15:01:03,505 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517814062 AND plan_id=1
2018-02-05 15:01:03,511 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 15:01:03,511 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517814062', 1)
2018-02-05 15:01:03,511 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517814062 AND plan_id=1
2018-02-05 15:01:03,517 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 15:01:03', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=3, case_fail_num=0, case_block_num=1 WHERE execution_num='1517814062' AND plan_id=1
2018-02-05 15:01:03,630 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 15:01:03,630 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 15:01:03,631 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 15:01:03,631 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 15:01:03,632 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 15:02:08,970 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 15:02:08,971 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 15:02:08,971 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 15:02:08,971 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 15:02:08,971 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 15:02:08,972 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 15:02:08,972 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 15:02:08,978 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 15:02:08,978 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 15:02:08,978 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 15:02:08,979 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 15:02:08,979 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 15:02:08,985 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 15:02:08,985 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 15:02:09,008 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 15:02:09,009 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 15:02:09,015 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 15:02:09,016 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 15:02:09,016 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 15:02:09,016 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 15:02:09,022 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 15:02:09,023 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 15:02:09,023 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 15:02:09,029 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 15:02:09,029 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517814129', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 15:02:09', '', '', 0, 0, 0, 0)
2018-02-05 15:02:09,087 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 15:02:09,087 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 15:02:09,088 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 15:02:09,094 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:02:09,094 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 15:02:09,095 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:02:09,095 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:02:09,095 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 15:02:09,095 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:02:09,095 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 15:02:09,096 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,096 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 15:02:09,096 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 15:02:09,097 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:02:09,097 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 15:02:09,097 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,098 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 15:02:09,098 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 15:02:09,098 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:02:09,098 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,099 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,099 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:02:09,099 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 15:02:09,099 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 15:02:09,100 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:02:09,189 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 15:02:09,190 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11)IDATx\xda\xd5[\x07{T\xd5\x16\xcd\xdf\x10,\x08\xf8T\x9e\xfa,\xe8C\x04\xe95 UA:\x82R\xa4\tAx\x14\x11)"*\x1d\x01\x91^\x04\x04S!\x01\xd2{\xef\xbd\xf7\xde{\x1b\xf6\xdbkg\xee\xe4\xcedf\x18&\x89\xe2\xf9\xbe\xfb\xc9\x17\xe7\xde{\xce\xd9m\xad\xb5\xcf\xb5!3c\xc7\xd1\x18\x9a\xb8\xcc\x93\x86\xcd{H\xef\xcct\xa3\xd7\xa6\xdc\xa5\x7fMp\xa6~\xa3\x1d\xe9\xb9\x11\x0e\xd4g\xb8==3\xac\xf3z\xf6C{za\x94\x03\r\x1c\xe7D\xff\xb6u\xa1%[\x83(!\xad\x9a\x1e=z\xa4\xf7\xdc\xf8\xb4*\xfa\xe9|\x12]\xfc3\x83\xee\xf9\x14PDB\x05\x15\x944t\xf9\xdd\xd3<\xca*\x9b)$\xa6\x9c.\xd9g\xd2\xba=\xe14j\xa1;\r\x9a|\xb7\xcb\x9e\xbc4\xde\x99\xa6\xad\xf6\xe1\xf5&RrF555\xb7Y\xb4N\x1bs\xffs\'\x1bf\xf0,7z{\x86\xab\\Oj\x98\x85\x9b\x03)*\xb1\x92\xda\xdb\xf5\'\x92\xc8\x13<r9\x99.\xdc\xc9\xa0\xbb\xde\x05\x14\x1e_A\xf9\xc5\r\xa4\xd1<\xbd\x86ik\xd3PEU3;Z\x159z\xe4\xd1\xaec\xb14{\xad\x1f\xfd\xf7\xe3\xfb4`\xac\x93\xac\xff\xf9\x91\x0e\xf4\x9fi\xf7h\xeaJo\xda\xf4C$]u\xca\xa4\xc0\xc82J\xc9\xac\xa1\xa2\xb2Fjlj\x935v\xdb0\xe7y\xe3^\x9fzO\xb7\xf10\xc6\x0b\xfcrL\x00F0g\x98A\x93]h\xceW\xfe\xe4\x1bVB\xcd-\xedz\xcfM\xcb\xa9\xa1\xd37\xd2\xe8\xdc\xedtr\xf6\xcc\xa7\x90\xd8r\xca)\xac\xa7V^\xfc\xd38\xb0\x91\x88j\xcc\xf9\xf3\x1d\xc14x\xa6\xab\xacU\xbdv\xec\xc9,6\xd4\x0fg\x13\xc8\xcd\xb7\x902\xf3\xea$:\xac\x1df\r\xe3\x17^B\x138\x95\xa9\'`\xeeR\x0c\x03\x0fz\x95\r\x83\x10vp\xcf\xa3\x9a\xbaV\xbd\xe7\xe6\xb2\x11\xae\xb07\xfdz3\x8d\xec\x1f\xe6Q`T\x99,\xa4\xb1\xb9\xfd\xa91DEu3\x85\xb2\xc3\\r\xc8\xa4\x8d\xdfG\xd0\xf4/}8:\xdc\xc4\xe9\xfa\xf0Z_\x1c\xe3H\xef\xcfy@\x8b\xb7\x04\xd1Q\x8e~8`JV\r\x95V4Id\xb4[\x18\x19V\x19&\xbb\xa0\x9e\xd6\xed\r\xa7\xbe\xda\xc8@z\x9a\xce\x9bm\xfb\x85\xb7\xa44s\x06z\x91\xd3\xdd\xa8E\xeet\xfa\xf74*)o\xd2{nie\x139y\xe6\xd1\xc9k\xa9\xf4\x87k\x0e\xf9h\x17eh\xc0\xbfk`c=\x83\x8b$:\xde\xe5Tn\xb8\xbe\x97\xd88\x8b\xbe\x0e\xe4\xb5\xa5J\x9d\xa9d#\xf6\xf40k\x98\xfa\xc6V\xba\xe6\x94E\xcf\x8e\xe8\x98\xd0\xcb\x13\x9dh\xc3\xbe0\x8aL\xa8$\xef\x90b\xba\xcc\xde\xb4\xf3H\x0c\xcd\xe5\x94\xf5\x1e\xe7Z\xc3\x05\xbc:\xc9\x85\xb6\x1f\x8e\xa6\xbc\xa2z\xbd\xe7b!7]\xb3i\xeb\xcf\xd1t\xfcJ2GM.\x85\xc6\x95Sai\xa3.\x07\xab\xaf\xde\x88\x08\\\xa6\xf2=\xeaIx|9\x8d[\xea\xa1\x97\xae_\x9d\xe4L\xcb\xb6\x05\x93Oh\te\xe4\xd6ReM\x0b\xb5\xb4jze\x8e6\x8f\xfbAvA\x9d\xa4%er3\xd7\xf8R]}\xabL\xa6\xbe\xa1\x95\xf2\n\x1b(&\xb9\x92\xdc\x03\x8b\xc4\x88\xbbO\xc41\x1a\x0b\xe6Ey\xd2\x9b\\\x087\xec\x8f\x90\xd4\xd5nP\xd8\xf7\x9d\x8a\xa3wf\xb8\xd1\x07\x9f>\xa0)\\,\x17o\r$\xbb\x83\x91t\xe4b2\xddb\xa3\x05D\x94Rfn\x9dx/ru\x13\xa7\xb9\xf6v\xeb6\x01\xf7\xb5\xf1\xd5\xae\xd1\x881\x1a\x1a\xdb\x04-&eVSmC\x8bI\xd0\xb1\xebX\x0c\xf5\x1f\xeb\xa8[;2\xc6\xb2mA\x94\xcc\xd1\x8dg\xf6\xe6x\xaca\xeax\xf3\xd7\xee\t\xd3y\xce\x87\xf3\x1f\x8a\x11\x14\xcf\xc3\xa20\xc9\xe6\x966NE-\xe2IAQ\xa5t\xe7~\x0e\x1d\xe6MF\x1dI\xce\xa8\x91\x8dQ\x8f\xc3\x17\x92\x04\xe5\xa9#l\x00o\xc2\xbb\xb3\xddh\xd2rOZ`\x17 it\xcf/qt\xf6V\x1a\xd7\xaa\\J\xd2\xc2M\xf5hmmg\x0fo\x97\xb9\xc0x@NE\x1cy@y\x05|\x153\x1aJfT\x84zy\x8b\xd3\xe6!~/j\xc6\xbc\x8d\x01\x82:Cb\xca$3\x18\x1bA\xd1e4g\x83\x9fn\xed\xfdF;\xd0\x88\x05\x0f\xe9\xe7\x0b\x89\x94\x99_\xfb\xf7\x1a\x06^\xe6\x15R\xa4Jg.\x02\x15M\xa5\x08\x18\xa0\x917\xaf\xaa\xb6\x85\nK\x1a)+\xbf\x8e\xca\xab\x9a\xbaxz0o\x08\n\xe8\xe3\xc0\xc4\x1bS\xef\x8a3L[\xe5-\x1b\x99SX\xa7\xf7\x9c*N\'\x00\x18\xbf\\O\xa537R\x199\xa5\xd2\x89+)\xf4\xe3\xb9D\xfa\x86=~=s\x0cD\xf0\xf4/}i8?\xe7\x95I\x9d\xd1\xff\x0eS\x8037Sy\x9e\r&Ry\x1b\xdd\xf7+\xa4\xf7?\xb9\xaf3\x0e\x9cg\xda*\x1fA\xac\xc8\x1c\x86\xe9\xd1X\xb4\xc2aZ\xd8\x81\x9e\x84\x0e\xd8X\xf2#\xe4\\x\x8a\xb2 \x00\x80\x02\xdetK\x87\xc6\xc8\xa4Q\xe8A\\;\x0c\xc00|\x94#\xf5\xfd\xd0<\xea\x03\x89\x0b\x8c,\x95(Q\x8fM\x07"\xe8\x83\xb9\x0fh\xe8\xdc\xfb4\x8cS\xe3PFK \xc40\x82!\xa4W\xc3\xdbW&:\xd3\x8e#\xd1\x92\x8a[[\x8d\xa7&8\xda\xcfL\x86_\xb3\xed4(\x9e;\x83Q\x9a\x8bW\xbe\xa4se\x8d\xa8\x9d\x89\x9c"\x01\x1c\xc0u\x90Y\xfc9R]}\xf3\xf9\xdf\x85\x14\xceu\x14D\xba\xcd\x02Z`ci\xb1\xbcp\']\xb7qC\xd8\x83.;fv+T\xf3\x8a\x1ah\xe7\xe1\x18\xedB\x9di\xde&\x7f\xfa\x8aS\x0c\xbc\xf1u\x8e\x12@R\xb9\x86w\xf2%\xd4\xa3k\x0c\xb3\r\xd3\x19\xe6\xf2\xdc\x08\xcb =\x10&j\xc5\'\xeb\xfd\xe8\xbb\x93q\x12\x11%\xe5\x8d\xcc\xa1LC\xf5\x0c\xaeu\x88\xd6\x7fMp\xd2=\xe7\xb5).\xb4|{0\xdd\xf3\xce\xa7j\xce\x0e\xa8\xc5\x97\xed3$\xfd\x82&\x0c\x9ds_\xd0\x9b\xb2> T\xbc\xd3\x8e\x89\xe7u\x97,\xe1m\xdd6\x8cx\x04\xa7\xb4\x01\xdaB\x88\xc5}\xb13\xa4\xdb\x84\xf0\xc8\xa5$\x1dQE\x1dCA\x06wp\x0f,f\xf2\x99A\xdf\x1c\x8d\x15Yg\xfcg\x9e\x92\xd2P\x93N^M\xe9Rx\x9b\x18 \xf4\xd7\xa6E<\x0b<\np\x1e\x9c\x03\xbcj\x08G\xd0\xa7\\Sv0\x82\x84\x84\x82z\x03Y\x08u\xa8\xae\xc12\x88\x8eh\x00"{~d\xa7\x91\x07M\xc6\x86?\xa4\xd1\x8b=\xba\x18_q&8\xb3:\x13\x80F\x00\x14\xcd\xd9\xe0O\x91\xf1\x15&\xd3\x9b\xc5\x86A\x81=\xf8[\xa2\xbc\x14\xa9g\xf2\xe7^\xecm\x05\xdd2\xcc\xcd{\xd9L\xd2\xeeK\x1a\x83\xa1c\x92\xab\xe4\xefP\n\xca\x98\xeb\xc0S\x91f\x82\x98\x80BS\xbbh\x0f\t\'_<\\\x8f\x171\xa9\xdb\xcc\x88\x0e\x11\x86g\x01<\xec>\x1e\'\x92\xcf\x03\xff"\n\x8e.\xa7\xc4\xf4\x1a6D#\xa7\x1e\xeb\xd9x\x18\xa7\xa2\xa5\xff\x0b\xd2mz\x9f\xe1\xf6:\xc7\xea+\xf5\xf0\x1e\x8d]\xe2A3\xd6\xf8\xd0\xac\xb5\xbeR\x17\xa7\xaf\xf6\xa6)+\xbc%\xc5\xaa\xb9\x1fT\x14D\xd5u\xe7L\xa3\xb5\xc9b\xc3<\xd2\xe6P%e\xa0po\xf9)R\n\xbd\xc6J\x96\x0b\x0e\x800\x97\xf4\xc8\x93\x8ce#\x98z7\x90S\x19\x1b\xa0\x807\xb7\xa1\xa9\xcd \x9a\x1f\xd1m\xb7l1\x0c\x9e5f\x89;?\xabJ\xeaXO\xeaoxV6\x83\x19l\xb4\xbavA\x1f\x9b\xcf(\xf2\xfb3\t\x1d\x9c\x8c\xa3\x1e\xe8\x14(\xb5\xa2\xbaI\x9c\x0b\x0e\xb5\xfft\xbc^\xad\x16\xa4\xc7\x8e\x84zd\xb5a0j\x19\x85\xec<\x1a\xad\x9b\xd4\x1b\x1f\xddeO\x8d\x10\xb2YT\xfa\xe4\xea0"\x03y\x1e\x1b\x8a\xf0\xbe\xee\x9ce5Y\xf3\x0f/\x95\xdc.hk\xa6+]\xe1\xbac\xa8\xd1\xf5\x94q\xb0^\xa45h\x81G/%S\x18\x1b\x02F\xc0\x05\x8e\xd4f\x84o\xa1\xe0C\x01\xf1`@\xb0`s\x80\x9eq\xc6,v\'W\x9f\x02\xeb\r\x83I%\xa6W\xeb\tx\xc8\xe3\xa8\x01k\xbf\x0b\xa3\xdf\xb9\xa8\xa5d\xd6\n)\xb4d\x83Q+|\x99E+E~\xbe\x9d\xbf\xd5\x1b\x86z\x87\xc2\xab\xa4\x98\x8f\xd7\xfbRKK\xefho\xa0\x10(\xf6P\x00 \xff\xb7YXk\xb1\'\x80\xcd9|\xef\xe4/\xbc\xf4\x8c\x03@e\xb5a0@\xe0\x0e\x9eM\x14\x83\x18"\x1e\x14\xb6\x05v\x81B.Q\x07\xb0\x80\xc7\r\x9f\xd0b\x9a\xa1\xf5\xf4\x19\xcc5\xfc\xd8\xf3\xad\x1dp\x0cE\xdb\x82\x1c\x8fy\xf4f+\xc1\x9a\x14\x8e\xdf\x03\xee\xff\xc9s\x03\xfcW;\xf8\xd9[\xe9\xba\xe7=\xb1apc13k4\xb9\xf6\x9f\x8e\x93\x9e\xcb{\xcc\xd6\x15\xb2\x88h\xc2\xe6\xecbx\x99\x9a]\xf3\xd8\x8dA\xba\x81A\x04\x822\xf2\x02Y\xb4v\x80\xc8\x01\x96*\xc8h\xde\xa6\x00\x8b6\xae\xb749s\xef\x03\xe4\xdf~(J\xcf\xb1G\xf3\xdc\x95\xe8\xb3\xb1*\x949\x05\xd5r>\x858\t\xb1\x0f\x1cg\xd5\xaeP6\x88\xab\x10\xb7\x0e\xf9\xc2\x91>^\xe7\xc7\xa8\xa8P6\xcc\xdc\xd8\xc3u\x06\x1b\x89\x1e\x0e$t\x88\x83\xd6n\x14\xa4\x9e\x01\xdah\x1e\xca\xa4\xd3\xd1=W\xa7\xb1)\x17\x16\x0fe\x02\xfc\x03\xe9\x0e5\xa1\xa4\xacQ\xeadUm\xb3\xa4\x1b\xa4c\xfcN\xa3\xe9=!\xd5\x89\x8b\xbe\xe2H\xb8\xe0\xe0w\xdc:\xa2\xdc\xa6[\xb9\x96\x17\x04\xc6\x0c\xf6\x9b\x9aU#R\xfeg\xdb\x82h\xe0x\'\x9d\xd7\x8e]\xeaA.\xde\x05\xd4d"\xdfc\x82`\xc3\n\x0c\x07\xa3F\x14\x817Y\xb3!H\xb5/k\x89\xe0s\xec$K\xb6\x06\x8a$\x04D\x99\xc3\x88*"\xa1\x9c\xa1w>\x9d\xfb#\x9d\x0e\xfc\x1aO\xab\xbf\r\x959C\x01\x80\x82\xb0a_8;J,\xfdv3M\xc8\'\x90"\xd6\xd9\xd2\xaa\xe9q\xc3\xc09\xa0\t\xaa\xd5\x08\xbb\x1f"\xe4}6=\xfd2p\x8f\x13L\x02\xe1\t\xc0\xeax\xe1\xc8\x05\x8c:|\x0b\xc4\x0b\x8d\r\xb4k\xe7~\xe5\xa7\xd5\xaf\xee\xd1\x8d\xbbY\xe2\xcd\x1d\x02\xa5F\xaf\x15`\xc9\xc0\x06+=\xa4\xc139\xad\x1e\x8fe#$\x08Y\x05w\x80Z\x0e\x14\x08\xc2\xda_\xa5\xd7)}$e\x93\x10q\x9fl\xf0\xa3\x9f\xce%\n\x12\x03_\xea\xc9\xbdjd\n`\xc7s\xed\xcc2\x0e\xb4\xe6\xbbP\x11kmz#D!,\x02\xb7OY\xe9\xa5\xe3\x16#\x17>\xa4\x90\xe82\xa3\xf7@\x05V\x10\x95\xb2)0\xec\xba}a"s\xc4\xa6T\x9a\x95\xe7\r\x07\x88\xaa\xe2\x14\xa6\xc4Q\xa4Z\x05\xf6\x83\x9b\xe1\xd0\x84\xb2Az\xbf\xe5\xe7\x0c\x1c\xeb$R\x11\x1ac\x8a\x92\xdd\x13\xc0\x01\xb5\xfa\xdbc\xb1z\xe0i\xf1\xd7\x81\x14\x93T\xd9\xf3\x86Q\x17bgNm T\xca\x06\xac\xfc&D\xd4fc\x1b\x8c\x14\xa2\x1cjP_\xd0\xa4\x16m\t\xa4\xdb\x8cbp\xafr\xa0\xe1qCH\xa0\xf6\x19P\x03\x06\xd9\xba\x88\xb8i\xcb0\x15\xd1\t\t\x08\x84\xef\xd8\xe5$\xda{*N\x94\xe8u{\xc3h\xf6:_1\x12\xeeQ\x93HD\xe0[\xd3]\x99\xc8\xe6\xb0\xe35w\xdb8\xe8O\xc5\xa5VI\x7fKq"\x91\xa6\x98v$\xa5W\xf5\x9eaD6\xe7\xda\x03`\xf0\xe6\xb4\x8e\xbe\x0bN\xda@\x9e\xaf\xd56\xda\xd4Q\x86~\x0b\xb0\xfc\xf3&<\x1dpr\xdeF\x7f\xd9\x18\xc8\xf4\x8f\xd3\xe9\xa0\x89A=\x86`\xf9)\xdf\xb7\xf7\x978\xba\xca\xa4\x13ml\xa0E\xd45\xa4K\xcc\x05\x86\x86f\x06n\x12\xc7\xd1y\xc51K$\x15\x10h\xc3yL]\xe9#R\x94F\xa3\xb1:\xa3\xa0\x86\xa4e\xd72\xb9\x8e\xa5\xb7\xa7w\x1ev\x81x\x8b\xfa\x06\x9e\xd3\xab\x86Q\xd2\xda\n\x8e\x14\xc5\xeb&}\xee\xd5\xc5\xe3$\xdf6\xb5ShL\x19\x13\xceb\xfa\xf5V\xc7i\x14H+/\x8dwR\xe9K\xf6\xa2E\xa1\xd9\x95\x9e[\xdb\xa5\xf9f\xa8R\xdc\xbc\x9b-F\xa8\xe69\xa0w\x82\xbf\x99S\x03d\xd34\x8f$*!\xf1@\x17{y\xa2s\x17\x07\xd9\xb0?\xdch\x9b\x00\xf7C\x06J\xcf\xa9\x95\xe8\xc6o\xf0\xde\x9c\x82z\x06G\xb5\xd2\x12@\xadR\xd6\x87\xc3\x1d\x8a\xc0\x89\xbd\x19\xb7\xd4]P$\xa0t\xaf\x1aF\x99\xac\xb3G\xbe\xa4\x01\xa5~x\x05\x17\x19\x95\xd9\xb1iH\x81\x80\xe2(\x80.\x9e\xf9R\xc8\x073\x0c\xef\xa7J-\x90\\\xd0\xd9L\xc9\xac\x16hk*\xad@\x1e\xb16\xe5\x14\x14\xd7K\x13\xcdv\x85\x97(\xd4\x9d\x86q\xa4e\xdb\x83)*\xa9\xa2K_\x08\x03\xde\x8ecY\x8b\xb6\x04\xd1\x98\xc5\x1er\xc6l>\xf3)\xb4\x08p\xdfL\xe6l\x00\x15h\t\xa8Ug\x88\x9c\x00\x19\xf9LAz\x1c\x95\x99*r\xc1\\\xf4\xd1\x8b\xe8P\x7f\x1d\xa4\xb7a\xaakh8\xa0?A\xa6\xc7\x01:\xa4Be1\x10\x0ea\x1cx\xa7\xb5g\x01\xcc\xaa\xe9\xfcL4\xb9\xb0\xa10\x86Z\x15^\xbd;T\x90\xa41\xe7\xc2\xbap2\x08]\xd7\xbe&\x9at\xea\xda\xf5\xcaD\x17\xaek~\x8cd\x93)\x99\x1d\xadU\x0b.z\xdd0\x18I\x195\xbat\x86\xa2\xba|{\x10\xe7\xd8\x1a\x8b#\x0e\x9e\x1f\xc9\xfc\x03\x06}\x9b\xa3E\x179l\xa8C\xe7\x13%\xd2z\xda00v|j%\xadg\xb4\xa8\xdeH@\xec\xfd\xa7\xe2)\x97=\xdb\xd8;\x91.\x81H?Z\xe5\xad#\xda8-\x04GzovG\x87\x15\x91\x04c\xacg\xc0s\x8c\t\xf5\x03\xe6K\x85Ln\xd5\x0e\xf6\x97\x18\x06\r)\xc50\x88\x1a\xf4r\x0c{*\x96\xb4\x08bR\xaa\xe8K\xf6\xd6\x17\xc7t\xa2\x18\xa0\xbe\x80\x88\x92\x1e5\x8c8\x03\xd7\x19\xa4\xdcI\xcb;!?\xa2\x05\xf2\x11\xea\x84\xc6\xc4\xfb\xc0\xbb\xb0\xde\x07\xfe\x05t\xfe\xcft:|1\x91\x0e\x9c\x89\x17E\x03\xfd!\xf4\xa0 \xf3Ce\x8eJ\xac\x90}h\xd1:\x96z\r\x7fI\x8d\x81\x17\xa1\x90*^\x07rg\r\xaaA=qc\xef\xc2\xfd\xcf\xe8\xa0\xb0\x03m;\x14%\x1b\xd2S\xc6\xc1\xdc2\xf3jE\xefS\xd2\x18\x9c`\xe4BwAv\xc6j\x8bz\xbd\x98KCS\xab\x14q\xe5\x14\x11P$\xd4\x0f\x18\x1c\xbd%\xfcW9\xa0\xd1\xadF\x99\xb5\xa2\x1f<\x0b\xa7,mU2\xf7\x08\xce\xbf\xd6\x9c\xcb\xeah\x98\xb5\xd1\xe4\xe5\xfa\xc7v\x07sJ3\x84\xe0\xd6\xae\x0bF)\xadl\x94\x14\x03\x90\xa1\xbc\x03\x9dV\x1c\xa3Bg\xd5\xdc{z\xea\xb0\xa2\xd5\x86\xa9g&\x0e\xf4d\xc9B\x9d\x18\x02\xbe1\xb5\xf3\x94\xc9f.\xe4\x86_\x00<\xc9\xbb\xd7194\xec\xb1w\xf7k\x81\x8e\xc8n\xa1\xb0\xb82\x89\xc0\xb7\xb4Q\x89\x9a8\x91\xd3\x19\xa0\xf7\xe3\x8c\xd2\x93\xc3ju\x19\xc5\x18\xca\xb1\xb9f\x94\x107^,X\xb6\xd2\\\xc3\xd7\x02 \x93\xd6n"j\xcd\x96\x1f\xa3\xba\xb4g\xe3\x99E[\xfbL\xdc\x87V0`.\x14q\xcc\x15\x02(\xd4^\xbb\x03\x91\xd2\xebohh\xfbK[\x03V\x19\x06$\xea\xf8\x95\x14f\xc7>\xf4\x87k\xb6\xb0hC\xc2\xa5\xd1\xd6\x16\xb0\xe4~Z\x1e\x00\xa8\x0b\r\x0c\'%\xad\x1dP\x89A\xf0\xd4\x86\xc1\xa7"\xc1Q\xa5\x16\x1b\x06$\x12\xcf\xc1w+h\xd4\xa1\r\rX\x8c\xf3\xd7\xa8Y\xcfr\x04\x82\xf9\xff\xc6\x86B\x8f\xff\xef\xf8\xa0\xca*\xc3\xa41w\xc0B\xfa\x8fu\x12\xad\xe7\xdc\xed4\x91\xfd\x95\x83}\x80\xaf\xf8P\x07\xb29\x8e\xe9\xe8\x8e\xfb\xd8\xde\x15\xee\xd1\x9dt\x83\xcdT\x94h\xa5(O\xf8\xcc\x83\x02"K\xcd\xeavh\x07t\xf4\xe4[\x05\r\xe1\xd4\xe6\x1aFx\xc3\xe6=\xd0\x9e\xb0t\x92\xe3\xb9P\x93\xf1\x15BtRe\x8f\x1f\xe6\xe8U\xc3\x00q\xe0\x84\xe1\xf8\xa5\x9e\xbaO\xd9\x80\xd9\x0f\x9eM\x90~\x8cGP\x91D\xc9\xf1\xab)b\xb4>*Ew\xc1\xe6@\n\x8d-\xeb\x16ZBsi\xc8\'\x9d\x9fF\xe0\xc8\xee\xc6\x03\x11B\xf8\x8c\xcd\x15\x07 @Pa\x08\x08\x84\x13\x198\xa0\x15\x80\x93\x95Ps!\xf9\x0c\xe1H\xc1\xe7z7\xb8\x8e\xa0m\xf14\x8c\'6\x0c \xa0\x9bo\xbe\x1cvPR\x94\xf2\x11\x0f\x0c\x04U\x17\xc5\x12\x02`\x1f\xb5\xf8\xb7\xc2G\xa0.P\x95\xb5\xd1RQ\xd5$\xe4T}\xea\x12\x1b\r]\x0b\x82d\x17\x89\x87\xe1\xe8\x83\x80BQ\x8dq\xe6\xab\x8f\xb6\x19\x87\xfa\x01\x99\x07\xad\xe7C\x17\x93\xe4SC\xdc\xff4}j\xf8\xc4\x86A\xe1G\xde\x05t\x9c\xb5\xc6G>{\x1b8\xceY\x16\xacD\x86.\xcdhQ\xcdl\xce\xd7 TH)\xea|\rl\xdf\xd1\xad4\r/\x95\xbf\xc3!\xf0\x19\x9dZ\xd4\x84z\xbc\x8fS#N\xaa\x18\xdbT\xfc\rQ\x8c\xb4\x8b\xc3\x19\xe39\xe5\xe1\xe8\xd0\xc6\xef\xc3\xe9\x92}\x06E\xb0A*\xab[\xe8i\x1cV\xd5\x18\x10,H\xe4(\xfc[\x0eFq\xa4\xf8\xd0[3:I\x1f"\x08r\t\x8e5\xed>\x11+\x1f\xc8\xb6\x18\x902\x1c\x14\x04\x12B\n\xaa\xaem\xee\xd2\x97W\xa06N\xda\xa0^\x1d\xbb\x92\xa4;\xc9\x08\xcf\xc7\x91\xd9\xaf\x0fF\xcaq*S,\xbc\x86\xa3\xe0!G\xcca\x8e\x8a\x93\xd7R$\xc5\xe6\x16\xd5\xd3?at\x8b\xf9C\xd2\x8eO\xad\x96\xef)\xf1i\x06\x0eL\x031m;\x14M\xa7\xae\xa7\xc8\xb9\xab\xca\x9af\xa3\x1b\x87O\xab\xf15\x19$|\xcf\xa0B\x89\xc2\x1a\xed\xe1\x08\x18\tFi\xe6\x08C\xa4\xcdY\xef\'mWE\x16A\x8d\x81\xc1!\xa3\x9b;\xd3\x85(\xc3\x91X\xb4\x1eP\xc8[\xdb4\xff\x98O\xd6\xff\x0f\x10\xca\x07\x8d\x94e\xfc\xe8\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 15:02:09,192 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:02:09 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=j3hod8n2musivbm3dlk3rw9j;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 15:02:09,193 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:02:09,193 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 15:02:09,193 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 15:02:09,193 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:02:09,193 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,194 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,194 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 15:02:09,194 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 15:02:09,195 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:02:09,195 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])", 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'消息': 'FAILURE#请求验证码识别', '模式': '200'}]", '', '成功', '', '2018-02-05 15:02:09')
2018-02-05 15:02:09,247 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:02:09,247 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:02:09,248 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 15:02:09', '0天 0小时 0分 0秒')
2018-02-05 15:02:09,311 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 15:02:09,311 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 15:02:09,312 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 15:02:09,318 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:02:09,319 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 15:02:09,319 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:02:09,319 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:02:09,319 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 15:02:09,319 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:02:09,320 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,320 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,320 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 15:02:09,321 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 15:02:09,321 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,321 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,321 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 15:02:09,321 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:02:09,322 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,322 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,322 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 15:02:09,322 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:02:09,322 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,323 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,323 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:02:09,323 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 15:02:09,324 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 15:02:09,324 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 15:02:09,324 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:02:09,359 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 15:02:09,362 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 15:02:09,363 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:02:09 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 07:02:09 GMT')]
2018-02-05 15:02:09,363 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:02:09,363 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 15:02:09,363 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 15:02:09,363 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:02:09,364 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,364 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,364 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 15:02:09,365 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 15:02:09,365 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:02:09,366 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, "OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'消息\': \'FAILURE#灯塔用户登录失败\', \'模式\': \'"result":200\'}]', '', '成功', '', '2018-02-05 15:02:09')
2018-02-05 15:02:09,436 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:02:09,437 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:02:09,437 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 15:02:09', '0天 0小时 0分 0秒')
2018-02-05 15:02:09,505 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 15:02:09,505 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 15:02:09,506 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 15:02:09,514 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:02:09,515 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 15:02:09,515 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:02:09,515 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:02:09,516 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 15:02:09,516 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:02:09,516 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,517 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,517 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 15:02:09,517 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:02:09,517 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,518 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,518 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 15:02:09,518 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:02:09,518 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,519 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-05 15:02:09,519 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:02:09,519 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 15:02:09,520 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 15:02:09,520 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 15:02:09,520 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:02:09,539 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 15:02:09,539 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 15:02:09,539 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:02:09 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 15:02:09,540 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:02:09,540 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 15:02:09,540 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-05 15:02:09,541 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 15:02:09,541 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 15:02:09,541 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 15:02:09,541 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:02:09,542 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,542 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer'}
2018-02-05 15:02:09,542 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 15:02:09,543 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 15:02:09,543 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:02:09,544 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\'消息\': \'FAILURE#不符合断言时返回的消息\', \'模式\': \'"qq"(.+?)"\'}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 15:02:09')
2018-02-05 15:02:09,611 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 15:02:09,611 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:02:09,611 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:02:09,611 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 15:02:09,612 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:02:09,612 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,612 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer'}
2018-02-05 15:02:09,612 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 15:02:09,613 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:02:09,613 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,613 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer'}
2018-02-05 15:02:09,613 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 15:02:09,614 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:02:09,614 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,614 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer'}
2018-02-05 15:02:09,614 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:02:09,615 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 15:02:09,615 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 15:02:09,615 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 15:02:09,615 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:02:09,632 APIUnittestTestCase.py[line: 157] INFO: 正在对服务器返回body进行解码
2018-02-05 15:02:09,633 APIUnittestTestCase.py[line: 180] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 15:02:09,633 APIUnittestTestCase.py[line: 181] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:02:09 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 15:02:09,633 APIUnittestTestCase.py[line: 182] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:02:09,633 APIUnittestTestCase.py[line: 185] INFO: 正在提取目标返回结果值
2018-02-05 15:02:09,633 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 15:02:09,634 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 15:02:09,634 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 15:02:09,634 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-05 15:02:09,634 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 15:02:09,634 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 15:02:09,635 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 15:02:09,635 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 15:02:09,635 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-05 15:02:09,635 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 15:02:09,635 APIUnittestTestCase.py[line: 188] INFO: 正在执行断言
2018-02-05 15:02:09,635 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:02:09,636 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 15:02:09,636 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:09,636 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 15:02:09,636 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 15:02:09,637 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 15:02:09,637 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 15:02:09,637 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:02:09,638 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, "OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])", 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', "[{'消息': 'FAILURE#用户名不为dataviewer', '模式': {'userName': 'dataviewer'}}]", "{'dic': {'atten': {'atten': 'value'}, 'userName': {'userName': 'value'}}}", '成功', '', '2018-02-05 15:02:09')
2018-02-05 15:02:09,705 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:02:09,705 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:02:09,706 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 15:02:09', '0天 0小时 0分 0秒')
2018-02-05 15:02:09,777 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 15:02:09,778 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 15:02:09,778 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 15:02:09,786 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:02:09,787 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 15:02:09,787 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:02:09,787 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:02:09,788 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 15:02:09,788 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 15:02:09,788 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 15:02:09,788 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:09,789 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 15:02:09,789 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 15:02:09,789 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:02:09,789 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,790 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:09,790 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 15:02:09,790 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:02:09,790 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 15:02:09,791 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:09,791 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-05 15:02:09,791 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 15:02:09,791 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 15:02:09,792 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 15:02:09,792 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 15:02:09,792 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 15:02:09,805 APIUnittestTestCase.py[line: 239] INFO: 正在对服务器返回body进行解码
2018-02-05 15:02:09,806 APIUnittestTestCase.py[line: 262] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 15:02:09,806 APIUnittestTestCase.py[line: 263] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 15:02:09,806 APIUnittestTestCase.py[line: 264] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:02:09,807 APIUnittestTestCase.py[line: 268] INFO: 正在提取目标返回结果值
2018-02-05 15:02:09,807 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-05 15:02:09,807 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-05 15:02:09,807 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-05 15:02:09,808 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 15:02:09,808 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 15:02:09,808 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-05 15:02:09,808 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 15:02:09,809 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[<Element 'return' at 0x00000000042650E8>]
2018-02-05 15:02:09,809 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[<Element 'return' at 0x00000000042650E8>]
2018-02-05 15:02:09,809 unittesttestcase.py[line: 403] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:groupCode_1-dataviewer
2018-02-05 15:02:09,809 APIUnittestTestCase.py[line: 271] INFO: 正在执行断言
2018-02-05 15:02:09,809 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:02:09,810 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 15:02:09,810 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:09,810 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 15:02:09,810 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
},
{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
}
]
2018-02-05 15:02:09,811 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 15:02:09,811 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 15:02:09,811 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 15:02:09,811 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 15:02:09,811 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 15:02:09,812 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 15:02:09,812 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000042650E8>]
2018-02-05 15:02:09,812 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 15:02:09,812 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 15:02:09,812 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 15:02:09,813 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 15:02:09,820 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 15:02:09,820 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 15:02:09,821 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 15:02:09,821 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 15:02:09,821 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 15:02:09,821 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000042650E8>]
2018-02-05 15:02:09,821 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 15:02:09,821 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 15:02:09,822 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 15:02:09,822 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:02:09,822 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', "[{'消息': 'FAILURE#获取的实体集团卡号错误', '模式': {'.//return': 'dataviewer'}}, {'消息': 'FAILURE#获取的实体集团卡号错误', '模式': {'.//return': 'dataviewer'}}]", "{'xpath': {'groupCode': './/return'}}", '成功', '', '2018-02-05 15:02:09')
2018-02-05 15:02:09,897 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 4 步, 步骤ID: 4]======================
2018-02-05 15:02:09,898 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 15:02:09,898 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 15:02:09,899 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 15:02:09,899 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:02:09,900 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,900 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:09,901 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 15:02:09,901 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:02:09,902 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,902 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:09,903 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:02:09,904 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";  data：
2018-02-05 15:02:09,904 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 15:02:09,912 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 15:02:09,913 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 15:02:09,913 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 15:02:09,914 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-02-05 15:02:09,915 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:02:09,916 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 7, 4, 4, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE user_name = "dataviewer";', '', 'body', '', '', '', '成功', '', '2018-02-05 15:02:09')
2018-02-05 15:02:09,977 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 5 步, 步骤ID: 5]======================
2018-02-05 15:02:09,978 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 15:02:09,978 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 15:02:09,978 test_case_step.py[line: 97] INFO: 执行操作：update_record
2018-02-05 15:02:09,979 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:02:09,979 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,979 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:09,979 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 15:02:09,979 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:02:09,980 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:09,980 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:09,980 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:02:09,980 mydb.py[line: 81] INFO: update_query：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 15:02:09,987 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:02:09,988 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 7, 5, 5, '操作数据库', 'ddtm', 1, 'update_record', 'http', '10.202.95.88', 8080, '', '--', 'UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"', '', 'body', '', '', '', '成功', '', '2018-02-05 15:02:09')
2018-02-05 15:02:10,052 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 6 步, 步骤ID: 7]======================
2018-02-05 15:02:10,052 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 15:02:10,053 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 15:02:10,053 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 15:02:10,053 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 15:02:10,053 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:10,053 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:10,054 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122
2018-02-05 15:02:10,054 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:02:10,054 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:10,055 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:10,055 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;
2018-02-05 15:02:10,055 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:02:10,055 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:10,055 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:10,056 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:02:10,056 mydb.py[line: 96] INFO: query：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;  data：(1033553122,)
2018-02-05 15:02:10,056 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone,user_name, atten FROM ddt_user WHERE qq= 1033553122 ORDER BY id desc;
2018-02-05 15:02:10,064 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414', 'dataviewer', '数据监视器'], flag：True
2018-02-05 15:02:10,064 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 15:02:10,064 unittesttestcase.py[line: 407] INFO: 提取数据库查询结果
2018-02-05 15:02:10,065 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 15:02:10,065 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:02:10,065 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 15:02:10,065 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:10,066 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 15:02:10,066 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 15:02:10,066 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 15:02:10,066 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 15:02:10,067 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 15:02:10,067 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:02:10,068 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 7, 7, 6, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;', '1033553122', 'body', 'db列值相等', "[{'消息': 'FAILURE#姓名不为dataviewer', '模式': ['dataviewer', 'dataviewer']}, {'消息': 'FAILURE#手机号不为18189001424', '模式': ['18159001414', '18159001414']}]", "{'db': {'user_name': 2, 'phone': 1}}", '成功', '', '2018-02-05 15:02:10')
2018-02-05 15:02:10,138 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 7 步, 步骤ID: 6]======================
2018-02-05 15:02:10,138 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 15:02:10,139 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 15:02:10,139 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 15:02:10,139 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 15:02:10,139 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:10,139 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:10,140 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122, "dataviewer"
2018-02-05 15:02:10,140 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:02:10,140 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:10,140 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:10,140 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";
2018-02-05 15:02:10,141 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:02:10,141 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:02:10,141 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:10,141 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:02:10,142 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";  data：(1033553122, 'dataviewer')
2018-02-05 15:02:10,142 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE qq= 1033553122 AND user_name='dataviewer';
2018-02-05 15:02:10,149 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 15:02:10,149 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 15:02:10,150 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 15:02:10,150 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:02:10,150 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 15:02:10,150 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName2_1': 'dataviewer', 'userName': 'dataviewer'}
2018-02-05 15:02:10,151 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 15:02:10,151 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 15:02:10,151 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 15:02:10,151 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 15:02:10,151 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 15:02:10,152 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:02:10,152 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 7, 6, 7, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";', '1033553122, "dataviewer"', 'body', 'db列值相等', "[{'消息': 'FAILURE#姓名不为dataviewer', '模式': ['dataviewer', 'dataviewer']}, {'消息': 'FAILURE#手机号不为18189001424', '模式': ['18159001414', '18159001414']}]", '', '成功', '', '2018-02-05 15:02:10')
2018-02-05 15:02:10,218 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:02:10,219 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:02:10,219 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814129', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '成功', '', '2018-02-05 15:02:09', '0天 0小时 0分 0秒')
2018-02-05 15:02:10,288 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 15:02:10,288 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 15:02:10,288 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517814129', 1)
2018-02-05 15:02:10,289 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517814129 AND plan_id=1
2018-02-05 15:02:10,294 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 15:02:10,294 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517814129', 1)
2018-02-05 15:02:10,294 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517814129 AND plan_id=1
2018-02-05 15:02:10,301 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 15:02:10,301 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517814129', 1)
2018-02-05 15:02:10,302 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517814129 AND plan_id=1
2018-02-05 15:02:10,309 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 15:02:10', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=4, case_fail_num=0, case_block_num=0 WHERE execution_num='1517814129' AND plan_id=1
2018-02-05 15:02:10,368 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 15:02:10,369 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 15:02:10,370 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 15:02:10,370 main.py[line: 38] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-02-05 15:02:10,370 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行成功', remark='' WHERE running_plan_num= 1517487657
2018-02-05 15:06:03,715 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 15:06:03,715 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 15:06:03,716 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 15:06:03,716 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 15:06:03,716 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 15:06:03,716 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 15:06:03,716 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 15:06:03,723 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 15:06:03,723 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 15:06:03,723 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 15:06:03,723 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 15:06:03,724 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 15:06:03,729 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 15:06:03,730 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 15:06:03,758 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 15:06:03,758 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 15:06:03,772 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 15:06:03,773 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 15:06:03,774 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 15:06:03,774 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 15:06:03,780 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 15:06:03,780 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 15:06:03,781 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 15:06:03,787 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 15:06:03,787 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517814363', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 15:06:03', '', '', 0, 0, 0, 0)
2018-02-05 15:06:03,850 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 15:06:03,851 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 15:06:03,851 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 15:06:03,859 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:06:03,860 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 15:06:03,860 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:06:03,860 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:06:03,861 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 15:06:03,861 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:06:03,861 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 15:06:03,861 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:03,862 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 15:06:03,862 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 15:06:03,862 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:06:03,863 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 15:06:03,863 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:03,863 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 15:06:03,863 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 15:06:03,864 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:06:03,864 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:03,864 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:03,864 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:06:03,865 APIUnittestTestCase.py[line: 64] INFO: 正在发起GET请求...
2018-02-05 15:06:03,865 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 15:06:03,865 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:06:03,960 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 15:06:03,960 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11)IDATx\xda\xd5[\x07{T\xd5\x16\xcd\xdf\x10,\x08\xf8T\x9e\xfa,\xe8C\x04\xe95 UA:\x82R\xa4\tAx\x14\x11)"*\x1d\x01\x91^\x04\x04S!\x01\xd2{\xef\xbd\xf7\xde{\x1b\xf6\xdbkg\xee\xe4\xcedf\x18&\x89\xe2\xf9\xbe\xfb\xc9\x17\xe7\xde{\xce\xd9m\xad\xb5\xcf\xb5!3c\xc7\xd1\x18\x9a\xb8\xcc\x93\x86\xcd{H\xef\xcct\xa3\xd7\xa6\xdc\xa5\x7fMp\xa6~\xa3\x1d\xe9\xb9\x11\x0e\xd4g\xb8==3\xac\xf3z\xf6C{za\x94\x03\r\x1c\xe7D\xff\xb6u\xa1%[\x83(!\xad\x9a\x1e=z\xa4\xf7\xdc\xf8\xb4*\xfa\xe9|\x12]\xfc3\x83\xee\xf9\x14PDB\x05\x15\x944t\xf9\xdd\xd3<\xca*\x9b)$\xa6\x9c.\xd9g\xd2\xba=\xe14j\xa1;\r\x9a|\xb7\xcb\x9e\xbc4\xde\x99\xa6\xad\xf6\xe1\xf5&RrF555\xb7Y\xb4N\x1bs\xffs\'\x1bf\xf0,7z{\x86\xab\\Oj\x98\x85\x9b\x03)*\xb1\x92\xda\xdb\xf5\'\x92\xc8\x13<r9\x99.\xdc\xc9\xa0\xbb\xde\x05\x14\x1e_A\xf9\xc5\r\xa4\xd1<\xbd\x86ik\xd3PEU3;Z\x159z\xe4\xd1\xaec\xb14{\xad\x1f\xfd\xf7\xe3\xfb4`\xac\x93\xac\xff\xf9\x91\x0e\xf4\x9fi\xf7h\xeaJo\xda\xf4C$]u\xca\xa4\xc0\xc82J\xc9\xac\xa1\xa2\xb2Fjlj\x935v\xdb0\xe7y\xe3^\x9fzO\xb7\xf10\xc6\x0b\xfcrL\x00F0g\x98A\x93]h\xceW\xfe\xe4\x1bVB\xcd-\xedz\xcfM\xcb\xa9\xa1\xd37\xd2\xe8\xdc\xedtr\xf6\xcc\xa7\x90\xd8r\xca)\xac\xa7V^\xfc\xd38\xb0\x91\x88j\xcc\xf9\xf3\x1d\xc14x\xa6\xab\xacU\xbdv\xec\xc9,6\xd4\x0fg\x13\xc8\xcd\xb7\x902\xf3\xea$:\xac\x1df\r\xe3\x17^B\x138\x95\xa9\'`\xeeR\x0c\x03\x0fz\x95\r\x83\x10vp\xcf\xa3\x9a\xbaV\xbd\xe7\xe6\xb2\x11\xae\xb07\xfdz3\x8d\xec\x1f\xe6Q`T\x99,\xa4\xb1\xb9\xfd\xa91DEu3\x85\xb2\xc3\\r\xc8\xa4\x8d\xdfG\xd0\xf4/}8:\xdc\xc4\xe9\xfa\xf0Z_\x1c\xe3H\xef\xcfy@\x8b\xb7\x04\xd1Q\x8e~8`JV\r\x95V4Id\xb4[\x18\x19V\x19&\xbb\xa0\x9e\xd6\xed\r\xa7\xbe\xda\xc8@z\x9a\xce\x9bm\xfb\x85\xb7\xa44s\x06z\x91\xd3\xdd\xa8E\xeet\xfa\xf74*)o\xd2{nie\x139y\xe6\xd1\xc9k\xa9\xf4\x87k\x0e\xf9h\x17eh\xc0\xbfk`c=\x83\x8b$:\xde\xe5Tn\xb8\xbe\x97\xd88\x8b\xbe\x0e\xe4\xb5\xa5J\x9d\xa9d#\xf6\xf40k\x98\xfa\xc6V\xba\xe6\x94E\xcf\x8e\xe8\x98\xd0\xcb\x13\x9dh\xc3\xbe0\x8aL\xa8$\xef\x90b\xba\xcc\xde\xb4\xf3H\x0c\xcd\xe5\x94\xf5\x1e\xe7Z\xc3\x05\xbc:\xc9\x85\xb6\x1f\x8e\xa6\xbc\xa2z\xbd\xe7b!7]\xb3i\xeb\xcf\xd1t\xfcJ2GM.\x85\xc6\x95Sai\xa3.\x07\xab\xaf\xde\x88\x08\\\xa6\xf2=\xeaIx|9\x8d[\xea\xa1\x97\xae_\x9d\xe4L\xcb\xb6\x05\x93Oh\te\xe4\xd6ReM\x0b\xb5\xb4jze\x8e6\x8f\xfbAvA\x9d\xa4%er3\xd7\xf8R]}\xabL\xa6\xbe\xa1\x95\xf2\n\x1b(&\xb9\x92\xdc\x03\x8b\xc4\x88\xbbO\xc41\x1a\x0b\xe6Ey\xd2\x9b\\\x087\xec\x8f\x90\xd4\xd5nP\xd8\xf7\x9d\x8a\xa3wf\xb8\xd1\x07\x9f>\xa0)\\,\x17o\r$\xbb\x83\x91t\xe4b2\xddb\xa3\x05D\x94Rfn\x9dx/ru\x13\xa7\xb9\xf6v\xeb6\x01\xf7\xb5\xf1\xd5\xae\xd1\x881\x1a\x1a\xdb\x04-&eVSmC\x8bI\xd0\xb1\xebX\x0c\xf5\x1f\xeb\xa8[;2\xc6\xb2mA\x94\xcc\xd1\x8dg\xf6\xe6x\xaca\xeax\xf3\xd7\xee\t\xd3y\xce\x87\xf3\x1f\x8a\x11\x14\xcf\xc3\xa20\xc9\xe6\x966NE-\xe2IAQ\xa5t\xe7~\x0e\x1d\xe6MF\x1dI\xce\xa8\x91\x8dQ\x8f\xc3\x17\x92\x04\xe5\xa9#l\x00o\xc2\xbb\xb3\xddh\xd2rOZ`\x17 it\xcf/qt\xf6V\x1a\xd7\xaa\\J\xd2\xc2M\xf5hmmg\x0fo\x97\xb9\xc0x@NE\x1cy@y\x05|\x153\x1aJfT\x84zy\x8b\xd3\xe6!~/j\xc6\xbc\x8d\x01\x82:Cb\xca$3\x18\x1bA\xd1e4g\x83\x9fn\xed\xfdF;\xd0\x88\x05\x0f\xe9\xe7\x0b\x89\x94\x99_\xfb\xf7\x1a\x06^\xe6\x15R\xa4Jg.\x02\x15M\xa5\x08\x18\xa0\x917\xaf\xaa\xb6\x85\nK\x1a)+\xbf\x8e\xca\xab\x9a\xbaxz0o\x08\n\xe8\xe3\xc0\xc4\x1bS\xef\x8a3L[\xe5-\x1b\x99SX\xa7\xf7\x9c*N\'\x00\x18\xbf\\O\xa537R\x199\xa5\xd2\x89+)\xf4\xe3\xb9D\xfa\x86=~=s\x0cD\xf0\xf4/}i8?\xe7\x95I\x9d\xd1\xff\x0eS\x8037Sy\x9e\r&Ry\x1b\xdd\xf7+\xa4\xf7?\xb9\xaf3\x0e\x9cg\xda*\x1fA\xac\xc8\x1c\x86\xe9\xd1X\xb4\xc2aZ\xd8\x81\x9e\x84\x0e\xd8X\xf2#\xe4\\x\x8a\xb2 \x00\x80\x02\xdetK\x87\xc6\xc8\xa4Q\xe8A\\;\x0c\xc00|\x94#\xf5\xfd\xd0<\xea\x03\x89\x0b\x8c,\x95(Q\x8fM\x07"\xe8\x83\xb9\x0fh\xe8\xdc\xfb4\x8cS\xe3PFK \xc40\x82!\xa4W\xc3\xdbW&:\xd3\x8e#\xd1\x92\x8a[[\x8d\xa7&8\xda\xcfL\x86_\xb3\xed4(\x9e;\x83Q\x9a\x8bW\xbe\xa4se\x8d\xa8\x9d\x89\x9c"\x01\x1c\xc0u\x90Y\xfc9R]}\xf3\xf9\xdf\x85\x14\xceu\x14D\xba\xcd\x02Z`ci\xb1\xbcp\']\xb7qC\xd8\x83.;fv+T\xf3\x8a\x1ah\xe7\xe1\x18\xedB\x9di\xde&\x7f\xfa\x8aS\x0c\xbc\xf1u\x8e\x12@R\xb9\x86w\xf2%\xd4\xa3k\x0c\xb3\r\xd3\x19\xe6\xf2\xdc\x08\xcb =\x10&j\xc5\'\xeb\xfd\xe8\xbb\x93q\x12\x11%\xe5\x8d\xcc\xa1LC\xf5\x0c\xaeu\x88\xd6\x7fMp\xd2=\xe7\xb5).\xb4|{0\xdd\xf3\xce\xa7j\xce\x0e\xa8\xc5\x97\xed3$\xfd\x82&\x0c\x9ds_\xd0\x9b\xb2> T\xbc\xd3\x8e\x89\xe7u\x97,\xe1m\xdd6\x8cx\x04\xa7\xb4\x01\xdaB\x88\xc5}\xb13\xa4\xdb\x84\xf0\xc8\xa5$\x1dQE\x1dCA\x06wp\x0f,f\xf2\x99A\xdf\x1c\x8d\x15Yg\xfcg\x9e\x92\xd2P\x93N^M\xe9Rx\x9b\x18 \xf4\xd7\xa6E<\x0b<\np\x1e\x9c\x03\xbcj\x08G\xd0\xa7\\Sv0\x82\x84\x84\x82z\x03Y\x08u\xa8\xae\xc12\x88\x8eh\x00"{~d\xa7\x91\x07M\xc6\x86?\xa4\xd1\x8b=\xba\x18_q&8\xb3:\x13\x80F\x00\x14\xcd\xd9\xe0O\x91\xf1\x15&\xd3\x9b\xc5\x86A\x81=\xf8[\xa2\xbc\x14\xa9g\xf2\xe7^\xecm\x05\xdd2\xcc\xcd{\xd9L\xd2\xeeK\x1a\x83\xa1c\x92\xab\xe4\xefP\n\xca\x98\xeb\xc0S\x91f\x82\x98\x80BS\xbbh\x0f\t\'_<\\\x8f\x171\xa9\xdb\xcc\x88\x0e\x11\x86g\x01<\xec>\x1e\'\x92\xcf\x03\xff"\n\x8e.\xa7\xc4\xf4\x1a6D#\xa7\x1e\xeb\xd9x\x18\xa7\xa2\xa5\xff\x0b\xd2mz\x9f\xe1\xf6:\xc7\xea+\xf5\xf0\x1e\x8d]\xe2A3\xd6\xf8\xd0\xac\xb5\xbeR\x17\xa7\xaf\xf6\xa6)+\xbc%\xc5\xaa\xb9\x1fT\x14D\xd5u\xe7L\xa3\xb5\xc9b\xc3<\xd2\xe6P%e\xa0po\xf9)R\n\xbd\xc6J\x96\x0b\x0e\x800\x97\xf4\xc8\x93\x8ce#\x98z7\x90S\x19\x1b\xa0\x807\xb7\xa1\xa9\xcd \x9a\x1f\xd1m\xb7l1\x0c\x9e5f\x89;?\xabJ\xeaXO\xeaoxV6\x83\x19l\xb4\xbavA\x1f\x9b\xcf(\xf2\xfb3\t\x1d\x9c\x8c\xa3\x1e\xe8\x14(\xb5\xa2\xbaI\x9c\x0b\x0e\xb5\xfft\xbc^\xad\x16\xa4\xc7\x8e\x84zd\xb5a0j\x19\x85\xec<\x1a\xad\x9b\xd4\x1b\x1f\xddeO\x8d\x10\xb2YT\xfa\xe4\xea0"\x03y\x1e\x1b\x8a\xf0\xbe\xee\x9ce5Y\xf3\x0f/\x95\xdc.hk\xa6+]\xe1\xbac\xa8\xd1\xf5\x94q\xb0^\xa45h\x81G/%S\x18\x1b\x02F\xc0\x05\x8e\xd4f\x84o\xa1\xe0C\x01\xf1`@\xb0`s\x80\x9eq\xc6,v\'W\x9f\x02\xeb\r\x83I%\xa6W\xeb\tx\xc8\xe3\xa8\x01k\xbf\x0b\xa3\xdf\xb9\xa8\xa5d\xd6\n)\xb4d\x83Q+|\x99E+E~\xbe\x9d\xbf\xd5\x1b\x86z\x87\xc2\xab\xa4\x98\x8f\xd7\xfbRKK\xefho\xa0\x10(\xf6P\x00 \xff\xb7YXk\xb1\'\x80\xcd9|\xef\xe4/\xbc\xf4\x8c\x03@e\xb5a0@\xe0\x0e\x9eM\x14\x83\x18"\x1e\x14\xb6\x05v\x81B.Q\x07\xb0\x80\xc7\r\x9f\xd0b\x9a\xa1\xf5\xf4\x19\xcc5\xfc\xd8\xf3\xad\x1dp\x0cE\xdb\x82\x1c\x8fy\xf4f+\xc1\x9a\x14\x8e\xdf\x03\xee\xff\xc9s\x03\xfcW;\xf8\xd9[\xe9\xba\xe7=\xb1apc13k4\xb9\xf6\x9f\x8e\x93\x9e\xcb{\xcc\xd6\x15\xb2\x88h\xc2\xe6\xecbx\x99\x9a]\xf3\xd8\x8dA\xba\x81A\x04\x822\xf2\x02Y\xb4v\x80\xc8\x01\x96*\xc8h\xde\xa6\x00\x8b6\xae\xb749s\xef\x03\xe4\xdf~(J\xcf\xb1G\xf3\xdc\x95\xe8\xb3\xb1*\x949\x05\xd5r>\x858\t\xb1\x0f\x1cg\xd5\xaeP6\x88\xab\x10\xb7\x0e\xf9\xc2\x91>^\xe7\xc7\xa8\xa8P6\xcc\xdc\xd8\xc3u\x06\x1b\x89\x1e\x0e$t\x88\x83\xd6n\x14\xa4\x9e\x01\xdah\x1e\xca\xa4\xd3\xd1=W\xa7\xb1)\x17\x16\x0fe\x02\xfc\x03\xe9\x0e5\xa1\xa4\xacQ\xeadUm\xb3\xa4\x1b\xa4c\xfcN\xa3\xe9=!\xd5\x89\x8b\xbe\xe2H\xb8\xe0\xe0w\xdc:\xa2\xdc\xa6[\xb9\x96\x17\x04\xc6\x0c\xf6\x9b\x9aU#R\xfeg\xdb\x82h\xe0x\'\x9d\xd7\x8e]\xeaA.\xde\x05\xd4d"\xdfc\x82`\xc3\n\x0c\x07\xa3F\x14\x817Y\xb3!H\xb5/k\x89\xe0s\xec$K\xb6\x06\x8a$\x04D\x99\xc3\x88*"\xa1\x9c\xa1w>\x9d\xfb#\x9d\x0e\xfc\x1aO\xab\xbf\r\x959C\x01\x80\x82\xb0a_8;J,\xfdv3M\xc8\'\x90"\xd6\xd9\xd2\xaa\xe9q\xc3\xc09\xa0\t\xaa\xd5\x08\xbb\x1f"\xe4}6=\xfd2p\x8f\x13L\x02\xe1\t\xc0\xeax\xe1\xc8\x05\x8c:|\x0b\xc4\x0b\x8d\r\xb4k\xe7~\xe5\xa7\xd5\xaf\xee\xd1\x8d\xbbY\xe2\xcd\x1d\x02\xa5F\xaf\x15`\xc9\xc0\x06+=\xa4\xc139\xad\x1e\x8fe#$\x08Y\x05w\x80Z\x0e\x14\x08\xc2\xda_\xa5\xd7)}$e\x93\x10q\x9fl\xf0\xa3\x9f\xce%\n\x12\x03_\xea\xc9\xbdjd\n`\xc7s\xed\xcc2\x0e\xb4\xe6\xbbP\x11kmz#D!,\x02\xb7OY\xe9\xa5\xe3\x16#\x17>\xa4\x90\xe82\xa3\xf7@\x05V\x10\x95\xb2)0\xec\xba}a"s\xc4\xa6T\x9a\x95\xe7\r\x07\x88\xaa\xe2\x14\xa6\xc4Q\xa4Z\x05\xf6\x83\x9b\xe1\xd0\x84\xb2Az\xbf\xe5\xe7\x0c\x1c\xeb$R\x11\x1ac\x8a\x92\xdd\x13\xc0\x01\xb5\xfa\xdbc\xb1z\xe0i\xf1\xd7\x81\x14\x93T\xd9\xf3\x86Q\x17bgNm T\xca\x06\xac\xfc&D\xd4fc\x1b\x8c\x14\xa2\x1cjP_\xd0\xa4\x16m\t\xa4\xdb\x8cbp\xafr\xa0\xe1qCH\xa0\xf6\x19P\x03\x06\xd9\xba\x88\xb8i\xcb0\x15\xd1\t\t\x08\x84\xef\xd8\xe5$\xda{*N\x94\xe8u{\xc3h\xf6:_1\x12\xeeQ\x93HD\xe0[\xd3]\x99\xc8\xe6\xb0\xe35w\xdb8\xe8O\xc5\xa5VI\x7fKq"\x91\xa6\x98v$\xa5W\xf5\x9eaD6\xe7\xda\x03`\xf0\xe6\xb4\x8e\xbe\x0bN\xda@\x9e\xaf\xd56\xda\xd4Q\x86~\x0b\xb0\xfc\xf3&<\x1dpr\xdeF\x7f\xd9\x18\xc8\xf4\x8f\xd3\xe9\xa0\x89A=\x86`\xf9)\xdf\xb7\xf7\x978\xba\xca\xa4\x13ml\xa0E\xd45\xa4K\xcc\x05\x86\x86f\x06n\x12\xc7\xd1y\xc51K$\x15\x10h\xc3yL]\xe9#R\x94F\xa3\xb1:\xa3\xa0\x86\xa4e\xd72\xb9\x8e\xa5\xb7\xa7w\x1ev\x81x\x8b\xfa\x06\x9e\xd3\xab\x86Q\xd2\xda\n\x8e\x14\xc5\xeb&}\xee\xd5\xc5\xe3$\xdf6\xb5ShL\x19\x13\xceb\xfa\xf5V\xc7i\x14H+/\x8dwR\xe9K\xf6\xa2E\xa1\xd9\x95\x9e[\xdb\xa5\xf9f\xa8R\xdc\xbc\x9b-F\xa8\xe69\xa0w\x82\xbf\x99S\x03d\xd34\x8f$*!\xf1@\x17{y\xa2s\x17\x07\xd9\xb0?\xdch\x9b\x00\xf7C\x06J\xcf\xa9\x95\xe8\xc6o\xf0\xde\x9c\x82z\x06G\xb5\xd2\x12@\xadR\xd6\x87\xc3\x1d\x8a\xc0\x89\xbd\x19\xb7\xd4]P$\xa0t\xaf\x1aF\x99\xac\xb3G\xbe\xa4\x01\xa5~x\x05\x17\x19\x95\xd9\xb1iH\x81\x80\xe2(\x80.\x9e\xf9R\xc8\x073\x0c\xef\xa7J-\x90\\\xd0\xd9L\xc9\xac\x16hk*\xad@\x1e\xb16\xe5\x14\x14\xd7K\x13\xcdv\x85\x97(\xd4\x9d\x86q\xa4e\xdb\x83)*\xa9\xa2K_\x08\x03\xde\x8ecY\x8b\xb6\x04\xd1\x98\xc5\x1er\xc6l>\xf3)\xb4\x08p\xdfL\xe6l\x00\x15h\t\xa8Ug\x88\x9c\x00\x19\xf9LAz\x1c\x95\x99*r\xc1\\\xf4\xd1\x8b\xe8P\x7f\x1d\xa4\xb7a\xaakh8\xa0?A\xa6\xc7\x01:\xa4Be1\x10\x0ea\x1cx\xa7\xb5g\x01\xcc\xaa\xe9\xfcL4\xb9\xb0\xa10\x86Z\x15^\xbd;T\x90\xa41\xe7\xc2\xbap2\x08]\xd7\xbe&\x9at\xea\xda\xf5\xcaD\x17\xaek~\x8cd\x93)\x99\x1d\xadU\x0b.z\xdd0\x18I\x195\xbat\x86\xa2\xba|{\x10\xe7\xd8\x1a\x8b#\x0e\x9e\x1f\xc9\xfc\x03\x06}\x9b\xa3E\x179l\xa8C\xe7\x13%\xd2z\xda00v|j%\xadg\xb4\xa8\xdeH@\xec\xfd\xa7\xe2)\x97=\xdb\xd8;\x91.\x81H?Z\xe5\xad#\xda8-\x04GzovG\x87\x15\x91\x04c\xacg\xc0s\x8c\t\xf5\x03\xe6K\x85Ln\xd5\x0e\xf6\x97\x18\x06\r)\xc50\x88\x1a\xf4r\x0c{*\x96\xb4\x08bR\xaa\xe8K\xf6\xd6\x17\xc7t\xa2\x18\xa0\xbe\x80\x88\x92\x1e5\x8c8\x03\xd7\x19\xa4\xdcI\xcb;!?\xa2\x05\xf2\x11\xea\x84\xc6\xc4\xfb\xc0\xbb\xb0\xde\x07\xfe\x05t\xfe\xcft:|1\x91\x0e\x9c\x89\x17E\x03\xfd!\xf4\xa0 \xf3Ce\x8eJ\xac\x90}h\xd1:\x96z\r\x7fI\x8d\x81\x17\xa1\x90*^\x07rg\r\xaaA=qc\xef\xc2\xfd\xcf\xe8\xa0\xb0\x03m;\x14%\x1b\xd2S\xc6\xc1\xdc2\xf3jE\xefS\xd2\x18\x9c`\xe4BwAv\xc6j\x8bz\xbd\x98KCS\xab\x14q\xe5\x14\x11P$\xd4\x0f\x18\x1c\xbd%\xfcW9\xa0\xd1\xadF\x99\xb5\xa2\x1f<\x0b\xa7,mU2\xf7\x08\xce\xbf\xd6\x9c\xcb\xeah\x98\xb5\xd1\xe4\xe5\xfa\xc7v\x07sJ3\x84\xe0\xd6\xae\x0bF)\xadl\x94\x14\x03\x90\xa1\xbc\x03\x9dV\x1c\xa3Bg\xd5\xdc{z\xea\xb0\xa2\xd5\x86\xa9g&\x0e\xf4d\xc9B\x9d\x18\x02\xbe1\xb5\xf3\x94\xc9f.\xe4\x86_\x00<\xc9\xbb\xd7194\xec\xb1w\xf7k\x81\x8e\xc8n\xa1\xb0\xb82\x89\xc0\xb7\xb4Q\x89\x9a8\x91\xd3\x19\xa0\xf7\xe3\x8c\xd2\x93\xc3ju\x19\xc5\x18\xca\xb1\xb9f\x94\x107^,X\xb6\xd2\\\xc3\xd7\x02 \x93\xd6n"j\xcd\x96\x1f\xa3\xba\xb4g\xe3\x99E[\xfbL\xdc\x87V0`.\x14q\xcc\x15\x02(\xd4^\xbb\x03\x91\xd2\xebohh\xfbK[\x03V\x19\x06$\xea\xf8\x95\x14f\xc7>\xf4\x87k\xb6\xb0hC\xc2\xa5\xd1\xd6\x16\xb0\xe4~Z\x1e\x00\xa8\x0b\r\x0c\'%\xad\x1dP\x89A\xf0\xd4\x86\xc1\xa7"\xc1Q\xa5\x16\x1b\x06$\x12\xcf\xc1w+h\xd4\xa1\r\rX\x8c\xf3\xd7\xa8Y\xcfr\x04\x82\xf9\xff\xc6\x86B\x8f\xff\xef\xf8\xa0\xca*\xc3\xa41w\xc0B\xfa\x8fu\x12\xad\xe7\xdc\xed4\x91\xfd\x95\x83}\x80\xaf\xf8P\x07\xb29\x8e\xe9\xe8\x8e\xfb\xd8\xde\x15\xee\xd1\x9dt\x83\xcdT\x94h\xa5(O\xf8\xcc\x83\x02"K\xcd\xeavh\x07t\xf4\xe4[\x05\r\xe1\xd4\xe6\x1aFx\xc3\xe6=\xd0\x9e\xb0t\x92\xe3\xb9P\x93\xf1\x15BtRe\x8f\x1f\xe6\xe8U\xc3\x00q\xe0\x84\xe1\xf8\xa5\x9e\xbaO\xd9\x80\xd9\x0f\x9eM\x90~\x8cGP\x91D\xc9\xf1\xab)b\xb4>*Ew\xc1\xe6@\n\x8d-\xeb\x16ZBsi\xc8\'\x9d\x9fF\xe0\xc8\xee\xc6\x03\x11B\xf8\x8c\xcd\x15\x07 @Pa\x08\x08\x84\x13\x198\xa0\x15\x80\x93\x95Ps!\xf9\x0c\xe1H\xc1\xe7z7\xb8\x8e\xa0m\xf14\x8c\'6\x0c \xa0\x9bo\xbe\x1cvPR\x94\xf2\x11\x0f\x0c\x04U\x17\xc5\x12\x02`\x1f\xb5\xf8\xb7\xc2G\xa0.P\x95\xb5\xd1RQ\xd5$\xe4T}\xea\x12\x1b\r]\x0b\x82d\x17\x89\x87\xe1\xe8\x83\x80BQ\x8dq\xe6\xab\x8f\xb6\x19\x87\xfa\x01\x99\x07\xad\xe7C\x17\x93\xe4SC\xdc\xff4}j\xf8\xc4\x86A\xe1G\xde\x05t\x9c\xb5\xc6G>{\x1b8\xceY\x16\xacD\x86.\xcdhQ\xcdl\xce\xd7 TH)\xea|\rl\xdf\xd1\xad4\r/\x95\xbf\xc3!\xf0\x19\x9dZ\xd4\x84z\xbc\x8fS#N\xaa\x18\xdbT\xfc\rQ\x8c\xb4\x8b\xc3\x19\xe39\xe5\xe1\xe8\xd0\xc6\xef\xc3\xe9\x92}\x06E\xb0A*\xab[\xe8i\x1cV\xd5\x18\x10,H\xe4(\xfc[\x0eFq\xa4\xf8\xd0[3:I\x1f"\x08r\t\x8e5\xed>\x11+\x1f\xc8\xb6\x18\x902\x1c\x14\x04\x12B\n\xaa\xaem\xee\xd2\x97W\xa06N\xda\xa0^\x1d\xbb\x92\xa4;\xc9\x08\xcf\xc7\x91\xd9\xaf\x0fF\xcaq*S,\xbc\x86\xa3\xe0!G\xcca\x8e\x8a\x93\xd7R$\xc5\xe6\x16\xd5\xd3?at\x8b\xf9C\xd2\x8eO\xad\x96\xef)\xf1i\x06\x0eL\x031m;\x14M\xa7\xae\xa7\xc8\xb9\xab\xca\x9af\xa3\x1b\x87O\xab\xf15\x19$|\xcf\xa0B\x89\xc2\x1a\xed\xe1\x08\x18\tFi\xe6\x08C\xa4\xcdY\xef\'mWE\x16A\x8d\x81\xc1!\xa3\x9b;\xd3\x85(\xc3\x91X\xb4\x1eP\xc8[\xdb4\xff\x98O\xd6\xff\x0f\x10\xca\x07\x8d\x94e\xfc\xe8\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 15:06:03,967 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:06:03 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=4yk15wfrcp5c1q7kn4oc56kjg;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 15:06:03,967 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:06:03,969 APIUnittestTestCase.py[line: 115] INFO: 正在提取目标返回结果值
2018-02-05 15:06:03,969 APIUnittestTestCase.py[line: 118] INFO: 正在执行断言
2018-02-05 15:06:03,970 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:06:03,970 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:03,970 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:03,970 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 15:06:03,971 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 15:06:03,971 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:06:03,972 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814363', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "Token": "asfdacfdasfasfa",\n    "Accept-Encoding": "gzip, deflate"\n}', 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', "[{'模式': '200', '消息': 'FAILURE#请求验证码识别'}]", '', '成功', '', '2018-02-05 15:06:03')
2018-02-05 15:06:04,043 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:06:04,044 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:06:04,044 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814363', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 15:06:03', '0天 0小时 0分 0秒')
2018-02-05 15:06:04,125 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 15:06:04,126 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 15:06:04,126 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 15:06:04,136 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:06:04,138 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 15:06:04,138 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:06:04,138 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:06:04,138 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 15:06:04,139 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:06:04,139 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:04,139 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,139 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 15:06:04,140 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 15:06:04,140 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:04,140 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,140 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 15:06:04,141 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:06:04,141 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:04,141 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,141 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 15:06:04,142 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:06:04,142 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:04,142 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,142 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:06:04,143 APIUnittestTestCase.py[line: 60] INFO: 正在发起POST请求...
2018-02-05 15:06:04,143 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 15:06:04,144 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 15:06:04,145 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:06:04,309 APIUnittestTestCase.py[line: 74] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 15:06:04,315 APIUnittestTestCase.py[line: 97] INFO: 服务器返回结果"响应体(body)": {"result":205}
2018-02-05 15:06:04,316 APIUnittestTestCase.py[line: 98] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 07:06:04 GMT'), ('Content-Type', 'text/plain;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Accept-Charset', 'big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp')]
2018-02-05 15:06:04,316 APIUnittestTestCase.py[line: 99] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 15:06:04,316 APIUnittestTestCase.py[line: 102] INFO: 正在提取目标返回结果值
2018-02-05 15:06:04,316 APIUnittestTestCase.py[line: 105] INFO: 正在执行断言
2018-02-05 15:06:04,317 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 15:06:04,317 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:04,317 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,318 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 15:06:04,318 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 15:06:04,325 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:06:04,325 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814363', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",\n    "Cache-Control": "no-cache",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\'模式\': \'"result":200\', \'消息\': \'FAILURE#灯塔用户登录失败\'}]', '', '失败', '灯塔用户登录失', '2018-02-05 15:06:04')
2018-02-05 15:06:04,389 test_case.py[line: 85] ERROR: 步骤[第 2 步, 步骤ID: 2]运行失败
2018-02-05 15:06:04,389 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:06:04,389 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:06:04,390 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814363', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '失败', '步骤[第 2 步, 步骤ID: 2]运行失败', '2018-02-05 15:06:04', '0天 0小时 0分 0秒')
2018-02-05 15:06:04,454 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 15:06:04,454 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 15:06:04,455 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 15:06:04,462 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:06:04,478 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 15:06:04,478 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:06:04,479 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:06:04,479 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 15:06:04,479 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 15:06:04,479 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:04,479 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,480 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 15:06:04,480 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:06:04,481 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:04,481 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,481 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 15:06:04,481 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:06:04,481 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:04,482 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,482 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 15:06:04,482 APIUnittestTestCase.py[line: 144] INFO: 正在发起POST请求...
2018-02-05 15:06:04,483 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 15:06:04,483 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 15:06:04,483 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 15:06:04,523 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:06:04,523 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814363', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{"模式":"\\"qq\\"(.+?)\\"","消息":"FAILURE#不符合断言时返回的消息"}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '失败', "%s' % response[1]", '2018-02-05 15:06:04')
2018-02-05 15:06:04,591 test_case.py[line: 85] ERROR: 步骤[第 1 步, 步骤ID: 10]运行失败
2018-02-05 15:06:04,592 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:06:04,592 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:06:04,592 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814363', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '失败', '步骤[第 1 步, 步骤ID: 10]运行失败', '2018-02-05 15:06:04', '0天 0小时 0分 0秒')
2018-02-05 15:06:04,656 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 15:06:04,656 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 15:06:04,657 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 15:06:04,698 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 15:06:04,699 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 15:06:04,700 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 15:06:04,700 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 15:06:04,700 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 15:06:04,700 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 15:06:04,700 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 15:06:04,701 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,701 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 15:06:04,701 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'userName'
2018-02-05 15:06:04,702 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 15:06:04,702 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 15:06:04,702 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,702 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 15:06:04,703 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 15:06:04,703 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 15:06:04,703 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 15:06:04,704 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-05 15:06:04,704 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 15:06:04,705 APIUnittestTestCase.py[line: 226] INFO: 正在发起POST请求...
2018-02-05 15:06:04,705 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 15:06:04,705 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 15:06:04,706 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 15:06:06,764 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 15:06:06,764 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814363', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', '[{\n"模式": {\n ".//return": "dataviewer"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n},\n{\n"模式": {\n ".//return": "$groupCode_1$"\n}, \t\n"消息": "FAILURE#获取的实体集团卡号错误" \n}\n]', "{'xpath': {'groupCode': './/return'}}", '失败', '<urlopen error [WinError 10061] 由于目标计算机积极拒绝，无法连接。', '2018-02-05 15:06:04')
2018-02-05 15:06:06,836 test_case.py[line: 85] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 15:06:06,837 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 15:06:06,837 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 15:06:06,837 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517814363', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 15:06:04', '0天 0小时 0分 2秒')
2018-02-05 15:06:06,904 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 15:06:06,904 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 15:06:06,905 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517814363', 1)
2018-02-05 15:06:06,905 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517814363 AND plan_id=1
2018-02-05 15:06:06,911 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 15:06:06,911 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517814363', 1)
2018-02-05 15:06:06,911 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517814363 AND plan_id=1
2018-02-05 15:06:06,917 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 15:06:06,921 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517814363', 1)
2018-02-05 15:06:06,922 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517814363 AND plan_id=1
2018-02-05 15:06:06,929 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 15:06:06', time_took='0天 0小时 0分 3秒', case_total_num=4, case_pass_num=1, case_fail_num=3, case_block_num=0 WHERE execution_num='1517814363' AND plan_id=1
2018-02-05 15:06:06,995 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 15:06:06,995 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 15:06:06,995 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 15:06:06,995 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 15:06:06,996 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 18:16:57,846 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 18:16:57,861 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 18:16:57,862 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 18:16:57,863 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 18:16:57,864 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 18:16:57,864 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 18:16:57,865 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 18:16:57,874 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 18:16:57,875 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 18:16:57,875 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 18:16:57,875 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 18:16:57,875 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 18:16:57,882 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 18:16:57,882 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 18:16:57,911 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 18:16:57,911 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 18:16:57,917 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 18:16:57,918 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 18:16:57,918 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 18:16:57,918 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 18:16:57,925 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 18:16:57,925 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 18:16:57,926 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 18:16:57,932 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 18:16:57,932 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517825817', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 18:16:57', '', '', 0, 0, 0, 0)
2018-02-05 18:16:58,046 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 18:16:58,046 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 18:16:58,046 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 18:16:58,054 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:16:58,054 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 18:16:58,054 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:16:58,055 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:16:58,055 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 18:16:58,055 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:16:58,095 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 18:16:58,096 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,114 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 18:16:58,114 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 18:16:58,114 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:16:58,115 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 18:16:58,115 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,115 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 18:16:58,115 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 18:16:58,116 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:16:58,116 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,116 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,117 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:16:58,118 APIUnittestTestCase.py[line: 44] INFO: 正在发起GET请求...
2018-02-05 18:16:58,119 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 18:16:58,120 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:16:58,260 APIUnittestTestCase.py[line: 54] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 18:16:58,261 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11]IDATx\xda\xed[\x87w\x14u\x17\xe5\xdf\x10\x01A\x05\x91\x0fA\xec \xd2\x05B\xef]DP\xfa\xa7\x80t\x10\x01\x0b \x88T\x11\x11\xa4KO\xcf\xa6\x92\x84\x84\xf4B\x08\xa9\xa4\xf7\xde{\xb2\xbc\xef\xdd\xb7;\x9b\xd9d\x13\xb2\x9b\x10\xd4\xf3\xcd9s\xe0$\x9b\x99\x9d\xdf{\xbf\xfb\xee\xbd\xefM\x17\xfa\x07\x1cU5\r\x94\x96UAA\x0f\x0b\xc8\xfen\x06\x9d\xbb\x95H\x0e\x9e\x19\x94WXm\xf49|f\xf7\xb1\x08z{\x86\x86\xfaMt\xa4W?\xb6\xa7\x9e#m\xa9\xdb0k\xea:\xd4\x9a^P\x9d]?\xd2\x9ds\xd7\xf9RXT\xa1\xd1u\n\x8akh\xeb\xa1p\xf9\xfd\x0bC\xcd;q\x9fw\xf8\xfe{\x8e?\xa4\xb8\xa4Rz\xf2\xe4\x89E\xcf\xdc\xe5\x9f\x10\x98\xbaz-e\xe7WQxt!9\xfbd\xd1E\x9b$\xbal\x9bD)\x19\xe5F\x9f+)\xab\xa5\x8b\xd6\x89\xf4\xeeLg\xea?\xc9\x91z\x8f\xb5\xa7\x97F\xda\xd0\x8b\xad,\xf0\xd8\xa5w)\xecQ\xf3\xc0\xfc\xf4G\x94!0\xaf\x8e\xb5\xa3\x11\x9f\xb8\xd3\xf8\xcf=i\xcc\x12\x0fzw\x963\xf5\x1ce#\x81\xef7\xc1\x91^\x1bgO\xdd\x87\xdb\x18\xae\xf9\x12\'\xc3\xb4U\xde\xe4|/\x93\xca\xca\xeb\xfe\xbd\x81\xc1QTZK\xd1\t%t7 \x87\xae9\xa6\xd2\x89Kq\x14\x19_LZ\xadqF\xde\xf5\xcf\xa67\xa79Q\xaf\xd1\xb6&\x03\xd2\x87\x17\xd1\x8a\x17x\xc5\xae@\xdau4\x82N\\\x8e\xa3\xb4\xcc\x8af\xd7\xc1\xcf\x95\xc5\xfeh\x81+\xddtN\xa1;.it\xdd1\x85\xae;\xa5\xd0%N\x8e\xa3\x17bygD\xd2\xe6\x03\xe1\xb4\xf2\xdb \xfat\x8b\x1f\xcd\xfe\xca\x87\xc6-\xf5\xa4\x0f\xe6\xb8\xd0\xcfg\xa3)>\xa9\xac\xd9\xb5\xffU\x81\xa9\xa8\xaa\xa7\xa4\xf4r\xf2\x0b\xcf#k\xb7t:s\xfd1\xb9\xdf\xcf\xa2\xe2\xd2\x1a\xa3\xcf\xdd\xd0\xa4\xd2\xfb\xb3]\x0c\x81@6O]\xedM[\x0e\x86\xd3\xd9[\t\x9c\xc5Y\xe4\x13\x9cG\xe1\x0c_\t)e\x94SPE\x95Uu\xcd\x16\xef\xaa}2/\xae\xb3\\c\xc8<W\xb2\xf5H\xe7\x9dT\xcd\xf7\xab\xa5\xe2\x92Z\xcag\x18M\xcf\xae\xa0\xa4\xb4r\x8aK.\xa5\x88\x98"\xba\x1f\x9aGn\xfc\x9d\x00\xb7\xb79\x88\x1e~Y\xfc\xbb\x12\xb9\xfe\xbf60\x99\xb9\x95\xf2\xd0\x87\xff\x8c\xa6\xcf\xb6\xf9\xd3p\x86\x16\xfc\xfb\x98\x17W}\xa0\x0e\xbd9\xd5\x89\xba\r\xb7\xa6\xf1\xcb\xee\x92\xdd\xddt\x8a\x88-\xa2T\xde\x15\x80\xba\xda\xba\x06\xaa\xa9m\xa0Z>\xeb\x1b\xb4-\xde/"\xa6\x98\xc6\xf2\xdf#0\xaf[9\xd0\xde\x93\x91\x86\xe0\xa1n\xa8k\x07~\x8e\xebUr\xf2TT\xd6I\x12\xe1_\xdc\xaf\xa4\xbc\x96\xaak\xea\xcd\xae5\xcd\x02\x83\x9bXZ\xb0:\xac\xd8W\xd7SFN%\x85<*\xa0\xdb\xae\xa9\xf4\xe3o\x8f\xe8\xf3\xed\x01\x82\xf1(\xec\xaf~lG/rA\x9f\xbc\xc2\x93\x1e\xc6\x15Q}\xbd\xd6\xe8\xfb\xa3\x06`AG.v\x13\x82\xa0,\xa4\xb9\xcf\xb5`\x83\xaf\x01\xce\xa6\xac\xf2\xa2\xbc\xa2j\xb3\xae\xa1\xbe\xaf\xb9\xf7o\x16\x98\x86\x86\'TVQ+\'\xb2\xa0A\xab}\xa6\x81\xc2\xb5k\xeb\xb4T\xc8\x057\x99\xa1*$\xb2\x90\xa1*\x8d\x0e\x9c\x89\xa2\xa5\xdb\xfd\x19\xdf\xdd\x8c\nkc\x81\xb5\xa1\x85\x1b})\xe0A\x9eQ`\x90\xa9{O>\x94\xc2\xfd\xe1|\x86 \xf74\x8b\xbf\xdb\xf9;\x89R\x93p?\x10\n\x90\x8e\xd6vYG\x1e&\xa1\x0cY\x07\x08\xb8\xe5\x9cJ\xc1\x0c\r\xb9\x05\xbaL\xc1\xcf\xb5\x1c\xa8\x86\x06\xdd\xa9mC\xc0\xe4\xefZ\xc9\x18\xfc\xac\x8e\xe1\xe5\xf7\xeb\xf1\xb4\xf9`\x18\xcd\xe7,\x1d\xfd\xa9\x07\xbd5]#\xac\xaa\x9b>(\xaf\xf0.\xf9`\x8e+\xcd]\xefK\xbb\xb9\xe0^\xe3"\x0c\x9a\xdb\xb4\xc6 \xb1\xce\xdeN\xd0\x05\x8f\x99\xd3\x99\x1b\x8f\xdb\xc5\x06\xfb\xea\x03\xa3Pk\xc0\xd4s\x0b\x0c\x8eP\xa6\x90_\xfd\x10Bs\x98e\xac\xde\x1d,\xbc\xfcw.\xb8(\x82~\xe1\xf9\xcc\xd1K8`UR\x04\xb3\xf3*)\x83\x0b!t\x04\xce\xf4\xecJ\xca\xca\xab\x12\x18)f\x9c\x05\xfd\xc4g\xf0Y\xe0\xad\xa9D\x00=}e\x8cm\xb3\x9d\xd1k\x94\xadd\xfe\xda\xbd\xc1t\xfa\xdac\xf2\x0e\xca\x95z\xd1\xda\x02\x815\xbd3S#\xd7\xdb\xfbk$\xe56\xd1;\xe6\x1c\xdf\xf1\xdf\x036\xf1]\xc0\xb4\xae:$wJpZ\x0c\x0c\xb6,\xa8\xe7k\xe3u\x19\xd3c\x84-\r\x9a\xa6\xa1Q\x9c\xcd\xd3\xd7\xde\xa3\xc5\x9b\xfdh%S\xce\r\xfbB\xe9\x1b\xa6\x9d\xa8\x03X\xdc\x83L\x11\x01C\xdf\x9f\x8a\xa4\x9dG"\xf8\xf7a\xb4B\xa8\xa4?\xed9\x11A\xa1Q\x05&w\r\x82\xd7}\xb8n\x01@s\xc1\x84~8\xf5HvF\xe8\xa3"J\xe1`\x14\xf1\xee@\xe1~\x1a\xb4"\x19\xfaM\xb0\x97,\x9f\xbc\xd2K\x8ar{hz\x8f\x11\xba]\x8b\xdd;\x8fwtrF\xd9\xf3\x0b\x0c\x8e\x1aV\xdc\'.\xc5\xd2\x1b\x93\x1d[\x14h=9\xa3_\x9f\xe0\xc0LH\xc3\x8a\xd7Y\x8a3tD?\xfe\x19~\xa7\xfe\xec \xfe\xf9>\x0e`Sa\xa8\x83 -m?\x1c.A\x81R\xc7\x82jX\xa0UT\x9a\xcfh\xc0\xbc6\x1e\x08\x93\xc0\x0c\xe6\x00\xbb\xf8f\xb5k\x91\x90x\xca\xae\xc1N<~9\x96r\xf2\xab-.\xec\x1dB\x97+\x99!m?\xfc\xa0\x99X\xeb6\xcc\xc6\xf0e[:\xf1\x19d\x1b\x8a7\xfe\x0f\n;r\xb1\xbbh\tSp\x06\x18Tv\r\x82\xf8\'\xd7\nKk\x03jdW}\xe2|\xcfpT\r"\xc3\xc1\x07\xe3+,\xa9aHmh\xf3b\xe2\xf3}\xc6\xd9\xe9v3?\xf3(~\x86\xdb\xaei\xc2\x1cA\xe3\x0b\x98\xada\'wj`p\xc4r=Y\xb8\xf1\xbe\xc1\xa2@F\x03\xe2\x80\xfdc\x97z\xd0\x84\xe5\x9e4\x853|\xca*o\x9a\xb4\xc2\x8b\xc6-\xf3\x14\x0bc\xd8"7\x9a\xc0\x14w\xd1F?\x81<(\xe1\xdb.\xa9\xa2\xe0\xb1@M\x8fR\xe6\xfc\xeb\xf9s\xb8O\x9f\xb1v\xe2W%\xa6Y\x06\x1b\xd8m\xd0:\xf8\xae\x93\x98Vc7Bd"\xc9\x8e]\x8a!\x8dw\x06\xa5s"\xa0\xe6\xb5E\x99\xef\xff\xfd\x91\xd0t\x1d\xa4Y\xd3\xc0)\x8e4g\x9d\x0f}\xbd?T\x1c\x84\x03\xfc{\x88^[\xf7t\n\x8a,\xa0\x8c\xdc\nyFKT\x7f\x9b\x03\x83\x8bCu\x0f\xe1@\x18\x145\x07\x06<\xdf\x9e3\xd3\xd5W\xa7vA\x0c`.\xba\xfbe\x0bA\x00\x81x\x18W\xcc"\xb0\x9429\xbbJ\xcb\xeaZ\xfd\xa2\xa0\xbd\xfe\x0f\xf2e1\xb1CG\x7f\xeaN\xc1\x91\x05\x16\xd6\x86\x1a\x1a<\xc7\xc5P\xb3\xb0\xa8/\x8f\xb6\xa3\x1e\xbc\xa8\x03&;\xd10\xa6\xe1V, \xcf\xdeH\xa0\xc4\xd4\xb2\xa7f|\x11\xab\xfd\x11\x9f\xb8\xb5\x88\x0e\xb8\x07\xe0{\xf8B7\x0e\x98/mb(={3\x81\x02\xf9yr\xf2\xabDz\xb4K\xc7\xb4F{\xc1vP\x94\x15\x17\xf5\x83\xd9\xcet\xe4B\x8c\xe8\x8f\xf2\x8a:\xd6>ub?\x00\xe3-\xcd\x94\x04^\xa4\xc5[\xfc\xe4\xfaP\xf0\xe7\xad\x13\xa9\x9c\xb5\x89%8\xbe\xed\xe7\xf0f\xae\xb2\x1a\x82\xb1\x98\x03\xb8~\xae\xfc6\x904^\x99\xbc\xf85"\x07Z:\xfe\xb8\xf9\x98\xde\x9b\xedldV\x02\xaa\xbb6\t\x10~\xd6\x8b\x93\xe0\x951\x9c\x0c|\x8e\xe2\x80\xee9\x11I\x81\x11\x05\xb2N\xda6hC\xb3,\x19\x88\xb7#\xe7c$\xa3\x15\x962\x81\xa1\xeb\x8ekZ\x87a+\x82p\x9a!\xa1\xab\xfe\x01a\xbb\x88\x08\xe5\x8c+,\xae\x96:\x04l\xaf\xa9\xad\x7f\xea\xee\xf3\x0b\xcb\xa3\xbe\xbc\xb3\x01\xafK\xb7\x07\xd0\x12\xbe\x16\xe8?`VaZ\x8aXE\xedCM\xab\xaen\x99l\x00j/\xd9&\xb1\x8e\x8a`B\xf0\x80\xd6\xff\x18B\xcb\x99\x99\xce[\xefC3\x99\xa9\xe2>0<\xfbOt\xa4\x1e#M\xef\xaa\x81\x9c\x08\x07\x99\xbdF\xc5\x17\x8b\xe6j\xe9^f{e0\xee\x96l\xf5\x13\x9c\x15\x1f\x89\xb7/2.:\xb1\xa4\xc3\x82\x038\x1c\xbeH\x07\x1b\x1f1|j\x98,\xc0 <}-\x9e\x17\xe5!\xed\xf8\xe5\x01S\xe9Hr\xe2:\x91\x94^&\x85\xdc\xd4\x91\x95[E\xbe\xa1\xb9,\x92\xf3\xe9AL!\x85E\x17\xf2ur\xc9\x9a\x13\xe9\xe7s\xd14\xeb\xcb{br*\xb5s\xe0\x14\':u%^4WKY\r\x88L\xe6{fs\xd1\x87\xb8-\xe4\xf3qr\xa9\xdc\x07\xdf\xe7\x8a}\x92\\\x1b\xbak\xcc\x12w\xeakeoX+u/\x08t~\xfd\xbe\x10\xf2\n\xca\x96\x9d\xda\xd0$\xc9\xcc\x0e\x0c\xb24\x94\x157\x16\xae\xab\x9e\x08\xc0\x9b\xda\xf7[d\xbb\xf4BS8\x83\x03\xa0d\x99\x1azP\'\xfaZ9P\x1f\xde\t\x03\xa7:\xd2\x82\xaf\xef\x93\xa3W\x06U\x99\x10\xae\xf5z\x16\x86\xfa\x01\xa6\xa6X7p"\x90\xfd\x01\x8c\xff(\xdc\x03\x192\x95E\x03|\x1e:\x1b\xc5plz\xe7\xe0o\xc1\xee\x94\xdf\xe1_\xdc\x07$\x02\xbb\x1d\xd7\x05\x8b\x83.\x83s\x1d\x1e]@\'\xaf\xc6\xd2\xa4\x95\x9e\x06\xa4Q\xc3\xea{\xbcv\xdf\x1cy =!\xa0\x80r]\x8b\xdde\xf4"\xe0\xba*\x14\x12=\x8e{\xc1\xb9\x1dF\x1bW\xb1(U\xeb \xfc\x1f\x01\xe9\xcdlM\xddY\xc4\xc3"I@@\xaa\xaa\xdb\xaey\x94\x05\x05\x02\xec`\xa6\xf6\x9f\x89\x0e\x86k\x82(h\xbc3e\x91\xdb\xabO\xb4\x8a\x95\xc5\xffb\xf1w\xf2n\x7fm\xbc\x9dQ\x80P\x8b\xac\xbe\xb8+\x1e!\xdc\x12\x04\xde\xe2\xc0\xc40\xe5\xfd|G\x80a\x91 Bw1\xee\xc2\x86W\xb0\xb3\xd1_3_\x84\xc1\xe3B\x97\xf0\xe5\xd1\xb64x\xae\x8b4\xa16\xff\x14&\xb4w\xf5\xee \x1a\xcaX\xae\x0e\xd0\xec/}\xa4\x89\xd6Z\xf1n\xe9@?\x05>\x9d\xda,\x85\xbb\xa1\xf1\xc9\x14\x1d\xd7\x91\x86-\x92\xe7^p\x0e\xad\xd9\x1bd$\xdc\x15}t\xeaj\xbcXN\x16\x07\x06\xcc\x0b\xadS\x03\x11\xe0\x7fA\'\x8f^\x8c\x11\x88\x00U\x8eM,\x95B\x1d\xcft9\x81\xf5\x88\x9a]\xb5\x16$\xfc.\x9fE\xdb\xf1K\xb1\xe4\x1f\x96/\xbe\x1bp=%\xb3\\\\\x83x^H\xaf\xc0\x1c.\xbc\x01\x06\x98\xeb3\xd6\x9e\xf6\x9f\x8e\x12\xb7\xc2\xdc\x03\x10\x07m\x85^\xbd\xc1\xa3\xe3\x84X\xba-\xa0\xc3\xed\x17<\x1b\x1c{<\xd3\xe1s1\xd4{\x9c\x9d\x119\x18\xca5\x15\x96V\xbb\x1ae`J\xf3\xd67\xf6,\x007C\xe6\xba\xd2T\x16\x9a\x08\x12\n+\x18\n\xdc\xe2\x19\x9c\x81\xd3V{\x8b s\xf7\xcbb\xe1X.u\xa1\xa5\x00!\xf3Q\x14\xeb\xea\x9a\x17alu@\xa6\x87\x7f\xb6\xb0 \x85\xae\xce\xfa\xef=\x81&K\x0e\x14\xdf\xad\x87\xc2\xc4\xd16\xb4\xa1\x196\xaf\xd8%\x0b\xc5\xedh\xcb\x05\xd7\xcb\xe6\xe0\x80\xdd\xbd7K\xd3XG\x87\xe9tV\xbb;\x98\xe7\xad\x93\x8c2M\x8d\xfd\xa0\xa4\xddL\xf4Rz2=\x9d\xc2\xc5\x10p\x85\x1d\xa0.\xa6M\x9bL\xad=\x18`\x06Z\xa5\x97\xbe\x16\xbd?\xcb\x85\x9cX\x8fX\xba\x88h\x07\x8fd*\xad\x9ex\x81Q\x1b\x19Wl\xb1.{\x1a\x91\xf2e\xb6\thV\xd78\x9c\xed\x0e\x0cj\xcd\x16\xc6g\x0c!,\xd9\xea\xcf\xba#\x80i\xa8\x0f\x173O\xe9\xfaM\\\xee\xc9\xacMC\xddG\xd84\xa3\x8c\x83\xa6;\xd1\xae#\xa8K%\x12\x1cK:\x9d\x7f1=}S\xcf\xaa\x86p-\x82\xe5ci`\xc2\xa3\x8b\xc4\x05W\xd7\x9a\x11\x8b\xdc\xe9\x96&U\xe0\xeeY4\x0c\xb3\x98v\xff\xcau\x05:\xaaC\x03\x83Z\x83\xe0xr\xe1\r\x89,\x10\xfb\x05"0\xeaq1gZ\x91h\x07L\xb3x\x07\xe5\x88_6t\x81\x9bQF\xbe\xcfJ\x1a\xc2\x0e\xae\x81\xb9\x07\xba\xac\x18cz\xddJ\xdfed\xea\tfh\xe9\x02f\xb2\xee\xf9\xf2\xfb`aI\x8d\xd6\x93\x03\xd3\xd9\x08i\xe6=\x8b\xc0TV\xd71\xa3\xcc\x14\xa8W\xd3\xe9.\x1d\x81\x95\xc8&\x88\xbc\xfaV I\xa0\x87u\x8e+3\x1d\xd4 \xe5\x0b\x00\xee\xd6\xec\x0e\x96\x1e\x8a\xd9;\x86k\xd4\xaf\x7f5\x8e\x19\x81\xbe\xc3\x97\xb2\xdcu\xa8\x17\xe6\xd7\xd7\xca\xdeHk`\xb6\xa0\x84\x85\xe4\xb3\xa83X\xbb\x98\xc4b\xd91j\x07\xbfS\xa7d\xf0EPH\xaf\xda\xa7P\x8f\x91\x8dp\x01\x91e\xc9C#\x116\xf1B\x1a\xac\x15\x0e\xb2\xa5\xb5@g\xfbh\xc5f\xe9;\xde\x98)\xbd1\xc9AX\xe6\xb3\x08\x0c\xe0\x18-\n\xb5\x07\xf7\\\x02\x03\xb6\x85\xad;xn\xe3\x17\x81h\xb4\xa4\xc6\xe0o\xc6\xebG\x8cp\xceX\xeb\xdd>\x96\x94_I\x8b6\xf96\xeb3M`\xf1\xe7\xc2;\xbd\xa3\xd7\x02\xf0\x88\xb9\xb3O6\xdf\x17\xbdf\x10\xb8\x0c\xa5\x9d>W\x86\xc5\xbc\xe3\x96\xcaL\xce\xc9@\x02f2\xcd570\xd8\x19!\x91\xf9\x0c\x85\x8aZ\xb7\x15\'\xba=\x99\xeb\xc0\x99;y\x85W3\x92\x02!\xed\x1d\x98cr7\x9a\x1aQj\x8dQ*\xc9YQUG\x8e\x9e\x19L\x9a\xee\xc9\x08\xae\xda\x05\x98\xbf\xe1~\xe7\x07\x06"\xf3\xf8\xe58\xc3\xe0\x05\xbe\x08f\x05\xcc\x81 \xa5\xdb\xb9h\xe3}C\xe3\n\x0e/\xda\x0f\xa6\x12\xa1A\xdb\xfaB\xa1\xf6=\x8a/\xa1\r\xfb\xc3\xa4\xa7\xa2\x0e\x0c\xb4\xd8\xce_"X\x8d\x97\x9bL\x1e\xc5\xda\x01\xed\xc7\x1c\x1c\xe6\xabQ\xe7r\x0b\xabD\\\'\xb1\xb0\x8eO*e2T"\xbd\x198\xf1\xdf\xfd\xfa\x90\xac\x96y\niQ\\n\xec\xd2\xb7\x98\xa5B\xe7\xdd\x0b\xca\xed|(\x83\x1b\xfc\xc5N\x7f\xc3\x83\xa3\x19\x86\xa6\x9a9\xde\x13T3\\f\xe9\x85@-\xb3\xc8\x04M\x064\x18\xda\xcb,L3r*\xa4\x03Z\xa1\x12\x88\x08R\x83\xde\xb6\xc1\xcf\xd0\xca\x00\x9b\xc4\xa4\xa5\xd2kR\xfbs\xd8\xcd7\x99.#\xa1Z\xb2{0m\t\xa8\xdb\xc1\xd4\x1f\xecj\x02K\x05\xec<t8\xe7o\xf0\x91\x1d0\x83\xaf\x03\xa1=`\x8a\x93\xe88\xc5NB+\x1d5\x16n\xf4\r\xa7\x14C\xc7\xb6Kg\xc3\xd8E\x9bD\xc3n\xc1D>,\xf2\xb2\xf2\xb61\xb2\x06\xad.\xb0\xdf\x1e\x8b0d6&w~9\x1f\xd3lJ\x12\xaa\xfa\x8e[\x1a]\xb1O\x96\xd1Z\x1f\x16r\x18\x95\x853\x90\xc6\',\x98\xa0\x88|i\x05\xaf\xfb1T\xfc\xb8\xeeMz4\x1f\x7f\xe6A\'.\xc7J\xd6\xb7f\xce\xc2\xa1@\x07\x17\x93C`\x86Xt0E\\\x0f\xacN\xed\xe9I7\x95\x9f\x1f\xdd\xd5\x05\xbc\xe3\x0f\xfd\x11\xcd\xdf/[\x9eK\xed\x90w\xe9\xcc\xdd\xe2\x13\x92+\xc2S\xd10\xd05\xf8Bj\x88\xc2`\x03\x16\xb5\xa9S\x8cIM\xe0<T\xb2\x12\x94\xbe\xac10\xe2\x04\x98i\n\x85\xb8\x17\x1e|\x00\x8bO\x08\xdeu?\x84\xc8P\xc6\xe9kq\xb2\xd8\x98\xd6\x04\x14\xbe=]#\xcd4u\xcf\x04;\x05s\x0cG/\xc4\x88\x1e\xab~\x8a\xff\x06\x7f\xce\xc3/\x9b\xa10T\xac(\xec\x00\x88]\xecd8\thac\'A\x80o;\xfc\x80\xce\\O\x10;\t\x9e\x1fZ\x04\x08z\xd3\xe1\xc9.\xed]\xec\xb6\xb1\x0f\xad\xa8j\xf4O\x0cL\x87\x1f\x1c\xef\xbc\xa8\xaf\x81!\xecc\x17ch\xef\x89\x87t\xf2J\x9c\x08\xcf\x9b\xce\xa9t\xe6F\x02\xc3_\x80Lg*\x98\x0c?\xe9\xa73Q\x82\xe7\xa6\xea\x13\xec\x1e\xc5\xe6@\xbb\x00#U\x18\xaf\x1a\xb1\xd0M\xe0\xf3\x9d\x99\xce\xc2\x84\xd4\xdaA\xba\xa6#\xad\xa5\xc7\x83\xf1\xd8\x84\xd4R\xf9\xeem90\xb0\xe2\xe2\x93EW\xec\x92\xe8/\xde\xa5w\\S\xc9\x95w*\x1at\xb0\xf2\x15\xe7@gb>\x11\x07\xbe5\xd7\xdd\xe2\xc0\xe0\xa2\xe8\xef\xc3\xa2\x06\xcdTFg\x91\xe9\xe5\xfaIw8\xc4x\xab\nn\xa9\xe2g!\x1b1q\x83\xd7\x17\x9a\x92\x02\x04\x01si\xf8,\x16\x0e\x93\x8f\x80*\xfc\x8d\x92\xd1\xe8\x95\xcc\xf9\xcaW\xcc\xc5\x96\xdc\x02\x8c\x14\xad\xe7\x1d\x82\x82\x8aS\xde\x1e\xd3\x8bE\xe5M2\xb5\x80D\x800\xa3\x0c\x0b\t\xd0\xea\x15\x98\xcdu\xacR\x9akm]\x0b8 x\x06\x08e\xf4q\xe0\xe3a&\xdb\xd2!}\x8b\x03\x83\x8e\x1d:\x87k\xf7\x06I6c\xbc\xe72g\x0b^\xee\xb9\xa1I\xa1\x93W\xe3i\xf97\x81\xe2cu\xd5g\xe3[\x9c\xb5\xc0TL\xcc4=0\x87\xbch\xd3}\x93\xa6\xa7\xf2\xc2\x11\xde\xe6\x02\x04\xa1\xad\xd0Z\xb7\xd4\x9f\xc9\x04`\x05\xc5\x16\xf3i\x03\xa68J\xdb\xf8\r\xaei`B\xfd\';\x8a}3\x8cw\x0f\xc6\xaf\xd0\xebA\x9d\xc2\xe4iFv\xa5\xcc\xa0=\x0b\xd3\xb2S\x02\x83\xed\xb9z\x8f\xae\xcb\x88\x13M\x9f\x0f\x99\xd5\xa0\xd9\x83\x17\x87z\xeb_\x95\x00\xf4`a\x96\xed\xf0\x97Q$laS\xc7e\xde\x01x\xed\x0e6>\xd8\x11\xa6\xfc\xb1\xb0\x13\x97{\xc9\xdb_\x806\xf8m\x80?Sn\xb4\x11\xac$\x96\x8a\x87v\xf0l\x94\xcc_\xaf\xe1\xef\x89\x8e(\x0cV\x0cw\xaccu\x0f\xff\x0b]XgfS\xa0\xb3\xb9\xfa\x17\x98\x9e\xf7+(\xed\n\x0c\xd8\x03\x8a\xd7\xb45\xde\xd4\x9fq|\x10\xef\n@\x8er\x02\x8e\x10$\xbc\xc9\x85\xc1\tt\xec\xaaZ\xe8\x04*\xe2.&\xa1X\xac\x89\x0b,\x12/X\'\tEu\xf4\xca\x14[\x1c\xbd\x9b\xb26\xf6D\x00?(\xa8\xc9\xac+\xa2\xf9\x9a\xd8]\x9eL\x1a01\x83]\x89\xe4\x08d6\x16\x93\xa8+\xbc\xd8y\x8aA\xf9w\t\x8a\xc5\x81\xc1\x83\x00\xc71\xb9\x82W5\x90\x9d\xba3\x99\xce\xddJ\x90\xd7\xe4|\x99\x15\x81I=\r\x12\xd4J\xb9^\xdf\x00\xc3b\x01\xaf\xa11jj-su\x11 5\xc5U\xde$kZ\x1b\xfe\xaeG\xbb\xe92\x1e\x16\x8b\xd8\x9eq\xd0\xff\x1f\xcd\x8f\xff\x01l\xf90\xaf<\xa4*\x89\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 18:16:58,264 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 10:16:58 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=9r68cwr5u19j1bt6mw9yp2y5l;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 18:16:58,265 APIUnittestTestCase.py[line: 79] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:16:58,265 APIUnittestTestCase.py[line: 95] INFO: 正在提取目标返回结果值
2018-02-05 18:16:58,265 APIUnittestTestCase.py[line: 98] INFO: 正在执行断言
2018-02-05 18:16:58,265 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:16:58,272 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,273 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,274 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 18:16:58,274 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 18:16:58,277 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:16:58,278 test_case.py[line: 95] ERROR: list indices must be integers, not str
2018-02-05 18:16:58,279 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:16:58,280 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:16:58,280 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517825817', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '阻塞', 'list indices must be integers, not str', '2018-02-05 18:16:58', '0天 0小时 0分 0秒')
2018-02-05 18:16:58,341 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 18:16:58,342 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 18:16:58,342 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 18:16:58,351 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:16:58,352 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 18:16:58,353 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:16:58,353 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:16:58,353 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 18:16:58,354 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:16:58,354 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,354 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,354 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 18:16:58,355 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 18:16:58,356 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,356 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,356 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 18:16:58,357 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:16:58,357 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,358 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,358 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 18:16:58,358 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:16:58,358 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,359 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,359 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:16:58,360 APIUnittestTestCase.py[line: 40] INFO: 正在发起POST请求...
2018-02-05 18:16:58,360 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 18:16:58,360 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 18:16:58,360 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:16:58,472 APIUnittestTestCase.py[line: 54] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 18:16:58,493 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 18:16:58,494 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 10:16:58 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 10:16:58 GMT')]
2018-02-05 18:16:58,494 APIUnittestTestCase.py[line: 79] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:16:58,494 APIUnittestTestCase.py[line: 82] INFO: 正在提取目标返回结果值
2018-02-05 18:16:58,494 APIUnittestTestCase.py[line: 85] INFO: 正在执行断言
2018-02-05 18:16:58,495 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:16:58,495 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,495 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,496 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 18:16:58,496 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 18:16:58,497 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:16:58,498 test_case.py[line: 95] ERROR: list indices must be integers, not str
2018-02-05 18:16:58,498 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:16:58,499 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:16:58,499 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517825817', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '阻塞', 'list indices must be integers, not str', '2018-02-05 18:16:58', '0天 0小时 0分 0秒')
2018-02-05 18:16:58,562 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 18:16:58,562 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 18:16:58,562 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 18:16:58,571 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:16:58,572 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 18:16:58,572 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:16:58,573 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:16:58,573 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 18:16:58,573 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:16:58,574 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,574 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,574 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 18:16:58,575 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:16:58,575 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,576 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,576 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 18:16:58,576 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:16:58,577 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,577 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,577 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:16:58,578 APIUnittestTestCase.py[line: 105] INFO: 正在发起POST请求...
2018-02-05 18:16:58,578 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 18:16:58,578 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 18:16:58,578 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:16:58,654 APIUnittestTestCase.py[line: 118] INFO: 正在对服务器返回body进行解码
2018-02-05 18:16:58,655 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 18:16:58,656 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 10:16:58 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 18:16:58,656 APIUnittestTestCase.py[line: 143] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:16:58,657 APIUnittestTestCase.py[line: 146] INFO: 正在提取目标返回结果值
2018-02-05 18:16:58,657 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-05 18:16:58,658 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 18:16:58,658 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 18:16:58,658 APIUnittestTestCase.py[line: 149] INFO: 正在执行断言
2018-02-05 18:16:58,658 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:16:58,659 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,659 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,659 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 18:16:58,660 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 18:16:58,660 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:16:58,661 test_case.py[line: 95] ERROR: list indices must be integers, not str
2018-02-05 18:16:58,661 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:16:58,661 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:16:58,661 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517825817', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '阻塞', 'list indices must be integers, not str', '2018-02-05 18:16:58', '0天 0小时 0分 0秒')
2018-02-05 18:16:58,723 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 18:16:58,724 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 18:16:58,724 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 18:16:58,735 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:16:58,736 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 18:16:58,736 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:16:58,736 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:16:58,737 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 18:16:58,737 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 18:16:58,737 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 18:16:58,737 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,738 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 18:16:58,738 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'userName'
2018-02-05 18:16:58,738 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:16:58,738 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:16:58,739 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,739 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 18:16:58,739 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:16:58,740 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 18:16:58,740 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,740 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-05 18:16:58,740 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 18:16:58,741 APIUnittestTestCase.py[line: 169] INFO: 正在发起POST请求...
2018-02-05 18:16:58,742 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 18:16:58,742 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 18:16:58,742 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 18:16:58,782 APIUnittestTestCase.py[line: 182] INFO: 正在对服务器返回body进行解码
2018-02-05 18:16:58,783 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"/></soap:Body></soap:Envelope>
2018-02-05 18:16:58,783 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 18:16:58,783 APIUnittestTestCase.py[line: 207] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:16:58,783 APIUnittestTestCase.py[line: 211] INFO: 正在提取目标返回结果值
2018-02-05 18:16:58,784 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-05 18:16:58,784 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-05 18:16:58,784 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-05 18:16:58,785 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 18:16:58,785 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-05 18:16:58,786 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-05 18:16:58,786 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 18:16:58,786 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[]
2018-02-05 18:16:58,786 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[]
2018-02-05 18:16:58,787 APIUnittestTestCase.py[line: 214] INFO: 正在执行断言
2018-02-05 18:16:58,787 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:16:58,787 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 18:16:58,788 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:16:58,788 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 18:16:58,788 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'groupCode_1'
2018-02-05 18:16:58,789 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 18:16:58,789 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 18:16:58,789 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 18:16:58,789 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-05 18:16:58,790 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 18:16:58,790 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 18:16:58,790 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[]
2018-02-05 18:16:58,790 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 18:16:58,790 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 18:16:58,791 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 18:16:58,796 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:16:58,797 test_case.py[line: 95] ERROR: list indices must be integers, not str
2018-02-05 18:16:58,797 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:16:58,797 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:16:58,798 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517825817', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '阻塞', 'list indices must be integers, not str', '2018-02-05 18:16:58', '0天 0小时 0分 0秒')
2018-02-05 18:16:58,862 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 18:16:58,863 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 18:16:58,863 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517825817', 1)
2018-02-05 18:16:58,863 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517825817 AND plan_id=1
2018-02-05 18:16:58,870 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 18:16:58,871 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517825817', 1)
2018-02-05 18:16:58,871 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517825817 AND plan_id=1
2018-02-05 18:16:58,911 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 18:16:58,930 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517825817', 1)
2018-02-05 18:16:58,930 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517825817 AND plan_id=1
2018-02-05 18:16:58,937 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 18:16:58', time_took='0天 0小时 0分 0秒', case_total_num=4, case_pass_num=0, case_fail_num=0, case_block_num=4 WHERE execution_num='1517825817' AND plan_id=1
2018-02-05 18:16:59,006 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 18:16:59,007 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 18:16:59,007 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 18:16:59,009 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 18:16:59,010 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 18:23:06,628 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 18:23:06,628 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 18:23:06,629 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 18:23:06,629 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 18:23:06,629 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 18:23:06,629 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 18:23:06,629 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 18:23:06,636 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 18:23:06,636 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 18:23:06,637 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 18:23:06,637 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 18:23:06,637 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 18:23:06,642 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 18:23:06,642 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 18:23:06,667 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 18:23:06,667 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 18:23:06,674 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 18:23:06,674 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 18:23:06,675 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 18:23:06,675 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 18:23:06,681 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 18:23:06,681 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 18:23:06,681 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 18:23:06,687 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 18:23:06,688 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517826186', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 18:23:06', '', '', 0, 0, 0, 0)
2018-02-05 18:23:06,762 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 18:23:06,762 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 18:23:06,762 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 18:23:06,770 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:23:06,770 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 18:23:06,770 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:23:06,771 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:23:06,771 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 18:23:06,771 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:23:06,771 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 18:23:06,772 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:06,772 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 18:23:06,772 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 18:23:06,773 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:23:06,773 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 18:23:06,773 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:06,773 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 18:23:06,774 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 18:23:06,774 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:23:06,774 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:23:06,774 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:06,775 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:23:06,775 APIUnittestTestCase.py[line: 44] INFO: 正在发起GET请求...
2018-02-05 18:23:06,776 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 18:23:06,776 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:23:06,795 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:23:06,795 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826186', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "Token": "asfdacfdasfasfa",\n    "Accept-Encoding": "gzip, deflate"\n}', 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', '["["]', '', '失败', 'HTTP Error 502: Bad Gatewa', '2018-02-05 18:23:06')
2018-02-05 18:23:06,876 test_case.py[line: 85] ERROR: 步骤[第 1 步, 步骤ID: 1]运行失败
2018-02-05 18:23:06,876 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:23:06,876 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:23:06,876 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826186', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '失败', '步骤[第 1 步, 步骤ID: 1]运行失败', '2018-02-05 18:23:06', '0天 0小时 0分 0秒')
2018-02-05 18:23:06,934 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 18:23:06,934 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 18:23:06,934 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 18:23:06,944 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:23:06,944 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 18:23:06,944 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:23:06,945 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:23:06,945 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 18:23:06,945 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:23:06,945 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:23:06,945 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:06,946 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 18:23:06,946 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 18:23:06,946 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:23:06,947 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:06,947 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 18:23:06,947 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:23:06,947 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:23:06,947 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:06,948 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 18:23:06,948 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:23:06,948 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:23:06,948 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:06,949 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:23:06,949 APIUnittestTestCase.py[line: 40] INFO: 正在发起POST请求...
2018-02-05 18:23:06,949 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 18:23:06,950 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 18:23:06,950 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:23:06,974 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:23:06,975 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826186', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",\n    "Cache-Control": "no-cache",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '["["]', '', '失败', 'HTTP Error 502: Bad Gatewa', '2018-02-05 18:23:06')
2018-02-05 18:23:07,042 test_case.py[line: 85] ERROR: 步骤[第 2 步, 步骤ID: 2]运行失败
2018-02-05 18:23:07,042 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:23:07,043 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:23:07,043 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826186', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '失败', '步骤[第 2 步, 步骤ID: 2]运行失败', '2018-02-05 18:23:06', '0天 0小时 0分 0秒')
2018-02-05 18:23:07,103 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 18:23:07,103 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 18:23:07,104 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 18:23:07,111 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:23:07,112 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 18:23:07,112 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:23:07,112 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:23:07,112 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 18:23:07,112 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:23:07,113 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:23:07,113 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:07,113 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 18:23:07,113 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:23:07,114 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:23:07,114 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:07,114 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 18:23:07,114 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:23:07,114 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:23:07,114 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:07,115 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:23:07,115 APIUnittestTestCase.py[line: 105] INFO: 正在发起POST请求...
2018-02-05 18:23:07,115 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 18:23:07,115 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 18:23:07,116 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:23:07,164 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:23:07,165 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826186', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '["["]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '失败', "%s' % response[1]", '2018-02-05 18:23:07')
2018-02-05 18:23:07,286 test_case.py[line: 85] ERROR: 步骤[第 1 步, 步骤ID: 10]运行失败
2018-02-05 18:23:07,287 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:23:07,287 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:23:07,287 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826186', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '失败', '步骤[第 1 步, 步骤ID: 10]运行失败', '2018-02-05 18:23:07', '0天 0小时 0分 0秒')
2018-02-05 18:23:07,403 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 18:23:07,403 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 18:23:07,403 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 18:23:07,412 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:23:07,412 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 18:23:07,413 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:23:07,413 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:23:07,413 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 18:23:07,413 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 18:23:07,413 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 18:23:07,413 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:07,414 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 18:23:07,414 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'userName'
2018-02-05 18:23:07,414 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:23:07,414 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:23:07,414 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:07,415 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 18:23:07,415 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:23:07,415 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 18:23:07,415 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:07,415 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-05 18:23:07,416 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 18:23:07,416 APIUnittestTestCase.py[line: 169] INFO: 正在发起POST请求...
2018-02-05 18:23:07,416 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 18:23:07,416 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 18:23:07,416 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 18:23:07,435 APIUnittestTestCase.py[line: 182] INFO: 正在对服务器返回body进行解码
2018-02-05 18:23:07,439 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"/></soap:Body></soap:Envelope>
2018-02-05 18:23:07,440 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 18:23:07,440 APIUnittestTestCase.py[line: 207] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:23:07,440 APIUnittestTestCase.py[line: 211] INFO: 正在提取目标返回结果值
2018-02-05 18:23:07,440 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-05 18:23:07,441 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-05 18:23:07,441 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-05 18:23:07,441 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 18:23:07,442 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-05 18:23:07,442 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-05 18:23:07,442 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 18:23:07,443 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[]
2018-02-05 18:23:07,443 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[]
2018-02-05 18:23:07,443 APIUnittestTestCase.py[line: 214] INFO: 正在执行断言
2018-02-05 18:23:07,443 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:23:07,444 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 18:23:07,444 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 18:23:07,444 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 18:23:07,444 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'groupCode_1'
2018-02-05 18:23:07,445 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 18:23:07,445 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 18:23:07,445 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 18:23:07,446 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-05 18:23:07,446 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 18:23:07,446 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 18:23:07,446 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[]
2018-02-05 18:23:07,446 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 18:23:07,447 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 18:23:07,447 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 18:23:07,451 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:23:07,452 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826186', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', '[{\n    "消息": "FAILURE#获取的实体集团卡号错误",\n    "模式": {\n        ".//return": "dataviewer"\n    }\n}]', "{'xpath': {'groupCode': './/return'}}", '失败', '获取的实体集团卡号错', '2018-02-05 18:23:07')
2018-02-05 18:23:07,516 test_case.py[line: 85] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-05 18:23:07,517 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:23:07,517 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:23:07,517 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826186', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '失败', '步骤[第 3 步, 步骤ID: 3]运行失败', '2018-02-05 18:23:07', '0天 0小时 0分 0秒')
2018-02-05 18:23:07,578 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 18:23:07,579 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 18:23:07,579 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517826186', 1)
2018-02-05 18:23:07,580 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517826186 AND plan_id=1
2018-02-05 18:23:07,587 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 18:23:07,588 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517826186', 1)
2018-02-05 18:23:07,588 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517826186 AND plan_id=1
2018-02-05 18:23:07,594 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 18:23:07,595 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517826186', 1)
2018-02-05 18:23:07,595 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517826186 AND plan_id=1
2018-02-05 18:23:07,600 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 18:23:07', time_took='0天 0小时 0分 0秒', case_total_num=4, case_pass_num=0, case_fail_num=4, case_block_num=0 WHERE execution_num='1517826186' AND plan_id=1
2018-02-05 18:23:07,677 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 18:23:07,678 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 18:23:07,679 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 18:23:07,679 main.py[line: 40] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-02-05 18:23:07,680 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行失败', remark='测试计划[1]运行失败' WHERE running_plan_num= 1517487657
2018-02-05 18:25:15,202 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 18:25:15,203 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 18:25:15,203 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 18:25:15,203 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 18:25:15,203 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 18:25:15,204 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 18:25:15,204 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 18:25:15,209 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 18:25:15,209 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 18:25:15,210 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 18:25:15,210 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 18:25:15,210 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 18:25:15,216 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 18:25:15,216 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 18:25:15,240 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 18:25:15,240 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 18:25:15,247 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 18:25:15,247 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 18:25:15,247 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 18:25:15,247 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 18:25:15,253 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 18:25:15,253 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 18:25:15,254 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 18:25:15,259 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 18:25:15,259 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517826315', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 18:25:15', '', '', 0, 0, 0, 0)
2018-02-05 18:25:15,316 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 18:25:15,316 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 18:25:15,316 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 18:25:15,324 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:25:15,324 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 18:25:15,324 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:25:15,325 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:25:15,325 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 18:25:15,325 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:25:15,325 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 18:25:15,326 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,326 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 18:25:15,326 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 18:25:15,326 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:25:15,327 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 18:25:15,327 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,327 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 18:25:15,328 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 18:25:15,328 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:25:15,328 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,328 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,329 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:25:15,329 APIUnittestTestCase.py[line: 44] INFO: 正在发起GET请求...
2018-02-05 18:25:15,329 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 18:25:15,330 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:25:15,418 APIUnittestTestCase.py[line: 54] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 18:25:15,418 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x10aIDATx\xda\xe5[\x87{Tu\x16\xe5\xdf\xd8\x80\x82\x94UQT\\,\xac\x86\xde\x824\x11\x01\x01Q\x0cHG\x11\x01\x91&\x08\x88\x08k\x00Y\x10\x04\x01\xe9\xc5\x90\x1e\xd2\x0b\xe9\xa4\xf7\xde{&e\xd2\x93\tw\xef\xb9\x937\x99I2!\x99I\xc2\xb7\xf0\xbeo\xbe\x04\xf3\xe6\x95{\x7f\xf7\xdcs\xce\xfd9\x80\x9e\xb2\xa3\xbeAC\x19\xb9\xd5\x14\x18YJ\xb6\xee\xb9\xf4\xfb\x8dT:p:\x8e6\x1f\n\xa7y\xeb|\xe9\x9d\x8f\xef\xd3\x88i\x0e\xf4\x8f\xf7m\xe9\xc3\xf5\xbe\x94\x99\xab\xa6G\x8f\x1e\x19\\\x03\xe7ZX\xda\xca9\x96K\xee\x93\xb3O\x1ey\x87\x14Q@D)\x85\xc7\xa9(*\xb1\x9c"\x13\xca)4\xa6\x8c\xbc\x82\x8b\xc8\x91\xff~\xc75\x87\xae\xd8g\xd2\xe9\xeb)\xb4\xffT,]\xb6M\xa7\xf8\x94\x8a\x0e\xd7\xee\xee1\xe0iM\x8c_X1\x1d=\x9f@\x9f|\x13@\xa3\xe7\xb9H\x90\xf5?\x08\xfc\xfe\xdfb\xa8J\xdd\xd0!xK\xb7<\xd0\x9d7w\xad\x0fUT5Pum\x13\xd5\xf1\xb55\x9a\x169G\xa3yDu\xf5\xcd\xa4\xaen\xa2\nu#\x9f\xd3He\xe5\r\x94\x93_C\ti\x95\x94\x9cQE%\xaa:j\xd6hLJ\xceS\x93\x18\xbc|bz%]s\xc8\xa4\xaf\x0e>\xa4\xf1\xcb\xdci\xa4\x95#\r\x1a\xd7\x96\x08$\x08U\xb3\xedH\x04\xfdy7\x9d\x83WI\xcd\xcd\x1d\x037\x7f\x83/\rl\xfd\x1e\xaaJ]\xd3\xd4\xad\xe0\xb6\xb4<\xe2D\xb4\xf05[$qH"\xfe\xfdL\'\xa6\x86W\xf4\xe6C\x0f\xe9\xbdO\xdctP5\x90\x93\xf1\xd2\x0c\x07\x9a\xb0\xcc\x83V|\x1fD6\x97\x92\xe8\xbe\x7f\x01\xa5fU\xc9j\xd7\x18\t\xda\xe2\xcd\x0f\xe8\xb9\xf1\xf7\xe4\x1a3\xbf\xf4\x96\nl1!\xb8\xb8\xb6\xf21+1\xc8\xf8\xff\xcb\xd1\xdc\n)\xca\x11\x1aSJ\xd3\xbe\xf0\xd4A\x10\x02;{\x8d\x0f\x1d\xf8o,9\xfb\xe6Sf^\x8d@Mm]s\x87\xef\xb6?6q\xc5)\x89\x99\xf0\xa9\x07\xf9\x84\x16K\x15\xf4\xe7a\x90\x18Ue\x03E%\x95\x0b$\x94\xf3\xef\xfd\xfd0\xc6V]C\xa3\x86\x8a\xca\xea\xb8\xe1\xaa\xb8\xc9f\xd3u\xa7,\xca)\xa818\xcf3\xa8\x88&}\xe6!\x104\x9d\x13t\xc5.\x83\xe2\x92+\xa8\xb0\xa4\x8ej\xb9:zr\x9c\xba\x9a\xacK\xcc\x98\xf9\xae\xf4\xc7\xad4\xa9\xc8\'\x96\x98\xc6\xa6\x16\n\x8fW\xd1/\x7f\xc4\x0bVG&\xaa$(O\xf2\xc0b\t\x08/\x91`}\xb9;D\xa0j\x9a\xb5\x17\xc5$U\x18\x9c\x17\xcd\x0b\xea\xb59N\xf4\xfc\x84{\xf4\xe9\xb6\x00R\x9b\x11H\xb0-%1\x80E\xb0\xb4\x02N\xf0\x13K\x8c\x02\x11{\x8eG\xd3\xccU\xde\xf4\xc5\x8e :\xc8Pp\x9bW)\x1e6+\xaf\x9a*\x99\x814\xf5A%\x01\xef\xd1ds\x0bk)\x82\x17\x87\x9dg.\x1d\xbb\x90Hk\xf6\x84\xd2\xac\xd5>\xf4\xd6\x02W\x1a1\xd5^\xfa\x06\xe0%.\xa5\x924z\xd0\x0b\x18~\xc9J\xdb[f\xac\xf4\x12\xc82\xe7x\xe5\x03\'\x1d,\xceX\xe9M!\xd1\xa5\xd2\xd0\xf5{G\xbf&\x06\x87?\xafP$\xe6\xf9\t\xb6\xf423\x9b\x19\xd6\xde\xb4zO\x08\x1d:\x13GW\x99\xab?\x08+\xa1\xb4l5\x153\xbc \x98\xa8*\x04\x16\xc1\xd1ox\xed?\x9d\xc1\x14\x12\x8dk\x05\xb1\xee\xb8\xe5\x9cE\x87\xcf\xc6\xd3\xca\x9d!\x12\xfc\xa1\x93\xed\r(.V\xf1\xbf\xe6\xbb\xd0w\xc7")\x89\x19\x95F\xafW\x94\xaa\xea\xe9\xf3\xef\x82\xe4\xbc\x0fVk\x03i\xce\xb1\xfd\x97\x08]\xd5\xbc\xf9\xa13\x1da\x14I\xcf\xa9\x16Ti\x96wm\xe9\xd3\xe4t\x9a\x18`2\x120t\xb2\x9d6 \x0c\x0f/\xcep\xe4\xa0\xb8\xd2\x94\xcf=\xe9\xe3M\xfe\xb4\xf6\x87P\xda\xf7[\xac\x08*T\x94\x17c<\xc4\x17\x18O^Q-7\xdaz*g\xfe\x0f~_U\xdd\xc8\xfa\xa2\xb9\x93\x06\xae\xe1\x9e\xa6\x92\xa4\x7f\xb8\xdeO\x92\x01J\x0b\xf8P\x82\xf2\x02?\x03D\xe1\xe2\xcd\x01\xac;bE4f\xb2V\x80^\xd1?\nJ\xebh+\xd3`\xd0b\xcb%n\xdc\xf0\xf3\xcc\nLpT)\xbd<\xd3Q\x9e\x01\xf0\x08\xfa\xbd\xf7d\x0cy\x06\x16R|j%\xa5dV\xc9\x07\x10gnu\xf6\x88.\xd7s\x15\xac\xdf\x17FC&\xdd\xeb \xce\xf0\x19\xc4\x81{\x89\xabi\xccG\xae4\x91\x03\n\xb8Y\xf4\xf5\x03\xfal{\x90\xf4\x02|w\xe3\x8fa\xb4~?\xff<\xf0P\xd4sm]G\xdc\xcf\xca\xaf\xe6\xc0\xbbv\xb8\xfe\xd0)\xf64a\xb9\x87h\x92\x8b\x7f\xa7s\x05\x94Q~q-\xd5p\x10\x8c\xadT\xf4\x82\xc1\x13\xed\x18\x86\x1c\xc9\x9e\xa1\xd0\xdc\xfe\x88\xf7y~\xa2\xf6\xfdA*\xb0`\xf0\\\xc3\xa7\xd9\xd3d&\x1a\x9fo\x0f\xa4\x1d\xc7\xa2\xe8\xec\xcdT\xf2\r)\xa2\xec\x82j\xa6\xe1M\xbdRM]\xea\x18T\x00\xaaC\xb1\'\x94\x07\xd4\xffww?\x8bX\x1b<\xe4\xeb\xb5?\xc0\x9av\xdaD\xc95Q%\xe3Ys\xec\xb2\x89\x16\xf2\x11\xc6}\r=\xa7\x9a\xe1R\xa3y|_\xbbl\x9b!\x0b\t\xda\xe5\xe8\x85\x04Nb\x93N\xab\xa0?h\xfb\xa3F\x07\xa3\x8f;\xec<ri\xec\xa2\xfbF\xdf\t\xcf\xfc\xc2$;\x81W\x08Q\xc0\xdfm\xd7,\xca\xe6\x8an\xd6\xb4\xf4]bp\xdc\x7fP \xa5\xac<\x0c\x1e\xe4U^\x91x\xf9!\xfc\xbb\xa2\x90\xdb?0\x9a\xb4\x85\xa5a\x12\xaf\xd8ev\x1a\x10\x04`\xd0x\xc5\x9br\xa3t\xee9jIF\xcfV\x1dl\x13\x05\x02\xa7[{\x92oX\x91@\xed\x06\xae\xdcu{C\xe9\xe0\xe9X:u%\x89\xfc\x1f\x96\x08\xfd\xedL\xf5w\xec5\x91\x02c\x96K\xdcu\x84\x00\xef\x8d\xaaAu\xea\xf7\xbf\xe1LNF2\xfc\x8d\xe1Dm\xf99\x9cc\x97/v\x0edGO+\xe8\xb1\x89Ai\xfer>\x9e\xfe9\xcd^\x97\x98\xa9+<\xc5\x87\x82\xad\x81f\xfd\xed\xe1\x08Z\xb1#X\xfa\x04\xfe\x86\x97\xc0J\x1b\xbb\xc8\x8d\xc6-\xf5`]\xe1E\x0b\xb8\xf2N\xfe\x95L\xb9\xdc\x7f:\xc3\xf3\x05\x9b\xfc\xe4\xfao3\xac\xdd\xbd\x9fc\xd2*\x03\x94\x00Fq\x9d\xe1\x0c9\x80\xd9\xd7\xe68\xebH\x04\x16\xc90\x0e\x1eV\xf8\xa7[\x03D\x13\xa1\x1fv%\xac3\x99\x89:z\xe7\xd2\x1d\x97lr\xe7E\xea\xea_@go\xa4\xd2\xce_\xa3h5\xdf\xeb\xa3\x8d~4\x8e\x13\xf7\xca,\'NN\xdb"D\xd2\xde\xe5\xde\xb8\x99\xa1\xd8\x83\xfb\x12\xaa\xb5W\x13\x83L\x83\x0c\xe0E,Zo:b\xba=\xf7\x92@\xb1*\x8a\xcb\xea\xa5t\x933\xd5\x14\xcb\x82."\xbe\x9c\xc2bU\x14\xca=\x01\x14\x1bp\x18\xcd\x9a#1\xbdJ\xce\xefL\xec5r/\xf8\xe6\xa7\xf0\xd6\xdeeK\xdf\xf2j3\xe5hj\xd2\xd0n\xa6\xfa\xdd\x85\xd7\x11\xbc\xd8\xd0\xc3\xd2s\xd4]2G\xf4F\xac|\xfc\xc4\xf3\x03Z\x0b\x99l\xc0\xac\x0c\x88,\xa1k\x8e\x99\xe20,\xe4\x9e4l\xaa]\x87\xfb a\x93\xb9_\xda32\x94p\xbcz\xd5+\x83[\x8b\x06\xaf$\x07\xba\x02\xa2\xafDU\xdf+,\xe4\xf2\xbd\x0c\xa6\xa5.4h\x1c\x0b\xc4\xad\x81\xa2eL9\xce\xdfN\x138\x01\xb4L]\xe1E\xabxU#\xd1XX\xf37\xf0\xea^\xea.U\xaf\x04\r\xb0\x04o\xcc=\xa0\x80\x17Hs\x97\xd5\xd3>yh\xf2 \x18\x95\xcc:\x8b8Q\xe9\xb9j\x81O\x9bK\tr\xcdQ\\E\x03\xf5\xa0\x1c\xa4d\xe5\xae`&B\xf9\xa4\xaah\xe8\xf2^\xddN\x0c\x9a\xd9]\xb7\x1c\x03\xb7\xd6j\x95\x17y\x06\x15\xf6Jb@9_\x9b\xad\xc5p@\x8d\x1b\xc3Fw\x9bt{\xdb\x7f\x07\xeb\x1c\x07fep\x03\x92\xb8R\x114\x90\x00\xac\xfa\x10\x86M\x9b\x8b\x89\x12$\xfdU=z\x8e\x93\xf8m\x9d\xd1\xfa\x9e\xd8G\xb8OMm#\xa3H5]\xb3\xcf\xd0A\xb4~\xffE\x8f\xdeq4\x92\xe2\x92\xcbY\x17i\xccw\x97a\x8f\xa0\x19*\xc9A3\x84v\x80\xb7f\xee\x81\xd5\xb3\xef\xb7\x18y\xf0\x91|\xdd\x13\xdc\x8f\xaa\xaa\xb5\xf0\x01_,\x91a\x03\x90\t\x0f\x0fp\xd2d\xe4\x85\xb0\x8a1\x07Q\xdccMK\xdb*\xc7O\xdc\x07\xba\xca\xc1+\x97\xe63\x93\xb2\xd0\x0b\x1a*\xca\xc9;O\xa0\xca\\\x7fO\xb9\x17H\x0cz\xcc*\xae\x14\xc5\x99Pz\xd0\xdc\xb5\xbet\x83Eu)k\xbe\xf6\xd58\xa0\xa77D\x13\x83\x8d\xaed\x7f\xec"W\xfa\xfdFJ\xaf$&\x85\xc5\xa9\xc2\xe6\xacVzQ\\\xaav\xbe\x02\x1a\nU\xbf\xf0+\x7fi\xee\xb0j\xfc\x182:\x9b\x93H@\x1eSeJ\xd0\xb0\xa0^\x9f\xd3f\xbd\xe0\xde0@\xc3\xe3T\xd4[\x87\xf6^-\\\xb5\xb5L\x96\xd2\x84u\xea3\xd5\xd1\xf3\x9ci\x1b\xbf_\x15\xc7\x15\xe7\x995\x8f\xb9\xce\xcd\xee\xdd\x85ZQ\x08\x8a\x08\xfc\x0e6\xd3\x02\xc1\x81@\xa1\xbf(\xf4S\xa1\xa3\x03[5\x8e\xa2u\x06\xb3\xe8\x83\x93|\xe2r\x92T\x91\xa9b\x0e\x15u\x81\x83\xf5\xee\xc26\xad\x024\x800NL\xab\xe8\xd51\x88\xb8\xe4\x0c\x93\x88\xd3\xc6\xfd\xa1bu\xe9\xc4\xf4d;I\x0ePA\x816\x93\x12\x83R\xdf\xd6j\x7f\x00\n\xe0\xea\xfep2\xda\xc0+3\xe9\xba\xac-v\xdbDwp\x00^\x9f\xeb\xcct\xd4Q&\x92\xfa\xba\xe9\x9f\xcc\x0ew3m\xadT7\x98\x1c\xb0Ju\x133\xb30\x03\xaa\x0bJ\xfd+\xf7!S\xf4Gw\xaa\xa7\x90\xab\x07\xf6\xce`=}\x88\xc5\xf6\xf5\xa1\x87\x14\x95\xa02o\x82\x89\xcd\tp]-Z\xe9\xe0tk/r`|\x06\x8d\xc4@J\xeb\x8fit\xa3\xd5\xeeN\xf3N\xb0\x00D\xf3\x7fo\xb1\x1bk\xa3 :t&\x96\xce\xdeL\x91\x8f\xcd\xa5D\xda\xb0?L\xd8\x9b\xc2v\xa0\x97\xae;f\xf4X\'\xe8\x1f\xf7<rh\x06?\xbf"N\xf1\xb1\xe2w\xf3\x0b-\xea\xf5\xe4(\t\xca`\x8a\x0e-\x04\xc2\xa3@\x1b\xbc\xb9\xad\xcc \xd3\x18\xd2MN\x0c\x0cJ@\x89B\x04@;\xad\xac\xbdEx\xfe\xfag"\x8b\xd2\x04:\x06\x11z\'\x9d\xfc\xc3\x8b\xa9B]/\x8c\x07M\xbb\xab\x17\x85\x1fv\xe1N\x1a\x05\xb2>\xc0p\x0c\xf7Q\xdckuM#\xa5f\xab\xe9\xdc\xcdT\xc1f\xe5\xbe\xcbYS\x99S5\x10\x99\xf0\xd9^\x9c\xe1`\xe0pX\x7f\x1f$\x0b\xac/\\d,\xd8\xf8\xd4\nZ\xbd\'\x98+\xdf\xc1\x80R\x1f>\x1bg\xde\xcc?\x86\xe9\xde\xfb\x9f\xb8\x19\x15p(UX7\x10r\xa0\x88\x9b~\x0c\x15\xb5\rA\x87`\x1b{a8\xd2\x8dF\x12\x88\xc6\x8e`-\xe3\xbe\xa6\x18\xacC\xf8>\x10\xb7\xa6\x06\x10\xdf\x83\x11\x89!\xdc =\xa8|\x8e\x7f\xbf\xed\x9c\xdd\xed\xcd\x18\xa6\x10\x1e\xc4\x03#p}\xdb\x0b\xa6\xb0Y\x89A\x00\x8f]H\x90\x1e\x03\xbb\x1e\x10\x03\x0b\x04%\tR\x80q\x81E\xbbd\xbd\xc2\x7f\xb3\xde\x11L.\xbey&\xbf0\xbe\x03\xf8Q\x0cF\xdc\xcb\x86\xabTc\xa2q\x88\x00A7a\xee\x04\x81\xab<+\x16\x156x`\x1fY_\x1d\x98+\xed\xb2\x89\xd2!\x80\xb6w:\x98\x97\x18\xa1\x81%u\x02Y\xc0\xff\xe3\x97\x92\xa4i\xa2/\x1c<\x1dG\x9b\xb8\xa9b~\x03\xdf\xaa\xfd\xd0k47t;\x0e\xae1\x81\xf586\x85\xf9\xff\xc4\xe5\x1e:8\xdb\xc5x\xddS\xd3\xb3m\xa4\xae!\x17\xff|\x9a\xb3\xc6\xd7\xb0\xe2\x99\x15.\xdb\x12 \x9a\xa7/\xf6?(v\xd75\x87\x0c\x9a\xfc\x99\xa7\x01m\x1f\xd0\x1b\xe5\x88f_\xc9\xd5\x83\x9b@\xc1\xab*\xeaE\x8c\xaa\x19r \xf4"\x12\xcae\x028\xfd\x0bo\x03G\x16\x9a! \xa2\x98id\xcf\x93\x03\x95\x0esT!\x01?\xfd\x1e\'\xca\xbe\'\x15\xa8\x90\x11\xd8#gX\x8ba\xc6\xa2_1\x805$\x0b\xb3\x1d\xbc\x8f\xa6\x0fv\x11!\xe1pO\xac@>\xf4\xe0\xac\xdf\xf6\x95a\xc7\xa2\xbdW\x1e\xcd[\xef\xa7c?op\xd5\xd8\\L\xea\xb6\xb1\xa7\x7f`k\xea4N\x8c\x85\x02e\\\xa9]1\xb3\xce\x84hs\xabM\xe3\xea\x97O\xeb~\x08\xa5Q\xb3\x9d\xda\x99\x9c\x0e\xe2\x98\xdfs\xcf\x11un\x0c*\x81\x1c\xa6h\x1e<C9/b[\xbe\xbe\xbe\x0fiai\xdb\xbf\x1b\xfe@\x9faV*M\x1b\xe4`\xdd\xbeP~\xb8\x86\x1e\xbf\x10\xa8\xf9\xa8\xd9Z\\\x1e\xf3\x91\x8b\xc0\x81\xfep\n\xe7\x94\xf1u\xc1\xb8\x1a\x1a\x9bee\xc2p\x05\xeb\x03\xa5/(\xae\x13/\xed\xaaC&m\xd8\x17F\xef,p50\x1c\xe1r\xa3o\xe2oX\xd1e\xad\xb6\x89\xb1U\x0f\x1b(\x86\xaf\x87\xdd\x9d\xa8@\xc0\xaa\xb1\xf3\x95J\xad\xe7\xe7\x82\xeb~\x98\xab\x1d\xef\xa0?\xdb\xe9\xd7\xc4`e\xe1\xc1a\xb7\xe8v\xa0p\t\xf7\x14\xbf\xabk\x9b\x85\x92\xebX\x0c\xf7\x9a\xc2v\xdb\x8b\xc0\xdc0M\xdc\xf9\x9fH\xfa\xfeX$\xfd\xcc\x14\x14\xf4\xfe\xcc\xf5\x14\xb1\x90\x0e\x9c\x8e\x95\xdd\x99\x98\x1f\xbd\xfa\x81\x93\x01I\x01\x84\xbd\xca\x82v\xd6joq\xd0a\xefw5\xa6\x06S\x84\x87\x87\xca\x02\xd5\xc5\x8c\n})*QE\xb9\x855\xb2\xb7Y\xd1t-\xad"\xb3\xbe\xbe\x89\xa2\xf9\xefG\xce\xc5\x0b\x84*Z\x06\x8b\x03\x04\xaa_\x13\x83\x04\xc4\xa5\x94\xcb\x0b+%;\x89\x83\xda\x93\xc4\x00\xe7\x11(\x8c\x1d\x94\xaa;\xf6gB\x87\xd5\x89^\x87\x19\t\x8cC\xb0\x1c0G\xb08\xcb\xa5nR\t\xcf\x8d\xd3\xcec\xa0Wt\x10\xc2\x1fh\x19\x9c7w\x9d\x8f\xf4\x9d\xf0\xf82\xd1R\xdd\x99\x05\xf9\x84\x14\x0b$B\x8b\x00^\xdf\xe2*\xc0>\xe8\x8d,\x13\x90\x80\x8b\x7f\xa7\xd1y\xd6hH\xde\x9a=!\xb2(E,\x8fk\x1b\xdb\x8f\x9a\xe5L+\xbe\x0b\xee\xef\x8ay\xc4\xcd\xbe\x84\xfe\xbd\xf8\xbe.\x10x\xe8\xee\xe0\xb3bg\xc0\xc3\xc2\xd4PY\xdd\x0b\xf8\xf7\xb2N\xa0\x10\t\xdcw2\xa6\xc3\xf6\'}\x9d\x82\x1d8\x92\x9c\xd6\xdd@H\x18\xe6({\x8fG\x8b\xb3\x91\xd4\nK\xdd\x85\xd7\xbc\xc2Z\xb9\'vov\xa6\xebP\r\xd0+\xb8\xdf\x0bzcy\x0b\xd9c\xed(\xb3"\xb8\xf5\xd8\xeb\xd0o\x89Q\x02\x0bU?t\x8a6\x10\xc3\xf8\'\xe6\xfd\x8f\xab\x100;@\x02\xb6$\xc10\xd5\xb7M0\x9666y<~9\x91\xacVy\x0b\\\xc1\x05\x87\x18\x86\xbb\x8b*\x9d\xc2\xff\rU\xb1\xe8k\x7f\xd9Tx\xe0T\xac\xc0\x9c\x93O\x9eT5\x9a}Ov\xd9\xe0~\xa0\xdd\x7f\xbb\xe5\xd0\xf2m\x81\xf4"W\xea\xe0\t\xb6\x1dt\x9c\x92 xc\xa8dT\x0c6(n=\x12)[\xc6\xb0w\xcd,\xaf\xcc\x94\xfe\x82\x01\x92\xb2\xf1\x1b\xabd\xc97\x0f\xa8XUg\xf0r9\x05\xb5\x94_R+\x0c\x08\xa6&\xf6\xa9\xb9\x07\x16\xd0!n\x90\xa0\xc7CZ\xa7\x8f\xd0G^\xdc\x94\x8dU\x1b\x12\x1a\x9d\xa4\xa2\x1bNY\xb2\xfd\xe9\xe4\x95D\xe9\x17X\x18\xf8o7\x9d\xb3\xe8\x96K6\xb90#{\x10^Lq\xc9\x95\xba\x81\x1av\xd2\x98\xa2\x89\xf0,\xd8\x04\x19\x19\xaf\xa2\xbb\xdc\xdf\xb00\xb6\x1e\t\x17k\x07\xae\xf9\xf2\xadA\x0cSA\xf4%\xc3\xd8\x96\xc3\x11"\xce\xe1\xd4\x03E\x92\xf1\x7f \xe8\xc9\x86\x01\xfdU-\xd8\x95r\xeev\xaan\xd5\xbc9\xdfEv\xd1\xeb\x9f\xa3\xaa\xac\x17\xa1\xbajw\xb0\xecG[\xbb7\x94\xacw\x06\xcb\xaa\x87\xbb\x8cd\x82\xd1\xad\xdd\x1bB\x19\xb9\xea.!\xb0\xa5U\xbca\xe5\xa31kY\x90F~Wh5\xbe\x8f\xa6\x8c\xf3\xda\xef"5y\x82\xc9\xd7\xc1\x16b\xd9\xb1\xd9l\xb8;\x15\xc9F\x15\xc2\xf1(\xafl\x94g\xa96\xe2~\x0c\xe8\xeb\x84\xe0\x83\x9b\xdfp\xca\xd4\xe1\xfb\x1bs]d\xf5\xea\x07\x16\x06\xa7G@\xa1\xc0\x0c\xaa\x02v\xbf\xf4\x84\xf1\xda\x92\x87\xdb\x8c\xc6\xea\xea\x9fG5\xf5M}\xbew\xf8I\x1ff%\x06\x98\n\xd5\x8fU\x89\xdf\x01\x03\xf8\x89U\x88\xbe\x80*A\x03\xdd\xc6\xe5\xac\xcc;\x80\xa9\xe7n\xa5v\xc0o\x8c\x8f\xf7\x9e\x88f\x9a\xeaD/3>\xbf\xce\x94q\xecB-;\xc2f\nL21\xe1\x84&y\xda\x93bvbR\xb3\xd4\xe2\xcab#\xddU\xfb\x0c\xd9\xd7\x0bx\xc2\x8e\x93\xbfXHb\xce=rf\xdb\xa4\x0e\x1b\xd5\xc1v:\xf3\xc70F\x86m\xb3\xfdh\x04\xfd\xc84\x17\xc9\x83\xb1\x88}\xc2\xb0\xff\xeb\x04nZ\x9e\x89\xa4\x98\x9d\x18X\xd6\xd0\x05\xc3\x18vP\t\x18\xf7\xa2\x1f\xc0>\x1f>UK\x07\x01E\xd8\x99\x08s\xb3\xac\xc2\xb8zF\xa3\xc78 9\xb3J\xb6\xc5B \x9a\xbb\xcd\xf4\x99L\x0c\x82\x8795\xf87v\xcb\xa02\xf0\x81\xe5\x0f\x81\xf56\x0b\xc0\x8f\xbf\xf2\x17f\x028{\x96\x83l\xca\xf1?\xe2\x1c\xa8v\xb9\xbb\xad\xc5\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 18:25:15,427 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 10:25:15 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=ii065g5bfbwxjwhpw7cv7sul;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 18:25:15,427 APIUnittestTestCase.py[line: 79] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:25:15,427 APIUnittestTestCase.py[line: 95] INFO: 正在提取目标返回结果值
2018-02-05 18:25:15,428 APIUnittestTestCase.py[line: 98] INFO: 正在执行断言
2018-02-05 18:25:15,428 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:25:15,428 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,429 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,429 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 18:25:15,429 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 18:25:15,430 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:25:15,430 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "Token": "asfdacfdasfasfa",\n    "Accept-Encoding": "gzip, deflate"\n}', 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', '[{\n    "消息": "FAILURE#请求验证码识别",\n    "模式": "200"\n}]', '', '成功', '', '2018-02-05 18:25:15')
2018-02-05 18:25:15,499 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:25:15,499 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:25:15,500 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 18:25:15', '0天 0小时 0分 0秒')
2018-02-05 18:25:15,569 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 18:25:15,570 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 18:25:15,570 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 18:25:15,578 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:25:15,578 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 18:25:15,579 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:25:15,579 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:25:15,579 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 18:25:15,579 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:25:15,579 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,579 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,580 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 18:25:15,580 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 18:25:15,580 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,580 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,580 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 18:25:15,581 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:25:15,581 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,581 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,581 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 18:25:15,581 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:25:15,582 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,582 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,582 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:25:15,582 APIUnittestTestCase.py[line: 40] INFO: 正在发起POST请求...
2018-02-05 18:25:15,583 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 18:25:15,583 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 18:25:15,583 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Cache-Control', 'no-cache'), ('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:25:15,681 APIUnittestTestCase.py[line: 54] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 18:25:15,686 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 18:25:15,686 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 10:25:15 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 10:25:15 GMT')]
2018-02-05 18:25:15,686 APIUnittestTestCase.py[line: 79] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:25:15,687 APIUnittestTestCase.py[line: 82] INFO: 正在提取目标返回结果值
2018-02-05 18:25:15,687 APIUnittestTestCase.py[line: 85] INFO: 正在执行断言
2018-02-05 18:25:15,687 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:25:15,687 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,688 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,688 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 18:25:15,688 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 18:25:15,689 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:25:15,701 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "Cache-Control": "no-cache",\n    "User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\n    "消息": "FAILURE#灯塔用户登录失败",\n    "模式": "\\"result\\":200"\n}]', '', '成功', '', '2018-02-05 18:25:15')
2018-02-05 18:25:15,775 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:25:15,775 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:25:15,775 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 18:25:15', '0天 0小时 0分 0秒')
2018-02-05 18:25:15,836 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 18:25:15,836 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 18:25:15,837 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 18:25:15,844 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:25:15,845 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 18:25:15,845 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:25:15,845 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:25:15,845 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 18:25:15,845 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:25:15,846 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,846 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,846 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 18:25:15,847 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:25:15,847 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,847 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,847 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 18:25:15,848 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:25:15,848 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,848 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,848 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:25:15,848 APIUnittestTestCase.py[line: 105] INFO: 正在发起POST请求...
2018-02-05 18:25:15,849 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 18:25:15,849 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 18:25:15,849 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:25:15,929 APIUnittestTestCase.py[line: 118] INFO: 正在对服务器返回body进行解码
2018-02-05 18:25:15,930 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 18:25:15,930 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 10:25:15 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 18:25:15,930 APIUnittestTestCase.py[line: 143] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:25:15,930 APIUnittestTestCase.py[line: 146] INFO: 正在提取目标返回结果值
2018-02-05 18:25:15,931 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-05 18:25:15,931 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 18:25:15,931 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 18:25:15,932 APIUnittestTestCase.py[line: 149] INFO: 正在执行断言
2018-02-05 18:25:15,932 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:25:15,932 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:15,933 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:15,933 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 18:25:15,934 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 18:25:15,935 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:25:15,935 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\n    "消息": "FAILURE#不符合断言时返回的消息",\n    "模式": "\\"qq\\"(.+?)\\""\n}]', '{\'re\': {\'userName2\': \'userName":"(.+?)"\'}}', '成功', '', '2018-02-05 18:25:15')
2018-02-05 18:25:15,999 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 18:25:16,000 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:25:16,000 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:25:16,000 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 18:25:16,001 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 18:25:16,001 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,001 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:16,001 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 18:25:16,001 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:25:16,002 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,002 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:16,002 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 18:25:16,002 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:25:16,003 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,003 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 18:25:16,003 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:25:16,004 APIUnittestTestCase.py[line: 105] INFO: 正在发起POST请求...
2018-02-05 18:25:16,004 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 18:25:16,004 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 18:25:16,005 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 18:25:16,024 APIUnittestTestCase.py[line: 118] INFO: 正在对服务器返回body进行解码
2018-02-05 18:25:16,025 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 18:25:16,025 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 10:25:16 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 18:25:16,025 APIUnittestTestCase.py[line: 143] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:25:16,026 APIUnittestTestCase.py[line: 146] INFO: 正在提取目标返回结果值
2018-02-05 18:25:16,026 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 18:25:16,026 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 18:25:16,026 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 18:25:16,027 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-05 18:25:16,027 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 18:25:16,027 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 18:25:16,027 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 18:25:16,028 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 18:25:16,028 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-05 18:25:16,028 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 18:25:16,028 APIUnittestTestCase.py[line: 149] INFO: 正在执行断言
2018-02-05 18:25:16,029 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:25:16,029 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 18:25:16,029 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,030 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 18:25:16,030 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 18:25:16,030 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 18:25:16,030 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 18:25:16,031 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:25:16,032 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', '[{\n    "消息": "FAILURE#用户名不为dataviewer",\n    "模式": {\n        "userName": "dataviewer"\n    }\n}]', "{'dic': {'atten': {'atten': 'value'}, 'userName': {'userName': 'value'}}}", '成功', '', '2018-02-05 18:25:16')
2018-02-05 18:25:16,085 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:25:16,086 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:25:16,086 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 18:25:15', '0天 0小时 0分 0秒')
2018-02-05 18:25:16,220 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 18:25:16,221 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 18:25:16,221 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 18:25:16,229 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 18:25:16,230 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 18:25:16,230 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 18:25:16,231 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 18:25:16,231 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 18:25:16,232 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 18:25:16,232 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 18:25:16,232 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,232 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 18:25:16,233 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 18:25:16,233 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:25:16,233 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,233 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,233 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 18:25:16,234 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:25:16,234 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 18:25:16,234 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,234 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-05 18:25:16,235 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 18:25:16,235 APIUnittestTestCase.py[line: 169] INFO: 正在发起POST请求...
2018-02-05 18:25:16,236 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 18:25:16,236 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 18:25:16,236 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 18:25:16,253 APIUnittestTestCase.py[line: 182] INFO: 正在对服务器返回body进行解码
2018-02-05 18:25:16,253 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 18:25:16,254 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 18:25:16,254 APIUnittestTestCase.py[line: 207] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 18:25:16,254 APIUnittestTestCase.py[line: 211] INFO: 正在提取目标返回结果值
2018-02-05 18:25:16,255 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-05 18:25:16,255 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-05 18:25:16,255 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-05 18:25:16,256 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 18:25:16,257 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 18:25:16,257 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-05 18:25:16,258 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 18:25:16,258 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041B30E8>]
2018-02-05 18:25:16,258 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[<Element 'return' at 0x00000000041B30E8>]
2018-02-05 18:25:16,258 unittesttestcase.py[line: 403] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:groupCode_1-dataviewer
2018-02-05 18:25:16,258 APIUnittestTestCase.py[line: 214] INFO: 正在执行断言
2018-02-05 18:25:16,259 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:25:16,259 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 18:25:16,259 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,260 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 18:25:16,261 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
},
{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
}
]
2018-02-05 18:25:16,262 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 18:25:16,262 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 18:25:16,262 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 18:25:16,262 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 18:25:16,262 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 18:25:16,263 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 18:25:16,263 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041B30E8>]
2018-02-05 18:25:16,263 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 18:25:16,263 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 18:25:16,263 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 18:25:16,264 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 18:25:16,264 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 18:25:16,264 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 18:25:16,265 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 18:25:16,265 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 18:25:16,265 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 18:25:16,265 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041B30E8>]
2018-02-05 18:25:16,265 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 18:25:16,266 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 18:25:16,266 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 18:25:16,266 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:25:16,267 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', '[{\n    "消息": "FAILURE#获取的实体集团卡号错误",\n    "模式": {\n        ".//return": "dataviewer"\n    }\n}]', "{'xpath': {'groupCode': './/return'}}", '成功', '', '2018-02-05 18:25:16')
2018-02-05 18:25:16,333 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 4 步, 步骤ID: 4]======================
2018-02-05 18:25:16,333 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 18:25:16,333 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 18:25:16,333 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 18:25:16,334 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:25:16,334 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,334 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,334 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 18:25:16,334 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:25:16,334 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,335 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,335 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:25:16,335 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";  data：
2018-02-05 18:25:16,335 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 18:25:16,342 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 18:25:16,342 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 18:25:16,342 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 18:25:16,343 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-02-05 18:25:16,344 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:25:16,344 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 7, 4, 4, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE user_name = "dataviewer";', '', 'body', '', '', '', '成功', '', '2018-02-05 18:25:16')
2018-02-05 18:25:16,407 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 5 步, 步骤ID: 5]======================
2018-02-05 18:25:16,408 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 18:25:16,408 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 18:25:16,408 test_case_step.py[line: 97] INFO: 执行操作：update_record
2018-02-05 18:25:16,408 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:25:16,409 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,409 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,409 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 18:25:16,409 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:25:16,410 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,410 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,410 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:25:16,411 mydb.py[line: 81] INFO: update_query：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 18:25:16,417 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:25:16,417 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 7, 5, 5, '操作数据库', 'ddtm', 1, 'update_record', 'http', '10.202.95.88', 8080, '', '--', 'UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"', '', 'body', '', '', '', '成功', '', '2018-02-05 18:25:16')
2018-02-05 18:25:16,494 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 6 步, 步骤ID: 7]======================
2018-02-05 18:25:16,495 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 18:25:16,495 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 18:25:16,495 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 18:25:16,495 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 18:25:16,495 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,496 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,496 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122
2018-02-05 18:25:16,496 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:25:16,496 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,496 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,497 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;
2018-02-05 18:25:16,497 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:25:16,497 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,497 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,498 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:25:16,498 mydb.py[line: 96] INFO: query：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;  data：(1033553122,)
2018-02-05 18:25:16,498 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone,user_name, atten FROM ddt_user WHERE qq= 1033553122 ORDER BY id desc;
2018-02-05 18:25:16,509 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414', 'dataviewer', '数据监视器'], flag：True
2018-02-05 18:25:16,509 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 18:25:16,510 unittesttestcase.py[line: 407] INFO: 提取数据库查询结果
2018-02-05 18:25:16,510 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 18:25:16,511 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:25:16,512 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 18:25:16,512 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,512 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 18:25:16,512 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 18:25:16,512 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 18:25:16,513 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 18:25:16,513 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 18:25:16,514 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:25:16,514 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 7, 7, 6, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;', '1033553122', 'body', 'db列值相等', '[{\n    "消息": "FAILURE#姓名不为dataviewer",\n    "模式": [\n        "dataviewer",\n        "dataviewer"\n    ]\n}]', "{'db': {'phone': 1, 'user_name': 2}}", '成功', '', '2018-02-05 18:25:16')
2018-02-05 18:25:16,574 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 7 步, 步骤ID: 6]======================
2018-02-05 18:25:16,574 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 18:25:16,575 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 18:25:16,575 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 18:25:16,575 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 18:25:16,575 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,575 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,576 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122, "dataviewer"
2018-02-05 18:25:16,576 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 18:25:16,576 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,576 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,577 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";
2018-02-05 18:25:16,577 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 18:25:16,577 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 18:25:16,577 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,577 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 18:25:16,578 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";  data：(1033553122, 'dataviewer')
2018-02-05 18:25:16,578 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE qq= 1033553122 AND user_name='dataviewer';
2018-02-05 18:25:16,584 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 18:25:16,584 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 18:25:16,585 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 18:25:16,585 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 18:25:16,585 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 18:25:16,585 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'groupCode_1': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer'}
2018-02-05 18:25:16,586 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 18:25:16,586 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 18:25:16,586 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 18:25:16,586 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 18:25:16,586 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 18:25:16,587 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 18:25:16,587 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 7, 6, 7, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";', '1033553122, "dataviewer"', 'body', 'db列值相等', '[{\n    "消息": "FAILURE#姓名不为dataviewer",\n    "模式": [\n        "dataviewer",\n        "dataviewer"\n    ]\n}]', '', '成功', '', '2018-02-05 18:25:16')
2018-02-05 18:25:16,652 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 18:25:16,652 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 18:25:16,652 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517826315', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '成功', '', '2018-02-05 18:25:16', '0天 0小时 0分 0秒')
2018-02-05 18:25:16,715 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 18:25:16,716 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 18:25:16,716 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517826315', 1)
2018-02-05 18:25:16,716 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517826315 AND plan_id=1
2018-02-05 18:25:16,722 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 18:25:16,723 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517826315', 1)
2018-02-05 18:25:16,723 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517826315 AND plan_id=1
2018-02-05 18:25:16,728 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 18:25:16,728 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517826315', 1)
2018-02-05 18:25:16,728 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517826315 AND plan_id=1
2018-02-05 18:25:16,735 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 18:25:16', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=4, case_fail_num=0, case_block_num=0 WHERE execution_num='1517826315' AND plan_id=1
2018-02-05 18:25:16,794 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 18:25:16,795 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 18:25:16,795 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 18:25:16,795 main.py[line: 38] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-02-05 18:25:16,796 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行成功', remark='' WHERE running_plan_num= 1517487657
2018-02-05 19:06:06,511 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 19:06:06,517 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 19:06:06,518 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 19:06:06,518 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 19:06:06,518 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 19:06:06,519 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 19:06:06,519 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 19:06:06,525 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 19:06:06,526 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 19:06:06,526 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 19:06:06,526 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 19:06:06,527 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 19:06:06,553 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 19:06:06,554 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 19:06:06,578 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 19:06:06,578 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 19:06:06,584 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 19:06:06,585 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 19:06:06,585 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 19:06:06,585 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 19:06:06,591 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 19:06:06,591 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 19:06:06,592 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 19:06:06,598 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 19:06:06,598 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517828766', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 19:06:06', '', '', 0, 0, 0, 0)
2018-02-05 19:06:06,659 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 19:06:06,660 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 19:06:06,660 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 19:06:06,668 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:06:06,668 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 19:06:06,669 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:06:06,669 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:06:06,669 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 19:06:06,669 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:06:06,670 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 19:06:06,670 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:06,670 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 19:06:06,670 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 19:06:06,671 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:06:06,671 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 19:06:06,671 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:06,671 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 19:06:06,672 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 19:06:06,672 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:06:06,672 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:06,672 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:06,672 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:06:06,673 APIUnittestTestCase.py[line: 44] INFO: 正在发起GET请求...
2018-02-05 19:06:06,673 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 19:06:06,673 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:06:06,751 APIUnittestTestCase.py[line: 54] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 19:06:06,752 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x10aIDATx\xda\xe5[\x87{Tu\x16\xe5\xdf\xd8\x80\x82\x94UQT\\,\xac\x86\xde\x824\x11\x01\x01Q\x0cHG\x11\x01\x91&\x08\x88\x08k\x00Y\x10\x04\x01\xe9\xc5\x90\x1e\xd2\x0b\xe9\xa4\xf7\xde{&e\xd2\x93\tw\xef\xb9\x937\x99I2!\x99I\xc2\xb7\xf0\xbeo\xbe\x04\xf3\xe6\x95{\x7f\xf7\xdcs\xce\xfd9\x80\x9e\xb2\xa3\xbeAC\x19\xb9\xd5\x14\x18YJ\xb6\xee\xb9\xf4\xfb\x8dT:p:\x8e6\x1f\n\xa7y\xeb|\xe9\x9d\x8f\xef\xd3\x88i\x0e\xf4\x8f\xf7m\xe9\xc3\xf5\xbe\x94\x99\xab\xa6G\x8f\x1e\x19\\\x03\xe7ZX\xda\xca9\x96K\xee\x93\xb3O\x1ey\x87\x14Q@D)\x85\xc7\xa9(*\xb1\x9c"\x13\xca)4\xa6\x8c\xbc\x82\x8b\xc8\x91\xff~\xc75\x87\xae\xd8g\xd2\xe9\xeb)\xb4\xffT,]\xb6M\xa7\xf8\x94\x8a\x0e\xd7\xee\xee1\xe0iM\x8c_X1\x1d=\x9f@\x9f|\x13@\xa3\xe7\xb9H\x90\xf5?\x08\xfc\xfe\xdfb\xa8J\xdd\xd0!xK\xb7<\xd0\x9d7w\xad\x0fUT5Pum\x13\xd5\xf1\xb55\x9a\x169G\xa3yDu\xf5\xcd\xa4\xaen\xa2\nu#\x9f\xd3He\xe5\r\x94\x93_C\ti\x95\x94\x9cQE%\xaa:j\xd6hLJ\xceS\x93\x18\xbc|bz%]s\xc8\xa4\xaf\x0e>\xa4\xf1\xcb\xdci\xa4\x95#\r\x1a\xd7\x96\x08$\x08U\xb3\xedH\x04\xfdy7\x9d\x83WI\xcd\xcd\x1d\x037\x7f\x83/\rl\xfd\x1e\xaaJ]\xd3\xd4\xad\xe0\xb6\xb4<\xe2D\xb4\xf05[$qH"\xfe\xfdL\'\xa6\x86W\xf4\xe6C\x0f\xe9\xbdO\xdctP5\x90\x93\xf1\xd2\x0c\x07\x9a\xb0\xcc\x83V|\x1fD6\x97\x92\xe8\xbe\x7f\x01\xa5fU\xc9j\xd7\x18\t\xda\xe2\xcd\x0f\xe8\xb9\xf1\xf7\xe4\x1a3\xbf\xf4\x96\nl1!\xb8\xb8\xb6\xf21+1\xc8\xf8\xff\xcb\xd1\xdc\n)\xca\x11\x1aSJ\xd3\xbe\xf0\xd4A\x10\x02;{\x8d\x0f\x1d\xf8o,9\xfb\xe6Sf^\x8d@Mm]s\x87\xef\xb6?6q\xc5)\x89\x99\xf0\xa9\x07\xf9\x84\x16K\x15\xf4\xe7a\x90\x18Ue\x03E%\x95\x0b$\x94\xf3\xef\xfd\xfd0\xc6V]C\xa3\x86\x8a\xca\xea\xb8\xe1\xaa\xb8\xc9f\xd3u\xa7,\xca)\xa818\xcf3\xa8\x88&}\xe6!\x104\x9d\x13t\xc5.\x83\xe2\x92+\xa8\xb0\xa4\x8ej\xb9:zr\x9c\xba\x9a\xacK\xcc\x98\xf9\xae\xf4\xc7\xad4\xa9\xc8\'\x96\x98\xc6\xa6\x16\n\x8fW\xd1/\x7f\xc4\x0bVG&\xaa$(O\xf2\xc0b\t\x08/\x91`}\xb9;D\xa0j\x9a\xb5\x17\xc5$U\x18\x9c\x17\xcd\x0b\xea\xb59N\xf4\xfc\x84{\xf4\xe9\xb6\x00R\x9b\x11H\xb0-%1\x80E\xb0\xb4\x02N\xf0\x13K\x8c\x02\x11{\x8eG\xd3\xccU\xde\xf4\xc5\x8e :\xc8Pp\x9bW)\x1e6+\xaf\x9a*\x99\x814\xf5A%\x01\xef\xd1ds\x0bk)\x82\x17\x87\x9dg.\x1d\xbb\x90Hk\xf6\x84\xd2\xac\xd5>\xf4\xd6\x02W\x1a1\xd5^\xfa\x06\xe0%.\xa5\x924z\xd0\x0b\x18~\xc9J\xdb[f\xac\xf4\x12\xc82\xe7x\xe5\x03\'\x1d,\xceX\xe9M!\xd1\xa5\xd2\xd0\xf5{G\xbf&\x06\x87?\xafP$\xe6\xf9\t\xb6\xf423\x9b\x19\xd6\xde\xb4zO\x08\x1d:\x13GW\x99\xab?\x08+\xa1\xb4l5\x153\xbc \x98\xa8*\x04\x16\xc1\xd1ox\xed?\x9d\xc1\x14\x12\x8dk\x05\xb1\xee\xb8\xe5\x9cE\x87\xcf\xc6\xd3\xca\x9d!\x12\xfc\xa1\x93\xed\r(.V\xf1\xbf\xe6\xbb\xd0w\xc7")\x89\x19\x95F\xafW\x94\xaa\xea\xe9\xf3\xef\x82\xe4\xbc\x0fVk\x03i\xce\xb1\xfd\x97\x08]\xd5\xbc\xf9\xa13\x1da\x14I\xcf\xa9\x16Ti\x96wm\xe9\xd3\xe4t\x9a\x18`2\x120t\xb2\x9d6 \x0c\x0f/\xcep\xe4\xa0\xb8\xd2\x94\xcf=\xe9\xe3M\xfe\xb4\xf6\x87P\xda\xf7[\xac\x08*T\x94\x17c<\xc4\x17\x18O^Q-7\xdaz*g\xfe\x0f~_U\xdd\xc8\xfa\xa2\xb9\x93\x06\xae\xe1\x9e\xa6\x92\xa4\x7f\xb8\xdeO\x92\x01J\x0b\xf8P\x82\xf2\x02?\x03D\xe1\xe2\xcd\x01\xac;bE4f\xb2V\x80^\xd1?\nJ\xebh+\xd3`\xd0b\xcb%n\xdc\xf0\xf3\xcc\nLpT)\xbd<\xd3Q\x9e\x01\xf0\x08\xfa\xbd\xf7d\x0cy\x06\x16R|j%\xa5dV\xc9\x07\x10gnu\xf6\x88.\xd7s\x15\xac\xdf\x17FC&\xdd\xeb \xce\xf0\x19\xc4\x81{\x89\xabi\xccG\xae4\x91\x03\n\xb8Y\xf4\xf5\x03\xfal{\x90\xf4\x02|w\xe3\x8fa\xb4~?\xff<\xf0P\xd4sm]G\xdc\xcf\xca\xaf\xe6\xc0\xbbv\xb8\xfe\xd0)\xf64a\xb9\x87h\x92\x8b\x7f\xa7s\x05\x94Q~q-\xd5p\x10\x8c\xadT\xf4\x82\xc1\x13\xed\x18\x86\x1c\xc9\x9e\xa1\xd0\xdc\xfe\x88\xf7y~\xa2\xf6\xfdA*\xb0`\xf0\\\xc3\xa7\xd9\xd3d&\x1a\x9fo\x0f\xa4\x1d\xc7\xa2\xe8\xec\xcdT\xf2\r)\xa2\xec\x82j\xa6\xe1M\xbdRM]\xea\x18T\x00\xaaC\xb1\'\x94\x07\xd4\xffww?\x8bX\x1b<\xe4\xeb\xb5?\xc0\x9av\xdaD\xc95Q%\xe3Ys\xec\xb2\x89\x16\xf2\x11\xc6}\r=\xa7\x9a\xe1R\xa3y|_\xbbl\x9b!\x0b\t\xda\xe5\xe8\x85\x04Nb\x93N\xab\xa0?h\xfb\xa3F\x07\xa3\x8f;\xec<ri\xec\xa2\xfbF\xdf\t\xcf\xfc\xc2$;\x81W\x08Q\xc0\xdfm\xd7,\xca\xe6\x8an\xd6\xb4\xf4]bp\xdc\x7fP \xa5\xac<\x0c\x1e\xe4U^\x91x\xf9!\xfc\xbb\xa2\x90\xdb?0\x9a\xb4\x85\xa5a\x12\xaf\xd8ev\x1a\x10\x04`\xd0x\xc5\x9br\xa3t\xee9jIF\xcfV\x1dl\x13\x05\x02\xa7[{\x92oX\x91@\xed\x06\xae\xdcu{C\xe9\xe0\xe9X:u%\x89\xfc\x1f\x96\x08\xfd\xedL\xf5w\xec5\x91\x02c\x96K\xdcu\x84\x00\xef\x8d\xaaAu\xea\xf7\xbf\xe1LNF2\xfc\x8d\xe1Dm\xf99\x9cc\x97/v\x0edGO+\xe8\xb1\x89Ai\xfer>\x9e\xfe9\xcd^\x97\x98\xa9+<\xc5\x87\x82\xad\x81f\xfd\xed\xe1\x08Z\xb1#X\xfa\x04\xfe\x86\x97\xc0J\x1b\xbb\xc8\x8d\xc6-\xf5`]\xe1E\x0b\xb8\xf2N\xfe\x95L\xb9\xdc\x7f:\xc3\xf3\x05\x9b\xfc\xe4\xfao3\xac\xdd\xbd\x9fc\xd2*\x03\x94\x00Fq\x9d\xe1\x0c9\x80\xd9\xd7\xe68\xebH\x04\x16\xc90\x0e\x1eV\xf8\xa7[\x03D\x13\xa1\x1fv%\xac3\x99\x89:z\xe7\xd2\x1d\x97lr\xe7E\xea\xea_@go\xa4\xd2\xce_\xa3h5\xdf\xeb\xa3\x8d~4\x8e\x13\xf7\xca,\'NN\xdb"D\xd2\xde\xe5\xde\xb8\x99\xa1\xd8\x83\xfb\x12\xaa\xb5W\x13\x83L\x83\x0c\xe0E,Zo:b\xba=\xf7\x92@\xb1*\x8a\xcb\xea\xa5t\x933\xd5\x14\xcb\x82."\xbe\x9c\xc2bU\x14\xca=\x01\x14\x1bp\x18\xcd\x9a#1\xbdJ\xce\xefL\xec5r/\xf8\xe6\xa7\xf0\xd6\xdeeK\xdf\xf2j3\xe5hj\xd2\xd0n\xa6\xfa\xdd\x85\xd7\x11\xbc\xd8\xd0\xc3\xd2s\xd4]2G\xf4F\xac|\xfc\xc4\xf3\x03Z\x0b\x99l\xc0\xac\x0c\x88,\xa1k\x8e\x99\xe20,\xe4\x9e4l\xaa]\x87\xfb a\x93\xb9_\xda32\x94p\xbcz\xd5+\x83[\x8b\x06\xaf$\x07\xba\x02\xa2\xafDU\xdf+,\xe4\xf2\xbd\x0c\xa6\xa5.4h\x1c\x0b\xc4\xad\x81\xa2eL9\xce\xdfN\x138\x01\xb4L]\xe1E\xabxU#\xd1XX\xf37\xf0\xea^\xea.U\xaf\x04\r\xb0\x04o\xcc=\xa0\x80\x17Hs\x97\xd5\xd3>yh\xf2 \x18\x95\xcc:\x8b8Q\xe9\xb9j\x81O\x9bK\tr\xcdQ\\E\x03\xf5\xa0\x1c\xa4d\xe5\xae`&B\xf9\xa4\xaah\xe8\xf2^\xddN\x0c\x9a\xd9]\xb7\x1c\x03\xb7\xd6j\x95\x17y\x06\x15\xf6Jb@9_\x9b\xad\xc5p@\x8d\x1b\xc3Fw\x9bt{\xdb\x7f\x07\xeb\x1c\x07fep\x03\x92\xb8R\x114\x90\x00\xac\xfa\x10\x86M\x9b\x8b\x89\x12$\xfdU=z\x8e\x93\xf8m\x9d\xd1\xfa\x9e\xd8G\xb8OMm#\xa3H5]\xb3\xcf\xd0A\xb4~\xffE\x8f\xdeq4\x92\xe2\x92\xcbY\x17i\xccw\x97a\x8f\xa0\x19*\xc9A3\x84v\x80\xb7f\xee\x81\xd5\xb3\xef\xb7\x18y\xf0\x91|\xdd\x13\xdc\x8f\xaa\xaa\xb5\xf0\x01_,\x91a\x03\x90\t\x0f\x0fp\xd2d\xe4\x85\xb0\x8a1\x07Q\xdccMK\xdb*\xc7O\xdc\x07\xba\xca\xc1+\x97\xe63\x93\xb2\xd0\x0b\x1a*\xca\xc9;O\xa0\xca\\\x7fO\xb9\x17H\x0cz\xcc*\xae\x14\xc5\x99Pz\xd0\xdc\xb5\xbet\x83Eu)k\xbe\xf6\xd58\xa0\xa77D\x13\x83\x8d\xaed\x7f\xec"W\xfa\xfdFJ\xaf$&\x85\xc5\xa9\xc2\xe6\xacVzQ\\\xaav\xbe\x02\x1a\nU\xbf\xf0+\x7fi\xee\xb0j\xfc\x182:\x9b\x93H@\x1eSeJ\xd0\xb0\xa0^\x9f\xd3f\xbd\xe0\xde0@\xc3\xe3T\xd4[\x87\xf6^-\\\xb5\xb5L\x96\xd2\x84u\xea3\xd5\xd1\xf3\x9ci\x1b\xbf_\x15\xc7\x15\xe7\x995\x8f\xb9\xce\xcd\xee\xdd\x85ZQ\x08\x8a\x08\xfc\x0e6\xd3\x02\xc1\x81@\xa1\xbf(\xf4S\xa1\xa3\x03[5\x8e\xa2u\x06\xb3\xe8\x83\x93|\xe2r\x92T\x91\xa9b\x0e\x15u\x81\x83\xf5\xee\xc26\xad\x024\x800NL\xab\xe8\xd51\x88\xb8\xe4\x0c\x93\x88\xd3\xc6\xfd\xa1bu\xe9\xc4\xf4d;I\x0ePA\x816\x93\x12\x83R\xdf\xd6j\x7f\x00\n\xe0\xea\xfep2\xda\xc0+3\xe9\xba\xac-v\xdbDwp\x00^\x9f\xeb\xcct\xd4Q&\x92\xfa\xba\xe9\x9f\xcc\x0ew3m\xadT7\x98\x1c\xb0Ju\x133\xb30\x03\xaa\x0bJ\xfd+\xf7!S\xf4Gw\xaa\xa7\x90\xab\x07\xf6\xce`=}\x88\xc5\xf6\xf5\xa1\x87\x14\x95\xa02o\x82\x89\xcd\tp]-Z\xe9\xe0tk/r`|\x06\x8d\xc4@J\xeb\x8fit\xa3\xd5\xeeN\xf3N\xb0\x00D\xf3\x7fo\xb1\x1bk\xa3 :t&\x96\xce\xdeL\x91\x8f\xcd\xa5D\xda\xb0?L\xd8\x9b\xc2v\xa0\x97\xae;f\xf4X\'\xe8\x1f\xf7<rh\x06?\xbf"N\xf1\xb1\xe2w\xf3\x0b-\xea\xf5\xe4(\t\xca`\x8a\x0e-\x04\xc2\xa3@\x1b\xbc\xb9\xad\xcc \xd3\x18\xd2MN\x0c\x0cJ@\x89B\x04@;\xad\xac\xbdEx\xfe\xfag"\x8b\xd2\x04:\x06\x11z\'\x9d\xfc\xc3\x8b\xa9B]/\x8c\x07M\xbb\xab\x17\x85\x1fv\xe1N\x1a\x05\xb2>\xc0p\x0c\xf7Q\xdckuM#\xa5f\xab\xe9\xdc\xcdT\xc1f\xe5\xbe\xcbYS\x99S5\x10\x99\xf0\xd9^\x9c\xe1`\xe0pX\x7f\x1f$\x0b\xac/\\d,\xd8\xf8\xd4\nZ\xbd\'\x98+\xdf\xc1\x80R\x1f>\x1bg\xde\xcc?\x86\xe9\xde\xfb\x9f\xb8\x19\x15p(UX7\x10r\xa0\x88\x9b~\x0c\x15\xb5\rA\x87`\x1b{a8\xd2\x8dF\x12\x88\xc6\x8e`-\xe3\xbe\xa6\x18\xacC\xf8>\x10\xb7\xa6\x06\x10\xdf\x83\x11\x89!\xdc =\xa8|\x8e\x7f\xbf\xed\x9c\xdd\xed\xcd\x18\xa6\x10\x1e\xc4\x03#p}\xdb\x0b\xa6\xb0Y\x89A\x00\x8f]H\x90\x1e\x03\xbb\x1e\x10\x03\x0b\x04%\tR\x80q\x81E\xbbd\xbd\xc2\x7f\xb3\xde\x11L.\xbey&\xbf0\xbe\x03\xf8Q\x0cF\xdc\xcb\x86\xabTc\xa2q\x88\x00A7a\xee\x04\x81\xab<+\x16\x156x`\x1fY_\x1d\x98+\xed\xb2\x89\xd2!\x80\xb6w:\x98\x97\x18\xa1\x81%u\x02Y\xc0\xff\xe3\x97\x92\xa4i\xa2/\x1c<\x1dG\x9b\xb8\xa9b~\x03\xdf\xaa\xfd\xd0k47t;\x0e\xae1\x81\xf586\x85\xf9\xff\xc4\xe5\x1e:8\xdb\xc5x\xddS\xd3\xb3m\xa4\xae!\x17\xff|\x9a\xb3\xc6\xd7\xb0\xe2\x99\x15.\xdb\x12 \x9a\xa7/\xf6?(v\xd75\x87\x0c\x9a\xfc\x99\xa7\x01m\x1f\xd0\x1b\xe5\x88f_\xc9\xd5\x83\x9b@\xc1\xab*\xeaE\x8c\xaa\x19r \xf4"\x12\xcae\x028\xfd\x0bo\x03G\x16\x9a! \xa2\x98id\xcf\x93\x03\x95\x0esT!\x01?\xfd\x1e\'\xca\xbe\'\x15\xa8\x90\x11\xd8#gX\x8ba\xc6\xa2_1\x805$\x0b\xb3\x1d\xbc\x8f\xa6\x0fv\x11!\xe1pO\xac@>\xf4\xe0\xac\xdf\xf6\x95a\xc7\xa2\xbdW\x1e\xcd[\xef\xa7c?op\xd5\xd8\\L\xea\xb6\xb1\xa7\x7f`k\xea4N\x8c\x85\x02e\\\xa9]1\xb3\xce\x84hs\xabM\xe3\xea\x97O\xeb~\x08\xa5Q\xb3\x9d\xda\x99\x9c\x0e\xe2\x98\xdfs\xcf\x11un\x0c*\x81\x1c\xa6h\x1e<C9/b[\xbe\xbe\xbe\x0fiai\xdb\xbf\x1b\xfe@\x9faV*M\x1b\xe4`\xdd\xbeP~\xb8\x86\x1e\xbf\x10\xa8\xf9\xa8\xd9Z\\\x1e\xf3\x91\x8b\xc0\x81\xfep\n\xe7\x94\xf1u\xc1\xb8\x1a\x1a\x9bee\xc2p\x05\xeb\x03\xa5/(\xae\x13/\xed\xaaC&m\xd8\x17F\xef,p50\x1c\xe1r\xa3o\xe2oX\xd1e\xad\xb6\x89\xb1U\x0f\x1b(\x86\xaf\x87\xdd\x9d\xa8@\xc0\xaa\xb1\xf3\x95J\xad\xe7\xe7\x82\xeb~\x98\xab\x1d\xef\xa0?\xdb\xe9\xd7\xc4`e\xe1\xc1a\xb7\xe8v\xa0p\t\xf7\x14\xbf\xabk\x9b\x85\x92\xebX\x0c\xf7\x9a\xc2v\xdb\x8b\xc0\xdc0M\xdc\xf9\x9fH\xfa\xfeX$\xfd\xcc\x14\x14\xf4\xfe\xcc\xf5\x14\xb1\x90\x0e\x9c\x8e\x95\xdd\x99\x98\x1f\xbd\xfa\x81\x93\x01I\x01\x84\xbd\xca\x82v\xd6joq\xd0a\xefw5\xa6\x06S\x84\x87\x87\xca\x02\xd5\xc5\x8c\n})*QE\xb9\x855\xb2\xb7Y\xd1t-\xad"\xb3\xbe\xbe\x89\xa2\xf9\xefG\xce\xc5\x0b\x84*Z\x06\x8b\x03\x04\xaa_\x13\x83\x04\xc4\xa5\x94\xcb\x0b+%;\x89\x83\xda\x93\xc4\x00\xe7\x11(\x8c\x1d\x94\xaa;\xf6gB\x87\xd5\x89^\x87\x19\t\x8cC\xb0\x1c0G\xb08\xcb\xa5nR\t\xcf\x8d\xd3\xcec\xa0Wt\x10\xc2\x1fh\x19\x9c7w\x9d\x8f\xf4\x9d\xf0\xf82\xd1R\xdd\x99\x05\xf9\x84\x14\x0b$B\x8b\x00^\xdf\xe2*\xc0>\xe8\x8d,\x13\x90\x80\x8b\x7f\xa7\xd1y\xd6hH\xde\x9a=!\xb2(E,\x8fk\x1b\xdb\x8f\x9a\xe5L+\xbe\x0b\xee\xef\x8ay\xc4\xcd\xbe\x84\xfe\xbd\xf8\xbe.\x10x\xe8\xee\xe0\xb3bg\xc0\xc3\xc2\xd4PY\xdd\x0b\xf8\xf7\xb2N\xa0\x10\t\xdcw2\xa6\xc3\xf6\'}\x9d\x82\x1d8\x92\x9c\xd6\xdd@H\x18\xe6({\x8fG\x8b\xb3\x91\xd4\nK\xdd\x85\xd7\xbc\xc2Z\xb9\'vov\xa6\xebP\r\xd0+\xb8\xdf\x0bzcy\x0b\xd9c\xed(\xb3"\xb8\xf5\xd8\xeb\xd0o\x89Q\x02\x0bU?t\x8a6\x10\xc3\xf8\'\xe6\xfd\x8f\xab\x100;@\x02\xb6$\xc10\xd5\xb7M0\x9666y<~9\x91\xacVy\x0b\\\xc1\x05\x87\x18\x86\xbb\x8b*\x9d\xc2\xff\rU\xb1\xe8k\x7f\xd9Tx\xe0T\xac\xc0\x9c\x93O\x9eT5\x9a}Ov\xd9\xe0~\xa0\xdd\x7f\xbb\xe5\xd0\xf2m\x81\xf4"W\xea\xe0\t\xb6\x1dt\x9c\x92 xc\xa8dT\x0c6(n=\x12)[\xc6\xb0w\xcd,\xaf\xcc\x94\xfe\x82\x01\x92\xb2\xf1\x1b\xabd\xc97\x0f\xa8XUg\xf0r9\x05\xb5\x94_R+\x0c\x08\xa6&\xf6\xa9\xb9\x07\x16\xd0!n\x90\xa0\xc7CZ\xa7\x8f\xd0G^\xdc\x94\x8dU\x1b\x12\x1a\x9d\xa4\xa2\x1bNY\xb2\xfd\xe9\xe4\x95D\xe9\x17X\x18\xf8o7\x9d\xb3\xe8\x96K6\xb90#{\x10^Lq\xc9\x95\xba\x81\x1av\xd2\x98\xa2\x89\xf0,\xd8\x04\x19\x19\xaf\xa2\xbb\xdc\xdf\xb00\xb6\x1e\t\x17k\x07\xae\xf9\xf2\xadA\x0cSA\xf4%\xc3\xd8\x96\xc3\x11"\xce\xe1\xd4\x03E\x92\xf1\x7f \xe8\xc9\x86\x01\xfdU-\xd8\x95r\xeev\xaan\xd5\xbc9\xdfEv\xd1\xeb\x9f\xa3\xaa\xac\x17\xa1\xbajw\xb0\xecG[\xbb7\x94\xacw\x06\xcb\xaa\x87\xbb\x8cd\x82\xd1\xad\xdd\x1bB\x19\xb9\xea.!\xb0\xa5U\xbca\xe5\xa31kY\x90F~Wh5\xbe\x8f\xa6\x8c\xf3\xda\xef"5y\x82\xc9\xd7\xc1\x16b\xd9\xb1\xd9l\xb8;\x15\xc9F\x15\xc2\xf1(\xafl\x94g\xa96\xe2~\x0c\xe8\xeb\x84\xe0\x83\x9b\xdfp\xca\xd4\xe1\xfb\x1bs]d\xf5\xea\x07\x16\x06\xa7G@\xa1\xc0\x0c\xaa\x02v\xbf\xf4\x84\xf1\xda\x92\x87\xdb\x8c\xc6\xea\xea\x9fG5\xf5M}\xbew\xf8I\x1ff%\x06\x98\n\xd5\x8fU\x89\xdf\x01\x03\xf8\x89U\x88\xbe\x80*A\x03\xdd\xc6\xe5\xac\xcc;\x80\xa9\xe7n\xa5v\xc0o\x8c\x8f\xf7\x9e\x88f\x9a\xeaD/3>\xbf\xce\x94q\xecB-;\xc2f\nL21\xe1\x84&y\xda\x93bvbR\xb3\xd4\xe2\xcab#\xddU\xfb\x0c\xd9\xd7\x0bx\xc2\x8e\x93\xbfXHb\xce=rf\xdb\xa4\x0e\x1b\xd5\xc1v:\xf3\xc70F\x86m\xb3\xfdh\x04\xfd\xc84\x17\xc9\x83\xb1\x88}\xc2\xb0\xff\xeb\x04nZ\x9e\x89\xa4\x98\x9d\x18X\xd6\xd0\x05\xc3\x18vP\t\x18\xf7\xa2\x1f\xc0>\x1f>UK\x07\x01E\xd8\x99\x08s\xb3\xac\xc2\xb8zF\xa3\xc78 9\xb3J\xb6\xc5B \x9a\xbb\xcd\xf4\x99L\x0c\x82\x8795\xf87v\xcb\xa02\xf0\x81\xe5\x0f\x81\xf56\x0b\xc0\x8f\xbf\xf2\x17f\x028{\x96\x83l\xca\xf1?\xe2\x1c\xa8v\xb9\xbb\xad\xc5\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 19:06:06,756 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:06:06 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1s03r85lu8tyy1www5recwtc1n;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 19:06:06,756 APIUnittestTestCase.py[line: 79] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:06:06,756 APIUnittestTestCase.py[line: 95] INFO: 正在提取目标返回结果值
2018-02-05 19:06:06,757 APIUnittestTestCase.py[line: 98] INFO: 正在执行断言
2018-02-05 19:06:06,757 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:06:06,757 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:06,757 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:06,757 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 19:06:06,758 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 19:06:06,758 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:06:06,759 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "Token": "asfdacfdasfasfa",\n    "Accept-Encoding": "gzip, deflate"\n}', 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', '[{\n    "模式": "200",\n    "消息": "FAILURE#请求验证码识别"\n}]', '', '成功', '', '2018-02-05 19:06:06')
2018-02-05 19:06:06,826 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:06:06,827 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:06:06,827 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 19:06:06', '0天 0小时 0分 0秒')
2018-02-05 19:06:06,884 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 19:06:06,885 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 19:06:06,885 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 19:06:06,902 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:06:06,902 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 19:06:06,903 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:06:06,903 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:06:06,903 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 19:06:06,903 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:06:06,903 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:06,904 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:06,904 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 19:06:06,904 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:06:06,904 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:06,905 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:06,905 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 19:06:06,905 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:06:06,905 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:06,905 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:06,906 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 19:06:06,906 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:06:06,906 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:06,906 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:06,906 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:06:06,907 APIUnittestTestCase.py[line: 40] INFO: 正在发起POST请求...
2018-02-05 19:06:06,907 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 19:06:06,907 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 19:06:06,907 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:06:06,953 APIUnittestTestCase.py[line: 54] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 19:06:06,956 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 19:06:06,956 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:06:06 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 11:06:06 GMT')]
2018-02-05 19:06:06,957 APIUnittestTestCase.py[line: 79] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:06:06,957 APIUnittestTestCase.py[line: 82] INFO: 正在提取目标返回结果值
2018-02-05 19:06:06,957 APIUnittestTestCase.py[line: 85] INFO: 正在执行断言
2018-02-05 19:06:06,957 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:06:06,957 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:06,958 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:06,958 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 19:06:06,958 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 19:06:06,958 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:06:06,959 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",\n    "Cache-Control": "no-cache",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\n    "模式": "\\"result\\":200",\n    "消息": "FAILURE#灯塔用户登录失败"\n}]', '', '成功', '', '2018-02-05 19:06:06')
2018-02-05 19:06:07,079 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:06:07,079 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:06:07,080 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 19:06:06', '0天 0小时 0分 0秒')
2018-02-05 19:06:07,142 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 19:06:07,143 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 19:06:07,143 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 19:06:07,151 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:06:07,152 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 19:06:07,152 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:06:07,152 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:06:07,153 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 19:06:07,153 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:06:07,153 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,153 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,154 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 19:06:07,154 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:06:07,154 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,155 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,155 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 19:06:07,155 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:06:07,155 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,155 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,156 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:06:07,156 APIUnittestTestCase.py[line: 105] INFO: 正在发起POST请求...
2018-02-05 19:06:07,156 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 19:06:07,157 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 19:06:07,157 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:06:07,177 APIUnittestTestCase.py[line: 118] INFO: 正在对服务器返回body进行解码
2018-02-05 19:06:07,177 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 19:06:07,178 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:06:07 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 19:06:07,178 APIUnittestTestCase.py[line: 143] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:06:07,178 APIUnittestTestCase.py[line: 146] INFO: 正在提取目标返回结果值
2018-02-05 19:06:07,178 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-05 19:06:07,179 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 19:06:07,179 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 19:06:07,179 APIUnittestTestCase.py[line: 149] INFO: 正在执行断言
2018-02-05 19:06:07,179 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:06:07,180 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,180 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,180 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 19:06:07,181 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 19:06:07,181 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:06:07,182 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\n    "模式": "\\"qq\\"(.+?)\\"",\n    "消息": "FAILURE#不符合断言时返回的消息"\n}]', '[{\n    "re": {\n        "userName2": "userName\\":\\"(.+?)\\""\n    }\n}]', '成功', '', '2018-02-05 19:06:07')
2018-02-05 19:06:07,248 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 19:06:07,248 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:06:07,248 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:06:07,248 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 19:06:07,249 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:06:07,249 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,249 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,249 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 19:06:07,250 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:06:07,250 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,250 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,251 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 19:06:07,251 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:06:07,251 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,251 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,252 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:06:07,252 APIUnittestTestCase.py[line: 105] INFO: 正在发起POST请求...
2018-02-05 19:06:07,252 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 19:06:07,253 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 19:06:07,253 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:06:07,276 APIUnittestTestCase.py[line: 118] INFO: 正在对服务器返回body进行解码
2018-02-05 19:06:07,276 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 19:06:07,277 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:06:07 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 19:06:07,277 APIUnittestTestCase.py[line: 143] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:06:07,277 APIUnittestTestCase.py[line: 146] INFO: 正在提取目标返回结果值
2018-02-05 19:06:07,277 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 19:06:07,278 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 19:06:07,278 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 19:06:07,278 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-05 19:06:07,279 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 19:06:07,279 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 19:06:07,279 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 19:06:07,279 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 19:06:07,280 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-05 19:06:07,280 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 19:06:07,280 APIUnittestTestCase.py[line: 149] INFO: 正在执行断言
2018-02-05 19:06:07,280 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:06:07,281 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 19:06:07,281 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,281 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 19:06:07,281 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 19:06:07,282 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 19:06:07,282 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 19:06:07,282 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:06:07,283 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', '[{\n    "模式": {\n        "userName": "dataviewer"\n    },\n    "消息": "FAILURE#用户名不为dataviewer"\n}]', '[{\n    "dic": {\n        "atten": {\n            "atten": "value"\n        },\n        "userName": {\n            "userName": "value"\n        }\n    }\n}]', '成功', '', '2018-02-05 19:06:07')
2018-02-05 19:06:07,350 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:06:07,351 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:06:07,351 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 19:06:07', '0天 0小时 0分 0秒')
2018-02-05 19:06:07,412 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 19:06:07,412 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 19:06:07,412 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 19:06:07,420 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:06:07,421 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 19:06:07,421 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:06:07,421 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:06:07,421 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 19:06:07,422 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:06:07,422 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 19:06:07,422 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,422 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 19:06:07,423 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 19:06:07,423 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:06:07,423 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,423 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,424 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 19:06:07,424 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:06:07,424 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 19:06:07,424 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,424 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-05 19:06:07,425 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 19:06:07,426 APIUnittestTestCase.py[line: 169] INFO: 正在发起POST请求...
2018-02-05 19:06:07,426 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 19:06:07,426 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 19:06:07,426 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 19:06:07,440 APIUnittestTestCase.py[line: 182] INFO: 正在对服务器返回body进行解码
2018-02-05 19:06:07,440 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 19:06:07,440 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 19:06:07,440 APIUnittestTestCase.py[line: 207] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:06:07,441 APIUnittestTestCase.py[line: 211] INFO: 正在提取目标返回结果值
2018-02-05 19:06:07,441 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-05 19:06:07,441 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-05 19:06:07,441 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-05 19:06:07,442 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 19:06:07,443 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}'}
2018-02-05 19:06:07,443 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-05 19:06:07,443 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 19:06:07,443 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041E30E8>]
2018-02-05 19:06:07,444 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[<Element 'return' at 0x00000000041E30E8>]
2018-02-05 19:06:07,444 unittesttestcase.py[line: 403] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:groupCode_1-dataviewer
2018-02-05 19:06:07,444 APIUnittestTestCase.py[line: 214] INFO: 正在执行断言
2018-02-05 19:06:07,444 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:06:07,444 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 19:06:07,445 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,445 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 19:06:07,445 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
},
{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
}
]
2018-02-05 19:06:07,446 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 19:06:07,446 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 19:06:07,446 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 19:06:07,446 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}'}
2018-02-05 19:06:07,447 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 19:06:07,447 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 19:06:07,447 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041E30E8>]
2018-02-05 19:06:07,447 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 19:06:07,447 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 19:06:07,448 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 19:06:07,448 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 19:06:07,448 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 19:06:07,448 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 19:06:07,449 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}'}
2018-02-05 19:06:07,449 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 19:06:07,449 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 19:06:07,449 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041E30E8>]
2018-02-05 19:06:07,450 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 19:06:07,450 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 19:06:07,450 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 19:06:07,451 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:06:07,451 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', '[{\n    "模式": {\n        ".//return": "dataviewer"\n    },\n    "消息": "FAILURE#获取的实体集团卡号错误"\n}]', '[{\n    "xpath": {\n        "groupCode": ".//return"\n    }\n}]', '成功', '', '2018-02-05 19:06:07')
2018-02-05 19:06:07,530 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 4 步, 步骤ID: 4]======================
2018-02-05 19:06:07,530 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:06:07,530 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:06:07,530 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 19:06:07,531 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:06:07,531 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,531 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,531 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 19:06:07,531 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:06:07,532 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,532 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,532 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:06:07,532 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";  data：
2018-02-05 19:06:07,533 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 19:06:07,538 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 19:06:07,539 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 19:06:07,539 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 19:06:07,539 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-02-05 19:06:07,540 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:06:07,540 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 7, 4, 4, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE user_name = "dataviewer";', '', 'body', '', '', '', '成功', '', '2018-02-05 19:06:07')
2018-02-05 19:06:07,610 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 5 步, 步骤ID: 5]======================
2018-02-05 19:06:07,610 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:06:07,611 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:06:07,611 test_case_step.py[line: 97] INFO: 执行操作：update_record
2018-02-05 19:06:07,611 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:06:07,611 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,611 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,612 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 19:06:07,612 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:06:07,612 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,612 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,612 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:06:07,613 mydb.py[line: 81] INFO: update_query：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 19:06:07,619 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:06:07,619 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 7, 5, 5, '操作数据库', 'ddtm', 1, 'update_record', 'http', '10.202.95.88', 8080, '', '--', 'UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"', '', 'body', '', '', '', '成功', '', '2018-02-05 19:06:07')
2018-02-05 19:06:07,686 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 6 步, 步骤ID: 7]======================
2018-02-05 19:06:07,687 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:06:07,687 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:06:07,687 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 19:06:07,687 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:06:07,687 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,688 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,688 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122
2018-02-05 19:06:07,688 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:06:07,688 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,688 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,689 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;
2018-02-05 19:06:07,689 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:06:07,689 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,689 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,689 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:06:07,690 mydb.py[line: 96] INFO: query：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;  data：(1033553122,)
2018-02-05 19:06:07,690 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone,user_name, atten FROM ddt_user WHERE qq= 1033553122 ORDER BY id desc;
2018-02-05 19:06:07,697 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414', 'dataviewer', '数据监视器'], flag：True
2018-02-05 19:06:07,697 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 19:06:07,698 unittesttestcase.py[line: 407] INFO: 提取数据库查询结果
2018-02-05 19:06:07,698 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 19:06:07,698 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:06:07,698 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 19:06:07,699 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'phone': '18159001414', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,699 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 19:06:07,699 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 19:06:07,699 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 19:06:07,700 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 19:06:07,700 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 19:06:07,700 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:06:07,701 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 7, 7, 6, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;', '1033553122', 'body', 'db列值相等', '[{\n    "模式": [\n        "dataviewer",\n        "dataviewer"\n    ],\n    "消息": "FAILURE#姓名不为dataviewer"\n}]', '[{\n    "db": {\n        "phone": 1,\n        "user_name": 2\n    }\n}]', '成功', '', '2018-02-05 19:06:07')
2018-02-05 19:06:07,767 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 7 步, 步骤ID: 6]======================
2018-02-05 19:06:07,767 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:06:07,767 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:06:07,768 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 19:06:07,768 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:06:07,768 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,768 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'phone': '18159001414', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,769 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122, "dataviewer"
2018-02-05 19:06:07,769 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:06:07,769 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,769 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'phone': '18159001414', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,770 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";
2018-02-05 19:06:07,770 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:06:07,770 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:06:07,770 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'phone': '18159001414', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,771 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:06:07,771 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";  data：(1033553122, 'dataviewer')
2018-02-05 19:06:07,771 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE qq= 1033553122 AND user_name='dataviewer';
2018-02-05 19:06:07,777 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 19:06:07,778 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 19:06:07,778 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 19:06:07,778 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:06:07,778 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 19:06:07,779 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'user_name': 'dataviewer', 'global_host': '10.202.64.168', 'phone': '18159001414', 'atten': '数据监视器', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_url_arg': '0.5185151614698615'}
2018-02-05 19:06:07,779 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 19:06:07,779 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 19:06:07,779 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 19:06:07,780 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 19:06:07,780 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 19:06:07,781 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:06:07,781 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 7, 6, 7, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";', '1033553122, "dataviewer"', 'body', 'db列值相等', '[{\n    "模式": [\n        "dataviewer",\n        "dataviewer"\n    ],\n    "消息": "FAILURE#姓名不为dataviewer"\n}]', '', '成功', '', '2018-02-05 19:06:07')
2018-02-05 19:06:07,845 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:06:07,845 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:06:07,845 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828766', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '成功', '', '2018-02-05 19:06:07', '0天 0小时 0分 0秒')
2018-02-05 19:06:08,016 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 19:06:08,017 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 19:06:08,017 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517828766', 1)
2018-02-05 19:06:08,018 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517828766 AND plan_id=1
2018-02-05 19:06:08,023 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 19:06:08,023 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517828766', 1)
2018-02-05 19:06:08,024 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517828766 AND plan_id=1
2018-02-05 19:06:08,030 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 19:06:08,030 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517828766', 1)
2018-02-05 19:06:08,031 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517828766 AND plan_id=1
2018-02-05 19:06:08,037 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 19:06:08', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=4, case_fail_num=0, case_block_num=0 WHERE execution_num='1517828766' AND plan_id=1
2018-02-05 19:06:08,100 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 19:06:08,100 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 19:06:08,101 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 19:06:08,102 main.py[line: 38] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-02-05 19:06:08,102 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行成功', remark='' WHERE running_plan_num= 1517487657
2018-02-05 19:07:09,120 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 19:07:09,121 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 19:07:09,121 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 19:07:09,122 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 19:07:09,122 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 19:07:09,122 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 19:07:09,122 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 19:07:09,130 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 19:07:09,131 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 19:07:09,131 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 19:07:09,132 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 19:07:09,132 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 19:07:09,138 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 19:07:09,139 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 19:07:09,165 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 19:07:09,166 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 19:07:09,173 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 19:07:09,174 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 19:07:09,174 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 19:07:09,174 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 19:07:09,180 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 19:07:09,180 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 19:07:09,181 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 19:07:09,187 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 19:07:09,187 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517828829', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 19:07:09', '', '', 0, 0, 0, 0)
2018-02-05 19:07:09,252 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 19:07:09,253 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 19:07:09,253 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 19:07:09,260 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:07:09,261 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 19:07:09,261 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:07:09,261 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:07:09,262 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 19:07:09,262 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:07:09,262 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 19:07:09,262 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,263 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 19:07:09,263 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 19:07:09,263 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:07:09,264 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 19:07:09,264 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,264 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 19:07:09,264 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 19:07:09,264 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:07:09,265 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,265 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,265 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:07:09,266 APIUnittestTestCase.py[line: 44] INFO: 正在发起GET请求...
2018-02-05 19:07:09,266 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 19:07:09,266 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:07:09,403 APIUnittestTestCase.py[line: 54] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 19:07:09,404 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x10aIDATx\xda\xe5[\x87{Tu\x16\xe5\xdf\xd8\x80\x82\x94UQT\\,\xac\x86\xde\x824\x11\x01\x01Q\x0cHG\x11\x01\x91&\x08\x88\x08k\x00Y\x10\x04\x01\xe9\xc5\x90\x1e\xd2\x0b\xe9\xa4\xf7\xde{&e\xd2\x93\tw\xef\xb9\x937\x99I2!\x99I\xc2\xb7\xf0\xbeo\xbe\x04\xf3\xe6\x95{\x7f\xf7\xdcs\xce\xfd9\x80\x9e\xb2\xa3\xbeAC\x19\xb9\xd5\x14\x18YJ\xb6\xee\xb9\xf4\xfb\x8dT:p:\x8e6\x1f\n\xa7y\xeb|\xe9\x9d\x8f\xef\xd3\x88i\x0e\xf4\x8f\xf7m\xe9\xc3\xf5\xbe\x94\x99\xab\xa6G\x8f\x1e\x19\\\x03\xe7ZX\xda\xca9\x96K\xee\x93\xb3O\x1ey\x87\x14Q@D)\x85\xc7\xa9(*\xb1\x9c"\x13\xca)4\xa6\x8c\xbc\x82\x8b\xc8\x91\xff~\xc75\x87\xae\xd8g\xd2\xe9\xeb)\xb4\xffT,]\xb6M\xa7\xf8\x94\x8a\x0e\xd7\xee\xee1\xe0iM\x8c_X1\x1d=\x9f@\x9f|\x13@\xa3\xe7\xb9H\x90\xf5?\x08\xfc\xfe\xdfb\xa8J\xdd\xd0!xK\xb7<\xd0\x9d7w\xad\x0fUT5Pum\x13\xd5\xf1\xb55\x9a\x169G\xa3yDu\xf5\xcd\xa4\xaen\xa2\nu#\x9f\xd3He\xe5\r\x94\x93_C\ti\x95\x94\x9cQE%\xaa:j\xd6hLJ\xceS\x93\x18\xbc|bz%]s\xc8\xa4\xaf\x0e>\xa4\xf1\xcb\xdci\xa4\x95#\r\x1a\xd7\x96\x08$\x08U\xb3\xedH\x04\xfdy7\x9d\x83WI\xcd\xcd\x1d\x037\x7f\x83/\rl\xfd\x1e\xaaJ]\xd3\xd4\xad\xe0\xb6\xb4<\xe2D\xb4\xf05[$qH"\xfe\xfdL\'\xa6\x86W\xf4\xe6C\x0f\xe9\xbdO\xdctP5\x90\x93\xf1\xd2\x0c\x07\x9a\xb0\xcc\x83V|\x1fD6\x97\x92\xe8\xbe\x7f\x01\xa5fU\xc9j\xd7\x18\t\xda\xe2\xcd\x0f\xe8\xb9\xf1\xf7\xe4\x1a3\xbf\xf4\x96\nl1!\xb8\xb8\xb6\xf21+1\xc8\xf8\xff\xcb\xd1\xdc\n)\xca\x11\x1aSJ\xd3\xbe\xf0\xd4A\x10\x02;{\x8d\x0f\x1d\xf8o,9\xfb\xe6Sf^\x8d@Mm]s\x87\xef\xb6?6q\xc5)\x89\x99\xf0\xa9\x07\xf9\x84\x16K\x15\xf4\xe7a\x90\x18Ue\x03E%\x95\x0b$\x94\xf3\xef\xfd\xfd0\xc6V]C\xa3\x86\x8a\xca\xea\xb8\xe1\xaa\xb8\xc9f\xd3u\xa7,\xca)\xa818\xcf3\xa8\x88&}\xe6!\x104\x9d\x13t\xc5.\x83\xe2\x92+\xa8\xb0\xa4\x8ej\xb9:zr\x9c\xba\x9a\xacK\xcc\x98\xf9\xae\xf4\xc7\xad4\xa9\xc8\'\x96\x98\xc6\xa6\x16\n\x8fW\xd1/\x7f\xc4\x0bVG&\xaa$(O\xf2\xc0b\t\x08/\x91`}\xb9;D\xa0j\x9a\xb5\x17\xc5$U\x18\x9c\x17\xcd\x0b\xea\xb59N\xf4\xfc\x84{\xf4\xe9\xb6\x00R\x9b\x11H\xb0-%1\x80E\xb0\xb4\x02N\xf0\x13K\x8c\x02\x11{\x8eG\xd3\xccU\xde\xf4\xc5\x8e :\xc8Pp\x9bW)\x1e6+\xaf\x9a*\x99\x814\xf5A%\x01\xef\xd1ds\x0bk)\x82\x17\x87\x9dg.\x1d\xbb\x90Hk\xf6\x84\xd2\xac\xd5>\xf4\xd6\x02W\x1a1\xd5^\xfa\x06\xe0%.\xa5\x924z\xd0\x0b\x18~\xc9J\xdb[f\xac\xf4\x12\xc82\xe7x\xe5\x03\'\x1d,\xceX\xe9M!\xd1\xa5\xd2\xd0\xf5{G\xbf&\x06\x87?\xafP$\xe6\xf9\t\xb6\xf423\x9b\x19\xd6\xde\xb4zO\x08\x1d:\x13GW\x99\xab?\x08+\xa1\xb4l5\x153\xbc \x98\xa8*\x04\x16\xc1\xd1ox\xed?\x9d\xc1\x14\x12\x8dk\x05\xb1\xee\xb8\xe5\x9cE\x87\xcf\xc6\xd3\xca\x9d!\x12\xfc\xa1\x93\xed\r(.V\xf1\xbf\xe6\xbb\xd0w\xc7")\x89\x19\x95F\xafW\x94\xaa\xea\xe9\xf3\xef\x82\xe4\xbc\x0fVk\x03i\xce\xb1\xfd\x97\x08]\xd5\xbc\xf9\xa13\x1da\x14I\xcf\xa9\x16Ti\x96wm\xe9\xd3\xe4t\x9a\x18`2\x120t\xb2\x9d6 \x0c\x0f/\xcep\xe4\xa0\xb8\xd2\x94\xcf=\xe9\xe3M\xfe\xb4\xf6\x87P\xda\xf7[\xac\x08*T\x94\x17c<\xc4\x17\x18O^Q-7\xdaz*g\xfe\x0f~_U\xdd\xc8\xfa\xa2\xb9\x93\x06\xae\xe1\x9e\xa6\x92\xa4\x7f\xb8\xdeO\x92\x01J\x0b\xf8P\x82\xf2\x02?\x03D\xe1\xe2\xcd\x01\xac;bE4f\xb2V\x80^\xd1?\nJ\xebh+\xd3`\xd0b\xcb%n\xdc\xf0\xf3\xcc\nLpT)\xbd<\xd3Q\x9e\x01\xf0\x08\xfa\xbd\xf7d\x0cy\x06\x16R|j%\xa5dV\xc9\x07\x10gnu\xf6\x88.\xd7s\x15\xac\xdf\x17FC&\xdd\xeb \xce\xf0\x19\xc4\x81{\x89\xabi\xccG\xae4\x91\x03\n\xb8Y\xf4\xf5\x03\xfal{\x90\xf4\x02|w\xe3\x8fa\xb4~?\xff<\xf0P\xd4sm]G\xdc\xcf\xca\xaf\xe6\xc0\xbbv\xb8\xfe\xd0)\xf64a\xb9\x87h\x92\x8b\x7f\xa7s\x05\x94Q~q-\xd5p\x10\x8c\xadT\xf4\x82\xc1\x13\xed\x18\x86\x1c\xc9\x9e\xa1\xd0\xdc\xfe\x88\xf7y~\xa2\xf6\xfdA*\xb0`\xf0\\\xc3\xa7\xd9\xd3d&\x1a\x9fo\x0f\xa4\x1d\xc7\xa2\xe8\xec\xcdT\xf2\r)\xa2\xec\x82j\xa6\xe1M\xbdRM]\xea\x18T\x00\xaaC\xb1\'\x94\x07\xd4\xffww?\x8bX\x1b<\xe4\xeb\xb5?\xc0\x9av\xdaD\xc95Q%\xe3Ys\xec\xb2\x89\x16\xf2\x11\xc6}\r=\xa7\x9a\xe1R\xa3y|_\xbbl\x9b!\x0b\t\xda\xe5\xe8\x85\x04Nb\x93N\xab\xa0?h\xfb\xa3F\x07\xa3\x8f;\xec<ri\xec\xa2\xfbF\xdf\t\xcf\xfc\xc2$;\x81W\x08Q\xc0\xdfm\xd7,\xca\xe6\x8an\xd6\xb4\xf4]bp\xdc\x7fP \xa5\xac<\x0c\x1e\xe4U^\x91x\xf9!\xfc\xbb\xa2\x90\xdb?0\x9a\xb4\x85\xa5a\x12\xaf\xd8ev\x1a\x10\x04`\xd0x\xc5\x9br\xa3t\xee9jIF\xcfV\x1dl\x13\x05\x02\xa7[{\x92oX\x91@\xed\x06\xae\xdcu{C\xe9\xe0\xe9X:u%\x89\xfc\x1f\x96\x08\xfd\xedL\xf5w\xec5\x91\x02c\x96K\xdcu\x84\x00\xef\x8d\xaaAu\xea\xf7\xbf\xe1LNF2\xfc\x8d\xe1Dm\xf99\x9cc\x97/v\x0edGO+\xe8\xb1\x89Ai\xfer>\x9e\xfe9\xcd^\x97\x98\xa9+<\xc5\x87\x82\xad\x81f\xfd\xed\xe1\x08Z\xb1#X\xfa\x04\xfe\x86\x97\xc0J\x1b\xbb\xc8\x8d\xc6-\xf5`]\xe1E\x0b\xb8\xf2N\xfe\x95L\xb9\xdc\x7f:\xc3\xf3\x05\x9b\xfc\xe4\xfao3\xac\xdd\xbd\x9fc\xd2*\x03\x94\x00Fq\x9d\xe1\x0c9\x80\xd9\xd7\xe68\xebH\x04\x16\xc90\x0e\x1eV\xf8\xa7[\x03D\x13\xa1\x1fv%\xac3\x99\x89:z\xe7\xd2\x1d\x97lr\xe7E\xea\xea_@go\xa4\xd2\xce_\xa3h5\xdf\xeb\xa3\x8d~4\x8e\x13\xf7\xca,\'NN\xdb"D\xd2\xde\xe5\xde\xb8\x99\xa1\xd8\x83\xfb\x12\xaa\xb5W\x13\x83L\x83\x0c\xe0E,Zo:b\xba=\xf7\x92@\xb1*\x8a\xcb\xea\xa5t\x933\xd5\x14\xcb\x82."\xbe\x9c\xc2bU\x14\xca=\x01\x14\x1bp\x18\xcd\x9a#1\xbdJ\xce\xefL\xec5r/\xf8\xe6\xa7\xf0\xd6\xdeeK\xdf\xf2j3\xe5hj\xd2\xd0n\xa6\xfa\xdd\x85\xd7\x11\xbc\xd8\xd0\xc3\xd2s\xd4]2G\xf4F\xac|\xfc\xc4\xf3\x03Z\x0b\x99l\xc0\xac\x0c\x88,\xa1k\x8e\x99\xe20,\xe4\x9e4l\xaa]\x87\xfb a\x93\xb9_\xda32\x94p\xbcz\xd5+\x83[\x8b\x06\xaf$\x07\xba\x02\xa2\xafDU\xdf+,\xe4\xf2\xbd\x0c\xa6\xa5.4h\x1c\x0b\xc4\xad\x81\xa2eL9\xce\xdfN\x138\x01\xb4L]\xe1E\xabxU#\xd1XX\xf37\xf0\xea^\xea.U\xaf\x04\r\xb0\x04o\xcc=\xa0\x80\x17Hs\x97\xd5\xd3>yh\xf2 \x18\x95\xcc:\x8b8Q\xe9\xb9j\x81O\x9bK\tr\xcdQ\\E\x03\xf5\xa0\x1c\xa4d\xe5\xae`&B\xf9\xa4\xaah\xe8\xf2^\xddN\x0c\x9a\xd9]\xb7\x1c\x03\xb7\xd6j\x95\x17y\x06\x15\xf6Jb@9_\x9b\xad\xc5p@\x8d\x1b\xc3Fw\x9bt{\xdb\x7f\x07\xeb\x1c\x07fep\x03\x92\xb8R\x114\x90\x00\xac\xfa\x10\x86M\x9b\x8b\x89\x12$\xfdU=z\x8e\x93\xf8m\x9d\xd1\xfa\x9e\xd8G\xb8OMm#\xa3H5]\xb3\xcf\xd0A\xb4~\xffE\x8f\xdeq4\x92\xe2\x92\xcbY\x17i\xccw\x97a\x8f\xa0\x19*\xc9A3\x84v\x80\xb7f\xee\x81\xd5\xb3\xef\xb7\x18y\xf0\x91|\xdd\x13\xdc\x8f\xaa\xaa\xb5\xf0\x01_,\x91a\x03\x90\t\x0f\x0fp\xd2d\xe4\x85\xb0\x8a1\x07Q\xdccMK\xdb*\xc7O\xdc\x07\xba\xca\xc1+\x97\xe63\x93\xb2\xd0\x0b\x1a*\xca\xc9;O\xa0\xca\\\x7fO\xb9\x17H\x0cz\xcc*\xae\x14\xc5\x99Pz\xd0\xdc\xb5\xbet\x83Eu)k\xbe\xf6\xd58\xa0\xa77D\x13\x83\x8d\xaed\x7f\xec"W\xfa\xfdFJ\xaf$&\x85\xc5\xa9\xc2\xe6\xacVzQ\\\xaav\xbe\x02\x1a\nU\xbf\xf0+\x7fi\xee\xb0j\xfc\x182:\x9b\x93H@\x1eSeJ\xd0\xb0\xa0^\x9f\xd3f\xbd\xe0\xde0@\xc3\xe3T\xd4[\x87\xf6^-\\\xb5\xb5L\x96\xd2\x84u\xea3\xd5\xd1\xf3\x9ci\x1b\xbf_\x15\xc7\x15\xe7\x995\x8f\xb9\xce\xcd\xee\xdd\x85ZQ\x08\x8a\x08\xfc\x0e6\xd3\x02\xc1\x81@\xa1\xbf(\xf4S\xa1\xa3\x03[5\x8e\xa2u\x06\xb3\xe8\x83\x93|\xe2r\x92T\x91\xa9b\x0e\x15u\x81\x83\xf5\xee\xc26\xad\x024\x800NL\xab\xe8\xd51\x88\xb8\xe4\x0c\x93\x88\xd3\xc6\xfd\xa1bu\xe9\xc4\xf4d;I\x0ePA\x816\x93\x12\x83R\xdf\xd6j\x7f\x00\n\xe0\xea\xfep2\xda\xc0+3\xe9\xba\xac-v\xdbDwp\x00^\x9f\xeb\xcct\xd4Q&\x92\xfa\xba\xe9\x9f\xcc\x0ew3m\xadT7\x98\x1c\xb0Ju\x133\xb30\x03\xaa\x0bJ\xfd+\xf7!S\xf4Gw\xaa\xa7\x90\xab\x07\xf6\xce`=}\x88\xc5\xf6\xf5\xa1\x87\x14\x95\xa02o\x82\x89\xcd\tp]-Z\xe9\xe0tk/r`|\x06\x8d\xc4@J\xeb\x8fit\xa3\xd5\xeeN\xf3N\xb0\x00D\xf3\x7fo\xb1\x1bk\xa3 :t&\x96\xce\xdeL\x91\x8f\xcd\xa5D\xda\xb0?L\xd8\x9b\xc2v\xa0\x97\xae;f\xf4X\'\xe8\x1f\xf7<rh\x06?\xbf"N\xf1\xb1\xe2w\xf3\x0b-\xea\xf5\xe4(\t\xca`\x8a\x0e-\x04\xc2\xa3@\x1b\xbc\xb9\xad\xcc \xd3\x18\xd2MN\x0c\x0cJ@\x89B\x04@;\xad\xac\xbdEx\xfe\xfag"\x8b\xd2\x04:\x06\x11z\'\x9d\xfc\xc3\x8b\xa9B]/\x8c\x07M\xbb\xab\x17\x85\x1fv\xe1N\x1a\x05\xb2>\xc0p\x0c\xf7Q\xdckuM#\xa5f\xab\xe9\xdc\xcdT\xc1f\xe5\xbe\xcbYS\x99S5\x10\x99\xf0\xd9^\x9c\xe1`\xe0pX\x7f\x1f$\x0b\xac/\\d,\xd8\xf8\xd4\nZ\xbd\'\x98+\xdf\xc1\x80R\x1f>\x1bg\xde\xcc?\x86\xe9\xde\xfb\x9f\xb8\x19\x15p(UX7\x10r\xa0\x88\x9b~\x0c\x15\xb5\rA\x87`\x1b{a8\xd2\x8dF\x12\x88\xc6\x8e`-\xe3\xbe\xa6\x18\xacC\xf8>\x10\xb7\xa6\x06\x10\xdf\x83\x11\x89!\xdc =\xa8|\x8e\x7f\xbf\xed\x9c\xdd\xed\xcd\x18\xa6\x10\x1e\xc4\x03#p}\xdb\x0b\xa6\xb0Y\x89A\x00\x8f]H\x90\x1e\x03\xbb\x1e\x10\x03\x0b\x04%\tR\x80q\x81E\xbbd\xbd\xc2\x7f\xb3\xde\x11L.\xbey&\xbf0\xbe\x03\xf8Q\x0cF\xdc\xcb\x86\xabTc\xa2q\x88\x00A7a\xee\x04\x81\xab<+\x16\x156x`\x1fY_\x1d\x98+\xed\xb2\x89\xd2!\x80\xb6w:\x98\x97\x18\xa1\x81%u\x02Y\xc0\xff\xe3\x97\x92\xa4i\xa2/\x1c<\x1dG\x9b\xb8\xa9b~\x03\xdf\xaa\xfd\xd0k47t;\x0e\xae1\x81\xf586\x85\xf9\xff\xc4\xe5\x1e:8\xdb\xc5x\xddS\xd3\xb3m\xa4\xae!\x17\xff|\x9a\xb3\xc6\xd7\xb0\xe2\x99\x15.\xdb\x12 \x9a\xa7/\xf6?(v\xd75\x87\x0c\x9a\xfc\x99\xa7\x01m\x1f\xd0\x1b\xe5\x88f_\xc9\xd5\x83\x9b@\xc1\xab*\xeaE\x8c\xaa\x19r \xf4"\x12\xcae\x028\xfd\x0bo\x03G\x16\x9a! \xa2\x98id\xcf\x93\x03\x95\x0esT!\x01?\xfd\x1e\'\xca\xbe\'\x15\xa8\x90\x11\xd8#gX\x8ba\xc6\xa2_1\x805$\x0b\xb3\x1d\xbc\x8f\xa6\x0fv\x11!\xe1pO\xac@>\xf4\xe0\xac\xdf\xf6\x95a\xc7\xa2\xbdW\x1e\xcd[\xef\xa7c?op\xd5\xd8\\L\xea\xb6\xb1\xa7\x7f`k\xea4N\x8c\x85\x02e\\\xa9]1\xb3\xce\x84hs\xabM\xe3\xea\x97O\xeb~\x08\xa5Q\xb3\x9d\xda\x99\x9c\x0e\xe2\x98\xdfs\xcf\x11un\x0c*\x81\x1c\xa6h\x1e<C9/b[\xbe\xbe\xbe\x0fiai\xdb\xbf\x1b\xfe@\x9faV*M\x1b\xe4`\xdd\xbeP~\xb8\x86\x1e\xbf\x10\xa8\xf9\xa8\xd9Z\\\x1e\xf3\x91\x8b\xc0\x81\xfep\n\xe7\x94\xf1u\xc1\xb8\x1a\x1a\x9bee\xc2p\x05\xeb\x03\xa5/(\xae\x13/\xed\xaaC&m\xd8\x17F\xef,p50\x1c\xe1r\xa3o\xe2oX\xd1e\xad\xb6\x89\xb1U\x0f\x1b(\x86\xaf\x87\xdd\x9d\xa8@\xc0\xaa\xb1\xf3\x95J\xad\xe7\xe7\x82\xeb~\x98\xab\x1d\xef\xa0?\xdb\xe9\xd7\xc4`e\xe1\xc1a\xb7\xe8v\xa0p\t\xf7\x14\xbf\xabk\x9b\x85\x92\xebX\x0c\xf7\x9a\xc2v\xdb\x8b\xc0\xdc0M\xdc\xf9\x9fH\xfa\xfeX$\xfd\xcc\x14\x14\xf4\xfe\xcc\xf5\x14\xb1\x90\x0e\x9c\x8e\x95\xdd\x99\x98\x1f\xbd\xfa\x81\x93\x01I\x01\x84\xbd\xca\x82v\xd6joq\xd0a\xefw5\xa6\x06S\x84\x87\x87\xca\x02\xd5\xc5\x8c\n})*QE\xb9\x855\xb2\xb7Y\xd1t-\xad"\xb3\xbe\xbe\x89\xa2\xf9\xefG\xce\xc5\x0b\x84*Z\x06\x8b\x03\x04\xaa_\x13\x83\x04\xc4\xa5\x94\xcb\x0b+%;\x89\x83\xda\x93\xc4\x00\xe7\x11(\x8c\x1d\x94\xaa;\xf6gB\x87\xd5\x89^\x87\x19\t\x8cC\xb0\x1c0G\xb08\xcb\xa5nR\t\xcf\x8d\xd3\xcec\xa0Wt\x10\xc2\x1fh\x19\x9c7w\x9d\x8f\xf4\x9d\xf0\xf82\xd1R\xdd\x99\x05\xf9\x84\x14\x0b$B\x8b\x00^\xdf\xe2*\xc0>\xe8\x8d,\x13\x90\x80\x8b\x7f\xa7\xd1y\xd6hH\xde\x9a=!\xb2(E,\x8fk\x1b\xdb\x8f\x9a\xe5L+\xbe\x0b\xee\xef\x8ay\xc4\xcd\xbe\x84\xfe\xbd\xf8\xbe.\x10x\xe8\xee\xe0\xb3bg\xc0\xc3\xc2\xd4PY\xdd\x0b\xf8\xf7\xb2N\xa0\x10\t\xdcw2\xa6\xc3\xf6\'}\x9d\x82\x1d8\x92\x9c\xd6\xdd@H\x18\xe6({\x8fG\x8b\xb3\x91\xd4\nK\xdd\x85\xd7\xbc\xc2Z\xb9\'vov\xa6\xebP\r\xd0+\xb8\xdf\x0bzcy\x0b\xd9c\xed(\xb3"\xb8\xf5\xd8\xeb\xd0o\x89Q\x02\x0bU?t\x8a6\x10\xc3\xf8\'\xe6\xfd\x8f\xab\x100;@\x02\xb6$\xc10\xd5\xb7M0\x9666y<~9\x91\xacVy\x0b\\\xc1\x05\x87\x18\x86\xbb\x8b*\x9d\xc2\xff\rU\xb1\xe8k\x7f\xd9Tx\xe0T\xac\xc0\x9c\x93O\x9eT5\x9a}Ov\xd9\xe0~\xa0\xdd\x7f\xbb\xe5\xd0\xf2m\x81\xf4"W\xea\xe0\t\xb6\x1dt\x9c\x92 xc\xa8dT\x0c6(n=\x12)[\xc6\xb0w\xcd,\xaf\xcc\x94\xfe\x82\x01\x92\xb2\xf1\x1b\xabd\xc97\x0f\xa8XUg\xf0r9\x05\xb5\x94_R+\x0c\x08\xa6&\xf6\xa9\xb9\x07\x16\xd0!n\x90\xa0\xc7CZ\xa7\x8f\xd0G^\xdc\x94\x8dU\x1b\x12\x1a\x9d\xa4\xa2\x1bNY\xb2\xfd\xe9\xe4\x95D\xe9\x17X\x18\xf8o7\x9d\xb3\xe8\x96K6\xb90#{\x10^Lq\xc9\x95\xba\x81\x1av\xd2\x98\xa2\x89\xf0,\xd8\x04\x19\x19\xaf\xa2\xbb\xdc\xdf\xb00\xb6\x1e\t\x17k\x07\xae\xf9\xf2\xadA\x0cSA\xf4%\xc3\xd8\x96\xc3\x11"\xce\xe1\xd4\x03E\x92\xf1\x7f \xe8\xc9\x86\x01\xfdU-\xd8\x95r\xeev\xaan\xd5\xbc9\xdfEv\xd1\xeb\x9f\xa3\xaa\xac\x17\xa1\xbajw\xb0\xecG[\xbb7\x94\xacw\x06\xcb\xaa\x87\xbb\x8cd\x82\xd1\xad\xdd\x1bB\x19\xb9\xea.!\xb0\xa5U\xbca\xe5\xa31kY\x90F~Wh5\xbe\x8f\xa6\x8c\xf3\xda\xef"5y\x82\xc9\xd7\xc1\x16b\xd9\xb1\xd9l\xb8;\x15\xc9F\x15\xc2\xf1(\xafl\x94g\xa96\xe2~\x0c\xe8\xeb\x84\xe0\x83\x9b\xdfp\xca\xd4\xe1\xfb\x1bs]d\xf5\xea\x07\x16\x06\xa7G@\xa1\xc0\x0c\xaa\x02v\xbf\xf4\x84\xf1\xda\x92\x87\xdb\x8c\xc6\xea\xea\x9fG5\xf5M}\xbew\xf8I\x1ff%\x06\x98\n\xd5\x8fU\x89\xdf\x01\x03\xf8\x89U\x88\xbe\x80*A\x03\xdd\xc6\xe5\xac\xcc;\x80\xa9\xe7n\xa5v\xc0o\x8c\x8f\xf7\x9e\x88f\x9a\xeaD/3>\xbf\xce\x94q\xecB-;\xc2f\nL21\xe1\x84&y\xda\x93bvbR\xb3\xd4\xe2\xcab#\xddU\xfb\x0c\xd9\xd7\x0bx\xc2\x8e\x93\xbfXHb\xce=rf\xdb\xa4\x0e\x1b\xd5\xc1v:\xf3\xc70F\x86m\xb3\xfdh\x04\xfd\xc84\x17\xc9\x83\xb1\x88}\xc2\xb0\xff\xeb\x04nZ\x9e\x89\xa4\x98\x9d\x18X\xd6\xd0\x05\xc3\x18vP\t\x18\xf7\xa2\x1f\xc0>\x1f>UK\x07\x01E\xd8\x99\x08s\xb3\xac\xc2\xb8zF\xa3\xc78 9\xb3J\xb6\xc5B \x9a\xbb\xcd\xf4\x99L\x0c\x82\x8795\xf87v\xcb\xa02\xf0\x81\xe5\x0f\x81\xf56\x0b\xc0\x8f\xbf\xf2\x17f\x028{\x96\x83l\xca\xf1?\xe2\x1c\xa8v\xb9\xbb\xad\xc5\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 19:07:09,405 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:07:09 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=df6zviuphjz51sskd60574xp1;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 19:07:09,405 APIUnittestTestCase.py[line: 79] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:07:09,406 APIUnittestTestCase.py[line: 95] INFO: 正在提取目标返回结果值
2018-02-05 19:07:09,406 APIUnittestTestCase.py[line: 98] INFO: 正在执行断言
2018-02-05 19:07:09,406 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:07:09,406 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,407 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,407 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"FAILURE#请求验证码识别"}]
2018-02-05 19:07:09,407 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 19:07:09,408 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:07:09,408 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "Token": "asfdacfdasfasfa",\n    "Accept-Encoding": "gzip, deflate"\n}', 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', '[{\n    "模式": "200",\n    "消息": "FAILURE#请求验证码识别"\n}]', '', '成功', '', '2018-02-05 19:07:09')
2018-02-05 19:07:09,486 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:07:09,486 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:07:09,487 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 19:07:09', '0天 0小时 0分 0秒')
2018-02-05 19:07:09,552 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 19:07:09,553 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 19:07:09,553 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 19:07:09,561 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:07:09,562 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 19:07:09,562 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:07:09,562 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:07:09,563 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 19:07:09,563 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:07:09,563 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,563 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,563 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 19:07:09,564 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:07:09,564 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,564 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,565 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 19:07:09,565 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:07:09,565 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,565 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,565 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 19:07:09,566 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:07:09,566 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,566 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,566 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:07:09,567 APIUnittestTestCase.py[line: 40] INFO: 正在发起POST请求...
2018-02-05 19:07:09,567 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 19:07:09,568 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 19:07:09,568 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:07:09,628 APIUnittestTestCase.py[line: 54] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 19:07:09,633 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 19:07:09,633 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:07:09 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 11:07:09 GMT')]
2018-02-05 19:07:09,634 APIUnittestTestCase.py[line: 79] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:07:09,634 APIUnittestTestCase.py[line: 82] INFO: 正在提取目标返回结果值
2018-02-05 19:07:09,634 APIUnittestTestCase.py[line: 85] INFO: 正在执行断言
2018-02-05 19:07:09,635 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:07:09,635 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,635 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,636 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"FAILURE#灯塔用户登录失败"}]
2018-02-05 19:07:09,636 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 19:07:09,637 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:07:09,638 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",\n    "Cache-Control": "no-cache",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\n    "模式": "\\"result\\":200",\n    "消息": "FAILURE#灯塔用户登录失败"\n}]', '', '成功', '', '2018-02-05 19:07:09')
2018-02-05 19:07:09,710 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:07:09,711 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:07:09,711 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 19:07:09', '0天 0小时 0分 0秒')
2018-02-05 19:07:09,788 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 19:07:09,789 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 19:07:09,789 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 19:07:09,796 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:07:09,796 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 19:07:09,797 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:07:09,797 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:07:09,797 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 19:07:09,797 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:07:09,797 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,798 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,798 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 19:07:09,798 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:07:09,798 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,799 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,799 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 19:07:09,799 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:07:09,799 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,800 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,800 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:07:09,800 APIUnittestTestCase.py[line: 105] INFO: 正在发起POST请求...
2018-02-05 19:07:09,801 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 19:07:09,801 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 19:07:09,801 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:07:09,819 APIUnittestTestCase.py[line: 118] INFO: 正在对服务器返回body进行解码
2018-02-05 19:07:09,819 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 19:07:09,819 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:07:09 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 19:07:09,820 APIUnittestTestCase.py[line: 143] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:07:09,820 APIUnittestTestCase.py[line: 146] INFO: 正在提取目标返回结果值
2018-02-05 19:07:09,820 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-05 19:07:09,820 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 19:07:09,821 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 19:07:09,821 APIUnittestTestCase.py[line: 149] INFO: 正在执行断言
2018-02-05 19:07:09,821 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:07:09,821 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,821 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,821 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAILURE#不符合断言时返回的消息"}]
2018-02-05 19:07:09,822 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 19:07:09,822 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:07:09,823 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\n    "模式": "\\"qq\\"(.+?)\\"",\n    "消息": "FAILURE#不符合断言时返回的消息"\n}]', '{\n    "re": {\n        "userName2": "userName\\":\\"(.+?)\\""\n    }\n}', '成功', '', '2018-02-05 19:07:09')
2018-02-05 19:07:09,885 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 19:07:09,886 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:07:09,886 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:07:09,886 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 19:07:09,886 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:07:09,887 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,887 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,887 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 19:07:09,887 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:07:09,888 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,888 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,888 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 19:07:09,888 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:07:09,889 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:09,889 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,889 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:07:09,889 APIUnittestTestCase.py[line: 105] INFO: 正在发起POST请求...
2018-02-05 19:07:09,890 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 19:07:09,890 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 19:07:09,890 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:07:09,936 APIUnittestTestCase.py[line: 118] INFO: 正在对服务器返回body进行解码
2018-02-05 19:07:09,936 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 19:07:09,937 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:07:09 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 19:07:09,937 APIUnittestTestCase.py[line: 143] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:07:09,937 APIUnittestTestCase.py[line: 146] INFO: 正在提取目标返回结果值
2018-02-05 19:07:09,937 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 19:07:09,938 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 19:07:09,948 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 19:07:09,948 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-05 19:07:09,948 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 19:07:09,949 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 19:07:09,949 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 19:07:09,949 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 19:07:09,949 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-05 19:07:09,950 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 19:07:09,950 APIUnittestTestCase.py[line: 149] INFO: 正在执行断言
2018-02-05 19:07:09,950 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:07:09,951 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 19:07:09,951 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:09,951 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 19:07:09,952 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"FAILURE#用户名不为dataviewer"}]
2018-02-05 19:07:09,952 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 19:07:09,952 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 19:07:09,953 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:07:09,953 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', '[{\n    "模式": {\n        "userName": "dataviewer"\n    },\n    "消息": "FAILURE#用户名不为dataviewer"\n}]', '{\n    "dic": {\n        "atten": {\n            "atten": "value"\n        },\n        "userName": {\n            "userName": "value"\n        }\n    }\n}', '成功', '', '2018-02-05 19:07:09')
2018-02-05 19:07:10,030 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:07:10,030 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:07:10,031 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 19:07:09', '0天 0小时 0分 0秒')
2018-02-05 19:07:10,093 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 19:07:10,094 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 19:07:10,094 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 19:07:10,102 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:07:10,102 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 19:07:10,102 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:07:10,103 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:07:10,103 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 19:07:10,103 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:07:10,103 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 19:07:10,104 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,104 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 19:07:10,104 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 19:07:10,104 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:07:10,105 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,105 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,105 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 19:07:10,105 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:07:10,106 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 19:07:10,106 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,106 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-05 19:07:10,106 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 19:07:10,107 APIUnittestTestCase.py[line: 169] INFO: 正在发起POST请求...
2018-02-05 19:07:10,107 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 19:07:10,107 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 19:07:10,107 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 19:07:10,123 APIUnittestTestCase.py[line: 182] INFO: 正在对服务器返回body进行解码
2018-02-05 19:07:10,123 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 19:07:10,124 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 19:07:10,124 APIUnittestTestCase.py[line: 207] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:07:10,124 APIUnittestTestCase.py[line: 211] INFO: 正在提取目标返回结果值
2018-02-05 19:07:10,124 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-05 19:07:10,125 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-05 19:07:10,125 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-05 19:07:10,125 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 19:07:10,126 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 19:07:10,126 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-05 19:07:10,127 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 19:07:10,127 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041A20E8>]
2018-02-05 19:07:10,127 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[<Element 'return' at 0x00000000041A20E8>]
2018-02-05 19:07:10,127 unittesttestcase.py[line: 403] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:groupCode_1-dataviewer
2018-02-05 19:07:10,128 APIUnittestTestCase.py[line: 214] INFO: 正在执行断言
2018-02-05 19:07:10,128 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:07:10,128 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 19:07:10,129 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,129 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 19:07:10,129 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
},
{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "FAILURE#获取的实体集团卡号错误" 
}
]
2018-02-05 19:07:10,130 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 19:07:10,130 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 19:07:10,131 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 19:07:10,131 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 19:07:10,131 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 19:07:10,131 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 19:07:10,132 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041A20E8>]
2018-02-05 19:07:10,132 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 19:07:10,132 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 19:07:10,132 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 19:07:10,133 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 19:07:10,133 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 19:07:10,133 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 19:07:10,133 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 19:07:10,134 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 19:07:10,134 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 19:07:10,134 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041A20E8>]
2018-02-05 19:07:10,134 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 19:07:10,134 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 19:07:10,135 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 19:07:10,135 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:07:10,136 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', '[{\n    "模式": {\n        ".//return": "dataviewer"\n    },\n    "消息": "FAILURE#获取的实体集团卡号错误"\n}]', '{\n    "xpath": {\n        "groupCode": ".//return"\n    }\n}', '成功', '', '2018-02-05 19:07:10')
2018-02-05 19:07:10,196 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 4 步, 步骤ID: 4]======================
2018-02-05 19:07:10,197 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:07:10,197 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:07:10,198 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 19:07:10,198 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:07:10,198 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,198 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,199 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 19:07:10,199 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:07:10,199 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,199 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,199 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:07:10,200 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";  data：
2018-02-05 19:07:10,200 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 19:07:10,206 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 19:07:10,207 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 19:07:10,207 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 19:07:10,208 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-02-05 19:07:10,209 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:07:10,209 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 7, 4, 4, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE user_name = "dataviewer";', '', 'body', '', '', '', '成功', '', '2018-02-05 19:07:10')
2018-02-05 19:07:10,276 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 5 步, 步骤ID: 5]======================
2018-02-05 19:07:10,277 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:07:10,277 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:07:10,277 test_case_step.py[line: 97] INFO: 执行操作：update_record
2018-02-05 19:07:10,278 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:07:10,278 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,278 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,278 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 19:07:10,278 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:07:10,279 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,279 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,279 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:07:10,279 mydb.py[line: 81] INFO: update_query：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 19:07:10,286 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:07:10,287 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 7, 5, 5, '操作数据库', 'ddtm', 1, 'update_record', 'http', '10.202.95.88', 8080, '', '--', 'UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"', '', 'body', '', '', '', '成功', '', '2018-02-05 19:07:10')
2018-02-05 19:07:10,351 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 6 步, 步骤ID: 7]======================
2018-02-05 19:07:10,352 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:07:10,352 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:07:10,352 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 19:07:10,352 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:07:10,353 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,353 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,353 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122
2018-02-05 19:07:10,353 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:07:10,353 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,354 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,354 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;
2018-02-05 19:07:10,354 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:07:10,354 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,354 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,355 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:07:10,355 mydb.py[line: 96] INFO: query：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;  data：(1033553122,)
2018-02-05 19:07:10,355 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone,user_name, atten FROM ddt_user WHERE qq= 1033553122 ORDER BY id desc;
2018-02-05 19:07:10,362 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414', 'dataviewer', '数据监视器'], flag：True
2018-02-05 19:07:10,363 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 19:07:10,363 unittesttestcase.py[line: 407] INFO: 提取数据库查询结果
2018-02-05 19:07:10,364 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 19:07:10,364 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:07:10,365 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 19:07:10,365 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'user_name': 'dataviewer', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,365 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 19:07:10,365 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 19:07:10,366 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 19:07:10,366 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 19:07:10,366 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 19:07:10,367 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:07:10,367 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 7, 7, 6, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;', '1033553122', 'body', 'db列值相等', '[{\n    "模式": [\n        "dataviewer",\n        "dataviewer"\n    ],\n    "消息": "FAILURE#姓名不为dataviewer"\n}]', '{\n    "db": {\n        "phone": 1,\n        "user_name": 2\n    }\n}', '成功', '', '2018-02-05 19:07:10')
2018-02-05 19:07:10,437 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 7 步, 步骤ID: 6]======================
2018-02-05 19:07:10,438 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:07:10,438 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:07:10,438 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 19:07:10,439 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:07:10,439 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,439 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'user_name': 'dataviewer', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,439 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122, "dataviewer"
2018-02-05 19:07:10,440 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:07:10,440 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,440 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'user_name': 'dataviewer', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,440 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";
2018-02-05 19:07:10,440 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:07:10,441 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:07:10,441 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'user_name': 'dataviewer', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,441 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:07:10,442 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";  data：(1033553122, 'dataviewer')
2018-02-05 19:07:10,442 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE qq= 1033553122 AND user_name='dataviewer';
2018-02-05 19:07:10,449 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 19:07:10,449 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 19:07:10,450 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 19:07:10,450 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:07:10,450 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 19:07:10,451 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'atten': '数据监视器', 'global_host': '10.202.64.168', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'user_name': 'dataviewer', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-05 19:07:10,451 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 19:07:10,451 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 19:07:10,451 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"FAILURE#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"FAILURE#手机号不为18189001424"}
]
2018-02-05 19:07:10,452 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 19:07:10,452 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 19:07:10,453 test_case_step.py[line: 148] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:07:10,453 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 7, 6, 7, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";', '1033553122, "dataviewer"', 'body', 'db列值相等', '[{\n    "模式": [\n        "dataviewer",\n        "dataviewer"\n    ],\n    "消息": "FAILURE#姓名不为dataviewer"\n}]', '', '成功', '', '2018-02-05 19:07:10')
2018-02-05 19:07:10,518 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:07:10,518 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:07:10,519 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517828829', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '成功', '', '2018-02-05 19:07:10', '0天 0小时 0分 0秒')
2018-02-05 19:07:10,571 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 19:07:10,571 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 19:07:10,571 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517828829', 1)
2018-02-05 19:07:10,572 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517828829 AND plan_id=1
2018-02-05 19:07:10,578 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 19:07:10,579 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517828829', 1)
2018-02-05 19:07:10,579 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517828829 AND plan_id=1
2018-02-05 19:07:10,585 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 19:07:10,586 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517828829', 1)
2018-02-05 19:07:10,586 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517828829 AND plan_id=1
2018-02-05 19:07:10,592 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 19:07:10', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=4, case_fail_num=0, case_block_num=0 WHERE execution_num='1517828829' AND plan_id=1
2018-02-05 19:07:10,651 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 19:07:10,652 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 19:07:10,652 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 19:07:10,653 main.py[line: 38] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-02-05 19:07:10,653 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行成功', remark='' WHERE running_plan_num= 1517487657
2018-02-05 19:46:35,908 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 19:46:35,914 main.py[line: 18] INFO: 当前运行模式为：SingleProject
2018-02-05 19:46:35,915 main.py[line: 21] INFO: 当前运行计划编号为：1517487657
2018-02-05 19:46:35,915 main.py[line: 24] INFO: 运行单项目,待执行的运行计划编码：1517487657
2018-02-05 19:46:35,915 main.py[line: 25] INFO: 正在查询运行计划相关信息
2018-02-05 19:46:35,915 mydb.py[line: 96] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1517487657',)
2018-02-05 19:46:35,915 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1517487657
2018-02-05 19:46:35,922 main.py[line: 32] INFO: 待运行项目：名称：数据灯塔API，ID：1，关联的测试计划有：测试计划201801
2018-02-05 19:46:35,922 main.py[line: 35] INFO: ======================开始执行运行计划[名称：运行数据灯塔API]======================
2018-02-05 19:46:35,922 running_plan.py[line: 29] INFO: 正在查询项目[ID：1,名称：数据灯塔API]相关信息
2018-02-05 19:46:35,923 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(1,)
2018-02-05 19:46:35,923 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-05 19:46:35,928 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-02-05 19:46:35,928 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(1, '测试环境')
2018-02-05 19:46:35,952 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-02-05 19:46:35,952 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：(1, '测试环境')
2018-02-05 19:46:35,958 running_plan.py[line: 72] INFO: ======================开始运行测试项目[名称：数据灯塔API, ID：1]======================
2018-02-05 19:46:35,959 test_project.py[line: 27] INFO: 正在查询测试计划[ID：1]相关信息
2018-02-05 19:46:35,959 mydb.py[line: 96] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(1,)
2018-02-05 19:46:35,959 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 1
2018-02-05 19:46:35,965 test_project.py[line: 32] INFO: ======================开始运行测试计划[名称：测试计划201801, ID：1]======================
2018-02-05 19:46:35,965 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-02-05 19:46:35,965 mydb.py[line: 122] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(1,)
2018-02-05 19:46:35,972 test_plan.py[line: 39] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-02-05 19:46:35,972 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1517831195', 1, 1, '数据灯塔API', '测试计划201801', '2018-02-05 19:46:35', '', '', 0, 0, 0, 0)
2018-02-05 19:46:36,041 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-05 19:46:36,041 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-05 19:46:36,042 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-05 19:46:36,048 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:46:36,049 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-05 19:46:36,049 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:46:36,049 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:46:36,049 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 19:46:36,050 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:46:36,050 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-05 19:46:36,050 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,051 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-05 19:46:36,051 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-05 19:46:36,051 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:46:36,051 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-05 19:46:36,052 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,052 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-05 19:46:36,052 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-05 19:46:36,052 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:46:36,052 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,052 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,053 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:46:36,053 APIUnittestTestCase.py[line: 43] INFO: 正在发起GET请求...
2018-02-05 19:46:36,053 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-05 19:46:36,053 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:46:36,165 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-05 19:46:36,166 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x10aIDATx\xda\xe5[\x87{Tu\x16\xe5\xdf\xd8\x80\x82\x94UQT\\,\xac\x86\xde\x824\x11\x01\x01Q\x0cHG\x11\x01\x91&\x08\x88\x08k\x00Y\x10\x04\x01\xe9\xc5\x90\x1e\xd2\x0b\xe9\xa4\xf7\xde{&e\xd2\x93\tw\xef\xb9\x937\x99I2!\x99I\xc2\xb7\xf0\xbeo\xbe\x04\xf3\xe6\x95{\x7f\xf7\xdcs\xce\xfd9\x80\x9e\xb2\xa3\xbeAC\x19\xb9\xd5\x14\x18YJ\xb6\xee\xb9\xf4\xfb\x8dT:p:\x8e6\x1f\n\xa7y\xeb|\xe9\x9d\x8f\xef\xd3\x88i\x0e\xf4\x8f\xf7m\xe9\xc3\xf5\xbe\x94\x99\xab\xa6G\x8f\x1e\x19\\\x03\xe7ZX\xda\xca9\x96K\xee\x93\xb3O\x1ey\x87\x14Q@D)\x85\xc7\xa9(*\xb1\x9c"\x13\xca)4\xa6\x8c\xbc\x82\x8b\xc8\x91\xff~\xc75\x87\xae\xd8g\xd2\xe9\xeb)\xb4\xffT,]\xb6M\xa7\xf8\x94\x8a\x0e\xd7\xee\xee1\xe0iM\x8c_X1\x1d=\x9f@\x9f|\x13@\xa3\xe7\xb9H\x90\xf5?\x08\xfc\xfe\xdfb\xa8J\xdd\xd0!xK\xb7<\xd0\x9d7w\xad\x0fUT5Pum\x13\xd5\xf1\xb55\x9a\x169G\xa3yDu\xf5\xcd\xa4\xaen\xa2\nu#\x9f\xd3He\xe5\r\x94\x93_C\ti\x95\x94\x9cQE%\xaa:j\xd6hLJ\xceS\x93\x18\xbc|bz%]s\xc8\xa4\xaf\x0e>\xa4\xf1\xcb\xdci\xa4\x95#\r\x1a\xd7\x96\x08$\x08U\xb3\xedH\x04\xfdy7\x9d\x83WI\xcd\xcd\x1d\x037\x7f\x83/\rl\xfd\x1e\xaaJ]\xd3\xd4\xad\xe0\xb6\xb4<\xe2D\xb4\xf05[$qH"\xfe\xfdL\'\xa6\x86W\xf4\xe6C\x0f\xe9\xbdO\xdctP5\x90\x93\xf1\xd2\x0c\x07\x9a\xb0\xcc\x83V|\x1fD6\x97\x92\xe8\xbe\x7f\x01\xa5fU\xc9j\xd7\x18\t\xda\xe2\xcd\x0f\xe8\xb9\xf1\xf7\xe4\x1a3\xbf\xf4\x96\nl1!\xb8\xb8\xb6\xf21+1\xc8\xf8\xff\xcb\xd1\xdc\n)\xca\x11\x1aSJ\xd3\xbe\xf0\xd4A\x10\x02;{\x8d\x0f\x1d\xf8o,9\xfb\xe6Sf^\x8d@Mm]s\x87\xef\xb6?6q\xc5)\x89\x99\xf0\xa9\x07\xf9\x84\x16K\x15\xf4\xe7a\x90\x18Ue\x03E%\x95\x0b$\x94\xf3\xef\xfd\xfd0\xc6V]C\xa3\x86\x8a\xca\xea\xb8\xe1\xaa\xb8\xc9f\xd3u\xa7,\xca)\xa818\xcf3\xa8\x88&}\xe6!\x104\x9d\x13t\xc5.\x83\xe2\x92+\xa8\xb0\xa4\x8ej\xb9:zr\x9c\xba\x9a\xacK\xcc\x98\xf9\xae\xf4\xc7\xad4\xa9\xc8\'\x96\x98\xc6\xa6\x16\n\x8fW\xd1/\x7f\xc4\x0bVG&\xaa$(O\xf2\xc0b\t\x08/\x91`}\xb9;D\xa0j\x9a\xb5\x17\xc5$U\x18\x9c\x17\xcd\x0b\xea\xb59N\xf4\xfc\x84{\xf4\xe9\xb6\x00R\x9b\x11H\xb0-%1\x80E\xb0\xb4\x02N\xf0\x13K\x8c\x02\x11{\x8eG\xd3\xccU\xde\xf4\xc5\x8e :\xc8Pp\x9bW)\x1e6+\xaf\x9a*\x99\x814\xf5A%\x01\xef\xd1ds\x0bk)\x82\x17\x87\x9dg.\x1d\xbb\x90Hk\xf6\x84\xd2\xac\xd5>\xf4\xd6\x02W\x1a1\xd5^\xfa\x06\xe0%.\xa5\x924z\xd0\x0b\x18~\xc9J\xdb[f\xac\xf4\x12\xc82\xe7x\xe5\x03\'\x1d,\xceX\xe9M!\xd1\xa5\xd2\xd0\xf5{G\xbf&\x06\x87?\xafP$\xe6\xf9\t\xb6\xf423\x9b\x19\xd6\xde\xb4zO\x08\x1d:\x13GW\x99\xab?\x08+\xa1\xb4l5\x153\xbc \x98\xa8*\x04\x16\xc1\xd1ox\xed?\x9d\xc1\x14\x12\x8dk\x05\xb1\xee\xb8\xe5\x9cE\x87\xcf\xc6\xd3\xca\x9d!\x12\xfc\xa1\x93\xed\r(.V\xf1\xbf\xe6\xbb\xd0w\xc7")\x89\x19\x95F\xafW\x94\xaa\xea\xe9\xf3\xef\x82\xe4\xbc\x0fVk\x03i\xce\xb1\xfd\x97\x08]\xd5\xbc\xf9\xa13\x1da\x14I\xcf\xa9\x16Ti\x96wm\xe9\xd3\xe4t\x9a\x18`2\x120t\xb2\x9d6 \x0c\x0f/\xcep\xe4\xa0\xb8\xd2\x94\xcf=\xe9\xe3M\xfe\xb4\xf6\x87P\xda\xf7[\xac\x08*T\x94\x17c<\xc4\x17\x18O^Q-7\xdaz*g\xfe\x0f~_U\xdd\xc8\xfa\xa2\xb9\x93\x06\xae\xe1\x9e\xa6\x92\xa4\x7f\xb8\xdeO\x92\x01J\x0b\xf8P\x82\xf2\x02?\x03D\xe1\xe2\xcd\x01\xac;bE4f\xb2V\x80^\xd1?\nJ\xebh+\xd3`\xd0b\xcb%n\xdc\xf0\xf3\xcc\nLpT)\xbd<\xd3Q\x9e\x01\xf0\x08\xfa\xbd\xf7d\x0cy\x06\x16R|j%\xa5dV\xc9\x07\x10gnu\xf6\x88.\xd7s\x15\xac\xdf\x17FC&\xdd\xeb \xce\xf0\x19\xc4\x81{\x89\xabi\xccG\xae4\x91\x03\n\xb8Y\xf4\xf5\x03\xfal{\x90\xf4\x02|w\xe3\x8fa\xb4~?\xff<\xf0P\xd4sm]G\xdc\xcf\xca\xaf\xe6\xc0\xbbv\xb8\xfe\xd0)\xf64a\xb9\x87h\x92\x8b\x7f\xa7s\x05\x94Q~q-\xd5p\x10\x8c\xadT\xf4\x82\xc1\x13\xed\x18\x86\x1c\xc9\x9e\xa1\xd0\xdc\xfe\x88\xf7y~\xa2\xf6\xfdA*\xb0`\xf0\\\xc3\xa7\xd9\xd3d&\x1a\x9fo\x0f\xa4\x1d\xc7\xa2\xe8\xec\xcdT\xf2\r)\xa2\xec\x82j\xa6\xe1M\xbdRM]\xea\x18T\x00\xaaC\xb1\'\x94\x07\xd4\xffww?\x8bX\x1b<\xe4\xeb\xb5?\xc0\x9av\xdaD\xc95Q%\xe3Ys\xec\xb2\x89\x16\xf2\x11\xc6}\r=\xa7\x9a\xe1R\xa3y|_\xbbl\x9b!\x0b\t\xda\xe5\xe8\x85\x04Nb\x93N\xab\xa0?h\xfb\xa3F\x07\xa3\x8f;\xec<ri\xec\xa2\xfbF\xdf\t\xcf\xfc\xc2$;\x81W\x08Q\xc0\xdfm\xd7,\xca\xe6\x8an\xd6\xb4\xf4]bp\xdc\x7fP \xa5\xac<\x0c\x1e\xe4U^\x91x\xf9!\xfc\xbb\xa2\x90\xdb?0\x9a\xb4\x85\xa5a\x12\xaf\xd8ev\x1a\x10\x04`\xd0x\xc5\x9br\xa3t\xee9jIF\xcfV\x1dl\x13\x05\x02\xa7[{\x92oX\x91@\xed\x06\xae\xdcu{C\xe9\xe0\xe9X:u%\x89\xfc\x1f\x96\x08\xfd\xedL\xf5w\xec5\x91\x02c\x96K\xdcu\x84\x00\xef\x8d\xaaAu\xea\xf7\xbf\xe1LNF2\xfc\x8d\xe1Dm\xf99\x9cc\x97/v\x0edGO+\xe8\xb1\x89Ai\xfer>\x9e\xfe9\xcd^\x97\x98\xa9+<\xc5\x87\x82\xad\x81f\xfd\xed\xe1\x08Z\xb1#X\xfa\x04\xfe\x86\x97\xc0J\x1b\xbb\xc8\x8d\xc6-\xf5`]\xe1E\x0b\xb8\xf2N\xfe\x95L\xb9\xdc\x7f:\xc3\xf3\x05\x9b\xfc\xe4\xfao3\xac\xdd\xbd\x9fc\xd2*\x03\x94\x00Fq\x9d\xe1\x0c9\x80\xd9\xd7\xe68\xebH\x04\x16\xc90\x0e\x1eV\xf8\xa7[\x03D\x13\xa1\x1fv%\xac3\x99\x89:z\xe7\xd2\x1d\x97lr\xe7E\xea\xea_@go\xa4\xd2\xce_\xa3h5\xdf\xeb\xa3\x8d~4\x8e\x13\xf7\xca,\'NN\xdb"D\xd2\xde\xe5\xde\xb8\x99\xa1\xd8\x83\xfb\x12\xaa\xb5W\x13\x83L\x83\x0c\xe0E,Zo:b\xba=\xf7\x92@\xb1*\x8a\xcb\xea\xa5t\x933\xd5\x14\xcb\x82."\xbe\x9c\xc2bU\x14\xca=\x01\x14\x1bp\x18\xcd\x9a#1\xbdJ\xce\xefL\xec5r/\xf8\xe6\xa7\xf0\xd6\xdeeK\xdf\xf2j3\xe5hj\xd2\xd0n\xa6\xfa\xdd\x85\xd7\x11\xbc\xd8\xd0\xc3\xd2s\xd4]2G\xf4F\xac|\xfc\xc4\xf3\x03Z\x0b\x99l\xc0\xac\x0c\x88,\xa1k\x8e\x99\xe20,\xe4\x9e4l\xaa]\x87\xfb a\x93\xb9_\xda32\x94p\xbcz\xd5+\x83[\x8b\x06\xaf$\x07\xba\x02\xa2\xafDU\xdf+,\xe4\xf2\xbd\x0c\xa6\xa5.4h\x1c\x0b\xc4\xad\x81\xa2eL9\xce\xdfN\x138\x01\xb4L]\xe1E\xabxU#\xd1XX\xf37\xf0\xea^\xea.U\xaf\x04\r\xb0\x04o\xcc=\xa0\x80\x17Hs\x97\xd5\xd3>yh\xf2 \x18\x95\xcc:\x8b8Q\xe9\xb9j\x81O\x9bK\tr\xcdQ\\E\x03\xf5\xa0\x1c\xa4d\xe5\xae`&B\xf9\xa4\xaah\xe8\xf2^\xddN\x0c\x9a\xd9]\xb7\x1c\x03\xb7\xd6j\x95\x17y\x06\x15\xf6Jb@9_\x9b\xad\xc5p@\x8d\x1b\xc3Fw\x9bt{\xdb\x7f\x07\xeb\x1c\x07fep\x03\x92\xb8R\x114\x90\x00\xac\xfa\x10\x86M\x9b\x8b\x89\x12$\xfdU=z\x8e\x93\xf8m\x9d\xd1\xfa\x9e\xd8G\xb8OMm#\xa3H5]\xb3\xcf\xd0A\xb4~\xffE\x8f\xdeq4\x92\xe2\x92\xcbY\x17i\xccw\x97a\x8f\xa0\x19*\xc9A3\x84v\x80\xb7f\xee\x81\xd5\xb3\xef\xb7\x18y\xf0\x91|\xdd\x13\xdc\x8f\xaa\xaa\xb5\xf0\x01_,\x91a\x03\x90\t\x0f\x0fp\xd2d\xe4\x85\xb0\x8a1\x07Q\xdccMK\xdb*\xc7O\xdc\x07\xba\xca\xc1+\x97\xe63\x93\xb2\xd0\x0b\x1a*\xca\xc9;O\xa0\xca\\\x7fO\xb9\x17H\x0cz\xcc*\xae\x14\xc5\x99Pz\xd0\xdc\xb5\xbet\x83Eu)k\xbe\xf6\xd58\xa0\xa77D\x13\x83\x8d\xaed\x7f\xec"W\xfa\xfdFJ\xaf$&\x85\xc5\xa9\xc2\xe6\xacVzQ\\\xaav\xbe\x02\x1a\nU\xbf\xf0+\x7fi\xee\xb0j\xfc\x182:\x9b\x93H@\x1eSeJ\xd0\xb0\xa0^\x9f\xd3f\xbd\xe0\xde0@\xc3\xe3T\xd4[\x87\xf6^-\\\xb5\xb5L\x96\xd2\x84u\xea3\xd5\xd1\xf3\x9ci\x1b\xbf_\x15\xc7\x15\xe7\x995\x8f\xb9\xce\xcd\xee\xdd\x85ZQ\x08\x8a\x08\xfc\x0e6\xd3\x02\xc1\x81@\xa1\xbf(\xf4S\xa1\xa3\x03[5\x8e\xa2u\x06\xb3\xe8\x83\x93|\xe2r\x92T\x91\xa9b\x0e\x15u\x81\x83\xf5\xee\xc26\xad\x024\x800NL\xab\xe8\xd51\x88\xb8\xe4\x0c\x93\x88\xd3\xc6\xfd\xa1bu\xe9\xc4\xf4d;I\x0ePA\x816\x93\x12\x83R\xdf\xd6j\x7f\x00\n\xe0\xea\xfep2\xda\xc0+3\xe9\xba\xac-v\xdbDwp\x00^\x9f\xeb\xcct\xd4Q&\x92\xfa\xba\xe9\x9f\xcc\x0ew3m\xadT7\x98\x1c\xb0Ju\x133\xb30\x03\xaa\x0bJ\xfd+\xf7!S\xf4Gw\xaa\xa7\x90\xab\x07\xf6\xce`=}\x88\xc5\xf6\xf5\xa1\x87\x14\x95\xa02o\x82\x89\xcd\tp]-Z\xe9\xe0tk/r`|\x06\x8d\xc4@J\xeb\x8fit\xa3\xd5\xeeN\xf3N\xb0\x00D\xf3\x7fo\xb1\x1bk\xa3 :t&\x96\xce\xdeL\x91\x8f\xcd\xa5D\xda\xb0?L\xd8\x9b\xc2v\xa0\x97\xae;f\xf4X\'\xe8\x1f\xf7<rh\x06?\xbf"N\xf1\xb1\xe2w\xf3\x0b-\xea\xf5\xe4(\t\xca`\x8a\x0e-\x04\xc2\xa3@\x1b\xbc\xb9\xad\xcc \xd3\x18\xd2MN\x0c\x0cJ@\x89B\x04@;\xad\xac\xbdEx\xfe\xfag"\x8b\xd2\x04:\x06\x11z\'\x9d\xfc\xc3\x8b\xa9B]/\x8c\x07M\xbb\xab\x17\x85\x1fv\xe1N\x1a\x05\xb2>\xc0p\x0c\xf7Q\xdckuM#\xa5f\xab\xe9\xdc\xcdT\xc1f\xe5\xbe\xcbYS\x99S5\x10\x99\xf0\xd9^\x9c\xe1`\xe0pX\x7f\x1f$\x0b\xac/\\d,\xd8\xf8\xd4\nZ\xbd\'\x98+\xdf\xc1\x80R\x1f>\x1bg\xde\xcc?\x86\xe9\xde\xfb\x9f\xb8\x19\x15p(UX7\x10r\xa0\x88\x9b~\x0c\x15\xb5\rA\x87`\x1b{a8\xd2\x8dF\x12\x88\xc6\x8e`-\xe3\xbe\xa6\x18\xacC\xf8>\x10\xb7\xa6\x06\x10\xdf\x83\x11\x89!\xdc =\xa8|\x8e\x7f\xbf\xed\x9c\xdd\xed\xcd\x18\xa6\x10\x1e\xc4\x03#p}\xdb\x0b\xa6\xb0Y\x89A\x00\x8f]H\x90\x1e\x03\xbb\x1e\x10\x03\x0b\x04%\tR\x80q\x81E\xbbd\xbd\xc2\x7f\xb3\xde\x11L.\xbey&\xbf0\xbe\x03\xf8Q\x0cF\xdc\xcb\x86\xabTc\xa2q\x88\x00A7a\xee\x04\x81\xab<+\x16\x156x`\x1fY_\x1d\x98+\xed\xb2\x89\xd2!\x80\xb6w:\x98\x97\x18\xa1\x81%u\x02Y\xc0\xff\xe3\x97\x92\xa4i\xa2/\x1c<\x1dG\x9b\xb8\xa9b~\x03\xdf\xaa\xfd\xd0k47t;\x0e\xae1\x81\xf586\x85\xf9\xff\xc4\xe5\x1e:8\xdb\xc5x\xddS\xd3\xb3m\xa4\xae!\x17\xff|\x9a\xb3\xc6\xd7\xb0\xe2\x99\x15.\xdb\x12 \x9a\xa7/\xf6?(v\xd75\x87\x0c\x9a\xfc\x99\xa7\x01m\x1f\xd0\x1b\xe5\x88f_\xc9\xd5\x83\x9b@\xc1\xab*\xeaE\x8c\xaa\x19r \xf4"\x12\xcae\x028\xfd\x0bo\x03G\x16\x9a! \xa2\x98id\xcf\x93\x03\x95\x0esT!\x01?\xfd\x1e\'\xca\xbe\'\x15\xa8\x90\x11\xd8#gX\x8ba\xc6\xa2_1\x805$\x0b\xb3\x1d\xbc\x8f\xa6\x0fv\x11!\xe1pO\xac@>\xf4\xe0\xac\xdf\xf6\x95a\xc7\xa2\xbdW\x1e\xcd[\xef\xa7c?op\xd5\xd8\\L\xea\xb6\xb1\xa7\x7f`k\xea4N\x8c\x85\x02e\\\xa9]1\xb3\xce\x84hs\xabM\xe3\xea\x97O\xeb~\x08\xa5Q\xb3\x9d\xda\x99\x9c\x0e\xe2\x98\xdfs\xcf\x11un\x0c*\x81\x1c\xa6h\x1e<C9/b[\xbe\xbe\xbe\x0fiai\xdb\xbf\x1b\xfe@\x9faV*M\x1b\xe4`\xdd\xbeP~\xb8\x86\x1e\xbf\x10\xa8\xf9\xa8\xd9Z\\\x1e\xf3\x91\x8b\xc0\x81\xfep\n\xe7\x94\xf1u\xc1\xb8\x1a\x1a\x9bee\xc2p\x05\xeb\x03\xa5/(\xae\x13/\xed\xaaC&m\xd8\x17F\xef,p50\x1c\xe1r\xa3o\xe2oX\xd1e\xad\xb6\x89\xb1U\x0f\x1b(\x86\xaf\x87\xdd\x9d\xa8@\xc0\xaa\xb1\xf3\x95J\xad\xe7\xe7\x82\xeb~\x98\xab\x1d\xef\xa0?\xdb\xe9\xd7\xc4`e\xe1\xc1a\xb7\xe8v\xa0p\t\xf7\x14\xbf\xabk\x9b\x85\x92\xebX\x0c\xf7\x9a\xc2v\xdb\x8b\xc0\xdc0M\xdc\xf9\x9fH\xfa\xfeX$\xfd\xcc\x14\x14\xf4\xfe\xcc\xf5\x14\xb1\x90\x0e\x9c\x8e\x95\xdd\x99\x98\x1f\xbd\xfa\x81\x93\x01I\x01\x84\xbd\xca\x82v\xd6joq\xd0a\xefw5\xa6\x06S\x84\x87\x87\xca\x02\xd5\xc5\x8c\n})*QE\xb9\x855\xb2\xb7Y\xd1t-\xad"\xb3\xbe\xbe\x89\xa2\xf9\xefG\xce\xc5\x0b\x84*Z\x06\x8b\x03\x04\xaa_\x13\x83\x04\xc4\xa5\x94\xcb\x0b+%;\x89\x83\xda\x93\xc4\x00\xe7\x11(\x8c\x1d\x94\xaa;\xf6gB\x87\xd5\x89^\x87\x19\t\x8cC\xb0\x1c0G\xb08\xcb\xa5nR\t\xcf\x8d\xd3\xcec\xa0Wt\x10\xc2\x1fh\x19\x9c7w\x9d\x8f\xf4\x9d\xf0\xf82\xd1R\xdd\x99\x05\xf9\x84\x14\x0b$B\x8b\x00^\xdf\xe2*\xc0>\xe8\x8d,\x13\x90\x80\x8b\x7f\xa7\xd1y\xd6hH\xde\x9a=!\xb2(E,\x8fk\x1b\xdb\x8f\x9a\xe5L+\xbe\x0b\xee\xef\x8ay\xc4\xcd\xbe\x84\xfe\xbd\xf8\xbe.\x10x\xe8\xee\xe0\xb3bg\xc0\xc3\xc2\xd4PY\xdd\x0b\xf8\xf7\xb2N\xa0\x10\t\xdcw2\xa6\xc3\xf6\'}\x9d\x82\x1d8\x92\x9c\xd6\xdd@H\x18\xe6({\x8fG\x8b\xb3\x91\xd4\nK\xdd\x85\xd7\xbc\xc2Z\xb9\'vov\xa6\xebP\r\xd0+\xb8\xdf\x0bzcy\x0b\xd9c\xed(\xb3"\xb8\xf5\xd8\xeb\xd0o\x89Q\x02\x0bU?t\x8a6\x10\xc3\xf8\'\xe6\xfd\x8f\xab\x100;@\x02\xb6$\xc10\xd5\xb7M0\x9666y<~9\x91\xacVy\x0b\\\xc1\x05\x87\x18\x86\xbb\x8b*\x9d\xc2\xff\rU\xb1\xe8k\x7f\xd9Tx\xe0T\xac\xc0\x9c\x93O\x9eT5\x9a}Ov\xd9\xe0~\xa0\xdd\x7f\xbb\xe5\xd0\xf2m\x81\xf4"W\xea\xe0\t\xb6\x1dt\x9c\x92 xc\xa8dT\x0c6(n=\x12)[\xc6\xb0w\xcd,\xaf\xcc\x94\xfe\x82\x01\x92\xb2\xf1\x1b\xabd\xc97\x0f\xa8XUg\xf0r9\x05\xb5\x94_R+\x0c\x08\xa6&\xf6\xa9\xb9\x07\x16\xd0!n\x90\xa0\xc7CZ\xa7\x8f\xd0G^\xdc\x94\x8dU\x1b\x12\x1a\x9d\xa4\xa2\x1bNY\xb2\xfd\xe9\xe4\x95D\xe9\x17X\x18\xf8o7\x9d\xb3\xe8\x96K6\xb90#{\x10^Lq\xc9\x95\xba\x81\x1av\xd2\x98\xa2\x89\xf0,\xd8\x04\x19\x19\xaf\xa2\xbb\xdc\xdf\xb00\xb6\x1e\t\x17k\x07\xae\xf9\xf2\xadA\x0cSA\xf4%\xc3\xd8\x96\xc3\x11"\xce\xe1\xd4\x03E\x92\xf1\x7f \xe8\xc9\x86\x01\xfdU-\xd8\x95r\xeev\xaan\xd5\xbc9\xdfEv\xd1\xeb\x9f\xa3\xaa\xac\x17\xa1\xbajw\xb0\xecG[\xbb7\x94\xacw\x06\xcb\xaa\x87\xbb\x8cd\x82\xd1\xad\xdd\x1bB\x19\xb9\xea.!\xb0\xa5U\xbca\xe5\xa31kY\x90F~Wh5\xbe\x8f\xa6\x8c\xf3\xda\xef"5y\x82\xc9\xd7\xc1\x16b\xd9\xb1\xd9l\xb8;\x15\xc9F\x15\xc2\xf1(\xafl\x94g\xa96\xe2~\x0c\xe8\xeb\x84\xe0\x83\x9b\xdfp\xca\xd4\xe1\xfb\x1bs]d\xf5\xea\x07\x16\x06\xa7G@\xa1\xc0\x0c\xaa\x02v\xbf\xf4\x84\xf1\xda\x92\x87\xdb\x8c\xc6\xea\xea\x9fG5\xf5M}\xbew\xf8I\x1ff%\x06\x98\n\xd5\x8fU\x89\xdf\x01\x03\xf8\x89U\x88\xbe\x80*A\x03\xdd\xc6\xe5\xac\xcc;\x80\xa9\xe7n\xa5v\xc0o\x8c\x8f\xf7\x9e\x88f\x9a\xeaD/3>\xbf\xce\x94q\xecB-;\xc2f\nL21\xe1\x84&y\xda\x93bvbR\xb3\xd4\xe2\xcab#\xddU\xfb\x0c\xd9\xd7\x0bx\xc2\x8e\x93\xbfXHb\xce=rf\xdb\xa4\x0e\x1b\xd5\xc1v:\xf3\xc70F\x86m\xb3\xfdh\x04\xfd\xc84\x17\xc9\x83\xb1\x88}\xc2\xb0\xff\xeb\x04nZ\x9e\x89\xa4\x98\x9d\x18X\xd6\xd0\x05\xc3\x18vP\t\x18\xf7\xa2\x1f\xc0>\x1f>UK\x07\x01E\xd8\x99\x08s\xb3\xac\xc2\xb8zF\xa3\xc78 9\xb3J\xb6\xc5B \x9a\xbb\xcd\xf4\x99L\x0c\x82\x8795\xf87v\xcb\xa02\xf0\x81\xe5\x0f\x81\xf56\x0b\xc0\x8f\xbf\xf2\x17f\x028{\x96\x83l\xca\xf1?\xe2\x1c\xa8v\xb9\xbb\xad\xc5\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-05 19:46:36,168 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:46:36 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1dskdg8wukrxh12syz07rwsjff;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-05 19:46:36,168 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:46:36,168 APIUnittestTestCase.py[line: 94] INFO: 正在提取目标返回结果值
2018-02-05 19:46:36,168 APIUnittestTestCase.py[line: 97] INFO: 正在执行断言
2018-02-05 19:46:36,169 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:46:36,169 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,169 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,170 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"fail#请求验证码识别"}]
2018-02-05 19:46:36,170 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-05 19:46:36,171 test_case_step.py[line: 149] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:46:36,171 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 5, 1, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "Token": "asfdacfdasfasfa",\n    "Accept-Encoding": "gzip, deflate"\n}', 'GET', '/res/rpatchca.png?0.5185151614698615', '', 'code', '包含字符串', '[{\n    "模式": "200",\n    "消息": "fail#请求验证码识别"\n}]', '', '成功', '', '2018-02-05 19:46:36')
2018-02-05 19:46:36,237 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:46:36,238 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:46:36,239 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 5, 'ID1-数据灯塔API->ID2-登录页面', 'ID5-请求验证码', '成功', '', '2018-02-05 19:46:36', '0天 0小时 0分 0秒')
2018-02-05 19:46:36,299 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-05 19:46:36,299 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-05 19:46:36,300 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-05 19:46:36,307 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:46:36,308 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-05 19:46:36,308 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:46:36,308 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:46:36,308 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-05 19:46:36,309 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:46:36,309 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,309 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,309 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-05 19:46:36,309 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:46:36,310 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,310 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,310 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-05 19:46:36,310 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:46:36,310 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,311 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,311 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-05 19:46:36,311 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:46:36,311 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,311 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,312 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:46:36,312 APIUnittestTestCase.py[line: 39] INFO: 正在发起POST请求...
2018-02-05 19:46:36,312 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-05 19:46:36,313 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-05 19:46:36,313 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:46:36,383 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-05 19:46:36,389 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-05 19:46:36,389 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:46:36 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 04-Feb-2018 11:46:36 GMT')]
2018-02-05 19:46:36,389 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:46:36,389 APIUnittestTestCase.py[line: 81] INFO: 正在提取目标返回结果值
2018-02-05 19:46:36,390 APIUnittestTestCase.py[line: 84] INFO: 正在执行断言
2018-02-05 19:46:36,390 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:46:36,390 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,390 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,391 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"fail#灯塔用户登录失败"}]
2018-02-05 19:46:36,391 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-05 19:46:36,392 test_case_step.py[line: 149] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:46:36,392 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 6, 2, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.88', 8080, '{\n    "User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",\n    "Cache-Control": "no-cache",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/login', 'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt', 'body', '包含字符串', '[{\n    "模式": "\\"result\\":200",\n    "消息": "fail#灯塔用户登录失败"\n}]', '', '成功', '', '2018-02-05 19:46:36')
2018-02-05 19:46:36,449 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:46:36,449 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:46:36,450 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 6, 'ID1-数据灯塔API->ID2-登录页面', 'ID6-灯塔用户正常登录', '成功', '', '2018-02-05 19:46:36', '0天 0小时 0分 0秒')
2018-02-05 19:46:36,512 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-05 19:46:36,512 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-05 19:46:36,513 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-05 19:46:36,521 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:46:36,521 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-05 19:46:36,522 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:46:36,522 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:46:36,522 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 19:46:36,522 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:46:36,522 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,523 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,523 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 19:46:36,523 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:46:36,523 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,523 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,524 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 19:46:36,525 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:46:36,525 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,525 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,525 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:46:36,526 APIUnittestTestCase.py[line: 104] INFO: 正在发起POST请求...
2018-02-05 19:46:36,526 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 19:46:36,526 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 19:46:36,527 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:46:36,544 APIUnittestTestCase.py[line: 117] INFO: 正在对服务器返回body进行解码
2018-02-05 19:46:36,544 APIUnittestTestCase.py[line: 140] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 19:46:36,545 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:46:36 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 19:46:36,545 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:46:36,545 APIUnittestTestCase.py[line: 145] INFO: 正在提取目标返回结果值
2018-02-05 19:46:36,545 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-05 19:46:36,545 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-05 19:46:36,546 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-05 19:46:36,547 APIUnittestTestCase.py[line: 148] INFO: 正在执行断言
2018-02-05 19:46:36,547 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:46:36,547 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,548 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,548 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAIL#不符合断言时返回的消息"}]
2018-02-05 19:46:36,549 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-05 19:46:36,549 test_case_step.py[line: 149] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:46:36,550 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 3, 10, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '匹配正则表达式', '[{\n    "模式": "\\"qq\\"(.+?)\\"",\n    "消息": "FAIL#不符合断言时返回的消息"\n}]', '{\n    "re": {\n        "userName2": "userName\\":\\"(.+?)\\""\n    }\n}', '成功', '', '2018-02-05 19:46:36')
2018-02-05 19:46:36,620 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-05 19:46:36,621 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:46:36,621 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:46:36,621 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-05 19:46:36,621 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-05 19:46:36,622 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,622 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,622 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-05 19:46:36,622 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:46:36,623 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,623 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,631 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-05 19:46:36,632 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:46:36,632 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,633 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,633 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:46:36,634 APIUnittestTestCase.py[line: 104] INFO: 正在发起POST请求...
2018-02-05 19:46:36,634 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-05 19:46:36,634 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-05 19:46:36,635 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-05 19:46:36,655 APIUnittestTestCase.py[line: 117] INFO: 正在对服务器返回body进行解码
2018-02-05 19:46:36,656 APIUnittestTestCase.py[line: 140] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-05 19:46:36,656 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 05 Feb 2018 11:46:36 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-05 19:46:36,656 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:46:36,657 APIUnittestTestCase.py[line: 145] INFO: 正在提取目标返回结果值
2018-02-05 19:46:36,657 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 19:46:36,657 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-05 19:46:36,657 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-05 19:46:36,658 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-05 19:46:36,658 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-05 19:46:36,658 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-05 19:46:36,659 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-05 19:46:36,659 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-05 19:46:36,659 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-05 19:46:36,659 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-05 19:46:36,660 APIUnittestTestCase.py[line: 148] INFO: 正在执行断言
2018-02-05 19:46:36,660 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:46:36,660 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 19:46:36,661 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,662 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 19:46:36,662 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"fail#用户名不为dataviewer"}]
2018-02-05 19:46:36,662 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-05 19:46:36,663 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-05 19:46:36,663 test_case_step.py[line: 149] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:46:36,664 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 3, 9, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_json', 'http', '10.202.95.88', 8080, '{\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate"\n}', 'POST', '/auth/findUserInfo', '""', 'body', '键值相等', '[{\n    "模式": {\n        "userName": "dataviewer"\n    },\n    "消息": "fail#用户名不为dataviewer"\n}]', '{\n    "dic": {\n        "atten": {\n            "atten": "value"\n        },\n        "userName": {\n            "userName": "value"\n        }\n    }\n}', '成功', '', '2018-02-05 19:46:36')
2018-02-05 19:46:36,737 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:46:36,737 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:46:36,738 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 3, 'ID1-数据灯塔API', 'ID3-查找用户信息', '成功', '', '2018-02-05 19:46:36', '0天 0小时 0分 0秒')
2018-02-05 19:46:36,812 test_plan.py[line: 47] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-05 19:46:36,812 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-05 19:46:36,812 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-05 19:46:36,821 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-05 19:46:36,822 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-05 19:46:36,822 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-05 19:46:36,822 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-05 19:46:36,822 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-05 19:46:36,822 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:46:36,823 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-05 19:46:36,823 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,823 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-05 19:46:36,824 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-05 19:46:36,824 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:46:36,824 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,825 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,825 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-05 19:46:36,825 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:46:36,825 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-05 19:46:36,826 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,826 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-05 19:46:36,826 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-05 19:46:36,827 APIUnittestTestCase.py[line: 168] INFO: 正在发起POST请求...
2018-02-05 19:46:36,827 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-05 19:46:36,827 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-05 19:46:36,827 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-05 19:46:36,841 APIUnittestTestCase.py[line: 181] INFO: 正在对服务器返回body进行解码
2018-02-05 19:46:36,842 APIUnittestTestCase.py[line: 204] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-05 19:46:36,842 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-05 19:46:36,842 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"状态码(code)": 200
2018-02-05 19:46:36,843 APIUnittestTestCase.py[line: 210] INFO: 正在提取目标返回结果值
2018-02-05 19:46:36,843 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-05 19:46:36,843 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-05 19:46:36,844 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-05 19:46:36,844 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 19:46:36,845 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 19:46:36,845 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-05 19:46:36,845 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 19:46:36,846 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041CD1D8>]
2018-02-05 19:46:36,846 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[<Element 'return' at 0x00000000041CD1D8>]
2018-02-05 19:46:36,846 unittesttestcase.py[line: 403] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:groupCode_1-dataviewer
2018-02-05 19:46:36,846 APIUnittestTestCase.py[line: 213] INFO: 正在执行断言
2018-02-05 19:46:36,847 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:46:36,847 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-05 19:46:36,848 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,848 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-05 19:46:36,848 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "fail#获取的实体集团卡号错误" 
},
{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "fail#获取的实体集团卡号错误" 
}
]
2018-02-05 19:46:36,849 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 19:46:36,849 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 19:46:36,849 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 19:46:36,850 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 19:46:36,851 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 19:46:36,851 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 19:46:36,851 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041CD1D8>]
2018-02-05 19:46:36,852 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 19:46:36,852 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 19:46:36,852 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 19:46:36,852 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-05 19:46:36,853 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-05 19:46:36,853 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-05 19:46:36,853 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-05 19:46:36,853 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-05 19:46:36,854 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-05 19:46:36,854 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x00000000041CD1D8>]
2018-02-05 19:46:36,854 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-05 19:46:36,854 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-05 19:46:36,854 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-05 19:46:36,855 test_case_step.py[line: 149] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:46:36,856 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 7, 3, 3, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_xml', 'http', '10.202.64.168', 8080, '{}', 'POST', '/ws/ddtDimCustGroupMapping', '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>', 'body', 'xpath断言', '[{\n    "模式": {\n        ".//return": "dataviewer"\n    },\n    "消息": "fail#获取的实体集团卡号错误"\n}]', '{\n    "xpath": {\n        "groupCode": ".//return"\n    }\n}', '成功', '', '2018-02-05 19:46:36')
2018-02-05 19:46:36,928 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 4 步, 步骤ID: 4]======================
2018-02-05 19:46:36,929 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:46:36,929 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:46:36,929 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 19:46:36,929 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:46:36,930 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,930 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,930 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 19:46:36,930 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:46:36,931 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:36,931 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:36,931 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:46:36,932 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";  data：
2018-02-05 19:46:36,932 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-05 19:46:36,938 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 19:46:36,939 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 19:46:36,939 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 19:46:36,939 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-02-05 19:46:36,940 test_case_step.py[line: 149] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:46:36,942 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 7, 4, 4, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE user_name = "dataviewer";', '', 'body', '', '', '', '成功', '', '2018-02-05 19:46:36')
2018-02-05 19:46:37,011 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 5 步, 步骤ID: 5]======================
2018-02-05 19:46:37,012 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:46:37,012 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:46:37,012 test_case_step.py[line: 97] INFO: 执行操作：update_record
2018-02-05 19:46:37,012 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:46:37,013 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:37,013 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,013 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 19:46:37,013 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:46:37,013 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:37,014 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,014 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:46:37,014 mydb.py[line: 81] INFO: update_query：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-05 19:46:37,020 test_case_step.py[line: 149] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:46:37,021 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 7, 5, 5, '操作数据库', 'ddtm', 1, 'update_record', 'http', '10.202.95.88', 8080, '', '--', 'UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"', '', 'body', '', '', '', '成功', '', '2018-02-05 19:46:37')
2018-02-05 19:46:37,086 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 6 步, 步骤ID: 7]======================
2018-02-05 19:46:37,087 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:46:37,087 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:46:37,087 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 19:46:37,088 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:46:37,088 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:37,088 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,088 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122
2018-02-05 19:46:37,089 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:46:37,089 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:37,089 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,089 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;
2018-02-05 19:46:37,089 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:46:37,090 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:37,090 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,090 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:46:37,091 mydb.py[line: 96] INFO: query：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;  data：(1033553122,)
2018-02-05 19:46:37,091 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone,user_name, atten FROM ddt_user WHERE qq= 1033553122 ORDER BY id desc;
2018-02-05 19:46:37,098 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414', 'dataviewer', '数据监视器'], flag：True
2018-02-05 19:46:37,099 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 19:46:37,099 unittesttestcase.py[line: 407] INFO: 提取数据库查询结果
2018-02-05 19:46:37,099 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 19:46:37,100 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:46:37,100 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 19:46:37,100 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,100 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 19:46:37,101 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 19:46:37,101 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"fail#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"fail#手机号不为18189001424"}
]
2018-02-05 19:46:37,101 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 19:46:37,102 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 19:46:37,102 test_case_step.py[line: 149] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:46:37,103 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 7, 7, 6, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;', '1033553122', 'body', 'db列值相等', '[{\n    "模式": [\n        "dataviewer",\n        "dataviewer"\n    ],\n    "消息": "fail#姓名不为dataviewer"\n}]', '{\n    "db": {\n        "user_name": 2,\n        "phone": 1\n    }\n}', '成功', '', '2018-02-05 19:46:37')
2018-02-05 19:46:37,165 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 7 步, 步骤ID: 6]======================
2018-02-05 19:46:37,165 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-05 19:46:37,165 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-05 19:46:37,165 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-05 19:46:37,166 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-05 19:46:37,166 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:37,166 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,166 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122, "dataviewer"
2018-02-05 19:46:37,166 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-05 19:46:37,167 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:37,167 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,167 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";
2018-02-05 19:46:37,167 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-05 19:46:37,167 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-05 19:46:37,168 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,168 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-05 19:46:37,168 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";  data：(1033553122, 'dataviewer')
2018-02-05 19:46:37,168 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE qq= 1033553122 AND user_name='dataviewer';
2018-02-05 19:46:37,174 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-05 19:46:37,175 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-05 19:46:37,175 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-05 19:46:37,175 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-05 19:46:37,176 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-05 19:46:37,176 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'atten': '数据监视器', 'userName2_1': 'dataviewer', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'user_name': 'dataviewer', 'phone': '18159001414', 'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168'}
2018-02-05 19:46:37,176 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-05 19:46:37,176 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-05 19:46:37,177 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"fail#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"fail#手机号不为18189001424"}
]
2018-02-05 19:46:37,177 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-05 19:46:37,177 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-05 19:46:37,178 test_case_step.py[line: 149] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-02-05 19:46:37,178 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 7, 6, 7, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.88', 8080, '', '--', 'SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";', '1033553122, "dataviewer"', 'body', 'db列值相等', '[{\n    "模式": [\n        "dataviewer",\n        "dataviewer"\n    ],\n    "消息": "fail#姓名不为dataviewer"\n}]', '', '成功', '', '2018-02-05 19:46:37')
2018-02-05 19:46:37,245 test_case.py[line: 98] INFO: 正在计算运行耗时
2018-02-05 19:46:37,245 test_case.py[line: 104] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-02-05 19:46:37,245 mydb.py[line: 65] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took)VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1517831195', 1, 7, 'ID1-数据灯塔API->ID2-登录页面', 'ID7-根据月结和账号获取集团卡号', '成功', '', '2018-02-05 19:46:36', '0天 0小时 0分 0秒')
2018-02-05 19:46:37,319 test_plan.py[line: 56] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-02-05 19:46:37,320 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-02-05 19:46:37,320 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1517831195', 1)
2018-02-05 19:46:37,320 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1517831195 AND plan_id=1
2018-02-05 19:46:37,328 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-02-05 19:46:37,328 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1517831195', 1)
2018-02-05 19:46:37,328 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1517831195 AND plan_id=1
2018-02-05 19:46:37,334 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-02-05 19:46:37,335 mydb.py[line: 96] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1517831195', 1)
2018-02-05 19:46:37,335 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1517831195 AND plan_id=1
2018-02-05 19:46:37,342 mydb.py[line: 81] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-02-05 19:46:37', time_took='0天 0小时 0分 1秒', case_total_num=4, case_pass_num=4, case_fail_num=0, case_block_num=0 WHERE execution_num='1517831195' AND plan_id=1
2018-02-05 19:46:37,403 running_plan.py[line: 95] INFO: 正在释放资源
2018-02-05 19:46:37,403 running_plan.py[line: 96] INFO: 正在断开与项目关联的数据库连接
2018-02-05 19:46:37,403 running_plan.py[line: 102] INFO: 正在清理与项目关联的全局变量
2018-02-05 19:46:37,404 main.py[line: 38] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-02-05 19:46:37,404 mydb.py[line: 81] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行成功', remark='' WHERE running_plan_num= 1517487657
2018-02-05 20:25:45,087 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:25:45,088 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:25:45,088 main.py[line: 63] ERROR: 运行出错：list index out of range
2018-02-05 20:27:36,513 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:27:36,514 main.py[line: 18] INFO: 当前运行模式为：['debug']
2018-02-05 20:27:36,515 main.py[line: 21] INFO: 当前运行计划编号为：[]
2018-02-05 20:27:36,515 main.py[line: 63] ERROR: 运行出错：'list' object has no attribute 'lower'
2018-02-05 20:28:26,788 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:28:26,789 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:28:26,789 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:28:26,789 main.py[line: 59] INFO: 调试模式
2018-02-05 20:28:52,084 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:28:52,085 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:28:52,085 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:28:52,086 main.py[line: 59] INFO: 调试模式
2018-02-05 20:28:54,775 main.py[line: 61] INFO: <class 'str'>
2018-02-05 20:30:46,155 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:30:46,156 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:30:46,156 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:30:46,157 main.py[line: 59] INFO: 调试模式
2018-02-05 20:30:46,157 main.py[line: 66] ERROR: 运行出错：'builtin_function_or_method' object has no attribute 'isdigit'
2018-02-05 20:31:11,572 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:31:11,573 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:31:11,573 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:31:11,573 main.py[line: 59] INFO: 调试模式
2018-02-05 20:31:11,573 main.py[line: 66] ERROR: 运行出错：'builtin_function_or_method' object has no attribute 'isdigit'
2018-02-05 20:31:49,774 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:31:49,775 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:31:49,775 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:31:49,775 main.py[line: 59] INFO: 调试模式
2018-02-05 20:32:02,983 main.py[line: 64] WARNING: ID只能输为数字
2018-02-05 20:32:13,872 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:32:13,873 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:32:13,873 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:32:13,873 main.py[line: 59] INFO: 调试模式
2018-02-05 20:32:17,154 main.py[line: 64] WARNING: ID只能输为数字
2018-02-05 20:32:30,827 main.py[line: 64] WARNING: ID只能输为数字
2018-02-05 20:32:36,998 main.py[line: 64] WARNING: ID只能输为数字
2018-02-05 20:32:44,177 main.py[line: 64] WARNING: ID只能输为数字
2018-02-05 20:32:59,280 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:32:59,281 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:32:59,281 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:32:59,281 main.py[line: 59] INFO: 调试模式
2018-02-05 20:33:18,763 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:33:18,764 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:33:18,764 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:33:18,764 main.py[line: 59] INFO: 调试模式
2018-02-05 20:33:56,196 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:33:56,196 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:33:56,197 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:33:56,197 main.py[line: 59] INFO: 调试模式
2018-02-05 20:34:15,177 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:34:15,177 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:34:15,178 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:34:15,178 main.py[line: 59] INFO: 调试模式
2018-02-05 20:34:48,032 main.py[line: 64] WARNING: ID只能输为数字

2018-02-05 20:35:00,250 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:35:00,251 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:35:00,251 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:35:00,252 main.py[line: 59] INFO: 调试模式
2018-02-05 20:35:14,015 main.py[line: 64] WARNING: ID只能输为数字

2018-02-05 20:35:21,534 main.py[line: 64] WARNING: ID只能输为数字

2018-02-05 20:35:36,059 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:35:36,059 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:35:36,060 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:35:36,060 main.py[line: 59] INFO: 调试模式
2018-02-05 20:35:43,018 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:35:43,019 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:35:43,019 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:35:43,019 main.py[line: 59] INFO: 调试模式
2018-02-05 20:35:56,417 main.py[line: 15] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-05 20:35:56,418 main.py[line: 18] INFO: 当前运行模式为：debug
2018-02-05 20:35:56,418 main.py[line: 21] INFO: 当前运行计划编号为：0
2018-02-05 20:35:56,418 main.py[line: 59] INFO: 调试模式
2018-02-05 20:35:57,768 main.py[line: 64] WARNING: ID只能输为数字

2018-02-05 20:35:59,855 main.py[line: 64] WARNING: ID只能输为数字

2018-02-06 11:01:56,720 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-06 11:01:56,726 main.py[line: 19] INFO: 当前运行模式为：debug
2018-02-06 11:01:56,727 main.py[line: 22] INFO: 当前运行计划编号为：1
2018-02-06 11:01:56,727 main.py[line: 60] INFO: 调试模式
2018-02-06 11:02:02,945 debug.py[line: 153] ERROR: 'Debug' object has no attribute 'project_id'
2018-02-06 11:02:02,946 debug.py[line: 156] INFO: 正在释放资源
2018-02-06 11:02:02,947 debug.py[line: 157] INFO: 正在断开与项目关联的数据库连接
2018-02-06 11:02:02,947 debug.py[line: 163] INFO: 正在清理与项目关联的全局变量
2018-02-06 11:02:29,160 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-06 11:02:29,161 main.py[line: 19] INFO: 当前运行模式为：debug
2018-02-06 11:02:29,161 main.py[line: 22] INFO: 当前运行计划编号为：1
2018-02-06 11:02:29,161 main.py[line: 60] INFO: 调试模式
2018-02-06 11:02:31,468 debug.py[line: 61] INFO: 正在查询项目[ID：1]相关信息
2018-02-06 11:02:31,469 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：('1',)
2018-02-06 11:02:31,469 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-06 11:02:31,476 debug.py[line: 67] INFO: 正在查询与项目关联的数据库信息
2018-02-06 11:02:31,476 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：('1', '测试环境')
2018-02-06 11:02:31,498 debug.py[line: 81] INFO: 正在查询与项目关联的全局变量
2018-02-06 11:02:31,499 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：('1', '测试环境')
2018-02-06 11:02:31,505 debug.py[line: 106] INFO: 正在查询输入ID标识的用例(套件)相关信息
2018-02-06 11:02:31,506 mydb.py[line: 96] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 5  data：
2018-02-06 11:02:31,506 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 5
2018-02-06 11:02:31,513 mydb.py[line: 122] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND parent_id = 5 ORDER BY `id` ASC  data：
2018-02-06 11:02:31,530 debug.py[line: 129] INFO: 输入ID标识的是测试用例，开始执行用例
2018-02-06 11:02:31,530 debug.py[line: 131] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-06 11:02:31,531 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-06 11:02:31,531 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-06 11:02:31,538 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:02:31,538 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-06 11:02:31,539 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:02:31,539 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:02:31,539 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 11:02:31,540 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 11:02:31,553 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-06 11:02:31,553 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:02:31,554 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-06 11:02:31,554 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-06 11:02:31,554 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:02:31,555 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-06 11:02:31,555 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:02:31,555 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-06 11:02:31,555 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-06 11:02:31,556 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:02:31,556 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:02:31,556 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:02:31,556 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 11:02:31,557 APIUnittestTestCase.py[line: 43] INFO: 正在发起GET请求...
2018-02-06 11:02:31,557 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-06 11:02:31,558 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 11:02:31,664 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-06 11:02:31,665 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11\xc0IDATx\xda\xdd[\x87{\x14\xf5\x16\xe5\xdf\x10\x14\xac "\xd6\xf7\xd4\xa7HU\xa4\x8a\x82\xd2\x8bt\x02\x82\x08JQ\x8a \x88t\x11\x01\xe9]\x91bz\x02IH\xef\xbd\xf7Bz!\xbdg\x93\xe5\xbe{\xee\xee\x0c\xbbK6\xd9\xcdn\x9e\xfa\xe6\xfb\xe6#$\xbb3\xbf\xf9\xddr\xce=\xf7N\x1f\xb2\xf1hni\'\x97\xbb\x85\xf4\xf8pGzl\x98#\xf5\x1d\xa6\xfb\xb7\xbb\xf3\x89\x11N4z\xc1]\x8aN\xae4\xba^UM+\x1d:\x9fF\xb3\xd7\x87\xd0\xf2m\x11\xb4a_\x1c\xed9\x99Bgnd\x93\xabo\x11E&TRAI#\xb5\xb4u\xd0\xff\xc3QZ\xd1L\xbe\xe1\xa5\xb4\xf7t\nM[\x1dH/Oq\xa7g\xdew\xa1>\xf6\xb8\xf0\x9e\x93\xc9\xd4\xf7]Gzr\xb43M^\xeeO[\x8f$\xd0\xda\xdd\xd14\x89\x7f\x1e\xf8\x81k\xa7\x86y\xe6=\x17Z\xf4M8\xa5\xe5\xd4\x1a]/\xa7\xa0\x9e\xbe?\x9eDs\xbf\x0e%\x87\xef"i\xd3\x81x\xda\x7f&\x95.\xfc\x99C\x1e\x01\xc5\x14\x9bRE%|\xcf6\x8d\xf6\x1fi\x08\r\xaf\xbb\xac\xb2\x99"\x13+\xe9\xdc\xcdl\xfa|g\x14}\xb0\xc8\x97\x86Nv\x17g\xed\xc7\x0e\xfe\xf2\x14\x0f\xdb\r\x03\x8f\x9f\xf3U\x88l6\xac}\xe2\xf7L\xca+j\xe0\rn\xa0\xb8\xd4*\xf2\x8f(\xa3\xf3\xb7r\xc4\xf3\'\xafxh\xa8\xb7g\xdc\xa1S\xd7\xb3\xa8\xb2\xba\xd5\xe8z\x01\x91e\xb4a\x7f\x1c\xcd\xdf\x18&\x8b\xder8\x81\x0es\x04]q\xc9#\xef\x90RJ\xcc\xa8\xa1\x8a\xea\x16\xd2\xb4\xff\xf3\x0c\xd3\xd2\xdaA!\xb1\x15\xb4\x8f\x1dm\xea\xe7\x81\xe2\x9c\xc6Y\xc4\x91>X\xecK\xbb\x7fM\xb6\xdd0\xe7oe\xd3k\x1f{\xc8\x85\xc7|v\x97\xd2s\xebH\xab}@\x0f\x1e<<\xeb\x1a4\x94[\xd8@\x11\x9c\x86\x9c|\ni\xff\xe9T\xfa\xf9R:e\xde\xab\xa3v\x93\r^\xb6%\x82\x06\x8ds\xa3W\xd8k\xc6/\xf5\xa3\x95\x1c5\x87/\xa4\xd1u\x8f|\n\x88(\x97\xeb\xd7\xf2\xf5p\x8f\x7f\xc2q\x9f\x1d/"\xe1\xbe\xa4\xe2\xe5[#h\x0c\xa7\xef!\x13u\xd1\x81={q\x92;\xa7\xb0 \xdau"\x99n\x07\x95Pf^\x1d\x7f\xa7\xc56\xc3\xd47j\xe83\xf6l\xdc\xa0\xffH\'\xfa\xfc\xfb\xa8N?\x07\xe3tth\xa9\x8dq\xa1\xa1\xb1\x8d\xf2\x8b\x1b\xa9\xa8\xac\xc9\xe83\xd8\xe8\xe2\xf2&\x15\xab\x14\x1cza\x82\x1b\x8d\x98\xe3M\x0b6\x85\xd1\xee\x13It\xf3v>\xa5d\xd7\xca\xbd\xffn\x87\xee9\x1fPm}\x1be\xb0\x03y\xf8\x17\xd3\x8e_\x12%:^\xfb\xd8\x93\x9fMg\x0c\xa4\xfcwfz\xd1\xd2-\xe1\x9c\xcer$=WT\xb5H\x9aS\x0e\x9b\x0c\xe3\xe8]H\xaf~\xe4!y\x11\xde\xed\xeaWd\xd1\xf7:\xb4\xba\x070<`\x94\x1f8\x84\xcd\x91\x87\xa7\xc7\xb8\xd0\x1b\x9f\xde\xa6\xe9_\x04\xd17\x87\xe2\xe8\xa2c\x0e\x85\xc7\xdf\xa7r\xce\xd70\xfa\xdf\xe1h\xd3tP\x14c\xc7\xf1\xab\x99\x82\x9f\x88zCG\xc39r\xae\x8f\xa4g\xe0e\xe9\xfdf#c\x18\x1e=6\x0c<\xfc\xe3U\x81\xb2\x91\xcf\x8fw\xa3\x03\xe7Re\x93zz`\xa3\xdf\xf8\xe4\xb6,\xfe\xb5\x8f<i\xf4\xfc\xbb\xf4\xd2d\x0f5\xe4q\xc2\xe3\x80QoM\xbfC\x1f\xad\x0c\xa0\xd5\xbb\xa2)$\xa6\x82sw\xfb_j\x90\xec\xfcz:\xcb@\xbe\x8cY\xe4\xb8%~\xec\xac\x9e\xf4\xd4\x18gY\xf3\xa0q\xae4n\xb1\x1fmf\x12\xe3\xc6\x8e\x9b\x92U\xcb\xfb\xd4"x\x83\x083w\xf4\xc80\x00^\xb0\x8a~\xef\xeaR\xd8T\xa6y\xa9\xd9\xb5=~0\x90\x85\xd1\x0b|\xe4z\xff\xe2\x90\xdf{*\x85~s\xcd\x13\xc20r\x9e\x0f=1\xd2\xa9S\xba=a\x99\x1f\xc53\xc10=\xda9\x82\x80k\xad\x9c:;\xf4xgk\x8a2w\xd45\xb4\xd1\xc9kY\xf4\xf2\x87\xeeF\xeb\x1b0\xcaI\x9e\t\x8c\xd57\xacT\x98\xa45\x91\xdd#\xc3 \xc7/\xd8\x14\xaacb\x1fz\xd0E\xa7\\\xce\xf9m*\xe8[s`\xe3\xbe=\x1c/\x06\x06\x9e\x1c8\x9b"\x18T\xc6a\x1e\x93\\E\xbf\xbb\xe51e\x8e\xa3\x89l\x04\xfc\x1d\xc6\xc3}_\xe1\x14\xfa\xd3\xc54\xf9\x9c\xe9\x11\x1e_\xc1$\xa3\x80\xc2\x19t\x8bJ\x9b\xa8\x89k-SB\xa2\xc5\x89\x94\xaa\xd5\xfd\xfb\xc8\xdf\xb5Z106\x13?\x9b;\xe0\x90\xab\x19[\x9f{\xdf\xc5 \xed:\xd3\xecu!\xe4\x17QJ\rM\x1a\xbe\x87\xf5\xa9\xb6\x8f\xf5yTK?\x9eJV\x17\x01 C\xbd\x81:#5\xbb\xc6*\xaf\xc0g\xa3\x19\xf8\xb0\xd9\xa8\x83&-\xf7\xa3\x1a\x06Nl\x0c6\x05\x00\x8f\x8dET\xdc\xba\x93\xcf\xd8\x12O\x93V\x04\x08\x90\xce\xdf\x18\xfaH\r\xa4PR\xd4R\x9f\xae\t\xa2\x15\xdb#i\xdb\x91D:z%\x83\r|\x8fn\x07\x16Sh\\\x85P\xee\xac{\xf5\xe2\x00\x05|}\xfc\x9b\xc5\xe9(\x89\x7f\x1f\xcat\xd6\xc3\xbf\x88\xae\xba\xe6\x92?S\xf7B.f\xcd9\x1b\x8c[\xcc$f\xe6\x97\xc1\xb2~\xa5\xc0\xfe\x0f\x97\x02\x88z["\xd5j\xc3\\s\xbfGo\xcf\xbc\xa3\x1a\x06\x0bz\x9a\xf9\xf8\x9b\x0c\xcc\x0e\xbc\x11\xee\xccD\xaajZ,\xa2\xb3\xe0\xf4\xf0,\\g\xd8lo\xba\xc9\x9bo.u\x96T4\t\xd8_v\xce\xa5\xa3\x973\xc8\'\xa4\x84j\xebZ\x1f\xf9\xec\xc1siBF\x00\xba\xcf\x8du\x15\xbc\x1a\xc1\x80\x8b\xb4\x07c\xcd\xe7\xc2\x15l\xc8a{\x14\xad\xe2:i\xe5\x8e(Z\xbe-\x92\x16n\x0e\x97\xb5LY\x19H\xef1\xed\x9f\xbd.\x98NrM\x06\xfc\xe8\xca\xe3\x03\xa3\xcai\xc6\xda \xd50\xcf\x8du\x11\xfcs\xf4*\xa0\xe6\x96\x8e\xff\x9da\x0e2\xc8\xaf\xe6\x07\x9a\xb0\xd4_\x1e\\\x05f.\x8e\x00\xde\x1b\xf7\xc5Rbz\x15\xd7\'\x1d\xddz\xcc,~x\x1d\xd5v\xa4\xef\x8e&tiLDP\x03GPqy3\x15\x966RS\xb3\xa6\xd3\xeb?5\xda\xd9"I\xa8\xbb\x13\xc6\xb9\xca8W\xc2l\xb1\xab\xe7\xf0\r+\xa3!\x93\xdc\xd4\xef!\xa5\xcd\xf82H\xa2\xd9\x92\x881\xf7\x99>\xd6\x00 6\xa3\x887%\x8f\x8bEx\xca/\x97\xd3i\x1e{\xe0K\x93\xdd\xd5\xdc?b\xae\xb7\x14\x91M\xcd]3\xa5\xe3\xbfep\xa49K\xf5\xbbrG$\xc5\xa7U[\xcc\x06uy\xff\xd1\x07B$),\x0e\x1e\xfc8\xff\x0c&\xa7x\xb3\xb9\x13\xe9\x07Q6`\x943\rdg{\xf3\xd3;\xb4nO\x0c\xf9sA[]\xd7fv\xf3\xea\x19\xf8\xa1^(l\x12\xe7\xeb\x9cfA\xfbQP+\xfbf\xf8}\xa4g\xd49 \r\xc8\x04\xed\xedZ\xdb\r\xa3\x03K\xdd\xc5jx\xc1\x99\x9c\xa7/1\xcd\x9d\xe2\xe0OO\x8erV\x1f\xf2\xc4o\x99\xc2\xe9\xcd=\x10\xd2\xd2\x00\xfd\xe7\x91\x16\x01\xf2\xf6\xa8\xe4QE+\x1b4x\x82\xab\x10\x86\t\xcb\xfc9\xe7{\xf1\xdf<$\xe5\x8a\x1e\xa5g\x93p\n8\xd5\xb0\xd9^\xf4\xe1\n\x7fZ\xcc\xb5\x07p\xec\x17\xc6\xa4\x98\xe4J\xd9@\x00\x7fW\x9e\xbf\xe9`\x1c\xf57\xa0\xf4`b(\x82\x152Q\xc1\xd4\x18\xb8v\x83\x7f\x87\xdf\xbb\xf9\x15\xd2%\xe7\x1crf\xe7E\x95o.\xf2m\x96d\xf2\x19\x1c\xb7\x1d\x89\xa7!\x13\xddT\xde~\xe0l*U\xd7\xb6\x9ae1\x9f\xef\x8c\x14/\x1e\xca\x1by\x82#\x07\xac\xc9\xd6\x03\x82 \xee\xfd\x98\xbe\xaeZ\xb6-\x9c\x9c\xef\x16P$3\xb3\xa0\xe8\nfHe\xe4\x13\xfa\xf0D\n\n\x8c,\xa7\xb0\xb8\xfbRy\xa7d\xd5\x88\x80\x8aB\x17N\x07\xaa\xdd\x1d\xcb\x84\x16\x08c*\xd9b\xf0xWZ\xc1\xb5\x0c\xd4\xe2\xac{u\xb2\xf9\x1b\x99QN_\x1b,\xb4\x1fl\xed\xf5\xa9\x9e\x8cc\x01\x82\xc7 L9\x8ca\x9a\xf6\x0e\xfb\x1b\x06\xd1\x03\x1d\x08\xbc]\xc7\xdf\x1d\xe9"\xdf\xd0\\\xc4l\xff9Q\xf0\x08\x9f}c\x9a\'e\xe4\xd5\xf2&\xb4w\xeb\x99\xdd\x1dP\x1e\x94\x94\x05V\x845\x99\xaa\x0b\xf6>\xa0\xfd\xc1\x18J\xb4\xbc4\x99\x1dbk8me&\x88\xa2\x12Q\t\x12\xd2o\xb8q\x1d\x86\xe2\x13E2\xe4\x9a\xa2\xb2\xc6N\x9f\xddf\xc3\x80\xa7#\xb7\x0f\xd2/p\xe4<or\xf1-\xec\xd4\x0bnx\xe6\xab\xf9\xb8\xef0\x9d\xbc\r\x0fs\xf4.\x90\x05\xb6\xf7P1F\x9ff\xd8,/];\x81\xc1\x17\xf4\xf5.\x17u\xb6\x16\x96]\x1d\x8d\x8c\xa1\xa7\xafg\xd3K\xfa\xc2\xb2\x9f\x19\x1c{\x96\xd7\x83H~z\xccCR\x02<\x03[\xdcyLg\x98^Ie0\xcc\x17\xbb\xa2U\xd0E\xce\xae\xe24\xd6\xd9\xcdP\xef\x0c\xea\xa4?\x83MU\xda\x05=\xd1\xbd\xb6\xfc\x94 \xf5\x94\xa4\xd2\x0f\\h\xe9\xb7\xe1\x16S\xf6\x1eKR\xfc|+\x98f?9\xca8\x1a\xa0\x8f!U-\xdc\x14F\xb3\xd7\x07\xd3\x12^\x0b\x9co\x02G\xb4\xa1n\x86\xf5^r\xca\x91laW\xadLaH!\xb1\xe5\xb2\x10\xa5\xe2\xfdbw4\xdd\xafjy\x848\xc0X\x01\x9c\xd3\xcf\xdc\xc8\xa2y\x1bBE1P\xd4Vx\xd5t\xae\x05P#UV\xb7X\xe5\xe9\xc0\x86E\x9b\xc3$\x8d\xe1|\xf5c\x0fi\xb4A\x02\xe9\xcd\x03b\xe5L\xa6\xc5\xf0\xfe\xe7\xc7\xb91\xd1\xf0\xa7\xaf~\x8c\xa1\xb37\xb3$Z\xb1\xaeJv\x8e\xe4\xcc\x1a\xa9i6\x1e\x88\x15|1\xa4\xe3\xc8\x14v\x95d\x0c\x8f\xfd\x0c\xf4\x83\'\xb8\xe9\xc5G\x0f\xfa\x93\x17\xd1hB\x95\xb1\xd1\x00SPh0\x9d\x00\x06b(\xc4`d\x8f\xebY\x12\x18\xd5\xe2o\xc2\x98\x86\x97\x89(i\xa9q\xfc\x18h\x91\xaf\xd5\xe8c\x86u\xeeV\xb6\xdc\xa77\x0f8\x11\x04K\x14\xabW]\xf2(9\xabV\xee)xi \xed\x00k\xd1\x02\xf8\xee\xe7\x04\x91\x94\x94u.a\xd2\x80\xd6\x87\xcduLg\xd1\x02F\x01\x19^\xa7\xfc:\xd2G\xab\x02\xa4s\xd9\xdd\xf7\xc0\xd8Bb\xca\xb9\xa8L\xa4\xb7f<\xac\x01P5\xc3`HC\x96\x18\x06\xf3\x06\xb7\xbc\xf2U2\xd1\x7f\x14\x84M_\x11@M\xb5/{\xe2M#\xa7\xefT\x8e\x080L\xd4#\x90\xa9:K\xc1"-1nB=X\xcf\xd1\xf4\xd4h\'U_\xbc\xe2\x9ck\x7fu\x19GM]+\x1d\xbb\x9aA\xff\x9av[\x05?H\x18\xf0\x90\xee526\x0e\x7f\x1f\xba\x14f\x03\x06\x8fwSA\x11\xd2\xce\x99?\xb2\xa4q\xd4\x1dF\xe0\xc10\xb8\xf1\xbc\x9e&\x83\xedLX\xea+\xd2\x0e\x8c\x8b\x08E\xf4aM\xd88SCi\xf5}!k\xc5W\x14\x86\x96b!\xae\x8d\xd46i\x85\x9f\xea\x80k\x18\x93\xef\x157\xf4\x8ea\xd0.\xfd\xd0!@\x05}\xe0\x04\x063\xac\xf5L\xc8+\x0b\x19#\x0c+v\xcc\x10\xa0\xfehi\xe9>\xa5!\xc2\x14\xc6\xf3\xb8\x9e\xed\xe0w\x00\xd6\xeb\x1e\xf78zr\xe9\xfc\x9f\xd9t\x86\x19\xd4E\xc7lr\xe6\xbc\x1e\x97VEy\x85\xf5L\xd5\xeb\xb8B\xaf\xe754\xc8t\x0e\x04P\x8d\xa6\xc3\xeel\xee\xe8\xe5t\xa3\xfe~TRe\xb7\x86\xedc\xd4\x16\xd5Z\xa6\xed@j\xdf}"Y\x18\x90\x80>\xdf\x14\xcc\xc3Z\xba\xab\x93y\xda\xc93\xb0\x98\xc6s\xbeV(\'z\xe2\x18\xe7\xc1\x98RWQ\x83\xde8j\x81~\xc3\xbb\x96\\\xa0\xc5\xc1q\x06\xf2z\xc1\xa2\xfa\xca=\\i\xe2r?fO\xa1\xd2V@\xb1\x87\xc1\x11\x805\xd2\x93\xbd\xd2\x1fp\x04\xd8\xa9\xace\xec"_\x8b\xf6I5\x0c&O\x922\xaaE.\xe9\xaa\xff\x80\xbc\x0eO\x1c5\xdfG\xbd\x19z\xf2\x7f\xf0\xef\xb4Zm\x8f\x17\xbf\xf3X\x92\xaa\x1e`\xa3\xa1\xd0B~o4#Y\xc8\x9a\xab\x9a\x85\x81!\x95\xe1\x1c\xc2\x04b\xe8d\x0f!\x12H\x8f\x10YAKA0\xba\x9bw\xc3\xf8\x10D\xd5]|=\xa4\x1e\x9d\x96e\xfb\xec\x1a\xba\x96\xef\xe8k,d\x83\xfdg-k\x07\xa8\x86\xf1\t)\x150Fc*\xfb^\xbd\xda\\2T@\xc1\xac a\xccX\x1b,\x0f\xabT\xfa\x90X\xd02\xedi\xdd\x00\x0f\xf2\x0c(\xa2\xc9\x0e\xfe\xaa\xee\xf4\x02o\xec\x86}\xb1R\xdb\x98S\x05\xf0;\xc8"\x00\xd2S\xd7\xb2\xe8\x97+\xe9\x829{~M\xa2\xef\xb9x\xfb\xfex"\xd78\xf1\xe4\xb0=\x82\xd3\xae\xbf8\xd3pv"\xcc)\x00\x8fL\x05N\x18\x11\xa9p;3(\x90\x13[\x99]um\x1b}\xb57VM\xb5\xd3V\x05JDZ%\xfb#u\xfc\x9b\x81\x1c\xb8\x81\x9f\x83\xa2\xcb%\xffC]\x05\x80\xa2\x0e\x89\xe7\xdc\x8c\xe9\xc8\x81\x06r\xff[\x9f\xde\x91|n\xebC R\xb7\x1c\x8e\xa7g\xc7\xba\xa8\xde\x05\xa5\x16sfm\x1a\xf3X\x03`\x87b\x8bB\x17\xebl\xd6Sr\xa49\xac\x19\x0c\n\x0e\x03\xe3\x83\r\xa2\xbe\xf0\n)\xa1cW2D\xc6\x19\xca\x95\xbb\xc2\xea\x0c\xd3\xcdq&6 \x10\xb6\xb4\xa3}BK\xa5\xa9\'\xfa\x1dG\xf4e\x97\x1c\x11--6\x0c\x8a:\x8c\x07\x01\x80\xe15\xc3f\xdd\x91A\x87\xe3\xcc\xb2@=!y\\\xe0\xda\xe0\x93\xd5\x81\xea\xc6)Ll\xd9\xd6\x08JH\xab\xb6y\x00\x0f`\xf8\'\x033d\x1a\xc3MB\xd1\x96\xcc)\xd6\x9e\xba\x97Rg\x84r\xf4#:\x86\xa0e=\xdcXF\xf9\x92\xd9\xa2\x825=J\xcf\xe5M2M\xaaT\xfb(\x82\xcb\xef[N\x8e\xc40h\xab\xceY\x1f"\xa2\x9b2\x11\x88\x9c\x0b\t\x1b\x9d\xbf\x17\'zHj\x19` ?\xc0\xa3_\x99\xe2NN\xbc\x99\xb5\xf5\xadv\x01J\xcc\x12@\xc604\x0c&6\xcf\\\xcf\xea\x15y\x05Q\x14\x9fZM\xf36\x84\x881\x0c\xef\x0b%\xa2\xbbI\x96\xaep\x18\x85\xf7\x13\xc3\x1f\xf6h|\xc3\xcb\xd8\xb9:\xac3L]\xbdF6\x18i\n9\x18\xe0\x89\xbch\xae\xc1\x04/@\x9e\xde\xc59\xbc\x80\xf9\xb8%\xddJ\x8bj#NA\x9b\x0f\xc5\xabu\x89\x12\x95\x139\xe54\xb7hlV\xa0;\x17#5\xb4\xe7T\xb2Z\x8f)\xe7\x18vJk\xa93>\x0b\xa3`\xbe@Ia\xc0\xb2=\xbf&\xeb\x87U\xac\x9c\x92\x817B\xd7\t\x8a*\x93\xd1\xd5U\xdfEJ\x93\xe9\xf5\xa9\xb7\xa5\xb7\xa1\x08\x84h\x9b\xa2:\x1f\xbf\xc4\x97\xb6\xfe\x94@\x89\xe9\xd5\xb2\x10{n\x18\xe4\x14\xf4.L\x9d\x01\xd2Ko\xd4\x188\xae\xb8\xe4\xd2{\x0b}\x8d\x1cq\xd4<oy\xb6\xae\xeeg\xfa7\xa4c88\x9c[\xb9\x16j2d$k\xf7\xa8\x8fa\x85\x8a\x85`:\x10\x1b\x8e\xa9\x14\x0c7\xa3J]\xb2%\\^\x11\x98\xfbU0\xed\xe4\xba\xe1\x02\x17l\xc0\x15\x1d\xb0v~C4\x9c\xa4\x03h\xa5\xc7\xb9\xfb\x17\xd2\x8c/\x82\xd4\xb4\xaa\x9c\xc0\x02\x80\xb7\xbd\xa3\x06\xd7r\xf6)\xa0q\x8b}U\x12\x80\x8c\xf0\x19\xd77\x955\xc6\xcd>\xd4y%\xe5\xcdR\xb5c\xaf\xa0N\xa0\xb7\x8fn\xe7\x1f\x1e\xf94\xefk\xe3\x94\x08--4\xb6\xbcG\x0ee\xb6\xf2\x07\xc3A}\x11\x93RE\xc11\x15\x94\x91[+T/-\xa7F6\x1d\x85aWR\x06&$1.\x84a\x86\xf6\x0e\xcb6\x13\x9b\x0e\xfa\xbb\x86\xe9\xf7\xa0q\xae\x8f0\xa58^\x8b\xa5\xd7\xb2X^\xd1he\x06m\xf8\x1c/\xd5\xcb1\xd0\x81\xcc\x81N\xa6\xe1\x81g\xc6\xbb@\xd0\xbd\xe6q$,\xda\x14.\x1dL\xe8\x85\x86\xa9\x100\xb0`c\xa80[\xa4\xe0\x9e\xac\xd7bI\x06\x1b\x02j\x8a\x13\xa0\xd9\xdd\xcd\xa0\x83}\xcbx\x81\xfc\x1a\xcc\x0b\x84Z\x80\x97\x8dL\xbf\xa7\xfc\x1f\xff\xc2\x190\xef\xb5nO\xb4\xa4LC\xc3\x0c\x1a\xe7"5\n46{\x19\x06\xd7\xc1\xd4\r$\x13ht\xca\xbd\x90\x8a\xc0D5&\xba\x1f"\xf6\xe4\xb5L\xe9\x1f\xf5\x1f\xa1\xebN\x9a\xe20\xe6\x0b6\xee\x8f\x95\xd1,\x18\xb2\xa7k\xb5j\x18\xc3\x1a\x99\x02S"\x9b\x0f\xc6\t\x91x\x83k\x1d\xfc\x0c\xe9\xa5T^:z\xd8OWR\x13\x08\x84Nu\xae\xe0\x07\x8bcl3\x8e\x18H\xe6\xabvDRBz\xb5]\x0c\xa2\xc8A\xd8\xc0E\x06}{\xa4"LVBK3}V\xa4f\xbc\xa7\x03\xa6\xa8\xbc|\x85\xc6\x18\x0c\x89\x02\x16i\xff\xa6g\xbe\xe8o\xd6\xb4.z\xa5\x1f\xd3\x95\x02\x8b\xb9\xac\x11\x0c\xa2Jxc\xb4\t]?\x00<&G\x10\x1du\r\xad"}\xa0 \x8cM\xae\x92I\x92I\xcb\x03\x8cZ\xb1R\x953\xe6\x805"\x12-Q\x9dM\x9d\xc8t\xfc\xb5\x957\x0e#S\xeb\xb92\x87\x96\xa6\x9b\x8d\xd3\xcdCc\x12\xbf3\x91\x11\xbf\x83\xd4\x8fn\xeb\xae\x13I\xb4\xedH\x82L\xd4@:\x02\xd6\xc0\xd0\xcd|]{\xa4\xdb^3\x0c\x8e\xec\x82:&\x0bI\xc2\xe3\x9f0\xd0\xab\xe0\xfdS\x1c\x02\xa4\xdb\tP\xc7\x94\r\xfe\xc5\xe8\x1042L\xcf\x98\x82?\x86\xb6\xd7\xb0\'c\x1a\xb3\xa1\xa9\xadS\xe3\x08y\xe1\x88\x04\x06\x02\x98\x81\x11P\x04\xf0^\x0e\nTx1\xfe\x06\xe3\x1e\xb9\x94F\x93\xd8\x08\n\xe3\xc4\xac\xc0\xd8E~2\xc4\xd1U\xcb\x01\xf7\xc0[p2\x93\xac\x9fo\xb3w\xbf\xa7\xd7\r\x83\x85C\xd6\xf0d\x0f\\\xfbC\xb4\xd0\xe0\xce&%\xf1j\x05R\x1e\xfe\xa6\x0c\xdf=\x9c\xf0t\x92\xf42\x96\xe9,^\x92\xc5\xa8Q\xab\x994\x01}\x0f\xaf\x1eb$j\xdf\xe9d\x19\xa3B\x8d\x02\rp\x9b\xde\x01\x90\xa6\xf0\xca!\x86(\xe0,p\x00\x88\xa7\x9f\xac\t\x92W\x12\xa1hw\xa5\xb2+\x03\xe9\xbd9\xe8\xd1\xeb\x861\xd4\xb3 F"E 20\xeb\x8b\xf7_\x94\xf7H\x00\xa2\xca&)\xe2h_\xbd\xc1\xa0e\x8d\xe4\x14\xf85\xa7\x1c\xcf\x80\x12\xf1Vs\xf2\x0c6\x0b\xba\xd9\xa1\xf3\xa9\xf4\x8e~\xbe\x1a\x14\xb8\x7f\'\xafq\xf4\x1b\xae\xeb\x98\xc2\xe0\xc04\xbc\xdf\x89\xe1\xbc\xbf\xcb+\x84}\xfe\x8a\x9b\xca+\xd4ae\xf2\xe6\xd5\x97?\xc4\xd2\xfc\r\xa1R\'\xa1\xfb\x08\x1cB\x1b\x01\xc3\r\xb3\xd6\x073\xa0F\tu\xf5\t-\x91\x81<E\x94\xec\xea@\x1d\xb6\x83\xa3\x04\xa0\x0cm\x0f \xfd\xc2DW\x11i\xa10cx\x04\xbd\xfa\xbd\x1cM\xee~E\xd2\xfamji\xef\xf5(\xb0\xe6\xf8/e\x82\xdf\xf0\x07\xda\x8f&\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-06 11:02:31,668 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 03:02:31 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=ne1ccmgpgnee1w0j31ouf0y25;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-06 11:02:31,668 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:02:31,668 APIUnittestTestCase.py[line: 94] INFO: 正在提取目标返回结果值
2018-02-06 11:02:31,669 APIUnittestTestCase.py[line: 97] INFO: 正在执行断言
2018-02-06 11:02:31,669 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:02:31,669 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:02:31,669 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:02:31,669 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"fail#请求验证码识别"}]
2018-02-06 11:02:31,670 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-06 11:02:31,670 debug.py[line: 156] INFO: 正在释放资源
2018-02-06 11:02:31,671 debug.py[line: 157] INFO: 正在断开与项目关联的数据库连接
2018-02-06 11:02:31,671 debug.py[line: 163] INFO: 正在清理与项目关联的全局变量
2018-02-06 11:03:43,476 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-06 11:03:43,477 main.py[line: 19] INFO: 当前运行模式为：debug
2018-02-06 11:03:43,477 main.py[line: 22] INFO: 当前运行计划编号为：1
2018-02-06 11:03:43,478 main.py[line: 60] INFO: 调试模式
2018-02-06 11:03:47,430 debug.py[line: 61] INFO: 正在查询项目[ID：1]相关信息
2018-02-06 11:03:47,431 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：('1',)
2018-02-06 11:03:47,431 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-06 11:03:47,437 debug.py[line: 67] INFO: 正在查询与项目关联的数据库信息
2018-02-06 11:03:47,437 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：('1', '测试环境')
2018-02-06 11:03:47,461 debug.py[line: 81] INFO: 正在查询与项目关联的全局变量
2018-02-06 11:03:47,462 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：('1', '测试环境')
2018-02-06 11:03:47,468 debug.py[line: 106] INFO: 正在查询输入ID标识的用例(套件)相关信息
2018-02-06 11:03:47,468 mydb.py[line: 96] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2  data：
2018-02-06 11:03:47,469 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2
2018-02-06 11:03:47,474 mydb.py[line: 122] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND parent_id = 2 ORDER BY `id` ASC  data：
2018-02-06 11:03:47,480 debug.py[line: 118] INFO: 输入ID标识的是测试套件
2018-02-06 11:03:47,480 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-06 11:03:47,480 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-06 11:03:47,481 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-06 11:03:47,487 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:03:47,488 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-06 11:03:47,488 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:03:47,489 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:03:47,489 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 11:03:47,489 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 11:03:47,489 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-06 11:03:47,490 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,490 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-06 11:03:47,490 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-06 11:03:47,491 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:03:47,493 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-06 11:03:47,536 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,536 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-06 11:03:47,537 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-06 11:03:47,537 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:03:47,537 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:03:47,537 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,537 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 11:03:47,538 APIUnittestTestCase.py[line: 43] INFO: 正在发起GET请求...
2018-02-06 11:03:47,538 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-06 11:03:47,539 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 11:03:47,621 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-06 11:03:47,622 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11\xc0IDATx\xda\xdd[\x87{\x14\xf5\x16\xe5\xdf\x10\x14\xac "\xd6\xf7\xd4\xa7HU\xa4\x8a\x82\xd2\x8bt\x02\x82\x08JQ\x8a \x88t\x11\x01\xe9]\x91bz\x02IH\xef\xbd\xf7Bz!\xbdg\x93\xe5\xbe{\xee\xee\x0c\xbbK6\xd9\xcdn\x9e\xfa\xe6\xfb\xe6#$\xbb3\xbf\xf9\xddr\xce=\xf7N\x1f\xb2\xf1hni\'\x97\xbb\x85\xf4\xf8pGzl\x98#\xf5\x1d\xa6\xfb\xb7\xbb\xf3\x89\x11N4z\xc1]\x8aN\xae4\xba^UM+\x1d:\x9fF\xb3\xd7\x87\xd0\xf2m\x11\xb4a_\x1c\xed9\x99Bgnd\x93\xabo\x11E&TRAI#\xb5\xb4u\xd0\xff\xc3QZ\xd1L\xbe\xe1\xa5\xb4\xf7t\nM[\x1dH/Oq\xa7g\xdew\xa1>\xf6\xb8\xf0\x9e\x93\xc9\xd4\xf7]Gzr\xb43M^\xeeO[\x8f$\xd0\xda\xdd\xd14\x89\x7f\x1e\xf8\x81k\xa7\x86y\xe6=\x17Z\xf4M8\xa5\xe5\xd4\x1a]/\xa7\xa0\x9e\xbe?\x9eDs\xbf\x0e%\x87\xef"i\xd3\x81x\xda\x7f&\x95.\xfc\x99C\x1e\x01\xc5\x14\x9bRE%|\xcf6\x8d\xf6\x1fi\x08\r\xaf\xbb\xac\xb2\x99"\x13+\xe9\xdc\xcdl\xfa|g\x14}\xb0\xc8\x97\x86Nv\x17g\xed\xc7\x0e\xfe\xf2\x14\x0f\xdb\r\x03\x8f\x9f\xf3U\x88l6\xac}\xe2\xf7L\xca+j\xe0\rn\xa0\xb8\xd4*\xf2\x8f(\xa3\xf3\xb7r\xc4\xf3\'\xafxh\xa8\xb7g\xdc\xa1S\xd7\xb3\xa8\xb2\xba\xd5\xe8z\x01\x91e\xb4a\x7f\x1c\xcd\xdf\x18&\x8b\xder8\x81\x0es\x04]q\xc9#\xef\x90RJ\xcc\xa8\xa1\x8a\xea\x16\xd2\xb4\xff\xf3\x0c\xd3\xd2\xdaA!\xb1\x15\xb4\x8f\x1dm\xea\xe7\x81\xe2\x9c\xc6Y\xc4\x91>X\xecK\xbb\x7fM\xb6\xdd0\xe7oe\xd3k\x1f{\xc8\x85\xc7|v\x97\xd2s\xebH\xab}@\x0f\x1e<<\xeb\x1a4\x94[\xd8@\x11\x9c\x86\x9c|\ni\xff\xe9T\xfa\xf9R:e\xde\xab\xa3v\x93\r^\xb6%\x82\x06\x8ds\xa3W\xd8k\xc6/\xf5\xa3\x95\x1c5\x87/\xa4\xd1u\x8f|\n\x88(\x97\xeb\xd7\xf2\xf5p\x8f\x7f\xc2q\x9f\x1d/"\xe1\xbe\xa4\xe2\xe5[#h\x0c\xa7\xef!\x13u\xd1\x81={q\x92;\xa7\xb0 \xdau"\x99n\x07\x95Pf^\x1d\x7f\xa7\xc56\xc3\xd47j\xe83\xf6l\xdc\xa0\xffH\'\xfa\xfc\xfb\xa8N?\x07\xe3tth\xa9\x8dq\xa1\xa1\xb1\x8d\xf2\x8b\x1b\xa9\xa8\xac\xc9\xe83\xd8\xe8\xe2\xf2&\x15\xab\x14\x1cza\x82\x1b\x8d\x98\xe3M\x0b6\x85\xd1\xee\x13It\xf3v>\xa5d\xd7\xca\xbd\xffn\x87\xee9\x1fPm}\x1be\xb0\x03y\xf8\x17\xd3\x8e_\x12%:^\xfb\xd8\x93\x9fMg\x0c\xa4\xfcwfz\xd1\xd2-\xe1\x9c\xcer$=WT\xb5H\x9aS\x0e\x9b\x0c\xe3\xe8]H\xaf~\xe4!y\x11\xde\xed\xeaWd\xd1\xf7:\xb4\xba\x070<`\x94\x1f8\x84\xcd\x91\x87\xa7\xc7\xb8\xd0\x1b\x9f\xde\xa6\xe9_\x04\xd17\x87\xe2\xe8\xa2c\x0e\x85\xc7\xdf\xa7r\xce\xd70\xfa\xdf\xe1h\xd3tP\x14c\xc7\xf1\xab\x99\x82\x9f\x88zCG\xc39r\xae\x8f\xa4g\xe0e\xe9\xfdf#c\x18\x1e=6\x0c<\xfc\xe3U\x81\xb2\x91\xcf\x8fw\xa3\x03\xe7Re\x93zz`\xa3\xdf\xf8\xe4\xb6,\xfe\xb5\x8f<i\xf4\xfc\xbb\xf4\xd2d\x0f5\xe4q\xc2\xe3\x80QoM\xbfC\x1f\xad\x0c\xa0\xd5\xbb\xa2)$\xa6\x82sw\xfb_j\x90\xec\xfcz:\xcb@\xbe\x8cY\xe4\xb8%~\xec\xac\x9e\xf4\xd4\x18gY\xf3\xa0q\xae4n\xb1\x1fmf\x12\xe3\xc6\x8e\x9b\x92U\xcb\xfb\xd4"x\x83\x083w\xf4\xc80\x00^\xb0\x8a~\xef\xeaR\xd8T\xa6y\xa9\xd9\xb5=~0\x90\x85\xd1\x0b|\xe4z\xff\xe2\x90\xdf{*\x85~s\xcd\x13\xc20r\x9e\x0f=1\xd2\xa9S\xba=a\x99\x1f\xc53\xc10=\xda9\x82\x80k\xad\x9c:;\xf4xgk\x8a2w\xd45\xb4\xd1\xc9kY\xf4\xf2\x87\xeeF\xeb\x1b0\xcaI\x9e\t\x8c\xd57\xacT\x98\xa45\x91\xdd#\xc3 \xc7/\xd8\x14\xaacb\x1fz\xd0E\xa7\\\xce\xf9m*\xe8[s`\xe3\xbe=\x1c/\x06\x06\x9e\x1c8\x9b"\x18T\xc6a\x1e\x93\\E\xbf\xbb\xe51e\x8e\xa3\x89l\x04\xfc\x1d\xc6\xc3}_\xe1\x14\xfa\xd3\xc54\xf9\x9c\xe9\x11\x1e_\xc1$\xa3\x80\xc2\x19t\x8bJ\x9b\xa8\x89k-SB\xa2\xc5\x89\x94\xaa\xd5\xfd\xfb\xc8\xdf\xb5Z106\x13?\x9b;\xe0\x90\xab\x19[\x9f{\xdf\xc5 \xed:\xd3\xecu!\xe4\x17QJ\rM\x1a\xbe\x87\xf5\xa9\xb6\x8f\xf5yTK?\x9eJV\x17\x01 C\xbd\x81:#5\xbb\xc6*\xaf\xc0g\xa3\x19\xf8\xb0\xd9\xa8\x83&-\xf7\xa3\x1a\x06Nl\x0c6\x05\x00\x8f\x8dET\xdc\xba\x93\xcf\xd8\x12O\x93V\x04\x08\x90\xce\xdf\x18\xfaH\r\xa4PR\xd4R\x9f\xae\t\xa2\x15\xdb#i\xdb\x91D:z%\x83\r|\x8fn\x07\x16Sh\\\x85P\xee\xac{\xf5\xe2\x00\x05|}\xfc\x9b\xc5\xe9(\x89\x7f\x1f\xcat\xd6\xc3\xbf\x88\xae\xba\xe6\x92?S\xf7B.f\xcd9\x1b\x8c[\xcc$f\xe6\x97\xc1\xb2~\xa5\xc0\xfe\x0f\x97\x02\x88z["\xd5j\xc3\\s\xbfGo\xcf\xbc\xa3\x1a\x06\x0bz\x9a\xf9\xf8\x9b\x0c\xcc\x0e\xbc\x11\xee\xccD\xaajZ,\xa2\xb3\xe0\xf4\xf0,\\g\xd8lo\xba\xc9\x9bo.u\x96T4\t\xd8_v\xce\xa5\xa3\x973\xc8\'\xa4\x84j\xebZ\x1f\xf9\xec\xc1siBF\x00\xba\xcf\x8du\x15\xbc\x1a\xc1\x80\x8b\xb4\x07c\xcd\xe7\xc2\x15l\xc8a{\x14\xad\xe2:i\xe5\x8e(Z\xbe-\x92\x16n\x0e\x97\xb5LY\x19H\xef1\xed\x9f\xbd.\x98NrM\x06\xfc\xe8\xca\xe3\x03\xa3\xcai\xc6\xda \xd50\xcf\x8du\x11\xfcs\xf4*\xa0\xe6\x96\x8e\xff\x9da\x0e2\xc8\xaf\xe6\x07\x9a\xb0\xd4_\x1e\\\x05f.\x8e\x00\xde\x1b\xf7\xc5Rbz\x15\xd7\'\x1d\xddz\xcc,~x\x1d\xd5v\xa4\xef\x8e&tiLDP\x03GPqy3\x15\x966RS\xb3\xa6\xd3\xeb?5\xda\xd9"I\xa8\xbb\x13\xc6\xb9\xca8W\xc2l\xb1\xab\xe7\xf0\r+\xa3!\x93\xdc\xd4\xef!\xa5\xcd\xf82H\xa2\xd9\x92\x881\xf7\x99>\xd6\x00 6\xa3\x887%\x8f\x8bEx\xca/\x97\xd3i\x1e{\xe0K\x93\xdd\xd5\xdc?b\xae\xb7\x14\x91M\xcd]3\xa5\xe3\xbfep\xa49K\xf5\xbbrG$\xc5\xa7U[\xcc\x06uy\xff\xd1\x07B$),\x0e\x1e\xfc8\xff\x0c&\xa7x\xb3\xb9\x13\xe9\x07Q6`\x943\rdg{\xf3\xd3;\xb4nO\x0c\xf9sA[]\xd7fv\xf3\xea\x19\xf8\xa1^(l\x12\xe7\xeb\x9cfA\xfbQP+\xfbf\xf8}\xa4g\xd49 \r\xc8\x04\xed\xedZ\xdb\r\xa3\x03K\xdd\xc5jx\xc1\x99\x9c\xa7/1\xcd\x9d\xe2\xe0OO\x8erV\x1f\xf2\xc4o\x99\xc2\xe9\xcd=\x10\xd2\xd2\x00\xfd\xe7\x91\x16\x01\xf2\xf6\xa8\xe4QE+\x1b4x\x82\xab\x10\x86\t\xcb\xfc9\xe7{\xf1\xdf<$\xe5\x8a\x1e\xa5g\x93p\n8\xd5\xb0\xd9^\xf4\xe1\n\x7fZ\xcc\xb5\x07p\xec\x17\xc6\xa4\x98\xe4J\xd9@\x00\x7fW\x9e\xbf\xe9`\x1c\xf57\xa0\xf4`b(\x82\x152Q\xc1\xd4\x18\xb8v\x83\x7f\x87\xdf\xbb\xf9\x15\xd2%\xe7\x1crf\xe7E\x95o.\xf2m\x96d\xf2\x19\x1c\xb7\x1d\x89\xa7!\x13\xddT\xde~\xe0l*U\xd7\xb6\x9ae1\x9f\xef\x8c\x14/\x1e\xca\x1by\x82#\x07\xac\xc9\xd6\x03\x82 \xee\xfd\x98\xbe\xaeZ\xb6-\x9c\x9c\xef\x16P$3\xb3\xa0\xe8\nfHe\xe4\x13\xfa\xf0D\n\n\x8c,\xa7\xb0\xb8\xfbRy\xa7d\xd5\x88\x80\x8aB\x17N\x07\xaa\xdd\x1d\xcb\x84\x16\x08c*\xd9b\xf0xWZ\xc1\xb5\x0c\xd4\xe2\xac{u\xb2\xf9\x1b\x99QN_\x1b,\xb4\x1fl\xed\xf5\xa9\x9e\x8cc\x01\x82\xc7 L9\x8ca\x9a\xf6\x0e\xfb\x1b\x06\xd1\x03\x1d\x08\xbc]\xc7\xdf\x1d\xe9"\xdf\xd0\\\xc4l\xff9Q\xf0\x08\x9f}c\x9a\'e\xe4\xd5\xf2&\xb4w\xeb\x99\xdd\x1dP\x1e\x94\x94\x05V\x845\x99\xaa\x0b\xf6>\xa0\xfd\xc1\x18J\xb4\xbc4\x99\x1dbk8me&\x88\xa2\x12Q\t\x12\xd2o\xb8q\x1d\x86\xe2\x13E2\xe4\x9a\xa2\xb2\xc6N\x9f\xddf\xc3\x80\xa7#\xb7\x0f\xd2/p\xe4<or\xf1-\xec\xd4\x0bnx\xe6\xab\xf9\xb8\xef0\x9d\xbc\r\x0fs\xf4.\x90\x05\xb6\xf7P1F\x9ff\xd8,/];\x81\xc1\x17\xf4\xf5.\x17u\xb6\x16\x96]\x1d\x8d\x8c\xa1\xa7\xafg\xd3K\xfa\xc2\xb2\x9f\x19\x1c{\x96\xd7\x83H~z\xccCR\x02<\x03[\xdcyLg\x98^Ie0\xcc\x17\xbb\xa2U\xd0E\xce\xae\xe24\xd6\xd9\xcdP\xef\x0c\xea\xa4?\x83MU\xda\x05=\xd1\xbd\xb6\xfc\x94 \xf5\x94\xa4\xd2\x0f\\h\xe9\xb7\xe1\x16S\xf6\x1eKR\xfc|+\x98f?9\xca8\x1a\xa0\x8f!U-\xdc\x14F\xb3\xd7\x07\xd3\x12^\x0b\x9co\x02G\xb4\xa1n\x86\xf5^r\xca\x91laW\xadLaH!\xb1\xe5\xb2\x10\xa5\xe2\xfdbw4\xdd\xafjy\x848\xc0X\x01\x9c\xd3\xcf\xdc\xc8\xa2y\x1bBE1P\xd4Vx\xd5t\xae\x05P#UV\xb7X\xe5\xe9\xc0\x86E\x9b\xc3$\x8d\xe1|\xf5c\x0fi\xb4A\x02\xe9\xcd\x03b\xe5L\xa6\xc5\xf0\xfe\xe7\xc7\xb91\xd1\xf0\xa7\xaf~\x8c\xa1\xb37\xb3$Z\xb1\xaeJv\x8e\xe4\xcc\x1a\xa9i6\x1e\x88\x15|1\xa4\xe3\xc8\x14v\x95d\x0c\x8f\xfd\x0c\xf4\x83\'\xb8\xe9\xc5G\x0f\xfa\x93\x17\xd1hB\x95\xb1\xd1\x00SPh0\x9d\x00\x06b(\xc4`d\x8f\xebY\x12\x18\xd5\xe2o\xc2\x98\x86\x97\x89(i\xa9q\xfc\x18h\x91\xaf\xd5\xe8c\x86u\xeeV\xb6\xdc\xa77\x0f8\x11\x04K\x14\xabW]\xf2(9\xabV\xee)xi \xed\x00k\xd1\x02\xf8\xee\xe7\x04\x91\x94\x94u.a\xd2\x80\xd6\x87\xcduLg\xd1\x02F\x01\x19^\xa7\xfc:\xd2G\xab\x02\xa4s\xd9\xdd\xf7\xc0\xd8Bb\xca\xb9\xa8L\xa4\xb7f<\xac\x01P5\xc3`HC\x96\x18\x06\xf3\x06\xb7\xbc\xf2U2\xd1\x7f\x14\x84M_\x11@M\xb5/{\xe2M#\xa7\xefT\x8e\x080L\xd4#\x90\xa9:K\xc1"-1nB=X\xcf\xd1\xf4\xd4h\'U_\xbc\xe2\x9ck\x7fu\x19GM]+\x1d\xbb\x9aA\xff\x9av[\x05?H\x18\xf0\x90\xee526\x0e\x7f\x1f\xba\x14f\x03\x06\x8fwSA\x11\xd2\xce\x99?\xb2\xa4q\xd4\x1dF\xe0\xc10\xb8\xf1\xbc\x9e&\x83\xedLX\xea+\xd2\x0e\x8c\x8b\x08E\xf4aM\xd88SCi\xf5}!k\xc5W\x14\x86\x96b!\xae\x8d\xd46i\x85\x9f\xea\x80k\x18\x93\xef\x157\xf4\x8ea\xd0.\xfd\xd0!@\x05}\xe0\x04\x063\xac\xf5L\xc8+\x0b\x19#\x0c+v\xcc\x10\xa0\xfehi\xe9>\xa5!\xc2\x14\xc6\xf3\xb8\x9e\xed\xe0w\x00\xd6\xeb\x1e\xf78zr\xe9\xfc\x9f\xd9t\x86\x19\xd4E\xc7lr\xe6\xbc\x1e\x97VEy\x85\xf5L\xd5\xeb\xb8B\xaf\xe754\xc8t\x0e\x04P\x8d\xa6\xc3\xeel\xee\xe8\xe5t\xa3\xfe~TRe\xb7\x86\xedc\xd4\x16\xd5Z\xa6\xed@j\xdf}"Y\x18\x90\x80>\xdf\x14\xcc\xc3Z\xba\xab\x93y\xda\xc93\xb0\x98\xc6s\xbeV(\'z\xe2\x18\xe7\xc1\x98RWQ\x83\xde8j\x81~\xc3\xbb\x96\\\xa0\xc5\xc1q\x06\xf2z\xc1\xa2\xfa\xca=\\i\xe2r?fO\xa1\xd2V@\xb1\x87\xc1\x11\x805\xd2\x93\xbd\xd2\x1fp\x04\xd8\xa9\xace\xec"_\x8b\xf6I5\x0c&O\x922\xaaE.\xe9\xaa\xff\x80\xbc\x0eO\x1c5\xdfG\xbd\x19z\xf2\x7f\xf0\xef\xb4Zm\x8f\x17\xbf\xf3X\x92\xaa\x1e`\xa3\xa1\xd0B~o4#Y\xc8\x9a\xab\x9a\x85\x81!\x95\xe1\x1c\xc2\x04b\xe8d\x0f!\x12H\x8f\x10YAKA0\xba\x9bw\xc3\xf8\x10D\xd5]|=\xa4\x1e\x9d\x96e\xfb\xec\x1a\xba\x96\xef\xe8k,d\x83\xfdg-k\x07\xa8\x86\xf1\t)\x150Fc*\xfb^\xbd\xda\\2T@\xc1\xac a\xccX\x1b,\x0f\xabT\xfa\x90X\xd02\xedi\xdd\x00\x0f\xf2\x0c(\xa2\xc9\x0e\xfe\xaa\xee\xf4\x02o\xec\x86}\xb1R\xdb\x98S\x05\xf0;\xc8"\x00\xd2S\xd7\xb2\xe8\x97+\xe9\x829{~M\xa2\xef\xb9x\xfb\xfex"\xd78\xf1\xe4\xb0=\x82\xd3\xae\xbf8\xd3pv"\xcc)\x00\x8fL\x05N\x18\x11\xa9p;3(\x90\x13[\x99]um\x1b}\xb57VM\xb5\xd3V\x05JDZ%\xfb#u\xfc\x9b\x81\x1c\xb8\x81\x9f\x83\xa2\xcb%\xffC]\x05\x80\xa2\x0e\x89\xe7\xdc\x8c\xe9\xc8\x81\x06r\xff[\x9f\xde\x91|n\xebC R\xb7\x1c\x8e\xa7g\xc7\xba\xa8\xde\x05\xa5\x16sfm\x1a\xf3X\x03`\x87b\x8bB\x17\xebl\xd6Sr\xa49\xac\x19\x0c\n\x0e\x03\xe3\x83\r\xa2\xbe\xf0\n)\xa1cW2D\xc6\x19\xca\x95\xbb\xc2\xea\x0c\xd3\xcdq&6 \x10\xb6\xb4\xa3}BK\xa5\xa9\'\xfa\x1dG\xf4e\x97\x1c\x11--6\x0c\x8a:\x8c\x07\x01\x80\xe15\xc3f\xdd\x91A\x87\xe3\xcc\xb2@=!y\\\xe0\xda\xe0\x93\xd5\x81\xea\xc6)Ll\xd9\xd6\x08JH\xab\xb6y\x00\x0f`\xf8\'\x033d\x1a\xc3MB\xd1\x96\xcc)\xd6\x9e\xba\x97Rg\x84r\xf4#:\x86\xa0e=\xdcXF\xf9\x92\xd9\xa2\x825=J\xcf\xe5M2M\xaaT\xfb(\x82\xcb\xef[N\x8e\xc40h\xab\xceY\x1f"\xa2\x9b2\x11\x88\x9c\x0b\t\x1b\x9d\xbf\x17\'zHj\x19` ?\xc0\xa3_\x99\xe2NN\xbc\x99\xb5\xf5\xadv\x01J\xcc\x12@\xc604\x0c&6\xcf\\\xcf\xea\x15y\x05Q\x14\x9fZM\xf36\x84\x881\x0c\xef\x0b%\xa2\xbbI\x96\xaep\x18\x85\xf7\x13\xc3\x1f\xf6h|\xc3\xcb\xd8\xb9:\xac3L]\xbdF6\x18i\n9\x18\xe0\x89\xbch\xae\xc1\x04/@\x9e\xde\xc59\xbc\x80\xf9\xb8%\xddJ\x8bj#NA\x9b\x0f\xc5\xabu\x89\x12\x95\x139\xe54\xb7hlV\xa0;\x17#5\xb4\xe7T\xb2Z\x8f)\xe7\x18vJk\xa93>\x0b\xa3`\xbe@Ia\xc0\xb2=\xbf&\xeb\x87U\xac\x9c\x92\x817B\xd7\t\x8a*\x93\xd1\xd5U\xdfEJ\x93\xe9\xf5\xa9\xb7\xa5\xb7\xa1\x08\x84h\x9b\xa2:\x1f\xbf\xc4\x97\xb6\xfe\x94@\x89\xe9\xd5\xb2\x10{n\x18\xe4\x14\xf4.L\x9d\x01\xd2Ko\xd4\x188\xae\xb8\xe4\xd2{\x0b}\x8d\x1cq\xd4<oy\xb6\xae\xeeg\xfa7\xa4c88\x9c[\xb9\x16j2d$k\xf7\xa8\x8fa\x85\x8a\x85`:\x10\x1b\x8e\xa9\x14\x0c7\xa3J]\xb2%\\^\x11\x98\xfbU0\xed\xe4\xba\xe1\x02\x17l\xc0\x15\x1d\xb0v~C4\x9c\xa4\x03h\xa5\xc7\xb9\xfb\x17\xd2\x8c/\x82\xd4\xb4\xaa\x9c\xc0\x02\x80\xb7\xbd\xa3\x06\xd7r\xf6)\xa0q\x8b}U\x12\x80\x8c\xf0\x19\xd77\x955\xc6\xcd>\xd4y%\xe5\xcdR\xb5c\xaf\xa0N\xa0\xb7\x8fn\xe7\x1f\x1e\xf94\xefk\xe3\x94\x08--4\xb6\xbcG\x0ee\xb6\xf2\x07\xc3A}\x11\x93RE\xc11\x15\x94\x91[+T/-\xa7F6\x1d\x85aWR\x06&$1.\x84a\x86\xf6\x0e\xcb6\x13\x9b\x0e\xfa\xbb\x86\xe9\xf7\xa0q\xae\x8f0\xa58^\x8b\xa5\xd7\xb2X^\xd1he\x06m\xf8\x1c/\xd5\xcb1\xd0\x81\xcc\x81N\xa6\xe1\x81g\xc6\xbb@\xd0\xbd\xe6q$,\xda\x14.\x1dL\xe8\x85\x86\xa9\x100\xb0`c\xa80[\xa4\xe0\x9e\xac\xd7bI\x06\x1b\x02j\x8a\x13\xa0\xd9\xdd\xcd\xa0\x83}\xcbx\x81\xfc\x1a\xcc\x0b\x84Z\x80\x97\x8dL\xbf\xa7\xfc\x1f\xff\xc2\x190\xef\xb5nO\xb4\xa4LC\xc3\x0c\x1a\xe7"5\n46{\x19\x06\xd7\xc1\xd4\r$\x13ht\xca\xbd\x90\x8a\xc0D5&\xba\x1f"\xf6\xe4\xb5L\xe9\x1f\xf5\x1f\xa1\xebN\x9a\xe20\xe6\x0b6\xee\x8f\x95\xd1,\x18\xb2\xa7k\xb5j\x18\xc3\x1a\x99\x02S"\x9b\x0f\xc6\t\x91x\x83k\x1d\xfc\x0c\xe9\xa5T^:z\xd8OWR\x13\x08\x84Nu\xae\xe0\x07\x8bcl3\x8e\x18H\xe6\xabvDRBz\xb5]\x0c\xa2\xc8A\xd8\xc0E\x06}{\xa4"LVBK3}V\xa4f\xbc\xa7\x03\xa6\xa8\xbc|\x85\xc6\x18\x0c\x89\x02\x16i\xff\xa6g\xbe\xe8o\xd6\xb4.z\xa5\x1f\xd3\x95\x02\x8b\xb9\xac\x11\x0c\xa2Jxc\xb4\t]?\x00<&G\x10\x1du\r\xad"}\xa0 \x8cM\xae\x92I\x92I\xcb\x03\x8cZ\xb1R\x953\xe6\x805"\x12-Q\x9dM\x9d\xc8t\xfc\xb5\x957\x0e#S\xeb\xb92\x87\x96\xa6\x9b\x8d\xd3\xcdCc\x12\xbf3\x91\x11\xbf\x83\xd4\x8fn\xeb\xae\x13I\xb4\xedH\x82L\xd4@:\x02\xd6\xc0\xd0\xcd|]{\xa4\xdb^3\x0c\x8e\xec\x82:&\x0bI\xc2\xe3\x9f0\xd0\xab\xe0\xfdS\x1c\x02\xa4\xdb\tP\xc7\x94\r\xfe\xc5\xe8\x1042L\xcf\x98\x82?\x86\xb6\xd7\xb0\'c\x1a\xb3\xa1\xa9\xadS\xe3\x08y\xe1\x88\x04\x06\x02\x98\x81\x11P\x04\xf0^\x0e\nTx1\xfe\x06\xe3\x1e\xb9\x94F\x93\xd8\x08\n\xe3\xc4\xac\xc0\xd8E~2\xc4\xd1U\xcb\x01\xf7\xc0[p2\x93\xac\x9fo\xb3w\xbf\xa7\xd7\r\x83\x85C\xd6\xf0d\x0f\\\xfbC\xb4\xd0\xe0\xce&%\xf1j\x05R\x1e\xfe\xa6\x0c\xdf=\x9c\xf0t\x92\xf42\x96\xe9,^\x92\xc5\xa8Q\xab\x994\x01}\x0f\xaf\x1eb$j\xdf\xe9d\x19\xa3B\x8d\x02\rp\x9b\xde\x01\x90\xa6\xf0\xca!\x86(\xe0,p\x00\x88\xa7\x9f\xac\t\x92W\x12\xa1hw\xa5\xb2+\x03\xe9\xbd9\xe8\xd1\xeb\x861\xd4\xb3 F"E 20\xeb\x8b\xf7_\x94\xf7H\x00\xa2\xca&)\xe2h_\xbd\xc1\xa0e\x8d\xe4\x14\xf85\xa7\x1c\xcf\x80\x12\xf1Vs\xf2\x0c6\x0b\xba\xd9\xa1\xf3\xa9\xf4\x8e~\xbe\x1a\x14\xb8\x7f\'\xafq\xf4\x1b\xae\xeb\x98\xc2\xe0\xc04\xbc\xdf\x89\xe1\xbc\xbf\xcb+\x84}\xfe\x8a\x9b\xca+\xd4ae\xf2\xe6\xd5\x97?\xc4\xd2\xfc\r\xa1R\'\xa1\xfb\x08\x1cB\x1b\x01\xc3\r\xb3\xd6\x073\xa0F\tu\xf5\t-\x91\x81<E\x94\xec\xea@\x1d\xb6\x83\xa3\x04\xa0\x0cm\x0f \xfd\xc2DW\x11i\xa10cx\x04\xbd\xfa\xbd\x1cM\xee~E\xd2\xfamji\xef\xf5(\xb0\xe6\xf8/e\x82\xdf\xf0\x07\xda\x8f&\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-06 11:03:47,627 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 03:03:47 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1lugp8do1fy9nzi4d0mxoe2br;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-06 11:03:47,627 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:03:47,627 APIUnittestTestCase.py[line: 94] INFO: 正在提取目标返回结果值
2018-02-06 11:03:47,627 APIUnittestTestCase.py[line: 97] INFO: 正在执行断言
2018-02-06 11:03:47,627 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:03:47,628 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:03:47,628 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,628 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"fail#请求验证码识别"}]
2018-02-06 11:03:47,629 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-06 11:03:47,629 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-06 11:03:47,630 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-06 11:03:47,630 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-06 11:03:47,638 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:03:47,638 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-06 11:03:47,639 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:03:47,639 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:03:47,639 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 11:03:47,639 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 11:03:47,640 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:03:47,640 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,640 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-06 11:03:47,640 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 11:03:47,641 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:03:47,641 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,641 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-06 11:03:47,641 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:03:47,642 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:03:47,642 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,642 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-06 11:03:47,642 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:03:47,642 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:03:47,643 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,643 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 11:03:47,644 APIUnittestTestCase.py[line: 39] INFO: 正在发起POST请求...
2018-02-06 11:03:47,644 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-06 11:03:47,644 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-06 11:03:47,645 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Cache-Control', 'no-cache'), ('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 11:03:47,682 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-06 11:03:47,710 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-06 11:03:47,711 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 03:03:47 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 05-Feb-2018 03:03:47 GMT')]
2018-02-06 11:03:47,711 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:03:47,711 APIUnittestTestCase.py[line: 81] INFO: 正在提取目标返回结果值
2018-02-06 11:03:47,712 APIUnittestTestCase.py[line: 84] INFO: 正在执行断言
2018-02-06 11:03:47,712 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:03:47,712 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:03:47,713 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,713 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"fail#灯塔用户登录失败"}]
2018-02-06 11:03:47,713 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-06 11:03:47,714 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-06 11:03:47,715 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-06 11:03:47,715 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-06 11:03:47,723 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:03:47,724 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-06 11:03:47,724 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:03:47,725 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:03:47,725 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-06 11:03:47,725 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 11:03:47,726 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-06 11:03:47,726 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,726 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-06 11:03:47,727 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'userName'
2018-02-06 11:03:47,727 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:03:47,727 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:03:47,727 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,727 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-06 11:03:47,728 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:03:47,728 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-06 11:03:47,728 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,728 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-06 11:03:47,728 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-06 11:03:47,729 APIUnittestTestCase.py[line: 168] INFO: 正在发起POST请求...
2018-02-06 11:03:47,729 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-06 11:03:47,729 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-06 11:03:47,729 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-06 11:03:47,744 APIUnittestTestCase.py[line: 181] INFO: 正在对服务器返回body进行解码
2018-02-06 11:03:47,744 APIUnittestTestCase.py[line: 204] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"/></soap:Body></soap:Envelope>
2018-02-06 11:03:47,744 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-06 11:03:47,745 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:03:47,745 APIUnittestTestCase.py[line: 210] INFO: 正在提取目标返回结果值
2018-02-06 11:03:47,745 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-06 11:03:47,745 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-06 11:03:47,746 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-06 11:03:47,746 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 11:03:47,747 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-06 11:03:47,747 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-06 11:03:47,747 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 11:03:47,747 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[]
2018-02-06 11:03:47,747 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[]
2018-02-06 11:03:47,748 APIUnittestTestCase.py[line: 213] INFO: 正在执行断言
2018-02-06 11:03:47,748 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:03:47,748 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-06 11:03:47,748 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}'}
2018-02-06 11:03:47,748 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-06 11:03:47,749 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'groupCode_1'
2018-02-06 11:03:47,749 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-06 11:03:47,749 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-06 11:03:47,749 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 11:03:47,750 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-06 11:03:47,750 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-06 11:03:47,750 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 11:03:47,750 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[]
2018-02-06 11:03:47,750 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-06 11:03:47,750 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-06 11:03:47,751 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-06 11:03:47,795 test_case.py[line: 88] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-06 11:03:47,796 debug.py[line: 156] INFO: 正在释放资源
2018-02-06 11:03:47,796 debug.py[line: 157] INFO: 正在断开与项目关联的数据库连接
2018-02-06 11:03:47,796 debug.py[line: 163] INFO: 正在清理与项目关联的全局变量
2018-02-06 11:11:28,770 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-06 11:11:28,770 main.py[line: 19] INFO: 当前运行模式为：debug
2018-02-06 11:11:28,771 main.py[line: 22] INFO: 当前运行计划编号为：1
2018-02-06 11:11:28,771 main.py[line: 58] INFO: 调试模式
2018-02-06 11:11:34,228 debug.py[line: 61] INFO: 正在查询项目[ID：1]相关信息
2018-02-06 11:11:34,229 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：('1',)
2018-02-06 11:11:34,229 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-06 11:11:34,237 debug.py[line: 67] INFO: 正在查询与项目关联的数据库信息
2018-02-06 11:11:34,238 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：('1', '测试环境')
2018-02-06 11:11:34,262 debug.py[line: 81] INFO: 正在查询与项目关联的全局变量
2018-02-06 11:11:34,262 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：('1', '测试环境')
2018-02-06 11:11:34,268 debug.py[line: 106] INFO: 正在查询输入ID标识的用例(套件)相关信息
2018-02-06 11:11:34,269 mydb.py[line: 96] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2  data：
2018-02-06 11:11:34,269 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2
2018-02-06 11:11:34,274 mydb.py[line: 122] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND parent_id = 2 ORDER BY `id` ASC  data：
2018-02-06 11:11:34,280 debug.py[line: 118] INFO: 输入ID标识的是测试套件
2018-02-06 11:11:34,280 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-06 11:11:34,281 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-06 11:11:34,281 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-06 11:11:34,288 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:11:34,288 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-06 11:11:34,289 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:11:34,289 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:11:34,289 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 11:11:34,289 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 11:11:34,289 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-06 11:11:34,290 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,290 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-06 11:11:34,290 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-06 11:11:34,291 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:11:34,291 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-06 11:11:34,291 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,291 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-06 11:11:34,291 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-06 11:11:34,292 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:11:34,292 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:11:34,292 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,292 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 11:11:34,293 APIUnittestTestCase.py[line: 43] INFO: 正在发起GET请求...
2018-02-06 11:11:34,293 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-06 11:11:34,293 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 11:11:34,384 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-06 11:11:34,385 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11\xc0IDATx\xda\xdd[\x87{\x14\xf5\x16\xe5\xdf\x10\x14\xac "\xd6\xf7\xd4\xa7HU\xa4\x8a\x82\xd2\x8bt\x02\x82\x08JQ\x8a \x88t\x11\x01\xe9]\x91bz\x02IH\xef\xbd\xf7Bz!\xbdg\x93\xe5\xbe{\xee\xee\x0c\xbbK6\xd9\xcdn\x9e\xfa\xe6\xfb\xe6#$\xbb3\xbf\xf9\xddr\xce=\xf7N\x1f\xb2\xf1hni\'\x97\xbb\x85\xf4\xf8pGzl\x98#\xf5\x1d\xa6\xfb\xb7\xbb\xf3\x89\x11N4z\xc1]\x8aN\xae4\xba^UM+\x1d:\x9fF\xb3\xd7\x87\xd0\xf2m\x11\xb4a_\x1c\xed9\x99Bgnd\x93\xabo\x11E&TRAI#\xb5\xb4u\xd0\xff\xc3QZ\xd1L\xbe\xe1\xa5\xb4\xf7t\nM[\x1dH/Oq\xa7g\xdew\xa1>\xf6\xb8\xf0\x9e\x93\xc9\xd4\xf7]Gzr\xb43M^\xeeO[\x8f$\xd0\xda\xdd\xd14\x89\x7f\x1e\xf8\x81k\xa7\x86y\xe6=\x17Z\xf4M8\xa5\xe5\xd4\x1a]/\xa7\xa0\x9e\xbe?\x9eDs\xbf\x0e%\x87\xef"i\xd3\x81x\xda\x7f&\x95.\xfc\x99C\x1e\x01\xc5\x14\x9bRE%|\xcf6\x8d\xf6\x1fi\x08\r\xaf\xbb\xac\xb2\x99"\x13+\xe9\xdc\xcdl\xfa|g\x14}\xb0\xc8\x97\x86Nv\x17g\xed\xc7\x0e\xfe\xf2\x14\x0f\xdb\r\x03\x8f\x9f\xf3U\x88l6\xac}\xe2\xf7L\xca+j\xe0\rn\xa0\xb8\xd4*\xf2\x8f(\xa3\xf3\xb7r\xc4\xf3\'\xafxh\xa8\xb7g\xdc\xa1S\xd7\xb3\xa8\xb2\xba\xd5\xe8z\x01\x91e\xb4a\x7f\x1c\xcd\xdf\x18&\x8b\xder8\x81\x0es\x04]q\xc9#\xef\x90RJ\xcc\xa8\xa1\x8a\xea\x16\xd2\xb4\xff\xf3\x0c\xd3\xd2\xdaA!\xb1\x15\xb4\x8f\x1dm\xea\xe7\x81\xe2\x9c\xc6Y\xc4\x91>X\xecK\xbb\x7fM\xb6\xdd0\xe7oe\xd3k\x1f{\xc8\x85\xc7|v\x97\xd2s\xebH\xab}@\x0f\x1e<<\xeb\x1a4\x94[\xd8@\x11\x9c\x86\x9c|\ni\xff\xe9T\xfa\xf9R:e\xde\xab\xa3v\x93\r^\xb6%\x82\x06\x8ds\xa3W\xd8k\xc6/\xf5\xa3\x95\x1c5\x87/\xa4\xd1u\x8f|\n\x88(\x97\xeb\xd7\xf2\xf5p\x8f\x7f\xc2q\x9f\x1d/"\xe1\xbe\xa4\xe2\xe5[#h\x0c\xa7\xef!\x13u\xd1\x81={q\x92;\xa7\xb0 \xdau"\x99n\x07\x95Pf^\x1d\x7f\xa7\xc56\xc3\xd47j\xe83\xf6l\xdc\xa0\xffH\'\xfa\xfc\xfb\xa8N?\x07\xe3tth\xa9\x8dq\xa1\xa1\xb1\x8d\xf2\x8b\x1b\xa9\xa8\xac\xc9\xe83\xd8\xe8\xe2\xf2&\x15\xab\x14\x1cza\x82\x1b\x8d\x98\xe3M\x0b6\x85\xd1\xee\x13It\xf3v>\xa5d\xd7\xca\xbd\xffn\x87\xee9\x1fPm}\x1be\xb0\x03y\xf8\x17\xd3\x8e_\x12%:^\xfb\xd8\x93\x9fMg\x0c\xa4\xfcwfz\xd1\xd2-\xe1\x9c\xcer$=WT\xb5H\x9aS\x0e\x9b\x0c\xe3\xe8]H\xaf~\xe4!y\x11\xde\xed\xeaWd\xd1\xf7:\xb4\xba\x070<`\x94\x1f8\x84\xcd\x91\x87\xa7\xc7\xb8\xd0\x1b\x9f\xde\xa6\xe9_\x04\xd17\x87\xe2\xe8\xa2c\x0e\x85\xc7\xdf\xa7r\xce\xd70\xfa\xdf\xe1h\xd3tP\x14c\xc7\xf1\xab\x99\x82\x9f\x88zCG\xc39r\xae\x8f\xa4g\xe0e\xe9\xfdf#c\x18\x1e=6\x0c<\xfc\xe3U\x81\xb2\x91\xcf\x8fw\xa3\x03\xe7Re\x93zz`\xa3\xdf\xf8\xe4\xb6,\xfe\xb5\x8f<i\xf4\xfc\xbb\xf4\xd2d\x0f5\xe4q\xc2\xe3\x80QoM\xbfC\x1f\xad\x0c\xa0\xd5\xbb\xa2)$\xa6\x82sw\xfb_j\x90\xec\xfcz:\xcb@\xbe\x8cY\xe4\xb8%~\xec\xac\x9e\xf4\xd4\x18gY\xf3\xa0q\xae4n\xb1\x1fmf\x12\xe3\xc6\x8e\x9b\x92U\xcb\xfb\xd4"x\x83\x083w\xf4\xc80\x00^\xb0\x8a~\xef\xeaR\xd8T\xa6y\xa9\xd9\xb5=~0\x90\x85\xd1\x0b|\xe4z\xff\xe2\x90\xdf{*\x85~s\xcd\x13\xc20r\x9e\x0f=1\xd2\xa9S\xba=a\x99\x1f\xc53\xc10=\xda9\x82\x80k\xad\x9c:;\xf4xgk\x8a2w\xd45\xb4\xd1\xc9kY\xf4\xf2\x87\xeeF\xeb\x1b0\xcaI\x9e\t\x8c\xd57\xacT\x98\xa45\x91\xdd#\xc3 \xc7/\xd8\x14\xaacb\x1fz\xd0E\xa7\\\xce\xf9m*\xe8[s`\xe3\xbe=\x1c/\x06\x06\x9e\x1c8\x9b"\x18T\xc6a\x1e\x93\\E\xbf\xbb\xe51e\x8e\xa3\x89l\x04\xfc\x1d\xc6\xc3}_\xe1\x14\xfa\xd3\xc54\xf9\x9c\xe9\x11\x1e_\xc1$\xa3\x80\xc2\x19t\x8bJ\x9b\xa8\x89k-SB\xa2\xc5\x89\x94\xaa\xd5\xfd\xfb\xc8\xdf\xb5Z106\x13?\x9b;\xe0\x90\xab\x19[\x9f{\xdf\xc5 \xed:\xd3\xecu!\xe4\x17QJ\rM\x1a\xbe\x87\xf5\xa9\xb6\x8f\xf5yTK?\x9eJV\x17\x01 C\xbd\x81:#5\xbb\xc6*\xaf\xc0g\xa3\x19\xf8\xb0\xd9\xa8\x83&-\xf7\xa3\x1a\x06Nl\x0c6\x05\x00\x8f\x8dET\xdc\xba\x93\xcf\xd8\x12O\x93V\x04\x08\x90\xce\xdf\x18\xfaH\r\xa4PR\xd4R\x9f\xae\t\xa2\x15\xdb#i\xdb\x91D:z%\x83\r|\x8fn\x07\x16Sh\\\x85P\xee\xac{\xf5\xe2\x00\x05|}\xfc\x9b\xc5\xe9(\x89\x7f\x1f\xcat\xd6\xc3\xbf\x88\xae\xba\xe6\x92?S\xf7B.f\xcd9\x1b\x8c[\xcc$f\xe6\x97\xc1\xb2~\xa5\xc0\xfe\x0f\x97\x02\x88z["\xd5j\xc3\\s\xbfGo\xcf\xbc\xa3\x1a\x06\x0bz\x9a\xf9\xf8\x9b\x0c\xcc\x0e\xbc\x11\xee\xccD\xaajZ,\xa2\xb3\xe0\xf4\xf0,\\g\xd8lo\xba\xc9\x9bo.u\x96T4\t\xd8_v\xce\xa5\xa3\x973\xc8\'\xa4\x84j\xebZ\x1f\xf9\xec\xc1siBF\x00\xba\xcf\x8du\x15\xbc\x1a\xc1\x80\x8b\xb4\x07c\xcd\xe7\xc2\x15l\xc8a{\x14\xad\xe2:i\xe5\x8e(Z\xbe-\x92\x16n\x0e\x97\xb5LY\x19H\xef1\xed\x9f\xbd.\x98NrM\x06\xfc\xe8\xca\xe3\x03\xa3\xcai\xc6\xda \xd50\xcf\x8du\x11\xfcs\xf4*\xa0\xe6\x96\x8e\xff\x9da\x0e2\xc8\xaf\xe6\x07\x9a\xb0\xd4_\x1e\\\x05f.\x8e\x00\xde\x1b\xf7\xc5Rbz\x15\xd7\'\x1d\xddz\xcc,~x\x1d\xd5v\xa4\xef\x8e&tiLDP\x03GPqy3\x15\x966RS\xb3\xa6\xd3\xeb?5\xda\xd9"I\xa8\xbb\x13\xc6\xb9\xca8W\xc2l\xb1\xab\xe7\xf0\r+\xa3!\x93\xdc\xd4\xef!\xa5\xcd\xf82H\xa2\xd9\x92\x881\xf7\x99>\xd6\x00 6\xa3\x887%\x8f\x8bEx\xca/\x97\xd3i\x1e{\xe0K\x93\xdd\xd5\xdc?b\xae\xb7\x14\x91M\xcd]3\xa5\xe3\xbfep\xa49K\xf5\xbbrG$\xc5\xa7U[\xcc\x06uy\xff\xd1\x07B$),\x0e\x1e\xfc8\xff\x0c&\xa7x\xb3\xb9\x13\xe9\x07Q6`\x943\rdg{\xf3\xd3;\xb4nO\x0c\xf9sA[]\xd7fv\xf3\xea\x19\xf8\xa1^(l\x12\xe7\xeb\x9cfA\xfbQP+\xfbf\xf8}\xa4g\xd49 \r\xc8\x04\xed\xedZ\xdb\r\xa3\x03K\xdd\xc5jx\xc1\x99\x9c\xa7/1\xcd\x9d\xe2\xe0OO\x8erV\x1f\xf2\xc4o\x99\xc2\xe9\xcd=\x10\xd2\xd2\x00\xfd\xe7\x91\x16\x01\xf2\xf6\xa8\xe4QE+\x1b4x\x82\xab\x10\x86\t\xcb\xfc9\xe7{\xf1\xdf<$\xe5\x8a\x1e\xa5g\x93p\n8\xd5\xb0\xd9^\xf4\xe1\n\x7fZ\xcc\xb5\x07p\xec\x17\xc6\xa4\x98\xe4J\xd9@\x00\x7fW\x9e\xbf\xe9`\x1c\xf57\xa0\xf4`b(\x82\x152Q\xc1\xd4\x18\xb8v\x83\x7f\x87\xdf\xbb\xf9\x15\xd2%\xe7\x1crf\xe7E\x95o.\xf2m\x96d\xf2\x19\x1c\xb7\x1d\x89\xa7!\x13\xddT\xde~\xe0l*U\xd7\xb6\x9ae1\x9f\xef\x8c\x14/\x1e\xca\x1by\x82#\x07\xac\xc9\xd6\x03\x82 \xee\xfd\x98\xbe\xaeZ\xb6-\x9c\x9c\xef\x16P$3\xb3\xa0\xe8\nfHe\xe4\x13\xfa\xf0D\n\n\x8c,\xa7\xb0\xb8\xfbRy\xa7d\xd5\x88\x80\x8aB\x17N\x07\xaa\xdd\x1d\xcb\x84\x16\x08c*\xd9b\xf0xWZ\xc1\xb5\x0c\xd4\xe2\xac{u\xb2\xf9\x1b\x99QN_\x1b,\xb4\x1fl\xed\xf5\xa9\x9e\x8cc\x01\x82\xc7 L9\x8ca\x9a\xf6\x0e\xfb\x1b\x06\xd1\x03\x1d\x08\xbc]\xc7\xdf\x1d\xe9"\xdf\xd0\\\xc4l\xff9Q\xf0\x08\x9f}c\x9a\'e\xe4\xd5\xf2&\xb4w\xeb\x99\xdd\x1dP\x1e\x94\x94\x05V\x845\x99\xaa\x0b\xf6>\xa0\xfd\xc1\x18J\xb4\xbc4\x99\x1dbk8me&\x88\xa2\x12Q\t\x12\xd2o\xb8q\x1d\x86\xe2\x13E2\xe4\x9a\xa2\xb2\xc6N\x9f\xddf\xc3\x80\xa7#\xb7\x0f\xd2/p\xe4<or\xf1-\xec\xd4\x0bnx\xe6\xab\xf9\xb8\xef0\x9d\xbc\r\x0fs\xf4.\x90\x05\xb6\xf7P1F\x9ff\xd8,/];\x81\xc1\x17\xf4\xf5.\x17u\xb6\x16\x96]\x1d\x8d\x8c\xa1\xa7\xafg\xd3K\xfa\xc2\xb2\x9f\x19\x1c{\x96\xd7\x83H~z\xccCR\x02<\x03[\xdcyLg\x98^Ie0\xcc\x17\xbb\xa2U\xd0E\xce\xae\xe24\xd6\xd9\xcdP\xef\x0c\xea\xa4?\x83MU\xda\x05=\xd1\xbd\xb6\xfc\x94 \xf5\x94\xa4\xd2\x0f\\h\xe9\xb7\xe1\x16S\xf6\x1eKR\xfc|+\x98f?9\xca8\x1a\xa0\x8f!U-\xdc\x14F\xb3\xd7\x07\xd3\x12^\x0b\x9co\x02G\xb4\xa1n\x86\xf5^r\xca\x91laW\xadLaH!\xb1\xe5\xb2\x10\xa5\xe2\xfdbw4\xdd\xafjy\x848\xc0X\x01\x9c\xd3\xcf\xdc\xc8\xa2y\x1bBE1P\xd4Vx\xd5t\xae\x05P#UV\xb7X\xe5\xe9\xc0\x86E\x9b\xc3$\x8d\xe1|\xf5c\x0fi\xb4A\x02\xe9\xcd\x03b\xe5L\xa6\xc5\xf0\xfe\xe7\xc7\xb91\xd1\xf0\xa7\xaf~\x8c\xa1\xb37\xb3$Z\xb1\xaeJv\x8e\xe4\xcc\x1a\xa9i6\x1e\x88\x15|1\xa4\xe3\xc8\x14v\x95d\x0c\x8f\xfd\x0c\xf4\x83\'\xb8\xe9\xc5G\x0f\xfa\x93\x17\xd1hB\x95\xb1\xd1\x00SPh0\x9d\x00\x06b(\xc4`d\x8f\xebY\x12\x18\xd5\xe2o\xc2\x98\x86\x97\x89(i\xa9q\xfc\x18h\x91\xaf\xd5\xe8c\x86u\xeeV\xb6\xdc\xa77\x0f8\x11\x04K\x14\xabW]\xf2(9\xabV\xee)xi \xed\x00k\xd1\x02\xf8\xee\xe7\x04\x91\x94\x94u.a\xd2\x80\xd6\x87\xcduLg\xd1\x02F\x01\x19^\xa7\xfc:\xd2G\xab\x02\xa4s\xd9\xdd\xf7\xc0\xd8Bb\xca\xb9\xa8L\xa4\xb7f<\xac\x01P5\xc3`HC\x96\x18\x06\xf3\x06\xb7\xbc\xf2U2\xd1\x7f\x14\x84M_\x11@M\xb5/{\xe2M#\xa7\xefT\x8e\x080L\xd4#\x90\xa9:K\xc1"-1nB=X\xcf\xd1\xf4\xd4h\'U_\xbc\xe2\x9ck\x7fu\x19GM]+\x1d\xbb\x9aA\xff\x9av[\x05?H\x18\xf0\x90\xee526\x0e\x7f\x1f\xba\x14f\x03\x06\x8fwSA\x11\xd2\xce\x99?\xb2\xa4q\xd4\x1dF\xe0\xc10\xb8\xf1\xbc\x9e&\x83\xedLX\xea+\xd2\x0e\x8c\x8b\x08E\xf4aM\xd88SCi\xf5}!k\xc5W\x14\x86\x96b!\xae\x8d\xd46i\x85\x9f\xea\x80k\x18\x93\xef\x157\xf4\x8ea\xd0.\xfd\xd0!@\x05}\xe0\x04\x063\xac\xf5L\xc8+\x0b\x19#\x0c+v\xcc\x10\xa0\xfehi\xe9>\xa5!\xc2\x14\xc6\xf3\xb8\x9e\xed\xe0w\x00\xd6\xeb\x1e\xf78zr\xe9\xfc\x9f\xd9t\x86\x19\xd4E\xc7lr\xe6\xbc\x1e\x97VEy\x85\xf5L\xd5\xeb\xb8B\xaf\xe754\xc8t\x0e\x04P\x8d\xa6\xc3\xeel\xee\xe8\xe5t\xa3\xfe~TRe\xb7\x86\xedc\xd4\x16\xd5Z\xa6\xed@j\xdf}"Y\x18\x90\x80>\xdf\x14\xcc\xc3Z\xba\xab\x93y\xda\xc93\xb0\x98\xc6s\xbeV(\'z\xe2\x18\xe7\xc1\x98RWQ\x83\xde8j\x81~\xc3\xbb\x96\\\xa0\xc5\xc1q\x06\xf2z\xc1\xa2\xfa\xca=\\i\xe2r?fO\xa1\xd2V@\xb1\x87\xc1\x11\x805\xd2\x93\xbd\xd2\x1fp\x04\xd8\xa9\xace\xec"_\x8b\xf6I5\x0c&O\x922\xaaE.\xe9\xaa\xff\x80\xbc\x0eO\x1c5\xdfG\xbd\x19z\xf2\x7f\xf0\xef\xb4Zm\x8f\x17\xbf\xf3X\x92\xaa\x1e`\xa3\xa1\xd0B~o4#Y\xc8\x9a\xab\x9a\x85\x81!\x95\xe1\x1c\xc2\x04b\xe8d\x0f!\x12H\x8f\x10YAKA0\xba\x9bw\xc3\xf8\x10D\xd5]|=\xa4\x1e\x9d\x96e\xfb\xec\x1a\xba\x96\xef\xe8k,d\x83\xfdg-k\x07\xa8\x86\xf1\t)\x150Fc*\xfb^\xbd\xda\\2T@\xc1\xac a\xccX\x1b,\x0f\xabT\xfa\x90X\xd02\xedi\xdd\x00\x0f\xf2\x0c(\xa2\xc9\x0e\xfe\xaa\xee\xf4\x02o\xec\x86}\xb1R\xdb\x98S\x05\xf0;\xc8"\x00\xd2S\xd7\xb2\xe8\x97+\xe9\x829{~M\xa2\xef\xb9x\xfb\xfex"\xd78\xf1\xe4\xb0=\x82\xd3\xae\xbf8\xd3pv"\xcc)\x00\x8fL\x05N\x18\x11\xa9p;3(\x90\x13[\x99]um\x1b}\xb57VM\xb5\xd3V\x05JDZ%\xfb#u\xfc\x9b\x81\x1c\xb8\x81\x9f\x83\xa2\xcb%\xffC]\x05\x80\xa2\x0e\x89\xe7\xdc\x8c\xe9\xc8\x81\x06r\xff[\x9f\xde\x91|n\xebC R\xb7\x1c\x8e\xa7g\xc7\xba\xa8\xde\x05\xa5\x16sfm\x1a\xf3X\x03`\x87b\x8bB\x17\xebl\xd6Sr\xa49\xac\x19\x0c\n\x0e\x03\xe3\x83\r\xa2\xbe\xf0\n)\xa1cW2D\xc6\x19\xca\x95\xbb\xc2\xea\x0c\xd3\xcdq&6 \x10\xb6\xb4\xa3}BK\xa5\xa9\'\xfa\x1dG\xf4e\x97\x1c\x11--6\x0c\x8a:\x8c\x07\x01\x80\xe15\xc3f\xdd\x91A\x87\xe3\xcc\xb2@=!y\\\xe0\xda\xe0\x93\xd5\x81\xea\xc6)Ll\xd9\xd6\x08JH\xab\xb6y\x00\x0f`\xf8\'\x033d\x1a\xc3MB\xd1\x96\xcc)\xd6\x9e\xba\x97Rg\x84r\xf4#:\x86\xa0e=\xdcXF\xf9\x92\xd9\xa2\x825=J\xcf\xe5M2M\xaaT\xfb(\x82\xcb\xef[N\x8e\xc40h\xab\xceY\x1f"\xa2\x9b2\x11\x88\x9c\x0b\t\x1b\x9d\xbf\x17\'zHj\x19` ?\xc0\xa3_\x99\xe2NN\xbc\x99\xb5\xf5\xadv\x01J\xcc\x12@\xc604\x0c&6\xcf\\\xcf\xea\x15y\x05Q\x14\x9fZM\xf36\x84\x881\x0c\xef\x0b%\xa2\xbbI\x96\xaep\x18\x85\xf7\x13\xc3\x1f\xf6h|\xc3\xcb\xd8\xb9:\xac3L]\xbdF6\x18i\n9\x18\xe0\x89\xbch\xae\xc1\x04/@\x9e\xde\xc59\xbc\x80\xf9\xb8%\xddJ\x8bj#NA\x9b\x0f\xc5\xabu\x89\x12\x95\x139\xe54\xb7hlV\xa0;\x17#5\xb4\xe7T\xb2Z\x8f)\xe7\x18vJk\xa93>\x0b\xa3`\xbe@Ia\xc0\xb2=\xbf&\xeb\x87U\xac\x9c\x92\x817B\xd7\t\x8a*\x93\xd1\xd5U\xdfEJ\x93\xe9\xf5\xa9\xb7\xa5\xb7\xa1\x08\x84h\x9b\xa2:\x1f\xbf\xc4\x97\xb6\xfe\x94@\x89\xe9\xd5\xb2\x10{n\x18\xe4\x14\xf4.L\x9d\x01\xd2Ko\xd4\x188\xae\xb8\xe4\xd2{\x0b}\x8d\x1cq\xd4<oy\xb6\xae\xeeg\xfa7\xa4c88\x9c[\xb9\x16j2d$k\xf7\xa8\x8fa\x85\x8a\x85`:\x10\x1b\x8e\xa9\x14\x0c7\xa3J]\xb2%\\^\x11\x98\xfbU0\xed\xe4\xba\xe1\x02\x17l\xc0\x15\x1d\xb0v~C4\x9c\xa4\x03h\xa5\xc7\xb9\xfb\x17\xd2\x8c/\x82\xd4\xb4\xaa\x9c\xc0\x02\x80\xb7\xbd\xa3\x06\xd7r\xf6)\xa0q\x8b}U\x12\x80\x8c\xf0\x19\xd77\x955\xc6\xcd>\xd4y%\xe5\xcdR\xb5c\xaf\xa0N\xa0\xb7\x8fn\xe7\x1f\x1e\xf94\xefk\xe3\x94\x08--4\xb6\xbcG\x0ee\xb6\xf2\x07\xc3A}\x11\x93RE\xc11\x15\x94\x91[+T/-\xa7F6\x1d\x85aWR\x06&$1.\x84a\x86\xf6\x0e\xcb6\x13\x9b\x0e\xfa\xbb\x86\xe9\xf7\xa0q\xae\x8f0\xa58^\x8b\xa5\xd7\xb2X^\xd1he\x06m\xf8\x1c/\xd5\xcb1\xd0\x81\xcc\x81N\xa6\xe1\x81g\xc6\xbb@\xd0\xbd\xe6q$,\xda\x14.\x1dL\xe8\x85\x86\xa9\x100\xb0`c\xa80[\xa4\xe0\x9e\xac\xd7bI\x06\x1b\x02j\x8a\x13\xa0\xd9\xdd\xcd\xa0\x83}\xcbx\x81\xfc\x1a\xcc\x0b\x84Z\x80\x97\x8dL\xbf\xa7\xfc\x1f\xff\xc2\x190\xef\xb5nO\xb4\xa4LC\xc3\x0c\x1a\xe7"5\n46{\x19\x06\xd7\xc1\xd4\r$\x13ht\xca\xbd\x90\x8a\xc0D5&\xba\x1f"\xf6\xe4\xb5L\xe9\x1f\xf5\x1f\xa1\xebN\x9a\xe20\xe6\x0b6\xee\x8f\x95\xd1,\x18\xb2\xa7k\xb5j\x18\xc3\x1a\x99\x02S"\x9b\x0f\xc6\t\x91x\x83k\x1d\xfc\x0c\xe9\xa5T^:z\xd8OWR\x13\x08\x84Nu\xae\xe0\x07\x8bcl3\x8e\x18H\xe6\xabvDRBz\xb5]\x0c\xa2\xc8A\xd8\xc0E\x06}{\xa4"LVBK3}V\xa4f\xbc\xa7\x03\xa6\xa8\xbc|\x85\xc6\x18\x0c\x89\x02\x16i\xff\xa6g\xbe\xe8o\xd6\xb4.z\xa5\x1f\xd3\x95\x02\x8b\xb9\xac\x11\x0c\xa2Jxc\xb4\t]?\x00<&G\x10\x1du\r\xad"}\xa0 \x8cM\xae\x92I\x92I\xcb\x03\x8cZ\xb1R\x953\xe6\x805"\x12-Q\x9dM\x9d\xc8t\xfc\xb5\x957\x0e#S\xeb\xb92\x87\x96\xa6\x9b\x8d\xd3\xcdCc\x12\xbf3\x91\x11\xbf\x83\xd4\x8fn\xeb\xae\x13I\xb4\xedH\x82L\xd4@:\x02\xd6\xc0\xd0\xcd|]{\xa4\xdb^3\x0c\x8e\xec\x82:&\x0bI\xc2\xe3\x9f0\xd0\xab\xe0\xfdS\x1c\x02\xa4\xdb\tP\xc7\x94\r\xfe\xc5\xe8\x1042L\xcf\x98\x82?\x86\xb6\xd7\xb0\'c\x1a\xb3\xa1\xa9\xadS\xe3\x08y\xe1\x88\x04\x06\x02\x98\x81\x11P\x04\xf0^\x0e\nTx1\xfe\x06\xe3\x1e\xb9\x94F\x93\xd8\x08\n\xe3\xc4\xac\xc0\xd8E~2\xc4\xd1U\xcb\x01\xf7\xc0[p2\x93\xac\x9fo\xb3w\xbf\xa7\xd7\r\x83\x85C\xd6\xf0d\x0f\\\xfbC\xb4\xd0\xe0\xce&%\xf1j\x05R\x1e\xfe\xa6\x0c\xdf=\x9c\xf0t\x92\xf42\x96\xe9,^\x92\xc5\xa8Q\xab\x994\x01}\x0f\xaf\x1eb$j\xdf\xe9d\x19\xa3B\x8d\x02\rp\x9b\xde\x01\x90\xa6\xf0\xca!\x86(\xe0,p\x00\x88\xa7\x9f\xac\t\x92W\x12\xa1hw\xa5\xb2+\x03\xe9\xbd9\xe8\xd1\xeb\x861\xd4\xb3 F"E 20\xeb\x8b\xf7_\x94\xf7H\x00\xa2\xca&)\xe2h_\xbd\xc1\xa0e\x8d\xe4\x14\xf85\xa7\x1c\xcf\x80\x12\xf1Vs\xf2\x0c6\x0b\xba\xd9\xa1\xf3\xa9\xf4\x8e~\xbe\x1a\x14\xb8\x7f\'\xafq\xf4\x1b\xae\xeb\x98\xc2\xe0\xc04\xbc\xdf\x89\xe1\xbc\xbf\xcb+\x84}\xfe\x8a\x9b\xca+\xd4ae\xf2\xe6\xd5\x97?\xc4\xd2\xfc\r\xa1R\'\xa1\xfb\x08\x1cB\x1b\x01\xc3\r\xb3\xd6\x073\xa0F\tu\xf5\t-\x91\x81<E\x94\xec\xea@\x1d\xb6\x83\xa3\x04\xa0\x0cm\x0f \xfd\xc2DW\x11i\xa10cx\x04\xbd\xfa\xbd\x1cM\xee~E\xd2\xfamji\xef\xf5(\xb0\xe6\xf8/e\x82\xdf\xf0\x07\xda\x8f&\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-06 11:11:34,391 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 03:11:34 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=14whi6px065a96o8ii2czyayj;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-06 11:11:34,391 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:11:34,391 APIUnittestTestCase.py[line: 94] INFO: 正在提取目标返回结果值
2018-02-06 11:11:34,391 APIUnittestTestCase.py[line: 97] INFO: 正在执行断言
2018-02-06 11:11:34,392 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:11:34,392 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:11:34,392 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,392 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"fail#请求验证码识别"}]
2018-02-06 11:11:34,393 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-06 11:11:34,393 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-06 11:11:34,393 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-06 11:11:34,394 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-06 11:11:34,401 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:11:34,401 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-06 11:11:34,402 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:11:34,402 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:11:34,402 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 11:11:34,403 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 11:11:34,403 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:11:34,403 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,403 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-06 11:11:34,404 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 11:11:34,404 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:11:34,404 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,404 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-06 11:11:34,405 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:11:34,405 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:11:34,405 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,405 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-06 11:11:34,405 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:11:34,406 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:11:34,406 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,406 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 11:11:34,407 APIUnittestTestCase.py[line: 39] INFO: 正在发起POST请求...
2018-02-06 11:11:34,407 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-06 11:11:34,407 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-06 11:11:34,408 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 11:11:34,452 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-06 11:11:34,456 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-06 11:11:34,456 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 03:11:34 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 05-Feb-2018 03:11:34 GMT')]
2018-02-06 11:11:34,457 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:11:34,457 APIUnittestTestCase.py[line: 81] INFO: 正在提取目标返回结果值
2018-02-06 11:11:34,457 APIUnittestTestCase.py[line: 84] INFO: 正在执行断言
2018-02-06 11:11:34,458 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:11:34,458 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:11:34,458 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,458 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"fail#灯塔用户登录失败"}]
2018-02-06 11:11:34,459 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-06 11:11:34,459 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-06 11:11:34,460 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-06 11:11:34,460 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-06 11:11:34,468 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:11:34,469 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-06 11:11:34,469 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:11:34,469 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:11:34,470 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-06 11:11:34,470 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 11:11:34,470 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-06 11:11:34,471 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,471 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-06 11:11:34,471 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'userName'
2018-02-06 11:11:34,471 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:11:34,472 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:11:34,472 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,472 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-06 11:11:34,472 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:11:34,472 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-06 11:11:34,473 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,473 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-06 11:11:34,473 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-06 11:11:34,474 APIUnittestTestCase.py[line: 168] INFO: 正在发起POST请求...
2018-02-06 11:11:34,474 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-06 11:11:34,474 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-06 11:11:34,475 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-06 11:11:34,488 APIUnittestTestCase.py[line: 181] INFO: 正在对服务器返回body进行解码
2018-02-06 11:11:34,488 APIUnittestTestCase.py[line: 204] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"/></soap:Body></soap:Envelope>
2018-02-06 11:11:34,489 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-06 11:11:34,489 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:11:34,489 APIUnittestTestCase.py[line: 210] INFO: 正在提取目标返回结果值
2018-02-06 11:11:34,490 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-06 11:11:34,490 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-06 11:11:34,491 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-06 11:11:34,491 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 11:11:34,492 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-06 11:11:34,492 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-06 11:11:34,492 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 11:11:34,492 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[]
2018-02-06 11:11:34,493 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[]
2018-02-06 11:11:34,493 APIUnittestTestCase.py[line: 213] INFO: 正在执行断言
2018-02-06 11:11:34,493 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:11:34,493 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-06 11:11:34,494 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_url_arg': '0.5185151614698615', 'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:11:34,494 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-06 11:11:34,494 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'groupCode_1'
2018-02-06 11:11:34,494 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-06 11:11:34,495 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-06 11:11:34,495 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 11:11:34,495 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-06 11:11:34,495 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-06 11:11:34,496 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 11:11:34,496 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[]
2018-02-06 11:11:34,496 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-06 11:11:34,496 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-06 11:11:34,497 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-06 11:11:34,501 test_case.py[line: 88] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-06 11:11:34,502 debug.py[line: 156] INFO: 正在释放资源
2018-02-06 11:11:34,502 debug.py[line: 157] INFO: 正在断开与项目关联的数据库连接
2018-02-06 11:11:34,502 debug.py[line: 163] INFO: 正在清理与项目关联的全局变量
2018-02-06 11:14:15,317 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-06 11:14:15,318 main.py[line: 19] INFO: 当前运行模式为：debug
2018-02-06 11:14:15,318 main.py[line: 22] INFO: 当前运行计划编号为：1
2018-02-06 11:14:15,319 main.py[line: 58] INFO: 调试模式
2018-02-06 11:14:18,825 debug.py[line: 61] INFO: 正在查询项目[ID：1]相关信息
2018-02-06 11:14:18,825 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：('1',)
2018-02-06 11:14:18,825 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-06 11:14:18,831 debug.py[line: 67] INFO: 正在查询与项目关联的数据库信息
2018-02-06 11:14:18,832 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：('1', '测试环境')
2018-02-06 11:14:18,854 debug.py[line: 81] INFO: 正在查询与项目关联的全局变量
2018-02-06 11:14:18,854 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：('1', '测试环境')
2018-02-06 11:14:18,860 debug.py[line: 106] INFO: 正在查询输入ID标识的用例(套件)相关信息
2018-02-06 11:14:18,861 mydb.py[line: 96] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2  data：
2018-02-06 11:14:18,861 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2
2018-02-06 11:14:18,867 mydb.py[line: 122] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND parent_id = 2 ORDER BY `id` ASC  data：
2018-02-06 11:14:18,873 debug.py[line: 118] INFO: 输入ID标识的是测试套件
2018-02-06 11:14:18,873 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-06 11:14:18,873 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-06 11:14:18,874 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-06 11:14:18,881 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:14:18,882 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-06 11:14:18,882 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:14:18,882 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:14:18,882 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 11:14:18,883 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 11:14:18,883 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-06 11:14:18,883 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:18,883 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-06 11:14:18,884 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-06 11:14:18,884 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:14:18,884 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-06 11:14:18,885 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:18,885 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-06 11:14:18,885 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-06 11:14:18,885 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:14:18,886 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:14:18,886 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:18,886 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 11:14:18,887 APIUnittestTestCase.py[line: 43] INFO: 正在发起GET请求...
2018-02-06 11:14:18,887 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-06 11:14:18,887 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 11:14:18,982 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-06 11:14:18,983 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11\xc0IDATx\xda\xdd[\x87{\x14\xf5\x16\xe5\xdf\x10\x14\xac "\xd6\xf7\xd4\xa7HU\xa4\x8a\x82\xd2\x8bt\x02\x82\x08JQ\x8a \x88t\x11\x01\xe9]\x91bz\x02IH\xef\xbd\xf7Bz!\xbdg\x93\xe5\xbe{\xee\xee\x0c\xbbK6\xd9\xcdn\x9e\xfa\xe6\xfb\xe6#$\xbb3\xbf\xf9\xddr\xce=\xf7N\x1f\xb2\xf1hni\'\x97\xbb\x85\xf4\xf8pGzl\x98#\xf5\x1d\xa6\xfb\xb7\xbb\xf3\x89\x11N4z\xc1]\x8aN\xae4\xba^UM+\x1d:\x9fF\xb3\xd7\x87\xd0\xf2m\x11\xb4a_\x1c\xed9\x99Bgnd\x93\xabo\x11E&TRAI#\xb5\xb4u\xd0\xff\xc3QZ\xd1L\xbe\xe1\xa5\xb4\xf7t\nM[\x1dH/Oq\xa7g\xdew\xa1>\xf6\xb8\xf0\x9e\x93\xc9\xd4\xf7]Gzr\xb43M^\xeeO[\x8f$\xd0\xda\xdd\xd14\x89\x7f\x1e\xf8\x81k\xa7\x86y\xe6=\x17Z\xf4M8\xa5\xe5\xd4\x1a]/\xa7\xa0\x9e\xbe?\x9eDs\xbf\x0e%\x87\xef"i\xd3\x81x\xda\x7f&\x95.\xfc\x99C\x1e\x01\xc5\x14\x9bRE%|\xcf6\x8d\xf6\x1fi\x08\r\xaf\xbb\xac\xb2\x99"\x13+\xe9\xdc\xcdl\xfa|g\x14}\xb0\xc8\x97\x86Nv\x17g\xed\xc7\x0e\xfe\xf2\x14\x0f\xdb\r\x03\x8f\x9f\xf3U\x88l6\xac}\xe2\xf7L\xca+j\xe0\rn\xa0\xb8\xd4*\xf2\x8f(\xa3\xf3\xb7r\xc4\xf3\'\xafxh\xa8\xb7g\xdc\xa1S\xd7\xb3\xa8\xb2\xba\xd5\xe8z\x01\x91e\xb4a\x7f\x1c\xcd\xdf\x18&\x8b\xder8\x81\x0es\x04]q\xc9#\xef\x90RJ\xcc\xa8\xa1\x8a\xea\x16\xd2\xb4\xff\xf3\x0c\xd3\xd2\xdaA!\xb1\x15\xb4\x8f\x1dm\xea\xe7\x81\xe2\x9c\xc6Y\xc4\x91>X\xecK\xbb\x7fM\xb6\xdd0\xe7oe\xd3k\x1f{\xc8\x85\xc7|v\x97\xd2s\xebH\xab}@\x0f\x1e<<\xeb\x1a4\x94[\xd8@\x11\x9c\x86\x9c|\ni\xff\xe9T\xfa\xf9R:e\xde\xab\xa3v\x93\r^\xb6%\x82\x06\x8ds\xa3W\xd8k\xc6/\xf5\xa3\x95\x1c5\x87/\xa4\xd1u\x8f|\n\x88(\x97\xeb\xd7\xf2\xf5p\x8f\x7f\xc2q\x9f\x1d/"\xe1\xbe\xa4\xe2\xe5[#h\x0c\xa7\xef!\x13u\xd1\x81={q\x92;\xa7\xb0 \xdau"\x99n\x07\x95Pf^\x1d\x7f\xa7\xc56\xc3\xd47j\xe83\xf6l\xdc\xa0\xffH\'\xfa\xfc\xfb\xa8N?\x07\xe3tth\xa9\x8dq\xa1\xa1\xb1\x8d\xf2\x8b\x1b\xa9\xa8\xac\xc9\xe83\xd8\xe8\xe2\xf2&\x15\xab\x14\x1cza\x82\x1b\x8d\x98\xe3M\x0b6\x85\xd1\xee\x13It\xf3v>\xa5d\xd7\xca\xbd\xffn\x87\xee9\x1fPm}\x1be\xb0\x03y\xf8\x17\xd3\x8e_\x12%:^\xfb\xd8\x93\x9fMg\x0c\xa4\xfcwfz\xd1\xd2-\xe1\x9c\xcer$=WT\xb5H\x9aS\x0e\x9b\x0c\xe3\xe8]H\xaf~\xe4!y\x11\xde\xed\xeaWd\xd1\xf7:\xb4\xba\x070<`\x94\x1f8\x84\xcd\x91\x87\xa7\xc7\xb8\xd0\x1b\x9f\xde\xa6\xe9_\x04\xd17\x87\xe2\xe8\xa2c\x0e\x85\xc7\xdf\xa7r\xce\xd70\xfa\xdf\xe1h\xd3tP\x14c\xc7\xf1\xab\x99\x82\x9f\x88zCG\xc39r\xae\x8f\xa4g\xe0e\xe9\xfdf#c\x18\x1e=6\x0c<\xfc\xe3U\x81\xb2\x91\xcf\x8fw\xa3\x03\xe7Re\x93zz`\xa3\xdf\xf8\xe4\xb6,\xfe\xb5\x8f<i\xf4\xfc\xbb\xf4\xd2d\x0f5\xe4q\xc2\xe3\x80QoM\xbfC\x1f\xad\x0c\xa0\xd5\xbb\xa2)$\xa6\x82sw\xfb_j\x90\xec\xfcz:\xcb@\xbe\x8cY\xe4\xb8%~\xec\xac\x9e\xf4\xd4\x18gY\xf3\xa0q\xae4n\xb1\x1fmf\x12\xe3\xc6\x8e\x9b\x92U\xcb\xfb\xd4"x\x83\x083w\xf4\xc80\x00^\xb0\x8a~\xef\xeaR\xd8T\xa6y\xa9\xd9\xb5=~0\x90\x85\xd1\x0b|\xe4z\xff\xe2\x90\xdf{*\x85~s\xcd\x13\xc20r\x9e\x0f=1\xd2\xa9S\xba=a\x99\x1f\xc53\xc10=\xda9\x82\x80k\xad\x9c:;\xf4xgk\x8a2w\xd45\xb4\xd1\xc9kY\xf4\xf2\x87\xeeF\xeb\x1b0\xcaI\x9e\t\x8c\xd57\xacT\x98\xa45\x91\xdd#\xc3 \xc7/\xd8\x14\xaacb\x1fz\xd0E\xa7\\\xce\xf9m*\xe8[s`\xe3\xbe=\x1c/\x06\x06\x9e\x1c8\x9b"\x18T\xc6a\x1e\x93\\E\xbf\xbb\xe51e\x8e\xa3\x89l\x04\xfc\x1d\xc6\xc3}_\xe1\x14\xfa\xd3\xc54\xf9\x9c\xe9\x11\x1e_\xc1$\xa3\x80\xc2\x19t\x8bJ\x9b\xa8\x89k-SB\xa2\xc5\x89\x94\xaa\xd5\xfd\xfb\xc8\xdf\xb5Z106\x13?\x9b;\xe0\x90\xab\x19[\x9f{\xdf\xc5 \xed:\xd3\xecu!\xe4\x17QJ\rM\x1a\xbe\x87\xf5\xa9\xb6\x8f\xf5yTK?\x9eJV\x17\x01 C\xbd\x81:#5\xbb\xc6*\xaf\xc0g\xa3\x19\xf8\xb0\xd9\xa8\x83&-\xf7\xa3\x1a\x06Nl\x0c6\x05\x00\x8f\x8dET\xdc\xba\x93\xcf\xd8\x12O\x93V\x04\x08\x90\xce\xdf\x18\xfaH\r\xa4PR\xd4R\x9f\xae\t\xa2\x15\xdb#i\xdb\x91D:z%\x83\r|\x8fn\x07\x16Sh\\\x85P\xee\xac{\xf5\xe2\x00\x05|}\xfc\x9b\xc5\xe9(\x89\x7f\x1f\xcat\xd6\xc3\xbf\x88\xae\xba\xe6\x92?S\xf7B.f\xcd9\x1b\x8c[\xcc$f\xe6\x97\xc1\xb2~\xa5\xc0\xfe\x0f\x97\x02\x88z["\xd5j\xc3\\s\xbfGo\xcf\xbc\xa3\x1a\x06\x0bz\x9a\xf9\xf8\x9b\x0c\xcc\x0e\xbc\x11\xee\xccD\xaajZ,\xa2\xb3\xe0\xf4\xf0,\\g\xd8lo\xba\xc9\x9bo.u\x96T4\t\xd8_v\xce\xa5\xa3\x973\xc8\'\xa4\x84j\xebZ\x1f\xf9\xec\xc1siBF\x00\xba\xcf\x8du\x15\xbc\x1a\xc1\x80\x8b\xb4\x07c\xcd\xe7\xc2\x15l\xc8a{\x14\xad\xe2:i\xe5\x8e(Z\xbe-\x92\x16n\x0e\x97\xb5LY\x19H\xef1\xed\x9f\xbd.\x98NrM\x06\xfc\xe8\xca\xe3\x03\xa3\xcai\xc6\xda \xd50\xcf\x8du\x11\xfcs\xf4*\xa0\xe6\x96\x8e\xff\x9da\x0e2\xc8\xaf\xe6\x07\x9a\xb0\xd4_\x1e\\\x05f.\x8e\x00\xde\x1b\xf7\xc5Rbz\x15\xd7\'\x1d\xddz\xcc,~x\x1d\xd5v\xa4\xef\x8e&tiLDP\x03GPqy3\x15\x966RS\xb3\xa6\xd3\xeb?5\xda\xd9"I\xa8\xbb\x13\xc6\xb9\xca8W\xc2l\xb1\xab\xe7\xf0\r+\xa3!\x93\xdc\xd4\xef!\xa5\xcd\xf82H\xa2\xd9\x92\x881\xf7\x99>\xd6\x00 6\xa3\x887%\x8f\x8bEx\xca/\x97\xd3i\x1e{\xe0K\x93\xdd\xd5\xdc?b\xae\xb7\x14\x91M\xcd]3\xa5\xe3\xbfep\xa49K\xf5\xbbrG$\xc5\xa7U[\xcc\x06uy\xff\xd1\x07B$),\x0e\x1e\xfc8\xff\x0c&\xa7x\xb3\xb9\x13\xe9\x07Q6`\x943\rdg{\xf3\xd3;\xb4nO\x0c\xf9sA[]\xd7fv\xf3\xea\x19\xf8\xa1^(l\x12\xe7\xeb\x9cfA\xfbQP+\xfbf\xf8}\xa4g\xd49 \r\xc8\x04\xed\xedZ\xdb\r\xa3\x03K\xdd\xc5jx\xc1\x99\x9c\xa7/1\xcd\x9d\xe2\xe0OO\x8erV\x1f\xf2\xc4o\x99\xc2\xe9\xcd=\x10\xd2\xd2\x00\xfd\xe7\x91\x16\x01\xf2\xf6\xa8\xe4QE+\x1b4x\x82\xab\x10\x86\t\xcb\xfc9\xe7{\xf1\xdf<$\xe5\x8a\x1e\xa5g\x93p\n8\xd5\xb0\xd9^\xf4\xe1\n\x7fZ\xcc\xb5\x07p\xec\x17\xc6\xa4\x98\xe4J\xd9@\x00\x7fW\x9e\xbf\xe9`\x1c\xf57\xa0\xf4`b(\x82\x152Q\xc1\xd4\x18\xb8v\x83\x7f\x87\xdf\xbb\xf9\x15\xd2%\xe7\x1crf\xe7E\x95o.\xf2m\x96d\xf2\x19\x1c\xb7\x1d\x89\xa7!\x13\xddT\xde~\xe0l*U\xd7\xb6\x9ae1\x9f\xef\x8c\x14/\x1e\xca\x1by\x82#\x07\xac\xc9\xd6\x03\x82 \xee\xfd\x98\xbe\xaeZ\xb6-\x9c\x9c\xef\x16P$3\xb3\xa0\xe8\nfHe\xe4\x13\xfa\xf0D\n\n\x8c,\xa7\xb0\xb8\xfbRy\xa7d\xd5\x88\x80\x8aB\x17N\x07\xaa\xdd\x1d\xcb\x84\x16\x08c*\xd9b\xf0xWZ\xc1\xb5\x0c\xd4\xe2\xac{u\xb2\xf9\x1b\x99QN_\x1b,\xb4\x1fl\xed\xf5\xa9\x9e\x8cc\x01\x82\xc7 L9\x8ca\x9a\xf6\x0e\xfb\x1b\x06\xd1\x03\x1d\x08\xbc]\xc7\xdf\x1d\xe9"\xdf\xd0\\\xc4l\xff9Q\xf0\x08\x9f}c\x9a\'e\xe4\xd5\xf2&\xb4w\xeb\x99\xdd\x1dP\x1e\x94\x94\x05V\x845\x99\xaa\x0b\xf6>\xa0\xfd\xc1\x18J\xb4\xbc4\x99\x1dbk8me&\x88\xa2\x12Q\t\x12\xd2o\xb8q\x1d\x86\xe2\x13E2\xe4\x9a\xa2\xb2\xc6N\x9f\xddf\xc3\x80\xa7#\xb7\x0f\xd2/p\xe4<or\xf1-\xec\xd4\x0bnx\xe6\xab\xf9\xb8\xef0\x9d\xbc\r\x0fs\xf4.\x90\x05\xb6\xf7P1F\x9ff\xd8,/];\x81\xc1\x17\xf4\xf5.\x17u\xb6\x16\x96]\x1d\x8d\x8c\xa1\xa7\xafg\xd3K\xfa\xc2\xb2\x9f\x19\x1c{\x96\xd7\x83H~z\xccCR\x02<\x03[\xdcyLg\x98^Ie0\xcc\x17\xbb\xa2U\xd0E\xce\xae\xe24\xd6\xd9\xcdP\xef\x0c\xea\xa4?\x83MU\xda\x05=\xd1\xbd\xb6\xfc\x94 \xf5\x94\xa4\xd2\x0f\\h\xe9\xb7\xe1\x16S\xf6\x1eKR\xfc|+\x98f?9\xca8\x1a\xa0\x8f!U-\xdc\x14F\xb3\xd7\x07\xd3\x12^\x0b\x9co\x02G\xb4\xa1n\x86\xf5^r\xca\x91laW\xadLaH!\xb1\xe5\xb2\x10\xa5\xe2\xfdbw4\xdd\xafjy\x848\xc0X\x01\x9c\xd3\xcf\xdc\xc8\xa2y\x1bBE1P\xd4Vx\xd5t\xae\x05P#UV\xb7X\xe5\xe9\xc0\x86E\x9b\xc3$\x8d\xe1|\xf5c\x0fi\xb4A\x02\xe9\xcd\x03b\xe5L\xa6\xc5\xf0\xfe\xe7\xc7\xb91\xd1\xf0\xa7\xaf~\x8c\xa1\xb37\xb3$Z\xb1\xaeJv\x8e\xe4\xcc\x1a\xa9i6\x1e\x88\x15|1\xa4\xe3\xc8\x14v\x95d\x0c\x8f\xfd\x0c\xf4\x83\'\xb8\xe9\xc5G\x0f\xfa\x93\x17\xd1hB\x95\xb1\xd1\x00SPh0\x9d\x00\x06b(\xc4`d\x8f\xebY\x12\x18\xd5\xe2o\xc2\x98\x86\x97\x89(i\xa9q\xfc\x18h\x91\xaf\xd5\xe8c\x86u\xeeV\xb6\xdc\xa77\x0f8\x11\x04K\x14\xabW]\xf2(9\xabV\xee)xi \xed\x00k\xd1\x02\xf8\xee\xe7\x04\x91\x94\x94u.a\xd2\x80\xd6\x87\xcduLg\xd1\x02F\x01\x19^\xa7\xfc:\xd2G\xab\x02\xa4s\xd9\xdd\xf7\xc0\xd8Bb\xca\xb9\xa8L\xa4\xb7f<\xac\x01P5\xc3`HC\x96\x18\x06\xf3\x06\xb7\xbc\xf2U2\xd1\x7f\x14\x84M_\x11@M\xb5/{\xe2M#\xa7\xefT\x8e\x080L\xd4#\x90\xa9:K\xc1"-1nB=X\xcf\xd1\xf4\xd4h\'U_\xbc\xe2\x9ck\x7fu\x19GM]+\x1d\xbb\x9aA\xff\x9av[\x05?H\x18\xf0\x90\xee526\x0e\x7f\x1f\xba\x14f\x03\x06\x8fwSA\x11\xd2\xce\x99?\xb2\xa4q\xd4\x1dF\xe0\xc10\xb8\xf1\xbc\x9e&\x83\xedLX\xea+\xd2\x0e\x8c\x8b\x08E\xf4aM\xd88SCi\xf5}!k\xc5W\x14\x86\x96b!\xae\x8d\xd46i\x85\x9f\xea\x80k\x18\x93\xef\x157\xf4\x8ea\xd0.\xfd\xd0!@\x05}\xe0\x04\x063\xac\xf5L\xc8+\x0b\x19#\x0c+v\xcc\x10\xa0\xfehi\xe9>\xa5!\xc2\x14\xc6\xf3\xb8\x9e\xed\xe0w\x00\xd6\xeb\x1e\xf78zr\xe9\xfc\x9f\xd9t\x86\x19\xd4E\xc7lr\xe6\xbc\x1e\x97VEy\x85\xf5L\xd5\xeb\xb8B\xaf\xe754\xc8t\x0e\x04P\x8d\xa6\xc3\xeel\xee\xe8\xe5t\xa3\xfe~TRe\xb7\x86\xedc\xd4\x16\xd5Z\xa6\xed@j\xdf}"Y\x18\x90\x80>\xdf\x14\xcc\xc3Z\xba\xab\x93y\xda\xc93\xb0\x98\xc6s\xbeV(\'z\xe2\x18\xe7\xc1\x98RWQ\x83\xde8j\x81~\xc3\xbb\x96\\\xa0\xc5\xc1q\x06\xf2z\xc1\xa2\xfa\xca=\\i\xe2r?fO\xa1\xd2V@\xb1\x87\xc1\x11\x805\xd2\x93\xbd\xd2\x1fp\x04\xd8\xa9\xace\xec"_\x8b\xf6I5\x0c&O\x922\xaaE.\xe9\xaa\xff\x80\xbc\x0eO\x1c5\xdfG\xbd\x19z\xf2\x7f\xf0\xef\xb4Zm\x8f\x17\xbf\xf3X\x92\xaa\x1e`\xa3\xa1\xd0B~o4#Y\xc8\x9a\xab\x9a\x85\x81!\x95\xe1\x1c\xc2\x04b\xe8d\x0f!\x12H\x8f\x10YAKA0\xba\x9bw\xc3\xf8\x10D\xd5]|=\xa4\x1e\x9d\x96e\xfb\xec\x1a\xba\x96\xef\xe8k,d\x83\xfdg-k\x07\xa8\x86\xf1\t)\x150Fc*\xfb^\xbd\xda\\2T@\xc1\xac a\xccX\x1b,\x0f\xabT\xfa\x90X\xd02\xedi\xdd\x00\x0f\xf2\x0c(\xa2\xc9\x0e\xfe\xaa\xee\xf4\x02o\xec\x86}\xb1R\xdb\x98S\x05\xf0;\xc8"\x00\xd2S\xd7\xb2\xe8\x97+\xe9\x829{~M\xa2\xef\xb9x\xfb\xfex"\xd78\xf1\xe4\xb0=\x82\xd3\xae\xbf8\xd3pv"\xcc)\x00\x8fL\x05N\x18\x11\xa9p;3(\x90\x13[\x99]um\x1b}\xb57VM\xb5\xd3V\x05JDZ%\xfb#u\xfc\x9b\x81\x1c\xb8\x81\x9f\x83\xa2\xcb%\xffC]\x05\x80\xa2\x0e\x89\xe7\xdc\x8c\xe9\xc8\x81\x06r\xff[\x9f\xde\x91|n\xebC R\xb7\x1c\x8e\xa7g\xc7\xba\xa8\xde\x05\xa5\x16sfm\x1a\xf3X\x03`\x87b\x8bB\x17\xebl\xd6Sr\xa49\xac\x19\x0c\n\x0e\x03\xe3\x83\r\xa2\xbe\xf0\n)\xa1cW2D\xc6\x19\xca\x95\xbb\xc2\xea\x0c\xd3\xcdq&6 \x10\xb6\xb4\xa3}BK\xa5\xa9\'\xfa\x1dG\xf4e\x97\x1c\x11--6\x0c\x8a:\x8c\x07\x01\x80\xe15\xc3f\xdd\x91A\x87\xe3\xcc\xb2@=!y\\\xe0\xda\xe0\x93\xd5\x81\xea\xc6)Ll\xd9\xd6\x08JH\xab\xb6y\x00\x0f`\xf8\'\x033d\x1a\xc3MB\xd1\x96\xcc)\xd6\x9e\xba\x97Rg\x84r\xf4#:\x86\xa0e=\xdcXF\xf9\x92\xd9\xa2\x825=J\xcf\xe5M2M\xaaT\xfb(\x82\xcb\xef[N\x8e\xc40h\xab\xceY\x1f"\xa2\x9b2\x11\x88\x9c\x0b\t\x1b\x9d\xbf\x17\'zHj\x19` ?\xc0\xa3_\x99\xe2NN\xbc\x99\xb5\xf5\xadv\x01J\xcc\x12@\xc604\x0c&6\xcf\\\xcf\xea\x15y\x05Q\x14\x9fZM\xf36\x84\x881\x0c\xef\x0b%\xa2\xbbI\x96\xaep\x18\x85\xf7\x13\xc3\x1f\xf6h|\xc3\xcb\xd8\xb9:\xac3L]\xbdF6\x18i\n9\x18\xe0\x89\xbch\xae\xc1\x04/@\x9e\xde\xc59\xbc\x80\xf9\xb8%\xddJ\x8bj#NA\x9b\x0f\xc5\xabu\x89\x12\x95\x139\xe54\xb7hlV\xa0;\x17#5\xb4\xe7T\xb2Z\x8f)\xe7\x18vJk\xa93>\x0b\xa3`\xbe@Ia\xc0\xb2=\xbf&\xeb\x87U\xac\x9c\x92\x817B\xd7\t\x8a*\x93\xd1\xd5U\xdfEJ\x93\xe9\xf5\xa9\xb7\xa5\xb7\xa1\x08\x84h\x9b\xa2:\x1f\xbf\xc4\x97\xb6\xfe\x94@\x89\xe9\xd5\xb2\x10{n\x18\xe4\x14\xf4.L\x9d\x01\xd2Ko\xd4\x188\xae\xb8\xe4\xd2{\x0b}\x8d\x1cq\xd4<oy\xb6\xae\xeeg\xfa7\xa4c88\x9c[\xb9\x16j2d$k\xf7\xa8\x8fa\x85\x8a\x85`:\x10\x1b\x8e\xa9\x14\x0c7\xa3J]\xb2%\\^\x11\x98\xfbU0\xed\xe4\xba\xe1\x02\x17l\xc0\x15\x1d\xb0v~C4\x9c\xa4\x03h\xa5\xc7\xb9\xfb\x17\xd2\x8c/\x82\xd4\xb4\xaa\x9c\xc0\x02\x80\xb7\xbd\xa3\x06\xd7r\xf6)\xa0q\x8b}U\x12\x80\x8c\xf0\x19\xd77\x955\xc6\xcd>\xd4y%\xe5\xcdR\xb5c\xaf\xa0N\xa0\xb7\x8fn\xe7\x1f\x1e\xf94\xefk\xe3\x94\x08--4\xb6\xbcG\x0ee\xb6\xf2\x07\xc3A}\x11\x93RE\xc11\x15\x94\x91[+T/-\xa7F6\x1d\x85aWR\x06&$1.\x84a\x86\xf6\x0e\xcb6\x13\x9b\x0e\xfa\xbb\x86\xe9\xf7\xa0q\xae\x8f0\xa58^\x8b\xa5\xd7\xb2X^\xd1he\x06m\xf8\x1c/\xd5\xcb1\xd0\x81\xcc\x81N\xa6\xe1\x81g\xc6\xbb@\xd0\xbd\xe6q$,\xda\x14.\x1dL\xe8\x85\x86\xa9\x100\xb0`c\xa80[\xa4\xe0\x9e\xac\xd7bI\x06\x1b\x02j\x8a\x13\xa0\xd9\xdd\xcd\xa0\x83}\xcbx\x81\xfc\x1a\xcc\x0b\x84Z\x80\x97\x8dL\xbf\xa7\xfc\x1f\xff\xc2\x190\xef\xb5nO\xb4\xa4LC\xc3\x0c\x1a\xe7"5\n46{\x19\x06\xd7\xc1\xd4\r$\x13ht\xca\xbd\x90\x8a\xc0D5&\xba\x1f"\xf6\xe4\xb5L\xe9\x1f\xf5\x1f\xa1\xebN\x9a\xe20\xe6\x0b6\xee\x8f\x95\xd1,\x18\xb2\xa7k\xb5j\x18\xc3\x1a\x99\x02S"\x9b\x0f\xc6\t\x91x\x83k\x1d\xfc\x0c\xe9\xa5T^:z\xd8OWR\x13\x08\x84Nu\xae\xe0\x07\x8bcl3\x8e\x18H\xe6\xabvDRBz\xb5]\x0c\xa2\xc8A\xd8\xc0E\x06}{\xa4"LVBK3}V\xa4f\xbc\xa7\x03\xa6\xa8\xbc|\x85\xc6\x18\x0c\x89\x02\x16i\xff\xa6g\xbe\xe8o\xd6\xb4.z\xa5\x1f\xd3\x95\x02\x8b\xb9\xac\x11\x0c\xa2Jxc\xb4\t]?\x00<&G\x10\x1du\r\xad"}\xa0 \x8cM\xae\x92I\x92I\xcb\x03\x8cZ\xb1R\x953\xe6\x805"\x12-Q\x9dM\x9d\xc8t\xfc\xb5\x957\x0e#S\xeb\xb92\x87\x96\xa6\x9b\x8d\xd3\xcdCc\x12\xbf3\x91\x11\xbf\x83\xd4\x8fn\xeb\xae\x13I\xb4\xedH\x82L\xd4@:\x02\xd6\xc0\xd0\xcd|]{\xa4\xdb^3\x0c\x8e\xec\x82:&\x0bI\xc2\xe3\x9f0\xd0\xab\xe0\xfdS\x1c\x02\xa4\xdb\tP\xc7\x94\r\xfe\xc5\xe8\x1042L\xcf\x98\x82?\x86\xb6\xd7\xb0\'c\x1a\xb3\xa1\xa9\xadS\xe3\x08y\xe1\x88\x04\x06\x02\x98\x81\x11P\x04\xf0^\x0e\nTx1\xfe\x06\xe3\x1e\xb9\x94F\x93\xd8\x08\n\xe3\xc4\xac\xc0\xd8E~2\xc4\xd1U\xcb\x01\xf7\xc0[p2\x93\xac\x9fo\xb3w\xbf\xa7\xd7\r\x83\x85C\xd6\xf0d\x0f\\\xfbC\xb4\xd0\xe0\xce&%\xf1j\x05R\x1e\xfe\xa6\x0c\xdf=\x9c\xf0t\x92\xf42\x96\xe9,^\x92\xc5\xa8Q\xab\x994\x01}\x0f\xaf\x1eb$j\xdf\xe9d\x19\xa3B\x8d\x02\rp\x9b\xde\x01\x90\xa6\xf0\xca!\x86(\xe0,p\x00\x88\xa7\x9f\xac\t\x92W\x12\xa1hw\xa5\xb2+\x03\xe9\xbd9\xe8\xd1\xeb\x861\xd4\xb3 F"E 20\xeb\x8b\xf7_\x94\xf7H\x00\xa2\xca&)\xe2h_\xbd\xc1\xa0e\x8d\xe4\x14\xf85\xa7\x1c\xcf\x80\x12\xf1Vs\xf2\x0c6\x0b\xba\xd9\xa1\xf3\xa9\xf4\x8e~\xbe\x1a\x14\xb8\x7f\'\xafq\xf4\x1b\xae\xeb\x98\xc2\xe0\xc04\xbc\xdf\x89\xe1\xbc\xbf\xcb+\x84}\xfe\x8a\x9b\xca+\xd4ae\xf2\xe6\xd5\x97?\xc4\xd2\xfc\r\xa1R\'\xa1\xfb\x08\x1cB\x1b\x01\xc3\r\xb3\xd6\x073\xa0F\tu\xf5\t-\x91\x81<E\x94\xec\xea@\x1d\xb6\x83\xa3\x04\xa0\x0cm\x0f \xfd\xc2DW\x11i\xa10cx\x04\xbd\xfa\xbd\x1cM\xee~E\xd2\xfamji\xef\xf5(\xb0\xe6\xf8/e\x82\xdf\xf0\x07\xda\x8f&\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-06 11:14:18,984 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 03:14:18 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=toorraxhslu2153cfudlbqhtz;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-06 11:14:18,985 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:14:18,985 APIUnittestTestCase.py[line: 94] INFO: 正在提取目标返回结果值
2018-02-06 11:14:18,985 APIUnittestTestCase.py[line: 97] INFO: 正在执行断言
2018-02-06 11:14:18,986 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:14:18,986 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:14:18,986 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:18,986 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"fail#请求验证码识别"}]
2018-02-06 11:14:18,987 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-06 11:14:18,987 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-06 11:14:18,987 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-06 11:14:18,987 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-06 11:14:18,994 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:14:18,995 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-06 11:14:18,995 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:14:18,995 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:14:18,995 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 11:14:18,996 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 11:14:18,996 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:14:18,996 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:18,996 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-06 11:14:18,997 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 11:14:18,997 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:14:18,997 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:18,997 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-06 11:14:18,997 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:14:18,997 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:14:18,998 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:18,998 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-06 11:14:18,998 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:14:18,998 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:14:18,999 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:18,999 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 11:14:18,999 APIUnittestTestCase.py[line: 39] INFO: 正在发起POST请求...
2018-02-06 11:14:19,000 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-06 11:14:19,000 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-06 11:14:19,000 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Cache-Control', 'no-cache'), ('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 11:14:19,035 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-06 11:14:19,039 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-06 11:14:19,039 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 03:14:19 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 05-Feb-2018 03:14:19 GMT')]
2018-02-06 11:14:19,039 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:14:19,040 APIUnittestTestCase.py[line: 81] INFO: 正在提取目标返回结果值
2018-02-06 11:14:19,040 APIUnittestTestCase.py[line: 84] INFO: 正在执行断言
2018-02-06 11:14:19,040 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:14:19,040 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:14:19,041 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:19,041 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"fail#灯塔用户登录失败"}]
2018-02-06 11:14:19,041 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-06 11:14:19,042 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-06 11:14:19,042 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-06 11:14:19,042 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-06 11:14:19,051 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 11:14:19,051 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-06 11:14:19,052 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 11:14:19,052 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 11:14:19,052 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-06 11:14:19,052 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 11:14:19,053 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-06 11:14:19,053 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:19,053 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-06 11:14:19,053 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'userName'
2018-02-06 11:14:19,054 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 11:14:19,054 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 11:14:19,054 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:19,054 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-06 11:14:19,055 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 11:14:19,055 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-06 11:14:19,056 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:19,056 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-06 11:14:19,057 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-06 11:14:19,057 APIUnittestTestCase.py[line: 168] INFO: 正在发起POST请求...
2018-02-06 11:14:19,058 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-06 11:14:19,058 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>$userName$</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-06 11:14:19,058 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-06 11:14:19,079 APIUnittestTestCase.py[line: 181] INFO: 正在对服务器返回body进行解码
2018-02-06 11:14:19,080 APIUnittestTestCase.py[line: 204] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"/></soap:Body></soap:Envelope>
2018-02-06 11:14:19,081 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-06 11:14:19,081 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 11:14:19,081 APIUnittestTestCase.py[line: 210] INFO: 正在提取目标返回结果值
2018-02-06 11:14:19,082 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-06 11:14:19,082 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-06 11:14:19,082 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-06 11:14:19,083 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 11:14:19,084 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-06 11:14:19,084 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-06 11:14:19,085 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 11:14:19,085 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[]
2018-02-06 11:14:19,086 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[]
2018-02-06 11:14:19,086 APIUnittestTestCase.py[line: 213] INFO: 正在执行断言
2018-02-06 11:14:19,086 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 11:14:19,086 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-06 11:14:19,087 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 11:14:19,087 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-06 11:14:19,087 test_case_step.py[line: 64] ERROR: 替换动态变量出错：'groupCode_1'
2018-02-06 11:14:19,087 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-06 11:14:19,088 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-06 11:14:19,088 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 11:14:19,088 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"/}'}
2018-02-06 11:14:19,088 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-06 11:14:19,089 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 11:14:19,089 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[]
2018-02-06 11:14:19,089 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-06 11:14:19,089 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-06 11:14:19,090 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-06 11:14:19,094 test_case.py[line: 88] ERROR: 步骤[第 3 步, 步骤ID: 3]运行失败
2018-02-06 11:14:19,094 debug.py[line: 156] INFO: 正在释放资源
2018-02-06 11:14:19,095 debug.py[line: 157] INFO: 正在断开与项目关联的数据库连接
2018-02-06 11:14:19,096 debug.py[line: 163] INFO: 正在清理与项目关联的全局变量
2018-02-06 19:28:33,253 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-06 19:28:33,274 main.py[line: 19] INFO: 当前运行模式为：debug
2018-02-06 19:28:33,275 main.py[line: 22] INFO: 当前运行计划编号为：1
2018-02-06 19:28:33,275 main.py[line: 58] INFO: 调试模式
2018-02-06 19:28:36,229 debug.py[line: 61] INFO: 正在查询项目[ID：1]相关信息
2018-02-06 19:28:36,229 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：('1',)
2018-02-06 19:28:36,229 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-06 19:28:36,235 debug.py[line: 67] INFO: 正在查询与项目关联的数据库信息
2018-02-06 19:28:36,235 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：('1', '测试环境')
2018-02-06 19:28:36,260 debug.py[line: 81] INFO: 正在查询与项目关联的全局变量
2018-02-06 19:28:36,261 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：('1', '测试环境')
2018-02-06 19:28:36,266 debug.py[line: 106] INFO: 正在查询输入ID标识的用例(套件)相关信息
2018-02-06 19:28:36,266 mydb.py[line: 96] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2  data：
2018-02-06 19:28:36,267 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2
2018-02-06 19:28:36,272 mydb.py[line: 122] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND parent_id = 2 ORDER BY `id` ASC  data：
2018-02-06 19:28:36,278 debug.py[line: 118] INFO: 输入ID标识的是测试套件
2018-02-06 19:28:36,278 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-06 19:28:36,279 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-06 19:28:36,279 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-06 19:28:36,287 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 19:28:36,287 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-06 19:28:36,287 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 19:28:36,288 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 19:28:36,288 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-06 19:28:36,288 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 19:28:36,289 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:28:36,289 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:28:36,289 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-06 19:28:36,290 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:28:36,290 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:28:36,290 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:28:36,290 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-06 19:28:36,291 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:28:36,291 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:28:36,291 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:28:36,291 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 19:28:36,291 APIUnittestTestCase.py[line: 104] INFO: 正在发起POST请求...
2018-02-06 19:28:36,292 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-06 19:28:36,292 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-06 19:28:36,292 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 19:28:36,359 test_case.py[line: 88] ERROR: 步骤[第 1 步, 步骤ID: 10]运行失败
2018-02-06 19:28:36,359 debug.py[line: 156] INFO: 正在释放资源
2018-02-06 19:28:36,359 debug.py[line: 157] INFO: 正在断开与项目关联的数据库连接
2018-02-06 19:28:36,359 debug.py[line: 163] INFO: 正在清理与项目关联的全局变量
2018-02-06 19:29:19,511 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-06 19:29:19,512 main.py[line: 19] INFO: 当前运行模式为：debug
2018-02-06 19:29:19,512 main.py[line: 22] INFO: 当前运行计划编号为：1
2018-02-06 19:29:19,512 main.py[line: 58] INFO: 调试模式
2018-02-06 19:29:22,082 debug.py[line: 61] INFO: 正在查询项目[ID：1]相关信息
2018-02-06 19:29:22,098 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：('1',)
2018-02-06 19:29:22,099 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-06 19:29:22,105 debug.py[line: 67] INFO: 正在查询与项目关联的数据库信息
2018-02-06 19:29:22,106 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：('1', '测试环境')
2018-02-06 19:29:22,130 debug.py[line: 81] INFO: 正在查询与项目关联的全局变量
2018-02-06 19:29:22,131 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：('1', '测试环境')
2018-02-06 19:29:22,137 debug.py[line: 106] INFO: 正在查询输入ID标识的用例(套件)相关信息
2018-02-06 19:29:22,138 mydb.py[line: 96] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2  data：
2018-02-06 19:29:22,138 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2
2018-02-06 19:29:22,143 mydb.py[line: 122] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND parent_id = 2 ORDER BY `order` ASC  data：
2018-02-06 19:29:22,150 debug.py[line: 118] INFO: 输入ID标识的是测试套件
2018-02-06 19:29:22,150 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-06 19:29:22,151 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-06 19:29:22,151 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-06 19:29:22,159 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 19:29:22,159 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-06 19:29:22,160 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 19:29:22,160 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 19:29:22,160 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 19:29:22,160 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 19:29:22,161 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-06 19:29:22,161 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,161 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-06 19:29:22,161 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-06 19:29:22,161 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:29:22,162 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-06 19:29:22,162 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,162 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-06 19:29:22,162 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-06 19:29:22,163 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:29:22,163 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,163 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,164 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 19:29:22,164 APIUnittestTestCase.py[line: 43] INFO: 正在发起GET请求...
2018-02-06 19:29:22,164 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-06 19:29:22,164 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 19:29:22,245 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-06 19:29:22,245 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11\xc0IDATx\xda\xdd[\x87{\x14\xf5\x16\xe5\xdf\x10\x14\xac "\xd6\xf7\xd4\xa7HU\xa4\x8a\x82\xd2\x8bt\x02\x82\x08JQ\x8a \x88t\x11\x01\xe9]\x91bz\x02IH\xef\xbd\xf7Bz!\xbdg\x93\xe5\xbe{\xee\xee\x0c\xbbK6\xd9\xcdn\x9e\xfa\xe6\xfb\xe6#$\xbb3\xbf\xf9\xddr\xce=\xf7N\x1f\xb2\xf1hni\'\x97\xbb\x85\xf4\xf8pGzl\x98#\xf5\x1d\xa6\xfb\xb7\xbb\xf3\x89\x11N4z\xc1]\x8aN\xae4\xba^UM+\x1d:\x9fF\xb3\xd7\x87\xd0\xf2m\x11\xb4a_\x1c\xed9\x99Bgnd\x93\xabo\x11E&TRAI#\xb5\xb4u\xd0\xff\xc3QZ\xd1L\xbe\xe1\xa5\xb4\xf7t\nM[\x1dH/Oq\xa7g\xdew\xa1>\xf6\xb8\xf0\x9e\x93\xc9\xd4\xf7]Gzr\xb43M^\xeeO[\x8f$\xd0\xda\xdd\xd14\x89\x7f\x1e\xf8\x81k\xa7\x86y\xe6=\x17Z\xf4M8\xa5\xe5\xd4\x1a]/\xa7\xa0\x9e\xbe?\x9eDs\xbf\x0e%\x87\xef"i\xd3\x81x\xda\x7f&\x95.\xfc\x99C\x1e\x01\xc5\x14\x9bRE%|\xcf6\x8d\xf6\x1fi\x08\r\xaf\xbb\xac\xb2\x99"\x13+\xe9\xdc\xcdl\xfa|g\x14}\xb0\xc8\x97\x86Nv\x17g\xed\xc7\x0e\xfe\xf2\x14\x0f\xdb\r\x03\x8f\x9f\xf3U\x88l6\xac}\xe2\xf7L\xca+j\xe0\rn\xa0\xb8\xd4*\xf2\x8f(\xa3\xf3\xb7r\xc4\xf3\'\xafxh\xa8\xb7g\xdc\xa1S\xd7\xb3\xa8\xb2\xba\xd5\xe8z\x01\x91e\xb4a\x7f\x1c\xcd\xdf\x18&\x8b\xder8\x81\x0es\x04]q\xc9#\xef\x90RJ\xcc\xa8\xa1\x8a\xea\x16\xd2\xb4\xff\xf3\x0c\xd3\xd2\xdaA!\xb1\x15\xb4\x8f\x1dm\xea\xe7\x81\xe2\x9c\xc6Y\xc4\x91>X\xecK\xbb\x7fM\xb6\xdd0\xe7oe\xd3k\x1f{\xc8\x85\xc7|v\x97\xd2s\xebH\xab}@\x0f\x1e<<\xeb\x1a4\x94[\xd8@\x11\x9c\x86\x9c|\ni\xff\xe9T\xfa\xf9R:e\xde\xab\xa3v\x93\r^\xb6%\x82\x06\x8ds\xa3W\xd8k\xc6/\xf5\xa3\x95\x1c5\x87/\xa4\xd1u\x8f|\n\x88(\x97\xeb\xd7\xf2\xf5p\x8f\x7f\xc2q\x9f\x1d/"\xe1\xbe\xa4\xe2\xe5[#h\x0c\xa7\xef!\x13u\xd1\x81={q\x92;\xa7\xb0 \xdau"\x99n\x07\x95Pf^\x1d\x7f\xa7\xc56\xc3\xd47j\xe83\xf6l\xdc\xa0\xffH\'\xfa\xfc\xfb\xa8N?\x07\xe3tth\xa9\x8dq\xa1\xa1\xb1\x8d\xf2\x8b\x1b\xa9\xa8\xac\xc9\xe83\xd8\xe8\xe2\xf2&\x15\xab\x14\x1cza\x82\x1b\x8d\x98\xe3M\x0b6\x85\xd1\xee\x13It\xf3v>\xa5d\xd7\xca\xbd\xffn\x87\xee9\x1fPm}\x1be\xb0\x03y\xf8\x17\xd3\x8e_\x12%:^\xfb\xd8\x93\x9fMg\x0c\xa4\xfcwfz\xd1\xd2-\xe1\x9c\xcer$=WT\xb5H\x9aS\x0e\x9b\x0c\xe3\xe8]H\xaf~\xe4!y\x11\xde\xed\xeaWd\xd1\xf7:\xb4\xba\x070<`\x94\x1f8\x84\xcd\x91\x87\xa7\xc7\xb8\xd0\x1b\x9f\xde\xa6\xe9_\x04\xd17\x87\xe2\xe8\xa2c\x0e\x85\xc7\xdf\xa7r\xce\xd70\xfa\xdf\xe1h\xd3tP\x14c\xc7\xf1\xab\x99\x82\x9f\x88zCG\xc39r\xae\x8f\xa4g\xe0e\xe9\xfdf#c\x18\x1e=6\x0c<\xfc\xe3U\x81\xb2\x91\xcf\x8fw\xa3\x03\xe7Re\x93zz`\xa3\xdf\xf8\xe4\xb6,\xfe\xb5\x8f<i\xf4\xfc\xbb\xf4\xd2d\x0f5\xe4q\xc2\xe3\x80QoM\xbfC\x1f\xad\x0c\xa0\xd5\xbb\xa2)$\xa6\x82sw\xfb_j\x90\xec\xfcz:\xcb@\xbe\x8cY\xe4\xb8%~\xec\xac\x9e\xf4\xd4\x18gY\xf3\xa0q\xae4n\xb1\x1fmf\x12\xe3\xc6\x8e\x9b\x92U\xcb\xfb\xd4"x\x83\x083w\xf4\xc80\x00^\xb0\x8a~\xef\xeaR\xd8T\xa6y\xa9\xd9\xb5=~0\x90\x85\xd1\x0b|\xe4z\xff\xe2\x90\xdf{*\x85~s\xcd\x13\xc20r\x9e\x0f=1\xd2\xa9S\xba=a\x99\x1f\xc53\xc10=\xda9\x82\x80k\xad\x9c:;\xf4xgk\x8a2w\xd45\xb4\xd1\xc9kY\xf4\xf2\x87\xeeF\xeb\x1b0\xcaI\x9e\t\x8c\xd57\xacT\x98\xa45\x91\xdd#\xc3 \xc7/\xd8\x14\xaacb\x1fz\xd0E\xa7\\\xce\xf9m*\xe8[s`\xe3\xbe=\x1c/\x06\x06\x9e\x1c8\x9b"\x18T\xc6a\x1e\x93\\E\xbf\xbb\xe51e\x8e\xa3\x89l\x04\xfc\x1d\xc6\xc3}_\xe1\x14\xfa\xd3\xc54\xf9\x9c\xe9\x11\x1e_\xc1$\xa3\x80\xc2\x19t\x8bJ\x9b\xa8\x89k-SB\xa2\xc5\x89\x94\xaa\xd5\xfd\xfb\xc8\xdf\xb5Z106\x13?\x9b;\xe0\x90\xab\x19[\x9f{\xdf\xc5 \xed:\xd3\xecu!\xe4\x17QJ\rM\x1a\xbe\x87\xf5\xa9\xb6\x8f\xf5yTK?\x9eJV\x17\x01 C\xbd\x81:#5\xbb\xc6*\xaf\xc0g\xa3\x19\xf8\xb0\xd9\xa8\x83&-\xf7\xa3\x1a\x06Nl\x0c6\x05\x00\x8f\x8dET\xdc\xba\x93\xcf\xd8\x12O\x93V\x04\x08\x90\xce\xdf\x18\xfaH\r\xa4PR\xd4R\x9f\xae\t\xa2\x15\xdb#i\xdb\x91D:z%\x83\r|\x8fn\x07\x16Sh\\\x85P\xee\xac{\xf5\xe2\x00\x05|}\xfc\x9b\xc5\xe9(\x89\x7f\x1f\xcat\xd6\xc3\xbf\x88\xae\xba\xe6\x92?S\xf7B.f\xcd9\x1b\x8c[\xcc$f\xe6\x97\xc1\xb2~\xa5\xc0\xfe\x0f\x97\x02\x88z["\xd5j\xc3\\s\xbfGo\xcf\xbc\xa3\x1a\x06\x0bz\x9a\xf9\xf8\x9b\x0c\xcc\x0e\xbc\x11\xee\xccD\xaajZ,\xa2\xb3\xe0\xf4\xf0,\\g\xd8lo\xba\xc9\x9bo.u\x96T4\t\xd8_v\xce\xa5\xa3\x973\xc8\'\xa4\x84j\xebZ\x1f\xf9\xec\xc1siBF\x00\xba\xcf\x8du\x15\xbc\x1a\xc1\x80\x8b\xb4\x07c\xcd\xe7\xc2\x15l\xc8a{\x14\xad\xe2:i\xe5\x8e(Z\xbe-\x92\x16n\x0e\x97\xb5LY\x19H\xef1\xed\x9f\xbd.\x98NrM\x06\xfc\xe8\xca\xe3\x03\xa3\xcai\xc6\xda \xd50\xcf\x8du\x11\xfcs\xf4*\xa0\xe6\x96\x8e\xff\x9da\x0e2\xc8\xaf\xe6\x07\x9a\xb0\xd4_\x1e\\\x05f.\x8e\x00\xde\x1b\xf7\xc5Rbz\x15\xd7\'\x1d\xddz\xcc,~x\x1d\xd5v\xa4\xef\x8e&tiLDP\x03GPqy3\x15\x966RS\xb3\xa6\xd3\xeb?5\xda\xd9"I\xa8\xbb\x13\xc6\xb9\xca8W\xc2l\xb1\xab\xe7\xf0\r+\xa3!\x93\xdc\xd4\xef!\xa5\xcd\xf82H\xa2\xd9\x92\x881\xf7\x99>\xd6\x00 6\xa3\x887%\x8f\x8bEx\xca/\x97\xd3i\x1e{\xe0K\x93\xdd\xd5\xdc?b\xae\xb7\x14\x91M\xcd]3\xa5\xe3\xbfep\xa49K\xf5\xbbrG$\xc5\xa7U[\xcc\x06uy\xff\xd1\x07B$),\x0e\x1e\xfc8\xff\x0c&\xa7x\xb3\xb9\x13\xe9\x07Q6`\x943\rdg{\xf3\xd3;\xb4nO\x0c\xf9sA[]\xd7fv\xf3\xea\x19\xf8\xa1^(l\x12\xe7\xeb\x9cfA\xfbQP+\xfbf\xf8}\xa4g\xd49 \r\xc8\x04\xed\xedZ\xdb\r\xa3\x03K\xdd\xc5jx\xc1\x99\x9c\xa7/1\xcd\x9d\xe2\xe0OO\x8erV\x1f\xf2\xc4o\x99\xc2\xe9\xcd=\x10\xd2\xd2\x00\xfd\xe7\x91\x16\x01\xf2\xf6\xa8\xe4QE+\x1b4x\x82\xab\x10\x86\t\xcb\xfc9\xe7{\xf1\xdf<$\xe5\x8a\x1e\xa5g\x93p\n8\xd5\xb0\xd9^\xf4\xe1\n\x7fZ\xcc\xb5\x07p\xec\x17\xc6\xa4\x98\xe4J\xd9@\x00\x7fW\x9e\xbf\xe9`\x1c\xf57\xa0\xf4`b(\x82\x152Q\xc1\xd4\x18\xb8v\x83\x7f\x87\xdf\xbb\xf9\x15\xd2%\xe7\x1crf\xe7E\x95o.\xf2m\x96d\xf2\x19\x1c\xb7\x1d\x89\xa7!\x13\xddT\xde~\xe0l*U\xd7\xb6\x9ae1\x9f\xef\x8c\x14/\x1e\xca\x1by\x82#\x07\xac\xc9\xd6\x03\x82 \xee\xfd\x98\xbe\xaeZ\xb6-\x9c\x9c\xef\x16P$3\xb3\xa0\xe8\nfHe\xe4\x13\xfa\xf0D\n\n\x8c,\xa7\xb0\xb8\xfbRy\xa7d\xd5\x88\x80\x8aB\x17N\x07\xaa\xdd\x1d\xcb\x84\x16\x08c*\xd9b\xf0xWZ\xc1\xb5\x0c\xd4\xe2\xac{u\xb2\xf9\x1b\x99QN_\x1b,\xb4\x1fl\xed\xf5\xa9\x9e\x8cc\x01\x82\xc7 L9\x8ca\x9a\xf6\x0e\xfb\x1b\x06\xd1\x03\x1d\x08\xbc]\xc7\xdf\x1d\xe9"\xdf\xd0\\\xc4l\xff9Q\xf0\x08\x9f}c\x9a\'e\xe4\xd5\xf2&\xb4w\xeb\x99\xdd\x1dP\x1e\x94\x94\x05V\x845\x99\xaa\x0b\xf6>\xa0\xfd\xc1\x18J\xb4\xbc4\x99\x1dbk8me&\x88\xa2\x12Q\t\x12\xd2o\xb8q\x1d\x86\xe2\x13E2\xe4\x9a\xa2\xb2\xc6N\x9f\xddf\xc3\x80\xa7#\xb7\x0f\xd2/p\xe4<or\xf1-\xec\xd4\x0bnx\xe6\xab\xf9\xb8\xef0\x9d\xbc\r\x0fs\xf4.\x90\x05\xb6\xf7P1F\x9ff\xd8,/];\x81\xc1\x17\xf4\xf5.\x17u\xb6\x16\x96]\x1d\x8d\x8c\xa1\xa7\xafg\xd3K\xfa\xc2\xb2\x9f\x19\x1c{\x96\xd7\x83H~z\xccCR\x02<\x03[\xdcyLg\x98^Ie0\xcc\x17\xbb\xa2U\xd0E\xce\xae\xe24\xd6\xd9\xcdP\xef\x0c\xea\xa4?\x83MU\xda\x05=\xd1\xbd\xb6\xfc\x94 \xf5\x94\xa4\xd2\x0f\\h\xe9\xb7\xe1\x16S\xf6\x1eKR\xfc|+\x98f?9\xca8\x1a\xa0\x8f!U-\xdc\x14F\xb3\xd7\x07\xd3\x12^\x0b\x9co\x02G\xb4\xa1n\x86\xf5^r\xca\x91laW\xadLaH!\xb1\xe5\xb2\x10\xa5\xe2\xfdbw4\xdd\xafjy\x848\xc0X\x01\x9c\xd3\xcf\xdc\xc8\xa2y\x1bBE1P\xd4Vx\xd5t\xae\x05P#UV\xb7X\xe5\xe9\xc0\x86E\x9b\xc3$\x8d\xe1|\xf5c\x0fi\xb4A\x02\xe9\xcd\x03b\xe5L\xa6\xc5\xf0\xfe\xe7\xc7\xb91\xd1\xf0\xa7\xaf~\x8c\xa1\xb37\xb3$Z\xb1\xaeJv\x8e\xe4\xcc\x1a\xa9i6\x1e\x88\x15|1\xa4\xe3\xc8\x14v\x95d\x0c\x8f\xfd\x0c\xf4\x83\'\xb8\xe9\xc5G\x0f\xfa\x93\x17\xd1hB\x95\xb1\xd1\x00SPh0\x9d\x00\x06b(\xc4`d\x8f\xebY\x12\x18\xd5\xe2o\xc2\x98\x86\x97\x89(i\xa9q\xfc\x18h\x91\xaf\xd5\xe8c\x86u\xeeV\xb6\xdc\xa77\x0f8\x11\x04K\x14\xabW]\xf2(9\xabV\xee)xi \xed\x00k\xd1\x02\xf8\xee\xe7\x04\x91\x94\x94u.a\xd2\x80\xd6\x87\xcduLg\xd1\x02F\x01\x19^\xa7\xfc:\xd2G\xab\x02\xa4s\xd9\xdd\xf7\xc0\xd8Bb\xca\xb9\xa8L\xa4\xb7f<\xac\x01P5\xc3`HC\x96\x18\x06\xf3\x06\xb7\xbc\xf2U2\xd1\x7f\x14\x84M_\x11@M\xb5/{\xe2M#\xa7\xefT\x8e\x080L\xd4#\x90\xa9:K\xc1"-1nB=X\xcf\xd1\xf4\xd4h\'U_\xbc\xe2\x9ck\x7fu\x19GM]+\x1d\xbb\x9aA\xff\x9av[\x05?H\x18\xf0\x90\xee526\x0e\x7f\x1f\xba\x14f\x03\x06\x8fwSA\x11\xd2\xce\x99?\xb2\xa4q\xd4\x1dF\xe0\xc10\xb8\xf1\xbc\x9e&\x83\xedLX\xea+\xd2\x0e\x8c\x8b\x08E\xf4aM\xd88SCi\xf5}!k\xc5W\x14\x86\x96b!\xae\x8d\xd46i\x85\x9f\xea\x80k\x18\x93\xef\x157\xf4\x8ea\xd0.\xfd\xd0!@\x05}\xe0\x04\x063\xac\xf5L\xc8+\x0b\x19#\x0c+v\xcc\x10\xa0\xfehi\xe9>\xa5!\xc2\x14\xc6\xf3\xb8\x9e\xed\xe0w\x00\xd6\xeb\x1e\xf78zr\xe9\xfc\x9f\xd9t\x86\x19\xd4E\xc7lr\xe6\xbc\x1e\x97VEy\x85\xf5L\xd5\xeb\xb8B\xaf\xe754\xc8t\x0e\x04P\x8d\xa6\xc3\xeel\xee\xe8\xe5t\xa3\xfe~TRe\xb7\x86\xedc\xd4\x16\xd5Z\xa6\xed@j\xdf}"Y\x18\x90\x80>\xdf\x14\xcc\xc3Z\xba\xab\x93y\xda\xc93\xb0\x98\xc6s\xbeV(\'z\xe2\x18\xe7\xc1\x98RWQ\x83\xde8j\x81~\xc3\xbb\x96\\\xa0\xc5\xc1q\x06\xf2z\xc1\xa2\xfa\xca=\\i\xe2r?fO\xa1\xd2V@\xb1\x87\xc1\x11\x805\xd2\x93\xbd\xd2\x1fp\x04\xd8\xa9\xace\xec"_\x8b\xf6I5\x0c&O\x922\xaaE.\xe9\xaa\xff\x80\xbc\x0eO\x1c5\xdfG\xbd\x19z\xf2\x7f\xf0\xef\xb4Zm\x8f\x17\xbf\xf3X\x92\xaa\x1e`\xa3\xa1\xd0B~o4#Y\xc8\x9a\xab\x9a\x85\x81!\x95\xe1\x1c\xc2\x04b\xe8d\x0f!\x12H\x8f\x10YAKA0\xba\x9bw\xc3\xf8\x10D\xd5]|=\xa4\x1e\x9d\x96e\xfb\xec\x1a\xba\x96\xef\xe8k,d\x83\xfdg-k\x07\xa8\x86\xf1\t)\x150Fc*\xfb^\xbd\xda\\2T@\xc1\xac a\xccX\x1b,\x0f\xabT\xfa\x90X\xd02\xedi\xdd\x00\x0f\xf2\x0c(\xa2\xc9\x0e\xfe\xaa\xee\xf4\x02o\xec\x86}\xb1R\xdb\x98S\x05\xf0;\xc8"\x00\xd2S\xd7\xb2\xe8\x97+\xe9\x829{~M\xa2\xef\xb9x\xfb\xfex"\xd78\xf1\xe4\xb0=\x82\xd3\xae\xbf8\xd3pv"\xcc)\x00\x8fL\x05N\x18\x11\xa9p;3(\x90\x13[\x99]um\x1b}\xb57VM\xb5\xd3V\x05JDZ%\xfb#u\xfc\x9b\x81\x1c\xb8\x81\x9f\x83\xa2\xcb%\xffC]\x05\x80\xa2\x0e\x89\xe7\xdc\x8c\xe9\xc8\x81\x06r\xff[\x9f\xde\x91|n\xebC R\xb7\x1c\x8e\xa7g\xc7\xba\xa8\xde\x05\xa5\x16sfm\x1a\xf3X\x03`\x87b\x8bB\x17\xebl\xd6Sr\xa49\xac\x19\x0c\n\x0e\x03\xe3\x83\r\xa2\xbe\xf0\n)\xa1cW2D\xc6\x19\xca\x95\xbb\xc2\xea\x0c\xd3\xcdq&6 \x10\xb6\xb4\xa3}BK\xa5\xa9\'\xfa\x1dG\xf4e\x97\x1c\x11--6\x0c\x8a:\x8c\x07\x01\x80\xe15\xc3f\xdd\x91A\x87\xe3\xcc\xb2@=!y\\\xe0\xda\xe0\x93\xd5\x81\xea\xc6)Ll\xd9\xd6\x08JH\xab\xb6y\x00\x0f`\xf8\'\x033d\x1a\xc3MB\xd1\x96\xcc)\xd6\x9e\xba\x97Rg\x84r\xf4#:\x86\xa0e=\xdcXF\xf9\x92\xd9\xa2\x825=J\xcf\xe5M2M\xaaT\xfb(\x82\xcb\xef[N\x8e\xc40h\xab\xceY\x1f"\xa2\x9b2\x11\x88\x9c\x0b\t\x1b\x9d\xbf\x17\'zHj\x19` ?\xc0\xa3_\x99\xe2NN\xbc\x99\xb5\xf5\xadv\x01J\xcc\x12@\xc604\x0c&6\xcf\\\xcf\xea\x15y\x05Q\x14\x9fZM\xf36\x84\x881\x0c\xef\x0b%\xa2\xbbI\x96\xaep\x18\x85\xf7\x13\xc3\x1f\xf6h|\xc3\xcb\xd8\xb9:\xac3L]\xbdF6\x18i\n9\x18\xe0\x89\xbch\xae\xc1\x04/@\x9e\xde\xc59\xbc\x80\xf9\xb8%\xddJ\x8bj#NA\x9b\x0f\xc5\xabu\x89\x12\x95\x139\xe54\xb7hlV\xa0;\x17#5\xb4\xe7T\xb2Z\x8f)\xe7\x18vJk\xa93>\x0b\xa3`\xbe@Ia\xc0\xb2=\xbf&\xeb\x87U\xac\x9c\x92\x817B\xd7\t\x8a*\x93\xd1\xd5U\xdfEJ\x93\xe9\xf5\xa9\xb7\xa5\xb7\xa1\x08\x84h\x9b\xa2:\x1f\xbf\xc4\x97\xb6\xfe\x94@\x89\xe9\xd5\xb2\x10{n\x18\xe4\x14\xf4.L\x9d\x01\xd2Ko\xd4\x188\xae\xb8\xe4\xd2{\x0b}\x8d\x1cq\xd4<oy\xb6\xae\xeeg\xfa7\xa4c88\x9c[\xb9\x16j2d$k\xf7\xa8\x8fa\x85\x8a\x85`:\x10\x1b\x8e\xa9\x14\x0c7\xa3J]\xb2%\\^\x11\x98\xfbU0\xed\xe4\xba\xe1\x02\x17l\xc0\x15\x1d\xb0v~C4\x9c\xa4\x03h\xa5\xc7\xb9\xfb\x17\xd2\x8c/\x82\xd4\xb4\xaa\x9c\xc0\x02\x80\xb7\xbd\xa3\x06\xd7r\xf6)\xa0q\x8b}U\x12\x80\x8c\xf0\x19\xd77\x955\xc6\xcd>\xd4y%\xe5\xcdR\xb5c\xaf\xa0N\xa0\xb7\x8fn\xe7\x1f\x1e\xf94\xefk\xe3\x94\x08--4\xb6\xbcG\x0ee\xb6\xf2\x07\xc3A}\x11\x93RE\xc11\x15\x94\x91[+T/-\xa7F6\x1d\x85aWR\x06&$1.\x84a\x86\xf6\x0e\xcb6\x13\x9b\x0e\xfa\xbb\x86\xe9\xf7\xa0q\xae\x8f0\xa58^\x8b\xa5\xd7\xb2X^\xd1he\x06m\xf8\x1c/\xd5\xcb1\xd0\x81\xcc\x81N\xa6\xe1\x81g\xc6\xbb@\xd0\xbd\xe6q$,\xda\x14.\x1dL\xe8\x85\x86\xa9\x100\xb0`c\xa80[\xa4\xe0\x9e\xac\xd7bI\x06\x1b\x02j\x8a\x13\xa0\xd9\xdd\xcd\xa0\x83}\xcbx\x81\xfc\x1a\xcc\x0b\x84Z\x80\x97\x8dL\xbf\xa7\xfc\x1f\xff\xc2\x190\xef\xb5nO\xb4\xa4LC\xc3\x0c\x1a\xe7"5\n46{\x19\x06\xd7\xc1\xd4\r$\x13ht\xca\xbd\x90\x8a\xc0D5&\xba\x1f"\xf6\xe4\xb5L\xe9\x1f\xf5\x1f\xa1\xebN\x9a\xe20\xe6\x0b6\xee\x8f\x95\xd1,\x18\xb2\xa7k\xb5j\x18\xc3\x1a\x99\x02S"\x9b\x0f\xc6\t\x91x\x83k\x1d\xfc\x0c\xe9\xa5T^:z\xd8OWR\x13\x08\x84Nu\xae\xe0\x07\x8bcl3\x8e\x18H\xe6\xabvDRBz\xb5]\x0c\xa2\xc8A\xd8\xc0E\x06}{\xa4"LVBK3}V\xa4f\xbc\xa7\x03\xa6\xa8\xbc|\x85\xc6\x18\x0c\x89\x02\x16i\xff\xa6g\xbe\xe8o\xd6\xb4.z\xa5\x1f\xd3\x95\x02\x8b\xb9\xac\x11\x0c\xa2Jxc\xb4\t]?\x00<&G\x10\x1du\r\xad"}\xa0 \x8cM\xae\x92I\x92I\xcb\x03\x8cZ\xb1R\x953\xe6\x805"\x12-Q\x9dM\x9d\xc8t\xfc\xb5\x957\x0e#S\xeb\xb92\x87\x96\xa6\x9b\x8d\xd3\xcdCc\x12\xbf3\x91\x11\xbf\x83\xd4\x8fn\xeb\xae\x13I\xb4\xedH\x82L\xd4@:\x02\xd6\xc0\xd0\xcd|]{\xa4\xdb^3\x0c\x8e\xec\x82:&\x0bI\xc2\xe3\x9f0\xd0\xab\xe0\xfdS\x1c\x02\xa4\xdb\tP\xc7\x94\r\xfe\xc5\xe8\x1042L\xcf\x98\x82?\x86\xb6\xd7\xb0\'c\x1a\xb3\xa1\xa9\xadS\xe3\x08y\xe1\x88\x04\x06\x02\x98\x81\x11P\x04\xf0^\x0e\nTx1\xfe\x06\xe3\x1e\xb9\x94F\x93\xd8\x08\n\xe3\xc4\xac\xc0\xd8E~2\xc4\xd1U\xcb\x01\xf7\xc0[p2\x93\xac\x9fo\xb3w\xbf\xa7\xd7\r\x83\x85C\xd6\xf0d\x0f\\\xfbC\xb4\xd0\xe0\xce&%\xf1j\x05R\x1e\xfe\xa6\x0c\xdf=\x9c\xf0t\x92\xf42\x96\xe9,^\x92\xc5\xa8Q\xab\x994\x01}\x0f\xaf\x1eb$j\xdf\xe9d\x19\xa3B\x8d\x02\rp\x9b\xde\x01\x90\xa6\xf0\xca!\x86(\xe0,p\x00\x88\xa7\x9f\xac\t\x92W\x12\xa1hw\xa5\xb2+\x03\xe9\xbd9\xe8\xd1\xeb\x861\xd4\xb3 F"E 20\xeb\x8b\xf7_\x94\xf7H\x00\xa2\xca&)\xe2h_\xbd\xc1\xa0e\x8d\xe4\x14\xf85\xa7\x1c\xcf\x80\x12\xf1Vs\xf2\x0c6\x0b\xba\xd9\xa1\xf3\xa9\xf4\x8e~\xbe\x1a\x14\xb8\x7f\'\xafq\xf4\x1b\xae\xeb\x98\xc2\xe0\xc04\xbc\xdf\x89\xe1\xbc\xbf\xcb+\x84}\xfe\x8a\x9b\xca+\xd4ae\xf2\xe6\xd5\x97?\xc4\xd2\xfc\r\xa1R\'\xa1\xfb\x08\x1cB\x1b\x01\xc3\r\xb3\xd6\x073\xa0F\tu\xf5\t-\x91\x81<E\x94\xec\xea@\x1d\xb6\x83\xa3\x04\xa0\x0cm\x0f \xfd\xc2DW\x11i\xa10cx\x04\xbd\xfa\xbd\x1cM\xee~E\xd2\xfamji\xef\xf5(\xb0\xe6\xf8/e\x82\xdf\xf0\x07\xda\x8f&\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-06 19:29:22,246 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 11:29:23 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=13sj33e8d0o2j1byki8p9beurr;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-06 19:29:22,247 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 19:29:22,247 APIUnittestTestCase.py[line: 94] INFO: 正在提取目标返回结果值
2018-02-06 19:29:22,247 APIUnittestTestCase.py[line: 97] INFO: 正在执行断言
2018-02-06 19:29:22,247 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 19:29:22,248 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,248 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,248 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"fail#请求验证码识别"}]
2018-02-06 19:29:22,248 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-06 19:29:22,249 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-06 19:29:22,249 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-06 19:29:22,249 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-06 19:29:22,256 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 19:29:22,257 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-06 19:29:22,257 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 19:29:22,257 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 19:29:22,257 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 19:29:22,258 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 19:29:22,258 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,258 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,258 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-06 19:29:22,259 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 19:29:22,259 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,259 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,259 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-06 19:29:22,259 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:29:22,260 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,260 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,260 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-06 19:29:22,260 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:29:22,260 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,261 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,261 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 19:29:22,261 APIUnittestTestCase.py[line: 39] INFO: 正在发起POST请求...
2018-02-06 19:29:22,261 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-06 19:29:22,262 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-06 19:29:22,262 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Cache-Control', 'no-cache'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 19:29:22,304 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-06 19:29:22,320 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-06 19:29:22,320 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 11:29:23 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 05-Feb-2018 11:29:23 GMT')]
2018-02-06 19:29:22,320 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 19:29:22,320 APIUnittestTestCase.py[line: 81] INFO: 正在提取目标返回结果值
2018-02-06 19:29:22,321 APIUnittestTestCase.py[line: 84] INFO: 正在执行断言
2018-02-06 19:29:22,321 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 19:29:22,321 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,321 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,321 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"fail#灯塔用户登录失败"}]
2018-02-06 19:29:22,322 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-06 19:29:22,322 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-06 19:29:22,322 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-06 19:29:22,322 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-06 19:29:22,334 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 19:29:22,334 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-06 19:29:22,334 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 19:29:22,334 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 19:29:22,335 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-06 19:29:22,335 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 19:29:22,335 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,335 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,335 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-06 19:29:22,336 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:29:22,336 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,336 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,336 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-06 19:29:22,337 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:29:22,337 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,337 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,337 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 19:29:22,338 APIUnittestTestCase.py[line: 104] INFO: 正在发起POST请求...
2018-02-06 19:29:22,338 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-06 19:29:22,338 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-06 19:29:22,338 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 19:29:22,372 APIUnittestTestCase.py[line: 117] INFO: 正在对服务器返回body进行解码
2018-02-06 19:29:22,373 APIUnittestTestCase.py[line: 140] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-06 19:29:22,373 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 11:29:23 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-06 19:29:22,373 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 19:29:22,374 APIUnittestTestCase.py[line: 145] INFO: 正在提取目标返回结果值
2018-02-06 19:29:22,374 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-06 19:29:22,374 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-06 19:29:22,375 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-06 19:29:22,375 APIUnittestTestCase.py[line: 148] INFO: 正在执行断言
2018-02-06 19:29:22,375 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 19:29:22,376 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,376 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,376 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAIL#不符合断言时返回的消息"}]
2018-02-06 19:29:22,376 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-06 19:29:22,377 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-06 19:29:22,377 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 19:29:22,378 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 19:29:22,378 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-06 19:29:22,378 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 19:29:22,378 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,379 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,379 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-06 19:29:22,379 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:29:22,380 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,380 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,380 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-06 19:29:22,381 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:29:22,381 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,381 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa'}
2018-02-06 19:29:22,381 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 19:29:22,382 APIUnittestTestCase.py[line: 104] INFO: 正在发起POST请求...
2018-02-06 19:29:22,382 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-06 19:29:22,382 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-06 19:29:22,382 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 19:29:22,405 APIUnittestTestCase.py[line: 117] INFO: 正在对服务器返回body进行解码
2018-02-06 19:29:22,405 APIUnittestTestCase.py[line: 140] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-06 19:29:22,406 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 11:29:23 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-06 19:29:22,406 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 19:29:22,406 APIUnittestTestCase.py[line: 145] INFO: 正在提取目标返回结果值
2018-02-06 19:29:22,407 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-06 19:29:22,407 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-06 19:29:22,407 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-06 19:29:22,407 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-06 19:29:22,408 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-06 19:29:22,408 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-06 19:29:22,408 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-06 19:29:22,408 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-06 19:29:22,408 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-06 19:29:22,409 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-06 19:29:22,409 APIUnittestTestCase.py[line: 148] INFO: 正在执行断言
2018-02-06 19:29:22,409 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 19:29:22,409 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-06 19:29:22,409 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,410 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-06 19:29:22,410 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"fail#用户名不为dataviewer"}]
2018-02-06 19:29:22,410 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-06 19:29:22,411 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-06 19:29:22,411 debug.py[line: 123] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-06 19:29:22,411 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-06 19:29:22,412 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-06 19:29:22,420 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 19:29:22,420 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-06 19:29:22,420 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 19:29:22,421 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 19:29:22,421 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-06 19:29:22,421 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 19:29:22,421 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-06 19:29:22,422 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,422 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-06 19:29:22,422 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-06 19:29:22,422 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:29:22,423 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,423 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,423 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-06 19:29:22,423 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:29:22,423 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-06 19:29:22,424 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,424 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-06 19:29:22,424 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-06 19:29:22,425 APIUnittestTestCase.py[line: 168] INFO: 正在发起POST请求...
2018-02-06 19:29:22,425 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-06 19:29:22,425 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-06 19:29:22,425 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-06 19:29:22,437 APIUnittestTestCase.py[line: 181] INFO: 正在对服务器返回body进行解码
2018-02-06 19:29:22,437 APIUnittestTestCase.py[line: 204] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-06 19:29:22,438 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-06 19:29:22,438 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 19:29:22,438 APIUnittestTestCase.py[line: 210] INFO: 正在提取目标返回结果值
2018-02-06 19:29:22,438 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-06 19:29:22,439 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-06 19:29:22,439 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-06 19:29:22,439 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 19:29:22,440 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}'}
2018-02-06 19:29:22,440 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-06 19:29:22,440 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 19:29:22,440 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[<Element 'return' at 0x0000000003FE5458>]
2018-02-06 19:29:22,440 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[<Element 'return' at 0x0000000003FE5458>]
2018-02-06 19:29:22,441 unittesttestcase.py[line: 403] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:groupCode_1-dataviewer
2018-02-06 19:29:22,441 APIUnittestTestCase.py[line: 213] INFO: 正在执行断言
2018-02-06 19:29:22,441 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 19:29:22,441 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-06 19:29:22,441 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,442 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-06 19:29:22,442 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "fail#获取的实体集团卡号错误" 
},
{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "fail#获取的实体集团卡号错误" 
}
]
2018-02-06 19:29:22,442 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-06 19:29:22,442 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-06 19:29:22,443 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 19:29:22,443 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}'}
2018-02-06 19:29:22,443 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-06 19:29:22,443 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 19:29:22,444 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x0000000003FE55E8>]
2018-02-06 19:29:22,444 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-06 19:29:22,444 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-06 19:29:22,444 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-06 19:29:22,444 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-06 19:29:22,445 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-06 19:29:22,445 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 19:29:22,445 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}', 'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}'}
2018-02-06 19:29:22,445 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-06 19:29:22,445 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 19:29:22,446 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x0000000003FE55E8>]
2018-02-06 19:29:22,446 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-06 19:29:22,446 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-06 19:29:22,446 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-06 19:29:22,447 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 4 步, 步骤ID: 4]======================
2018-02-06 19:29:22,447 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-06 19:29:22,447 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-06 19:29:22,447 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-06 19:29:22,447 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:29:22,448 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,448 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,448 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-06 19:29:22,448 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:29:22,448 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,449 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,449 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 19:29:22,449 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";  data：
2018-02-06 19:29:22,449 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-06 19:29:22,456 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-06 19:29:22,456 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-06 19:29:22,457 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-06 19:29:22,457 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-02-06 19:29:22,457 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 5 步, 步骤ID: 5]======================
2018-02-06 19:29:22,458 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-06 19:29:22,458 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-06 19:29:22,458 test_case_step.py[line: 97] INFO: 执行操作：update_record
2018-02-06 19:29:22,458 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:29:22,458 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,459 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,459 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-06 19:29:22,459 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:29:22,459 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,459 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,460 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 19:29:22,460 mydb.py[line: 81] INFO: update_query：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-06 19:29:22,466 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 6 步, 步骤ID: 7]======================
2018-02-06 19:29:22,467 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-06 19:29:22,467 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-06 19:29:22,467 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-06 19:29:22,468 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 19:29:22,468 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,468 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,468 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122
2018-02-06 19:29:22,468 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:29:22,469 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,469 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,469 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;
2018-02-06 19:29:22,469 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:29:22,469 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,470 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,470 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 19:29:22,470 mydb.py[line: 96] INFO: query：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;  data：(1033553122,)
2018-02-06 19:29:22,470 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone,user_name, atten FROM ddt_user WHERE qq= 1033553122 ORDER BY id desc;
2018-02-06 19:29:22,477 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414', 'dataviewer', '数据监视器'], flag：True
2018-02-06 19:29:22,477 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-06 19:29:22,477 unittesttestcase.py[line: 407] INFO: 提取数据库查询结果
2018-02-06 19:29:22,478 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-06 19:29:22,478 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 19:29:22,478 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-06 19:29:22,478 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,479 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-06 19:29:22,479 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-06 19:29:22,479 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"fail#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"fail#手机号不为18189001424"}
]
2018-02-06 19:29:22,479 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-06 19:29:22,479 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-06 19:29:22,480 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 7 步, 步骤ID: 6]======================
2018-02-06 19:29:22,480 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-06 19:29:22,480 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-06 19:29:22,481 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-06 19:29:22,481 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 19:29:22,481 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,481 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,481 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122, "dataviewer"
2018-02-06 19:29:22,482 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 19:29:22,482 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,482 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,482 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";
2018-02-06 19:29:22,482 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 19:29:22,483 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 19:29:22,483 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,483 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 19:29:22,483 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";  data：(1033553122, 'dataviewer')
2018-02-06 19:29:22,484 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE qq= 1033553122 AND user_name='dataviewer';
2018-02-06 19:29:22,490 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-06 19:29:22,490 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-06 19:29:22,491 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-06 19:29:22,491 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 19:29:22,492 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-06 19:29:22,492 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_host': '10.202.64.168', 'userName2_1': 'dataviewer', 'phone': '18159001414', 'global_url_arg': '0.5185151614698615', 'global_token': 'asfdacfdasfasfa', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'userName': 'dataviewer', 'groupCode_1': 'dataviewer', 'atten': '数据监视器'}
2018-02-06 19:29:22,492 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-06 19:29:22,492 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-06 19:29:22,492 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"fail#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"fail#手机号不为18189001424"}
]
2018-02-06 19:29:22,493 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-06 19:29:22,493 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-06 19:29:22,494 debug.py[line: 156] INFO: 正在释放资源
2018-02-06 19:29:22,494 debug.py[line: 157] INFO: 正在断开与项目关联的数据库连接
2018-02-06 19:29:22,495 debug.py[line: 163] INFO: 正在清理与项目关联的全局变量
2018-02-06 20:30:26,056 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-02-06 20:30:26,062 main.py[line: 19] INFO: 当前运行模式为：debug
2018-02-06 20:30:26,062 main.py[line: 22] INFO: 当前运行计划编号为：1
2018-02-06 20:30:26,062 main.py[line: 58] INFO: 调试模式
2018-02-06 20:30:28,584 debug.py[line: 61] INFO: 正在查询项目[ID：1]相关信息
2018-02-06 20:30:28,585 mydb.py[line: 96] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：('1',)
2018-02-06 20:30:28,585 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 1
2018-02-06 20:30:28,591 debug.py[line: 67] INFO: 正在查询与项目关联的数据库信息
2018-02-06 20:30:28,592 mydb.py[line: 122] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：('1', '测试环境')
2018-02-06 20:30:28,617 debug.py[line: 81] INFO: 正在查询与项目关联的全局变量
2018-02-06 20:30:28,618 mydb.py[line: 122] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：('1', '测试环境')
2018-02-06 20:30:28,624 debug.py[line: 106] INFO: 正在查询输入ID标识的用例(套件)相关信息
2018-02-06 20:30:28,625 mydb.py[line: 96] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2  data：
2018-02-06 20:30:28,625 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND id = 2
2018-02-06 20:30:28,631 mydb.py[line: 122] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 1 AND parent_id = 2  AND id NOT IN (SELECT parent_id FROM `website_api_case_tree` WHERE project_id=1)ORDER BY `order` ASC  data：
2018-02-06 20:30:28,651 debug.py[line: 120] INFO: 输入ID标识的是测试套件
2018-02-06 20:30:28,651 debug.py[line: 125] INFO: ======================开始运行测试用例[名称：ID5-请求验证码, ID:5]======================
2018-02-06 20:30:28,651 test_case.py[line: 32] INFO: 正在查询测试用例[ID：5, 名称：ID5-请求验证码]关联的测试步骤
2018-02-06 20:30:28,651 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(5,)
2018-02-06 20:30:28,660 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 20:30:28,661 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 1]======================
2018-02-06 20:30:28,661 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 20:30:28,661 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 20:30:28,662 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 20:30:28,662 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 20:30:28,662 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_token$']
2018-02-06 20:30:28,663 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,663 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_token$
2018-02-06 20:30:28,663 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Token":"asfdacfdasfasfa"}
2018-02-06 20:30:28,664 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 20:30:28,664 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_url_arg$']
2018-02-06 20:30:28,664 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,665 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_url_arg$
2018-02-06 20:30:28,665 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.5185151614698615
2018-02-06 20:30:28,665 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 20:30:28,666 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,666 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,666 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 20:30:28,667 APIUnittestTestCase.py[line: 43] INFO: 正在发起GET请求...
2018-02-06 20:30:28,667 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.88:8080/res/rpatchca.png?0.5185151614698615
2018-02-06 20:30:28,667 httpprotocol.py[line: 81] INFO: 请求头为：OrderedDict([('Token', 'asfdacfdasfasfa'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 20:30:28,758 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-02-06 20:30:28,758 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00(\x08\x06\x00\x00\x00\x0c\x8d\x8f~\x00\x00\x11\xc0IDATx\xda\xdd[\x87{\x14\xf5\x16\xe5\xdf\x10\x14\xac "\xd6\xf7\xd4\xa7HU\xa4\x8a\x82\xd2\x8bt\x02\x82\x08JQ\x8a \x88t\x11\x01\xe9]\x91bz\x02IH\xef\xbd\xf7Bz!\xbdg\x93\xe5\xbe{\xee\xee\x0c\xbbK6\xd9\xcdn\x9e\xfa\xe6\xfb\xe6#$\xbb3\xbf\xf9\xddr\xce=\xf7N\x1f\xb2\xf1hni\'\x97\xbb\x85\xf4\xf8pGzl\x98#\xf5\x1d\xa6\xfb\xb7\xbb\xf3\x89\x11N4z\xc1]\x8aN\xae4\xba^UM+\x1d:\x9fF\xb3\xd7\x87\xd0\xf2m\x11\xb4a_\x1c\xed9\x99Bgnd\x93\xabo\x11E&TRAI#\xb5\xb4u\xd0\xff\xc3QZ\xd1L\xbe\xe1\xa5\xb4\xf7t\nM[\x1dH/Oq\xa7g\xdew\xa1>\xf6\xb8\xf0\x9e\x93\xc9\xd4\xf7]Gzr\xb43M^\xeeO[\x8f$\xd0\xda\xdd\xd14\x89\x7f\x1e\xf8\x81k\xa7\x86y\xe6=\x17Z\xf4M8\xa5\xe5\xd4\x1a]/\xa7\xa0\x9e\xbe?\x9eDs\xbf\x0e%\x87\xef"i\xd3\x81x\xda\x7f&\x95.\xfc\x99C\x1e\x01\xc5\x14\x9bRE%|\xcf6\x8d\xf6\x1fi\x08\r\xaf\xbb\xac\xb2\x99"\x13+\xe9\xdc\xcdl\xfa|g\x14}\xb0\xc8\x97\x86Nv\x17g\xed\xc7\x0e\xfe\xf2\x14\x0f\xdb\r\x03\x8f\x9f\xf3U\x88l6\xac}\xe2\xf7L\xca+j\xe0\rn\xa0\xb8\xd4*\xf2\x8f(\xa3\xf3\xb7r\xc4\xf3\'\xafxh\xa8\xb7g\xdc\xa1S\xd7\xb3\xa8\xb2\xba\xd5\xe8z\x01\x91e\xb4a\x7f\x1c\xcd\xdf\x18&\x8b\xder8\x81\x0es\x04]q\xc9#\xef\x90RJ\xcc\xa8\xa1\x8a\xea\x16\xd2\xb4\xff\xf3\x0c\xd3\xd2\xdaA!\xb1\x15\xb4\x8f\x1dm\xea\xe7\x81\xe2\x9c\xc6Y\xc4\x91>X\xecK\xbb\x7fM\xb6\xdd0\xe7oe\xd3k\x1f{\xc8\x85\xc7|v\x97\xd2s\xebH\xab}@\x0f\x1e<<\xeb\x1a4\x94[\xd8@\x11\x9c\x86\x9c|\ni\xff\xe9T\xfa\xf9R:e\xde\xab\xa3v\x93\r^\xb6%\x82\x06\x8ds\xa3W\xd8k\xc6/\xf5\xa3\x95\x1c5\x87/\xa4\xd1u\x8f|\n\x88(\x97\xeb\xd7\xf2\xf5p\x8f\x7f\xc2q\x9f\x1d/"\xe1\xbe\xa4\xe2\xe5[#h\x0c\xa7\xef!\x13u\xd1\x81={q\x92;\xa7\xb0 \xdau"\x99n\x07\x95Pf^\x1d\x7f\xa7\xc56\xc3\xd47j\xe83\xf6l\xdc\xa0\xffH\'\xfa\xfc\xfb\xa8N?\x07\xe3tth\xa9\x8dq\xa1\xa1\xb1\x8d\xf2\x8b\x1b\xa9\xa8\xac\xc9\xe83\xd8\xe8\xe2\xf2&\x15\xab\x14\x1cza\x82\x1b\x8d\x98\xe3M\x0b6\x85\xd1\xee\x13It\xf3v>\xa5d\xd7\xca\xbd\xffn\x87\xee9\x1fPm}\x1be\xb0\x03y\xf8\x17\xd3\x8e_\x12%:^\xfb\xd8\x93\x9fMg\x0c\xa4\xfcwfz\xd1\xd2-\xe1\x9c\xcer$=WT\xb5H\x9aS\x0e\x9b\x0c\xe3\xe8]H\xaf~\xe4!y\x11\xde\xed\xeaWd\xd1\xf7:\xb4\xba\x070<`\x94\x1f8\x84\xcd\x91\x87\xa7\xc7\xb8\xd0\x1b\x9f\xde\xa6\xe9_\x04\xd17\x87\xe2\xe8\xa2c\x0e\x85\xc7\xdf\xa7r\xce\xd70\xfa\xdf\xe1h\xd3tP\x14c\xc7\xf1\xab\x99\x82\x9f\x88zCG\xc39r\xae\x8f\xa4g\xe0e\xe9\xfdf#c\x18\x1e=6\x0c<\xfc\xe3U\x81\xb2\x91\xcf\x8fw\xa3\x03\xe7Re\x93zz`\xa3\xdf\xf8\xe4\xb6,\xfe\xb5\x8f<i\xf4\xfc\xbb\xf4\xd2d\x0f5\xe4q\xc2\xe3\x80QoM\xbfC\x1f\xad\x0c\xa0\xd5\xbb\xa2)$\xa6\x82sw\xfb_j\x90\xec\xfcz:\xcb@\xbe\x8cY\xe4\xb8%~\xec\xac\x9e\xf4\xd4\x18gY\xf3\xa0q\xae4n\xb1\x1fmf\x12\xe3\xc6\x8e\x9b\x92U\xcb\xfb\xd4"x\x83\x083w\xf4\xc80\x00^\xb0\x8a~\xef\xeaR\xd8T\xa6y\xa9\xd9\xb5=~0\x90\x85\xd1\x0b|\xe4z\xff\xe2\x90\xdf{*\x85~s\xcd\x13\xc20r\x9e\x0f=1\xd2\xa9S\xba=a\x99\x1f\xc53\xc10=\xda9\x82\x80k\xad\x9c:;\xf4xgk\x8a2w\xd45\xb4\xd1\xc9kY\xf4\xf2\x87\xeeF\xeb\x1b0\xcaI\x9e\t\x8c\xd57\xacT\x98\xa45\x91\xdd#\xc3 \xc7/\xd8\x14\xaacb\x1fz\xd0E\xa7\\\xce\xf9m*\xe8[s`\xe3\xbe=\x1c/\x06\x06\x9e\x1c8\x9b"\x18T\xc6a\x1e\x93\\E\xbf\xbb\xe51e\x8e\xa3\x89l\x04\xfc\x1d\xc6\xc3}_\xe1\x14\xfa\xd3\xc54\xf9\x9c\xe9\x11\x1e_\xc1$\xa3\x80\xc2\x19t\x8bJ\x9b\xa8\x89k-SB\xa2\xc5\x89\x94\xaa\xd5\xfd\xfb\xc8\xdf\xb5Z106\x13?\x9b;\xe0\x90\xab\x19[\x9f{\xdf\xc5 \xed:\xd3\xecu!\xe4\x17QJ\rM\x1a\xbe\x87\xf5\xa9\xb6\x8f\xf5yTK?\x9eJV\x17\x01 C\xbd\x81:#5\xbb\xc6*\xaf\xc0g\xa3\x19\xf8\xb0\xd9\xa8\x83&-\xf7\xa3\x1a\x06Nl\x0c6\x05\x00\x8f\x8dET\xdc\xba\x93\xcf\xd8\x12O\x93V\x04\x08\x90\xce\xdf\x18\xfaH\r\xa4PR\xd4R\x9f\xae\t\xa2\x15\xdb#i\xdb\x91D:z%\x83\r|\x8fn\x07\x16Sh\\\x85P\xee\xac{\xf5\xe2\x00\x05|}\xfc\x9b\xc5\xe9(\x89\x7f\x1f\xcat\xd6\xc3\xbf\x88\xae\xba\xe6\x92?S\xf7B.f\xcd9\x1b\x8c[\xcc$f\xe6\x97\xc1\xb2~\xa5\xc0\xfe\x0f\x97\x02\x88z["\xd5j\xc3\\s\xbfGo\xcf\xbc\xa3\x1a\x06\x0bz\x9a\xf9\xf8\x9b\x0c\xcc\x0e\xbc\x11\xee\xccD\xaajZ,\xa2\xb3\xe0\xf4\xf0,\\g\xd8lo\xba\xc9\x9bo.u\x96T4\t\xd8_v\xce\xa5\xa3\x973\xc8\'\xa4\x84j\xebZ\x1f\xf9\xec\xc1siBF\x00\xba\xcf\x8du\x15\xbc\x1a\xc1\x80\x8b\xb4\x07c\xcd\xe7\xc2\x15l\xc8a{\x14\xad\xe2:i\xe5\x8e(Z\xbe-\x92\x16n\x0e\x97\xb5LY\x19H\xef1\xed\x9f\xbd.\x98NrM\x06\xfc\xe8\xca\xe3\x03\xa3\xcai\xc6\xda \xd50\xcf\x8du\x11\xfcs\xf4*\xa0\xe6\x96\x8e\xff\x9da\x0e2\xc8\xaf\xe6\x07\x9a\xb0\xd4_\x1e\\\x05f.\x8e\x00\xde\x1b\xf7\xc5Rbz\x15\xd7\'\x1d\xddz\xcc,~x\x1d\xd5v\xa4\xef\x8e&tiLDP\x03GPqy3\x15\x966RS\xb3\xa6\xd3\xeb?5\xda\xd9"I\xa8\xbb\x13\xc6\xb9\xca8W\xc2l\xb1\xab\xe7\xf0\r+\xa3!\x93\xdc\xd4\xef!\xa5\xcd\xf82H\xa2\xd9\x92\x881\xf7\x99>\xd6\x00 6\xa3\x887%\x8f\x8bEx\xca/\x97\xd3i\x1e{\xe0K\x93\xdd\xd5\xdc?b\xae\xb7\x14\x91M\xcd]3\xa5\xe3\xbfep\xa49K\xf5\xbbrG$\xc5\xa7U[\xcc\x06uy\xff\xd1\x07B$),\x0e\x1e\xfc8\xff\x0c&\xa7x\xb3\xb9\x13\xe9\x07Q6`\x943\rdg{\xf3\xd3;\xb4nO\x0c\xf9sA[]\xd7fv\xf3\xea\x19\xf8\xa1^(l\x12\xe7\xeb\x9cfA\xfbQP+\xfbf\xf8}\xa4g\xd49 \r\xc8\x04\xed\xedZ\xdb\r\xa3\x03K\xdd\xc5jx\xc1\x99\x9c\xa7/1\xcd\x9d\xe2\xe0OO\x8erV\x1f\xf2\xc4o\x99\xc2\xe9\xcd=\x10\xd2\xd2\x00\xfd\xe7\x91\x16\x01\xf2\xf6\xa8\xe4QE+\x1b4x\x82\xab\x10\x86\t\xcb\xfc9\xe7{\xf1\xdf<$\xe5\x8a\x1e\xa5g\x93p\n8\xd5\xb0\xd9^\xf4\xe1\n\x7fZ\xcc\xb5\x07p\xec\x17\xc6\xa4\x98\xe4J\xd9@\x00\x7fW\x9e\xbf\xe9`\x1c\xf57\xa0\xf4`b(\x82\x152Q\xc1\xd4\x18\xb8v\x83\x7f\x87\xdf\xbb\xf9\x15\xd2%\xe7\x1crf\xe7E\x95o.\xf2m\x96d\xf2\x19\x1c\xb7\x1d\x89\xa7!\x13\xddT\xde~\xe0l*U\xd7\xb6\x9ae1\x9f\xef\x8c\x14/\x1e\xca\x1by\x82#\x07\xac\xc9\xd6\x03\x82 \xee\xfd\x98\xbe\xaeZ\xb6-\x9c\x9c\xef\x16P$3\xb3\xa0\xe8\nfHe\xe4\x13\xfa\xf0D\n\n\x8c,\xa7\xb0\xb8\xfbRy\xa7d\xd5\x88\x80\x8aB\x17N\x07\xaa\xdd\x1d\xcb\x84\x16\x08c*\xd9b\xf0xWZ\xc1\xb5\x0c\xd4\xe2\xac{u\xb2\xf9\x1b\x99QN_\x1b,\xb4\x1fl\xed\xf5\xa9\x9e\x8cc\x01\x82\xc7 L9\x8ca\x9a\xf6\x0e\xfb\x1b\x06\xd1\x03\x1d\x08\xbc]\xc7\xdf\x1d\xe9"\xdf\xd0\\\xc4l\xff9Q\xf0\x08\x9f}c\x9a\'e\xe4\xd5\xf2&\xb4w\xeb\x99\xdd\x1dP\x1e\x94\x94\x05V\x845\x99\xaa\x0b\xf6>\xa0\xfd\xc1\x18J\xb4\xbc4\x99\x1dbk8me&\x88\xa2\x12Q\t\x12\xd2o\xb8q\x1d\x86\xe2\x13E2\xe4\x9a\xa2\xb2\xc6N\x9f\xddf\xc3\x80\xa7#\xb7\x0f\xd2/p\xe4<or\xf1-\xec\xd4\x0bnx\xe6\xab\xf9\xb8\xef0\x9d\xbc\r\x0fs\xf4.\x90\x05\xb6\xf7P1F\x9ff\xd8,/];\x81\xc1\x17\xf4\xf5.\x17u\xb6\x16\x96]\x1d\x8d\x8c\xa1\xa7\xafg\xd3K\xfa\xc2\xb2\x9f\x19\x1c{\x96\xd7\x83H~z\xccCR\x02<\x03[\xdcyLg\x98^Ie0\xcc\x17\xbb\xa2U\xd0E\xce\xae\xe24\xd6\xd9\xcdP\xef\x0c\xea\xa4?\x83MU\xda\x05=\xd1\xbd\xb6\xfc\x94 \xf5\x94\xa4\xd2\x0f\\h\xe9\xb7\xe1\x16S\xf6\x1eKR\xfc|+\x98f?9\xca8\x1a\xa0\x8f!U-\xdc\x14F\xb3\xd7\x07\xd3\x12^\x0b\x9co\x02G\xb4\xa1n\x86\xf5^r\xca\x91laW\xadLaH!\xb1\xe5\xb2\x10\xa5\xe2\xfdbw4\xdd\xafjy\x848\xc0X\x01\x9c\xd3\xcf\xdc\xc8\xa2y\x1bBE1P\xd4Vx\xd5t\xae\x05P#UV\xb7X\xe5\xe9\xc0\x86E\x9b\xc3$\x8d\xe1|\xf5c\x0fi\xb4A\x02\xe9\xcd\x03b\xe5L\xa6\xc5\xf0\xfe\xe7\xc7\xb91\xd1\xf0\xa7\xaf~\x8c\xa1\xb37\xb3$Z\xb1\xaeJv\x8e\xe4\xcc\x1a\xa9i6\x1e\x88\x15|1\xa4\xe3\xc8\x14v\x95d\x0c\x8f\xfd\x0c\xf4\x83\'\xb8\xe9\xc5G\x0f\xfa\x93\x17\xd1hB\x95\xb1\xd1\x00SPh0\x9d\x00\x06b(\xc4`d\x8f\xebY\x12\x18\xd5\xe2o\xc2\x98\x86\x97\x89(i\xa9q\xfc\x18h\x91\xaf\xd5\xe8c\x86u\xeeV\xb6\xdc\xa77\x0f8\x11\x04K\x14\xabW]\xf2(9\xabV\xee)xi \xed\x00k\xd1\x02\xf8\xee\xe7\x04\x91\x94\x94u.a\xd2\x80\xd6\x87\xcduLg\xd1\x02F\x01\x19^\xa7\xfc:\xd2G\xab\x02\xa4s\xd9\xdd\xf7\xc0\xd8Bb\xca\xb9\xa8L\xa4\xb7f<\xac\x01P5\xc3`HC\x96\x18\x06\xf3\x06\xb7\xbc\xf2U2\xd1\x7f\x14\x84M_\x11@M\xb5/{\xe2M#\xa7\xefT\x8e\x080L\xd4#\x90\xa9:K\xc1"-1nB=X\xcf\xd1\xf4\xd4h\'U_\xbc\xe2\x9ck\x7fu\x19GM]+\x1d\xbb\x9aA\xff\x9av[\x05?H\x18\xf0\x90\xee526\x0e\x7f\x1f\xba\x14f\x03\x06\x8fwSA\x11\xd2\xce\x99?\xb2\xa4q\xd4\x1dF\xe0\xc10\xb8\xf1\xbc\x9e&\x83\xedLX\xea+\xd2\x0e\x8c\x8b\x08E\xf4aM\xd88SCi\xf5}!k\xc5W\x14\x86\x96b!\xae\x8d\xd46i\x85\x9f\xea\x80k\x18\x93\xef\x157\xf4\x8ea\xd0.\xfd\xd0!@\x05}\xe0\x04\x063\xac\xf5L\xc8+\x0b\x19#\x0c+v\xcc\x10\xa0\xfehi\xe9>\xa5!\xc2\x14\xc6\xf3\xb8\x9e\xed\xe0w\x00\xd6\xeb\x1e\xf78zr\xe9\xfc\x9f\xd9t\x86\x19\xd4E\xc7lr\xe6\xbc\x1e\x97VEy\x85\xf5L\xd5\xeb\xb8B\xaf\xe754\xc8t\x0e\x04P\x8d\xa6\xc3\xeel\xee\xe8\xe5t\xa3\xfe~TRe\xb7\x86\xedc\xd4\x16\xd5Z\xa6\xed@j\xdf}"Y\x18\x90\x80>\xdf\x14\xcc\xc3Z\xba\xab\x93y\xda\xc93\xb0\x98\xc6s\xbeV(\'z\xe2\x18\xe7\xc1\x98RWQ\x83\xde8j\x81~\xc3\xbb\x96\\\xa0\xc5\xc1q\x06\xf2z\xc1\xa2\xfa\xca=\\i\xe2r?fO\xa1\xd2V@\xb1\x87\xc1\x11\x805\xd2\x93\xbd\xd2\x1fp\x04\xd8\xa9\xace\xec"_\x8b\xf6I5\x0c&O\x922\xaaE.\xe9\xaa\xff\x80\xbc\x0eO\x1c5\xdfG\xbd\x19z\xf2\x7f\xf0\xef\xb4Zm\x8f\x17\xbf\xf3X\x92\xaa\x1e`\xa3\xa1\xd0B~o4#Y\xc8\x9a\xab\x9a\x85\x81!\x95\xe1\x1c\xc2\x04b\xe8d\x0f!\x12H\x8f\x10YAKA0\xba\x9bw\xc3\xf8\x10D\xd5]|=\xa4\x1e\x9d\x96e\xfb\xec\x1a\xba\x96\xef\xe8k,d\x83\xfdg-k\x07\xa8\x86\xf1\t)\x150Fc*\xfb^\xbd\xda\\2T@\xc1\xac a\xccX\x1b,\x0f\xabT\xfa\x90X\xd02\xedi\xdd\x00\x0f\xf2\x0c(\xa2\xc9\x0e\xfe\xaa\xee\xf4\x02o\xec\x86}\xb1R\xdb\x98S\x05\xf0;\xc8"\x00\xd2S\xd7\xb2\xe8\x97+\xe9\x829{~M\xa2\xef\xb9x\xfb\xfex"\xd78\xf1\xe4\xb0=\x82\xd3\xae\xbf8\xd3pv"\xcc)\x00\x8fL\x05N\x18\x11\xa9p;3(\x90\x13[\x99]um\x1b}\xb57VM\xb5\xd3V\x05JDZ%\xfb#u\xfc\x9b\x81\x1c\xb8\x81\x9f\x83\xa2\xcb%\xffC]\x05\x80\xa2\x0e\x89\xe7\xdc\x8c\xe9\xc8\x81\x06r\xff[\x9f\xde\x91|n\xebC R\xb7\x1c\x8e\xa7g\xc7\xba\xa8\xde\x05\xa5\x16sfm\x1a\xf3X\x03`\x87b\x8bB\x17\xebl\xd6Sr\xa49\xac\x19\x0c\n\x0e\x03\xe3\x83\r\xa2\xbe\xf0\n)\xa1cW2D\xc6\x19\xca\x95\xbb\xc2\xea\x0c\xd3\xcdq&6 \x10\xb6\xb4\xa3}BK\xa5\xa9\'\xfa\x1dG\xf4e\x97\x1c\x11--6\x0c\x8a:\x8c\x07\x01\x80\xe15\xc3f\xdd\x91A\x87\xe3\xcc\xb2@=!y\\\xe0\xda\xe0\x93\xd5\x81\xea\xc6)Ll\xd9\xd6\x08JH\xab\xb6y\x00\x0f`\xf8\'\x033d\x1a\xc3MB\xd1\x96\xcc)\xd6\x9e\xba\x97Rg\x84r\xf4#:\x86\xa0e=\xdcXF\xf9\x92\xd9\xa2\x825=J\xcf\xe5M2M\xaaT\xfb(\x82\xcb\xef[N\x8e\xc40h\xab\xceY\x1f"\xa2\x9b2\x11\x88\x9c\x0b\t\x1b\x9d\xbf\x17\'zHj\x19` ?\xc0\xa3_\x99\xe2NN\xbc\x99\xb5\xf5\xadv\x01J\xcc\x12@\xc604\x0c&6\xcf\\\xcf\xea\x15y\x05Q\x14\x9fZM\xf36\x84\x881\x0c\xef\x0b%\xa2\xbbI\x96\xaep\x18\x85\xf7\x13\xc3\x1f\xf6h|\xc3\xcb\xd8\xb9:\xac3L]\xbdF6\x18i\n9\x18\xe0\x89\xbch\xae\xc1\x04/@\x9e\xde\xc59\xbc\x80\xf9\xb8%\xddJ\x8bj#NA\x9b\x0f\xc5\xabu\x89\x12\x95\x139\xe54\xb7hlV\xa0;\x17#5\xb4\xe7T\xb2Z\x8f)\xe7\x18vJk\xa93>\x0b\xa3`\xbe@Ia\xc0\xb2=\xbf&\xeb\x87U\xac\x9c\x92\x817B\xd7\t\x8a*\x93\xd1\xd5U\xdfEJ\x93\xe9\xf5\xa9\xb7\xa5\xb7\xa1\x08\x84h\x9b\xa2:\x1f\xbf\xc4\x97\xb6\xfe\x94@\x89\xe9\xd5\xb2\x10{n\x18\xe4\x14\xf4.L\x9d\x01\xd2Ko\xd4\x188\xae\xb8\xe4\xd2{\x0b}\x8d\x1cq\xd4<oy\xb6\xae\xeeg\xfa7\xa4c88\x9c[\xb9\x16j2d$k\xf7\xa8\x8fa\x85\x8a\x85`:\x10\x1b\x8e\xa9\x14\x0c7\xa3J]\xb2%\\^\x11\x98\xfbU0\xed\xe4\xba\xe1\x02\x17l\xc0\x15\x1d\xb0v~C4\x9c\xa4\x03h\xa5\xc7\xb9\xfb\x17\xd2\x8c/\x82\xd4\xb4\xaa\x9c\xc0\x02\x80\xb7\xbd\xa3\x06\xd7r\xf6)\xa0q\x8b}U\x12\x80\x8c\xf0\x19\xd77\x955\xc6\xcd>\xd4y%\xe5\xcdR\xb5c\xaf\xa0N\xa0\xb7\x8fn\xe7\x1f\x1e\xf94\xefk\xe3\x94\x08--4\xb6\xbcG\x0ee\xb6\xf2\x07\xc3A}\x11\x93RE\xc11\x15\x94\x91[+T/-\xa7F6\x1d\x85aWR\x06&$1.\x84a\x86\xf6\x0e\xcb6\x13\x9b\x0e\xfa\xbb\x86\xe9\xf7\xa0q\xae\x8f0\xa58^\x8b\xa5\xd7\xb2X^\xd1he\x06m\xf8\x1c/\xd5\xcb1\xd0\x81\xcc\x81N\xa6\xe1\x81g\xc6\xbb@\xd0\xbd\xe6q$,\xda\x14.\x1dL\xe8\x85\x86\xa9\x100\xb0`c\xa80[\xa4\xe0\x9e\xac\xd7bI\x06\x1b\x02j\x8a\x13\xa0\xd9\xdd\xcd\xa0\x83}\xcbx\x81\xfc\x1a\xcc\x0b\x84Z\x80\x97\x8dL\xbf\xa7\xfc\x1f\xff\xc2\x190\xef\xb5nO\xb4\xa4LC\xc3\x0c\x1a\xe7"5\n46{\x19\x06\xd7\xc1\xd4\r$\x13ht\xca\xbd\x90\x8a\xc0D5&\xba\x1f"\xf6\xe4\xb5L\xe9\x1f\xf5\x1f\xa1\xebN\x9a\xe20\xe6\x0b6\xee\x8f\x95\xd1,\x18\xb2\xa7k\xb5j\x18\xc3\x1a\x99\x02S"\x9b\x0f\xc6\t\x91x\x83k\x1d\xfc\x0c\xe9\xa5T^:z\xd8OWR\x13\x08\x84Nu\xae\xe0\x07\x8bcl3\x8e\x18H\xe6\xabvDRBz\xb5]\x0c\xa2\xc8A\xd8\xc0E\x06}{\xa4"LVBK3}V\xa4f\xbc\xa7\x03\xa6\xa8\xbc|\x85\xc6\x18\x0c\x89\x02\x16i\xff\xa6g\xbe\xe8o\xd6\xb4.z\xa5\x1f\xd3\x95\x02\x8b\xb9\xac\x11\x0c\xa2Jxc\xb4\t]?\x00<&G\x10\x1du\r\xad"}\xa0 \x8cM\xae\x92I\x92I\xcb\x03\x8cZ\xb1R\x953\xe6\x805"\x12-Q\x9dM\x9d\xc8t\xfc\xb5\x957\x0e#S\xeb\xb92\x87\x96\xa6\x9b\x8d\xd3\xcdCc\x12\xbf3\x91\x11\xbf\x83\xd4\x8fn\xeb\xae\x13I\xb4\xedH\x82L\xd4@:\x02\xd6\xc0\xd0\xcd|]{\xa4\xdb^3\x0c\x8e\xec\x82:&\x0bI\xc2\xe3\x9f0\xd0\xab\xe0\xfdS\x1c\x02\xa4\xdb\tP\xc7\x94\r\xfe\xc5\xe8\x1042L\xcf\x98\x82?\x86\xb6\xd7\xb0\'c\x1a\xb3\xa1\xa9\xadS\xe3\x08y\xe1\x88\x04\x06\x02\x98\x81\x11P\x04\xf0^\x0e\nTx1\xfe\x06\xe3\x1e\xb9\x94F\x93\xd8\x08\n\xe3\xc4\xac\xc0\xd8E~2\xc4\xd1U\xcb\x01\xf7\xc0[p2\x93\xac\x9fo\xb3w\xbf\xa7\xd7\r\x83\x85C\xd6\xf0d\x0f\\\xfbC\xb4\xd0\xe0\xce&%\xf1j\x05R\x1e\xfe\xa6\x0c\xdf=\x9c\xf0t\x92\xf42\x96\xe9,^\x92\xc5\xa8Q\xab\x994\x01}\x0f\xaf\x1eb$j\xdf\xe9d\x19\xa3B\x8d\x02\rp\x9b\xde\x01\x90\xa6\xf0\xca!\x86(\xe0,p\x00\x88\xa7\x9f\xac\t\x92W\x12\xa1hw\xa5\xb2+\x03\xe9\xbd9\xe8\xd1\xeb\x861\xd4\xb3 F"E 20\xeb\x8b\xf7_\x94\xf7H\x00\xa2\xca&)\xe2h_\xbd\xc1\xa0e\x8d\xe4\x14\xf85\xa7\x1c\xcf\x80\x12\xf1Vs\xf2\x0c6\x0b\xba\xd9\xa1\xf3\xa9\xf4\x8e~\xbe\x1a\x14\xb8\x7f\'\xafq\xf4\x1b\xae\xeb\x98\xc2\xe0\xc04\xbc\xdf\x89\xe1\xbc\xbf\xcb+\x84}\xfe\x8a\x9b\xca+\xd4ae\xf2\xe6\xd5\x97?\xc4\xd2\xfc\r\xa1R\'\xa1\xfb\x08\x1cB\x1b\x01\xc3\r\xb3\xd6\x073\xa0F\tu\xf5\t-\x91\x81<E\x94\xec\xea@\x1d\xb6\x83\xa3\x04\xa0\x0cm\x0f \xfd\xc2DW\x11i\xa10cx\x04\xbd\xfa\xbd\x1cM\xee~E\xd2\xfamji\xef\xf5(\xb0\xe6\xf8/e\x82\xdf\xf0\x07\xda\x8f&\x00\x00\x00\x00IEND\xaeB`\x82'
2018-02-06 20:30:28,760 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 12:30:28 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=12puv0n8hjp6i1rhmovba1o4z4;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-02-06 20:30:28,760 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 20:30:28,760 APIUnittestTestCase.py[line: 94] INFO: 正在提取目标返回结果值
2018-02-06 20:30:28,761 APIUnittestTestCase.py[line: 97] INFO: 正在执行断言
2018-02-06 20:30:28,761 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 20:30:28,761 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,761 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,761 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"200", "消息":"fail#请求验证码识别"}]
2018-02-06 20:30:28,762 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-02-06 20:30:28,763 debug.py[line: 125] INFO: ======================开始运行测试用例[名称：ID6-灯塔用户正常登录, ID:6]======================
2018-02-06 20:30:28,763 test_case.py[line: 32] INFO: 正在查询测试用例[ID：6, 名称：ID6-灯塔用户正常登录]关联的测试步骤
2018-02-06 20:30:28,763 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(6,)
2018-02-06 20:30:28,771 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 20:30:28,771 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 2]======================
2018-02-06 20:30:28,771 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 20:30:28,772 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 20:30:28,772 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_urlencode
2018-02-06 20:30:28,772 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 20:30:28,772 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,772 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,772 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{
"User-Agent": "Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36",
"Cache-Control": "no-cache"
}
2018-02-06 20:30:28,773 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 20:30:28,773 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,773 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,774 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"userName":"dataviewer",
"userPwd":"fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4",
"captcha":5555,
"channelType":"dt"
}
2018-02-06 20:30:28,774 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 20:30:28,774 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,774 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,775 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/login
2018-02-06 20:30:28,775 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 20:30:28,775 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,775 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,775 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 20:30:28,776 APIUnittestTestCase.py[line: 39] INFO: 正在发起POST请求...
2018-02-06 20:30:28,776 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/login
2018-02-06 20:30:28,776 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=fONfsZjEy65NScOqBOB4Vzef-NZ0B6n2cXfGvHmXESa-OuzwD3-Q4TOkq0kKdoB9tuCr3N1omkbfvmslpN-MSKyCe7RVffGEbczwD9qc2CC5B75gUVJzmw0AU0vXuZHIFuPihPUxiFlggaLdZJf6ytjb1DcZBXZpx98LLsIy6g4&captcha=5555&channelType=dt'
2018-02-06 20:30:28,776 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Cache-Control', 'no-cache'), ('User-Agent', 'Mozilla / 5.0(Windows NT 6.1; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 49.0 .2623 .112 Safari / 537.36'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 20:30:28,863 APIUnittestTestCase.py[line: 53] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-02-06 20:30:28,866 APIUnittestTestCase.py[line: 76] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-02-06 20:30:28,866 APIUnittestTestCase.py[line: 77] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 12:30:28 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 05-Feb-2018 12:30:28 GMT')]
2018-02-06 20:30:28,867 APIUnittestTestCase.py[line: 78] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 20:30:28,867 APIUnittestTestCase.py[line: 81] INFO: 正在提取目标返回结果值
2018-02-06 20:30:28,868 APIUnittestTestCase.py[line: 84] INFO: 正在执行断言
2018-02-06 20:30:28,868 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 20:30:28,868 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,868 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,869 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"result\":200", "消息":"fail#灯塔用户登录失败"}]
2018-02-06 20:30:28,869 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串："result":200”
2018-02-06 20:30:28,869 debug.py[line: 125] INFO: ======================开始运行测试用例[名称：ID3-查找用户信息, ID:3]======================
2018-02-06 20:30:28,870 test_case.py[line: 32] INFO: 正在查询测试用例[ID：3, 名称：ID3-查找用户信息]关联的测试步骤
2018-02-06 20:30:28,870 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(3,)
2018-02-06 20:30:28,877 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 20:30:28,877 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 10]======================
2018-02-06 20:30:28,878 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 20:30:28,878 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 20:30:28,878 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-06 20:30:28,878 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 20:30:28,878 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,879 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,879 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-06 20:30:28,879 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 20:30:28,879 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,879 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,880 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-06 20:30:28,880 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 20:30:28,880 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,880 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,880 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 20:30:28,881 APIUnittestTestCase.py[line: 104] INFO: 正在发起POST请求...
2018-02-06 20:30:28,881 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-06 20:30:28,881 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-06 20:30:28,882 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 20:30:28,900 APIUnittestTestCase.py[line: 117] INFO: 正在对服务器返回body进行解码
2018-02-06 20:30:28,900 APIUnittestTestCase.py[line: 140] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-06 20:30:28,900 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 12:30:28 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-06 20:30:28,901 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 20:30:28,901 APIUnittestTestCase.py[line: 145] INFO: 正在提取目标返回结果值
2018-02-06 20:30:28,901 unittesttestcase.py[line: 382] INFO: 使用正则表达式提取
2018-02-06 20:30:28,902 unittesttestcase.py[line: 384] INFO: 获取到的变量的值为：['dataviewer']
2018-02-06 20:30:28,902 unittesttestcase.py[line: 393] INFO: 使用“正则表达式提取”提取的自定义变量-值(key-value对)为:userName2_1-dataviewer
2018-02-06 20:30:28,902 APIUnittestTestCase.py[line: 148] INFO: 正在执行断言
2018-02-06 20:30:28,903 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 20:30:28,903 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,903 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,903 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":"\"qq\"(.+?)\"","消息":"FAIL#不符合断言时返回的消息"}]
2018-02-06 20:30:28,904 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('"qq"(.+?)"')”
2018-02-06 20:30:28,905 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 9]======================
2018-02-06 20:30:28,905 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 20:30:28,905 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 20:30:28,905 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_json
2018-02-06 20:30:28,906 test_case_step.py[line: 78] INFO: 正在替换“请求头”中的动态参数
2018-02-06 20:30:28,907 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,908 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,908 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：{"Accept":"application/json"}
2018-02-06 20:30:28,908 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 20:30:28,908 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,909 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,909 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/auth/findUserInfo
2018-02-06 20:30:28,909 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 20:30:28,909 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,909 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'userName2_1': 'dataviewer', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,909 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 20:30:28,910 APIUnittestTestCase.py[line: 104] INFO: 正在发起POST请求...
2018-02-06 20:30:28,910 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.88:8080/auth/findUserInfo
2018-02-06 20:30:28,910 httpprotocol.py[line: 105] INFO: 参数为：b'""'
2018-02-06 20:30:28,910 httpprotocol.py[line: 106] INFO: 请求头为：OrderedDict([('Accept', 'application/json'), ('Accept-Encoding', 'gzip, deflate')])
2018-02-06 20:30:28,945 APIUnittestTestCase.py[line: 117] INFO: 正在对服务器返回body进行解码
2018-02-06 20:30:28,945 APIUnittestTestCase.py[line: 140] INFO: 服务器返回结果"响应体(body)": {"activeTm":null,"atten":"数据监视器","bindEmail":"1","bindPhone":"1","channelType":0,"company":null,"companyName":"数据监视器","customerCodeCount":null,"customerCodes":null,"customerNames":null,"email":"laifuyu@sf-express.com","id":1061493,"industryName":null,"initPwd":"","isflag":"0","parentId":null,"phone":"18159001414","productNames":[],"products":[],"qq":"1033553122","salt":"","sysCode":null,"userName":"dataviewer","userPackage":null,"userPwd":"","userType":0,"warehouseCode":null,"warehouseCodeCount":null,"warehouseName":null}
2018-02-06 20:30:28,946 APIUnittestTestCase.py[line: 141] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 06 Feb 2018 12:30:28 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '547'), ('Connection', 'close')]
2018-02-06 20:30:28,946 APIUnittestTestCase.py[line: 142] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 20:30:28,947 APIUnittestTestCase.py[line: 145] INFO: 正在提取目标返回结果值
2018-02-06 20:30:28,947 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-06 20:30:28,947 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['atten', 'value']
2018-02-06 20:30:28,947 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：数据监视器
2018-02-06 20:30:28,947 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：数据监视器
2018-02-06 20:30:28,948 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:atten-数据监视器
2018-02-06 20:30:28,948 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-02-06 20:30:28,948 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['userName', 'value']
2018-02-06 20:30:28,948 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：dataviewer
2018-02-06 20:30:28,948 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：dataviewer
2018-02-06 20:30:28,949 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:userName-dataviewer
2018-02-06 20:30:28,949 APIUnittestTestCase.py[line: 148] INFO: 正在执行断言
2018-02-06 20:30:28,949 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 20:30:28,949 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-06 20:30:28,949 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,950 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-06 20:30:28,950 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{"模式":{"userName":"dataviewer"}, "消息":"fail#用户名不为dataviewer"}]
2018-02-06 20:30:28,950 unittesttestcase.py[line: 111] INFO: 要匹配的字典key,value层级为：['userName', 'dataviewer']
2018-02-06 20:30:28,950 unittesttestcase.py[line: 114] INFO: 找到的对应字典层级的最后值为：dataviewer
2018-02-06 20:30:28,951 debug.py[line: 125] INFO: ======================开始运行测试用例[名称：ID7-根据月结和账号获取集团卡号, ID:7]======================
2018-02-06 20:30:28,951 test_case.py[line: 32] INFO: 正在查询测试用例[ID：7, 名称：ID7-根据月结和账号获取集团卡号]关联的测试步骤
2018-02-06 20:30:28,951 mydb.py[line: 122] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s ORDER BY `order` ASC  data：(7,)
2018-02-06 20:30:28,960 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-02-06 20:30:28,960 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 3 步, 步骤ID: 3]======================
2018-02-06 20:30:28,960 test_case_step.py[line: 73] INFO: 步骤类型：请求接口
2018-02-06 20:30:28,961 test_case_step.py[line: 74] INFO: 步骤操作对象：APIUnittestTestCase
2018-02-06 20:30:28,961 test_case_step.py[line: 75] INFO: 执行操作：test_api_for_xml
2018-02-06 20:30:28,961 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 20:30:28,961 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$userName$']
2018-02-06 20:30:28,961 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,962 test_case_step.py[line: 58] INFO: 正在替换动态变量：$userName$
2018-02-06 20:30:28,962 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findByAccountCompany>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userName>dataviewer</userName>
         <!--Optional:-->
         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>
      </ser:findByAccountCompany>
   </soapenv:Body>
</soapenv:Envelope>
2018-02-06 20:30:28,962 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 20:30:28,962 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:28,962 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,963 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：/ws/ddtDimCustGroupMapping
2018-02-06 20:30:28,963 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 20:30:28,963 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_host$']
2018-02-06 20:30:28,963 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,963 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_host$
2018-02-06 20:30:28,964 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.64.168
2018-02-06 20:30:28,964 APIUnittestTestCase.py[line: 168] INFO: 正在发起POST请求...
2018-02-06 20:30:28,964 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.64.168:8080/ws/ddtDimCustGroupMapping
2018-02-06 20:30:28,965 httpprotocol.py[line: 105] INFO: 参数为：b'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rpt.ddtm.platform.ddt.sf.com/">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:findByAccountCompany>\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <!--Optional:-->\n         <userName>dataviewer</userName>\n         <!--Optional:-->\n         <accountCompany>2017112815</accountCompany><vaildFlag>1</vaildFlag><isReplace>0</isReplace>\n      </ser:findByAccountCompany>\n   </soapenv:Body>\n</soapenv:Envelope>'
2018-02-06 20:30:28,965 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-02-06 20:30:28,994 APIUnittestTestCase.py[line: 181] INFO: 正在对服务器返回body进行解码
2018-02-06 20:30:28,994 APIUnittestTestCase.py[line: 204] INFO: 服务器返回结果"响应体(body)": <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><ns2:findByAccountCompanyResponse xmlns:ns2="http://service.rpt.ddtm.platform.ddt.sf.com/"><return>dataviewer</return></ns2:findByAccountCompanyResponse></soap:Body></soap:Envelope>
2018-02-06 20:30:28,995 APIUnittestTestCase.py[line: 205] INFO: 服务器返回结果"请求头(headers)": [('Content-Type', 'text/xml; charset=ISO-8859-1'), ('Connection', 'close'), ('Server', 'Jetty(9.2.7.v20150116)')]
2018-02-06 20:30:28,995 APIUnittestTestCase.py[line: 206] INFO: 服务器返回结果"状态码(code)": 200
2018-02-06 20:30:28,995 APIUnittestTestCase.py[line: 210] INFO: 正在提取目标返回结果值
2018-02-06 20:30:28,996 unittesttestcase.py[line: 397] INFO: 使用xpath提取
2018-02-06 20:30:28,996 unittesttestcase.py[line: 322] INFO: xpath表达式为：.//return
2018-02-06 20:30:28,996 unittesttestcase.py[line: 327] INFO: 正在获取xmlns定义
2018-02-06 20:30:28,997 unittesttestcase.py[line: 336] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 20:30:28,997 unittesttestcase.py[line: 341] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-06 20:30:28,997 unittesttestcase.py[line: 343] INFO: 正在转换元素结点前缀
2018-02-06 20:30:28,998 unittesttestcase.py[line: 351] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 20:30:28,998 unittesttestcase.py[line: 357] INFO: 查找到的元素为：[<Element 'return' at 0x000000000419D458>]
2018-02-06 20:30:28,998 unittesttestcase.py[line: 399] INFO: 获取到的变量的值为：[<Element 'return' at 0x000000000419D458>]
2018-02-06 20:30:28,998 unittesttestcase.py[line: 403] INFO: 使用“xpath提取”提取的自定义变量-值(key-value对)为:groupCode_1-dataviewer
2018-02-06 20:30:28,998 APIUnittestTestCase.py[line: 213] INFO: 正在执行断言
2018-02-06 20:30:28,999 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 20:30:28,999 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$groupCode_1$']
2018-02-06 20:30:28,999 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:28,999 test_case_step.py[line: 58] INFO: 正在替换动态变量：$groupCode_1$
2018-02-06 20:30:28,999 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "fail#获取的实体集团卡号错误" 
},
{
"模式": {
 ".//return": "dataviewer"
}, 	
"消息": "fail#获取的实体集团卡号错误" 
}
]
2018-02-06 20:30:29,000 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-06 20:30:29,000 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-06 20:30:29,000 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 20:30:29,000 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-06 20:30:29,001 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-06 20:30:29,001 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 20:30:29,001 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x000000000419D5E8>]
2018-02-06 20:30:29,001 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-06 20:30:29,001 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-06 20:30:29,002 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-06 20:30:29,002 unittesttestcase.py[line: 224] INFO: 校验规则为：“xpath断言：{'.//return': 'dataviewer'}
2018-02-06 20:30:29,002 unittesttestcase.py[line: 231] INFO: 正在获取xmlns定义
2018-02-06 20:30:29,002 unittesttestcase.py[line: 240] INFO: 正在获取"xmlns:xxx名称空间定义
2018-02-06 20:30:29,002 unittesttestcase.py[line: 245] INFO: 最后获取的prefix:uri为：{'ns2': '{"http://service.rpt.ddtm.platform.ddt.sf.com/"}', 'soap': '{"http://schemas.xmlsoap.org/soap/envelope/"}'}
2018-02-06 20:30:29,003 unittesttestcase.py[line: 247] INFO: 正在转换元素结点前缀
2018-02-06 20:30:29,003 unittesttestcase.py[line: 256] INFO: 转换后用于查找元素的xpath：.//return
2018-02-06 20:30:29,003 unittesttestcase.py[line: 262] INFO: 查找到的元素为：[<Element 'return' at 0x000000000419D5E8>]
2018-02-06 20:30:29,003 unittesttestcase.py[line: 264] INFO: 正在进行断言
2018-02-06 20:30:29,004 unittesttestcase.py[line: 270] INFO: 从服务器返回的提取的待检查数据的类型：<class 'str'>
2018-02-06 20:30:29,004 unittesttestcase.py[line: 271] INFO: 用户期望值的数据类型：<class 'str'>
2018-02-06 20:30:29,004 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 4 步, 步骤ID: 4]======================
2018-02-06 20:30:29,004 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-06 20:30:29,005 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-06 20:30:29,005 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-06 20:30:29,005 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 20:30:29,005 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,005 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,006 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-06 20:30:29,006 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 20:30:29,006 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,006 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,006 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 20:30:29,007 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";  data：
2018-02-06 20:30:29,007 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE user_name = "dataviewer";
2018-02-06 20:30:29,014 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-06 20:30:29,014 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-06 20:30:29,014 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-06 20:30:29,015 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-02-06 20:30:29,015 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 5 步, 步骤ID: 5]======================
2018-02-06 20:30:29,015 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-06 20:30:29,015 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-06 20:30:29,016 test_case_step.py[line: 97] INFO: 执行操作：update_record
2018-02-06 20:30:29,016 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 20:30:29,016 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,016 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,016 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-06 20:30:29,017 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 20:30:29,017 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,017 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,017 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 20:30:29,018 mydb.py[line: 81] INFO: update_query：UPDATE ddt_user SET qq=1033553122 WHERE user_name="dataviewer"
2018-02-06 20:30:29,024 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 6 步, 步骤ID: 7]======================
2018-02-06 20:30:29,024 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-06 20:30:29,024 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-06 20:30:29,024 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-06 20:30:29,025 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 20:30:29,025 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,025 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,025 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122
2018-02-06 20:30:29,025 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 20:30:29,026 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,026 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,026 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;
2018-02-06 20:30:29,026 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 20:30:29,026 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,027 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,027 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 20:30:29,027 mydb.py[line: 96] INFO: query：SELECT phone,user_name, atten FROM ddt_user WHERE qq= %s ORDER BY id desc;  data：(1033553122,)
2018-02-06 20:30:29,027 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone,user_name, atten FROM ddt_user WHERE qq= 1033553122 ORDER BY id desc;
2018-02-06 20:30:29,034 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414', 'dataviewer', '数据监视器'], flag：True
2018-02-06 20:30:29,035 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-06 20:30:29,035 unittesttestcase.py[line: 407] INFO: 提取数据库查询结果
2018-02-06 20:30:29,035 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-06 20:30:29,035 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 20:30:29,036 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-06 20:30:29,036 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,036 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-06 20:30:29,036 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-06 20:30:29,036 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"fail#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"fail#手机号不为18189001424"}
]
2018-02-06 20:30:29,037 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-06 20:30:29,037 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-06 20:30:29,038 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 7 步, 步骤ID: 6]======================
2018-02-06 20:30:29,038 test_case_step.py[line: 95] INFO: 步骤类型：操作数据库
2018-02-06 20:30:29,038 test_case_step.py[line: 96] INFO: 步骤操作对象：ddtm
2018-02-06 20:30:29,038 test_case_step.py[line: 97] INFO: 执行操作：select_one_record
2018-02-06 20:30:29,039 test_case_step.py[line: 103] INFO: 正在替换“输入参数”中的动态参数
2018-02-06 20:30:29,039 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,039 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,039 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：1033553122, "dataviewer"
2018-02-06 20:30:29,039 test_case_step.py[line: 107] INFO: 正在替换“URL/SQL”中的动态参数
2018-02-06 20:30:29,040 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,040 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,040 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";
2018-02-06 20:30:29,040 test_case_step.py[line: 111] INFO: 正在替换“主机地址”中的动态参数
2018-02-06 20:30:29,041 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-02-06 20:30:29,041 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,041 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：10.202.95.88
2018-02-06 20:30:29,042 mydb.py[line: 96] INFO: query：SELECT phone FROM ddt_user WHERE qq= %s AND user_name="%s";  data：(1033553122, 'dataviewer')
2018-02-06 20:30:29,042 mydb.py[line: 99] INFO: 执行的查询语句为：SELECT phone FROM ddt_user WHERE qq= 1033553122 AND user_name='dataviewer';
2018-02-06 20:30:29,051 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['18159001414'], flag：True
2018-02-06 20:30:29,051 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-02-06 20:30:29,051 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-02-06 20:30:29,052 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-02-06 20:30:29,052 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$user_name$', '$phone$']
2018-02-06 20:30:29,053 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_token': 'asfdacfdasfasfa', 'global_url_arg': '0.5185151614698615', 'userName2_1': 'dataviewer', 'groupCode_1': 'dataviewer', 'userName': 'dataviewer', 'phone': '18159001414', 'atten': '数据监视器', 'global_headers': '{"10.202.95.88":{"Accept-Encoding":"gzip, deflate"},"10.202.95.87":{"Accept-Encoding":"gzip"}}', 'user_name': 'dataviewer', 'global_host': '10.202.64.168'}
2018-02-06 20:30:29,053 test_case_step.py[line: 58] INFO: 正在替换动态变量：$user_name$
2018-02-06 20:30:29,053 test_case_step.py[line: 58] INFO: 正在替换动态变量：$phone$
2018-02-06 20:30:29,053 test_case_step.py[line: 62] INFO: 替换动态变量后的内容：[
{"模式":["dataviewer","dataviewer"], "消息":"fail#姓名不为dataviewer"},
{"模式":["18159001414","18159001414"], "消息":"fail#手机号不为18189001424"}
]
2018-02-06 20:30:29,054 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['dataviewer', 'dataviewer']
2018-02-06 20:30:29,054 unittesttestcase.py[line: 276] INFO: 要检测的模式为：['18159001414', '18159001414']
2018-02-06 20:30:29,055 debug.py[line: 158] INFO: 正在释放资源
2018-02-06 20:30:29,055 debug.py[line: 159] INFO: 正在断开与项目关联的数据库连接
2018-02-06 20:30:29,055 debug.py[line: 165] INFO: 正在清理与项目关联的全局变量
