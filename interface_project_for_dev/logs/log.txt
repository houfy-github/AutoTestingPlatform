2018-03-19 16:15:37,699 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 16:15:37,750 main.py[line: 79] ERROR: 运行出错：list index out of range
2018-03-19 16:16:03,615 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 16:16:03,616 main.py[line: 19] INFO: 当前运行模式为：debug
2018-03-19 16:16:03,616 main.py[line: 22] INFO: 当前运行计划编号为：4
2018-03-19 16:16:03,617 main.py[line: 67] INFO: 调试模式
2018-03-19 16:16:09,642 debug.py[line: 23] INFO: 正在查询项目[ID：4]相关信息
2018-03-19 16:16:09,643 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：('4',)
2018-03-19 16:16:09,644 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 16:16:09,652 debug.py[line: 29] INFO: 正在查询与项目关联的数据库信息
2018-03-19 16:16:09,652 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：('4', '测试环境')
2018-03-19 16:16:09,706 debug.py[line: 43] INFO: 正在查询与项目关联的全局变量
2018-03-19 16:16:09,707 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：('4', '测试环境')
2018-03-19 16:16:09,724 debug.py[line: 70] INFO: 正在查询输入ID标识的用例(套件)相关信息
2018-03-19 16:16:09,724 mydb.py[line: 122] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 4 AND id = 327  data：
2018-03-19 16:16:09,724 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 4 AND id = 327
2018-03-19 16:16:09,731 mydb.py[line: 152] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 4 AND parent_id = 327  AND id NOT IN (SELECT parent_id FROM `website_api_case_tree` WHERE project_id=4)ORDER BY `order` ASC  data：
2018-03-19 16:16:09,749 debug.py[line: 95] INFO: 输入ID标识的是测试用例，开始执行用例
2018-03-19 16:16:09,749 debug.py[line: 97] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 16:16:09,749 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 16:16:09,750 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 16:16:09,758 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:16:09,758 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 16:16:09,758 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:16:09,759 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:16:09,759 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:16:09,759 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:16:09,760 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:16:09,760 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'global_monthly_code1': '2017112815'}
2018-03-19 16:16:09,760 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 16:16:09,760 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:16:09,761 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:16:09,761 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'global_monthly_code1': '2017112815'}
2018-03-19 16:16:09,762 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:16:09,762 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:16:09,763 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/action/getDateAndTime
2018-03-19 16:16:09,763 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 16:16:09,763 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:16:09,825 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：UTF-8-SIG, 正在对服务器返回body进行解码
2018-03-19 16:16:09,972 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:16:09 GMT'), ('Content-Type', 'text/html; charset=UTF-8'), ('Content-Length', '58117'), ('Connection', 'close'), ('Content-Language', 'en-US'), ('Last-Modified', 'Thu, 01 Mar 2018 00:41:24 GMT')]
2018-03-19 16:16:09,972 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:16:09,972 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:16:09,973 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,973 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:16:09,973 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,973 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,974 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-
2018-03-19 16:16:09,974 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,974 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:16:09,974 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,975 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,975 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-
2018-03-19 16:16:09,975 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,976 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 16:16:09,976 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,976 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,976 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-
2018-03-19 16:16:09,977 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,977 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 16:16:09,977 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,978 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,978 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-
2018-03-19 16:16:09,978 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,978 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 16:16:09,979 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,979 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,979 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-
2018-03-19 16:16:09,979 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,980 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 16:16:09,980 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,980 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,980 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-
2018-03-19 16:16:09,981 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,981 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 16:16:09,981 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,981 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,982 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-
2018-03-19 16:16:09,982 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,982 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 16:16:09,982 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,983 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,983 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-
2018-03-19 16:16:09,983 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,983 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:16:09,983 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,984 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,984 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-
2018-03-19 16:16:09,984 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,984 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:16:09,985 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,985 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,985 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-
2018-03-19 16:16:09,985 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,986 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 16:16:09,986 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,986 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,986 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-
2018-03-19 16:16:09,986 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,987 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 16:16:09,987 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,987 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,987 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-
2018-03-19 16:16:09,987 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,988 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 16:16:09,988 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,988 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,988 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-
2018-03-19 16:16:09,989 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,989 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 16:16:09,989 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,989 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,990 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-
2018-03-19 16:16:09,990 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,991 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 16:16:09,991 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,991 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,991 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-
2018-03-19 16:16:09,992 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,992 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 16:16:09,992 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,993 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,993 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-
2018-03-19 16:16:09,994 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,994 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 16:16:09,994 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,994 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,995 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-
2018-03-19 16:16:09,995 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,995 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 16:16:09,995 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,996 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,996 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-
2018-03-19 16:16:09,996 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,996 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:16:09,996 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,997 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,997 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-
2018-03-19 16:16:09,997 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,997 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 16:16:09,998 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,998 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,998 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-
2018-03-19 16:16:09,998 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:09,998 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 16:16:09,999 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:09,999 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:09,999 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-
2018-03-19 16:16:09,999 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,000 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 16:16:10,000 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,000 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,000 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-
2018-03-19 16:16:10,001 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,001 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:16:10,001 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,001 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,002 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-
2018-03-19 16:16:10,002 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,002 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 16:16:10,002 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,002 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,003 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-
2018-03-19 16:16:10,003 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,003 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 16:16:10,003 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,003 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,004 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-
2018-03-19 16:16:10,004 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,004 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 16:16:10,004 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,004 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,005 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-
2018-03-19 16:16:10,005 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,005 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 16:16:10,005 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,006 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,006 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-
2018-03-19 16:16:10,006 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,006 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 16:16:10,006 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,007 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,007 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-
2018-03-19 16:16:10,007 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,007 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:16:10,008 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,008 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,008 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-
2018-03-19 16:16:10,008 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,008 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 16:16:10,009 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,009 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,009 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-
2018-03-19 16:16:10,009 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,010 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 16:16:10,010 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,010 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,010 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-
2018-03-19 16:16:10,010 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,011 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 16:16:10,011 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,011 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,011 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-
2018-03-19 16:16:10,011 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,011 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:16:10,012 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,012 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,012 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-
2018-03-19 16:16:10,012 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,012 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 16:16:10,013 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,013 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,013 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-
2018-03-19 16:16:10,013 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,014 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 16:16:10,014 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,014 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,015 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-
2018-03-19 16:16:10,015 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,015 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 16:16:10,016 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,016 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,017 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-
2018-03-19 16:16:10,017 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,018 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:16:10,019 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,019 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,019 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-
2018-03-19 16:16:10,020 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,020 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 16:16:10,021 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,021 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,021 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-
2018-03-19 16:16:10,022 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,022 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:16:10,022 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,024 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,025 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-
2018-03-19 16:16:10,025 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,026 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 16:16:10,026 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,026 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,026 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-
2018-03-19 16:16:10,027 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,027 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:16:10,027 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,028 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,028 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-
2018-03-19 16:16:10,028 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,029 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 16:16:10,029 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,029 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,030 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-
2018-03-19 16:16:10,030 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,030 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 16:16:10,030 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,031 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,031 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-
2018-03-19 16:16:10,031 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,032 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 16:16:10,032 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,032 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,032 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-
2018-03-19 16:16:10,033 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,033 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 16:16:10,033 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,033 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,034 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-
2018-03-19 16:16:10,034 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:16:10,034 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:16:10,034 unittesttestcase.py[line: 296] ERROR: 转换服务器返回内容为字典失败：Unexpected UTF-8 BOM (decode using utf-8-sig)
2018-03-19 16:16:10,035 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：
2018-03-19 16:16:10,035 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-
2018-03-19 16:16:10,035 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:16:10,035 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:16:10,036 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:16:10,036 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_username': 'dataviewer', 'last_month_final_day_yyyy_mm_dd': '', 'pre_weekday1_yyyy_mm_dd': '', 'last_month_final_day_yyyymmdd': '', 'weekday1_yyyymmdd': '', 'current_month_last_year_yyyy_mm': '', 'last_month_yyyy_mm': '', 'yesterday_yyyy_mm_dd': '', 'current_week_num_yyyy_mm': '', 'weekday7_yyyy_mm_dd': '', 'pre_weekday7_yyyymmdd': '', 'last_month_first_day_yyyy_mm_dd': '', 'curmonth_final_day_yyyymmdd': '', 'millisecond_for_curtime': '', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyy_mm': '', 'current_week_num_yyyymm': '', 'curtime': '', 'curmonth_first_day_yyyymmdd': '', 'lastmonth_range_yyyy_mm_dd': '', 'next_month_first_day_yyyymmdd': '', 'current_month_last_year_yyyymm': '', 'weekday7_yyyymmdd': '', 'current_month_yyyy_mm': '', 'pre_weekday7_yyyy_mm_dd': '', 'last_month_yyyymm': '', 'lastmonth_range_yyyymmdd': '', 'recent_30day_range_yyyymmdd': '', 'curmonth_range_yyyymmdd': '', 'millisecond_for_curdate': '', 'next_month_first_day_yyyy_mm_dd': '', 'last_weekday7_yyyymmdd': '', 'last_month_first_day_yyyymmdd': '', 'curmonth_final_day_yyyy_mm_dd': '', 'curmonth_range_yyyy_mm_dd': '', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyy_mm_dd': '', 'yesterday_yyyymmdd': '', 'today_yyyymmdd': '', 'today_yyyy_mm_dd': '', 'recent_7day_range_yyyy_mm_dd': '', 'global_mobile': '18110000014', 'curmonth_first_day_yyyy_mm_dd': '', 'current_month_yyyymm': '', 'recent_7day_range_yyyymmdd': '', 'weekday1_yyyy_mm_dd': '', 'pre_weekday1_yyyymmdd': '', 'december_month_last_year_yyyymm': '', 'millisecond_for_yesterday': '', 'last_weekday7_yyyy_mm_dd': ''}
2018-03-19 16:16:10,036 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 16:16:10,037 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 16:16:10,057 test_case.py[line: 85] ERROR: 步骤[第 1 步, 步骤ID: 771]运行失败
2018-03-19 16:16:10,058 debug.py[line: 122] INFO: 正在释放资源
2018-03-19 16:16:10,058 debug.py[line: 123] INFO: 正在断开与项目关联的数据库连接
2018-03-19 16:16:10,058 debug.py[line: 129] INFO: 正在清理与项目关联的全局变量
2018-03-19 16:17:05,785 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 16:17:05,785 main.py[line: 19] INFO: 当前运行模式为：debug
2018-03-19 16:17:05,786 main.py[line: 22] INFO: 当前运行计划编号为：4
2018-03-19 16:17:05,786 main.py[line: 67] INFO: 调试模式
2018-03-19 16:17:12,750 debug.py[line: 23] INFO: 正在查询项目[ID：4]相关信息
2018-03-19 16:17:12,752 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：('4',)
2018-03-19 16:17:12,752 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 16:17:12,763 debug.py[line: 29] INFO: 正在查询与项目关联的数据库信息
2018-03-19 16:17:12,763 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：('4', '测试环境')
2018-03-19 16:17:12,820 debug.py[line: 43] INFO: 正在查询与项目关联的全局变量
2018-03-19 16:17:12,820 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND environment= %s  data：('4', '测试环境')
2018-03-19 16:17:12,836 debug.py[line: 70] INFO: 正在查询输入ID标识的用例(套件)相关信息
2018-03-19 16:17:12,836 mydb.py[line: 122] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 4 AND id = 327  data：
2018-03-19 16:17:12,837 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 4 AND id = 327
2018-03-19 16:17:12,843 mydb.py[line: 152] INFO: query：SELECT id, text FROM `website_api_case_tree` WHERE project_id = 4 AND parent_id = 327  AND id NOT IN (SELECT parent_id FROM `website_api_case_tree` WHERE project_id=4)ORDER BY `order` ASC  data：
2018-03-19 16:17:12,861 debug.py[line: 95] INFO: 输入ID标识的是测试用例，开始执行用例
2018-03-19 16:17:12,862 debug.py[line: 97] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 16:17:12,862 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 16:17:12,862 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 16:17:12,871 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:17:12,871 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 16:17:12,872 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:17:12,872 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:17:12,872 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:17:12,872 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:17:12,873 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:17:12,873 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815'}
2018-03-19 16:17:12,873 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 16:17:12,874 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:17:12,874 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-19 16:17:12,874 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815'}
2018-03-19 16:17:12,875 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-19 16:17:12,875 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-19 16:17:12,875 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:17:12,876 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-19 16:17:12,876 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 16:17:12,876 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:17:12,925 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 16:17:12,971 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"next_month_first_day_yyyy_mm_dd": "2018-04-01", "recent_7day_range_yyyy_mm_dd": "2018-03-12-2018-03-18", "last_weekday7_yyyymmdd": "20180318", "current_month_last_year_yyyymm": "2017-03", "curtime": "2018-03-19 16:17:12", "current_month_last_year_yyyy_mm": "2017-03", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "next_month_first_day_yyyymmdd": "20180401", "current_month_yyyymm": "201803", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday1_yyyymmdd": "20180305", "recent_30day_range_yyyy_mm_dd": "20180217-20180318", "last_month_first_day_yyyymmdd": "20180201", "last_weekday7_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyymm": "201812", "curmonth_range_yyyymmdd": "20180301-20180331", "december_month_last_year_yyyymm": "201712", "weekday7_yyyymmdd": "20180325", "current_month_yyyy_mm": "2018-03", "weekday1_yyyy_mm_dd": "20180319", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_month_yyyymm": "201802", "weekday1_yyyymmdd": "20180319", "yesterday_yyyymmdd": "20180318", "lastmonth_range_yyyymmdd": "20180301-20180331", "today_yyyymmdd": "20180319", "millisecond_for_curdate": 1521388800000, "millisecond_for_yesterday": 1521302400000, "last_month_final_day_yyyymmdd": "20180228", "pre_weekday7_yyyymmdd": "20180311", "last_month_yyyy_mm": "2018-02", "december_month_last_year_yyyy_mm": "2017-12", "today_yyyy_mm_dd": "2018-03-19", "curmonth_first_day_yyyymmdd": "20180301", "yesterday_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyy_mm": "2018-12", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "recent_7day_range_yyyymmdd": "20180312-20180318", "millisecond_for_curtime": 1521447432000, "weekday7_yyyy_mm_dd": "20180325", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "recent_30day_range_yyyymmdd": "2018-02-17-2018-03-18"}
2018-03-19 16:17:12,971 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Mon, 19 Mar 2018 08:17:12 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-19 16:17:12,971 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:17:12,972 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:17:12,972 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,972 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 16:17:12,972 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521447432000
2018-03-19 16:17:12,972 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521447432000
2018-03-19 16:17:12,973 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521447432000
2018-03-19 16:17:12,973 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,973 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,973 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-19 16:17:12,973 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-19 16:17:12,974 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-19 16:17:12,975 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,975 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 16:17:12,975 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521302400000
2018-03-19 16:17:12,976 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521302400000
2018-03-19 16:17:12,976 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521302400000
2018-03-19 16:17:12,977 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,977 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 16:17:12,978 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:17:12,978 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:17:12,979 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-19 16:17:12,979 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,979 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 16:17:12,979 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:17:12,980 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:17:12,980 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:17:12,980 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,980 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 16:17:12,981 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-19 16:17:12,981 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-19 16:17:12,981 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-19 16:17:12,981 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,981 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 16:17:12,982 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-19 16:17:12,982 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-19 16:17:12,982 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-19 16:17:12,982 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,983 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 16:17:12,983 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-19 16:17:12,983 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-19 16:17:12,983 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-19 16:17:12,984 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,984 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,984 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-19 16:17:12,984 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-19 16:17:12,985 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-19 16:17:12,985 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,985 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 16:17:12,985 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-19 16:17:12,986 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-19 16:17:12,986 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521388800000
2018-03-19 16:17:12,986 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,986 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,987 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-19 16:17:12,987 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-19 16:17:12,987 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-19 16:17:12,987 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,988 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,988 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:17:12,988 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:17:12,988 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-19 16:17:12,988 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,989 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 16:17:12,989 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-19 16:17:12,989 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-19 16:17:12,989 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-19 16:17:12,989 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,990 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 16:17:12,990 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-19 16:17:12,990 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-19 16:17:12,990 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-19 16:17:12,990 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,991 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,991 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 16:17:12,991 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 16:17:12,991 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 16:17:12,992 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,992 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 16:17:12,992 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-19 16:17:12,992 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-19 16:17:12,992 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-19 16:17:12,993 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,993 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,993 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:17:12,993 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:17:12,994 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-19 16:17:12,994 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,994 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,994 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-19 16:17:12,995 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-19 16:17:12,995 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-19 16:17:12,995 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,995 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,996 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:17:12,996 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:17:12,996 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:17:12,996 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,996 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,997 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-19 16:17:12,997 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-19 16:17:12,997 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-19 16:17:12,997 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,997 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,998 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180217-20180318
2018-03-19 16:17:12,998 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180217-20180318
2018-03-19 16:17:12,998 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180217-20180318
2018-03-19 16:17:12,998 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,998 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 16:17:12,999 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-19 16:17:12,999 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-19 16:17:12,999 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-19
2018-03-19 16:17:12,999 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:12,999 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 16:17:13,000 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-19 16:17:13,000 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-19 16:17:13,000 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-19 16:17:13,000 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,000 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 16:17:13,001 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-19 16:17:13,001 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-19 16:17:13,001 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-19 16:17:13,001 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,001 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 16:17:13,002 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-19 16:17:13,002 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-19 16:17:13,002 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-19 16:17:13,002 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,002 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 16:17:13,003 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:17:13,003 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:17:13,003 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:17:13,003 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,003 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 16:17:13,004 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:17:13,004 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:17:13,004 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-19 16:17:13,004 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,004 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 16:17:13,005 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:17:13,005 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:17:13,005 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-19 16:17:13,005 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,005 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 16:17:13,006 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:17:13,006 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:17:13,006 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180319
2018-03-19 16:17:13,006 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,006 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 16:17:13,007 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-19 16:17:13,007 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-19 16:17:13,007 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-19 16:17:13,007 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,007 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 16:17:13,008 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:17:13,008 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:17:13,008 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-18
2018-03-19 16:17:13,008 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,008 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 16:17:13,009 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:17:13,009 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:17:13,009 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-19 16:17:13,009 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,010 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:17:13,010 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:17:13,010 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:17:13,011 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:17:13,011 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,011 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 16:17:13,012 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-19 16:17:13,012 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-19 16:17:13,012 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-19 16:17:13,012 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,012 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:17:13,013 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-19 16:17:13,013 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-19 16:17:13,013 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-19 16:17:13,013 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,013 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 16:17:13,014 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:17:13,014 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:17:13,014 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-19 16:17:13,014 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,014 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 16:17:13,015 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19 16:17:12
2018-03-19 16:17:13,015 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19 16:17:12
2018-03-19 16:17:13,015 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-19 16:17:12
2018-03-19 16:17:13,015 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,015 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:17:13,016 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:17:13,016 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:17:13,016 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-19 16:17:13,016 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,016 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 16:17:13,017 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-19 16:17:13,017 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-19 16:17:13,017 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-19 16:17:13,017 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,017 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 16:17:13,017 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 16:17:13,018 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 16:17:13,018 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180312-20180318
2018-03-19 16:17:13,018 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,019 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 16:17:13,019 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-19 16:17:13,019 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-19 16:17:13,019 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-19 16:17:13,020 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,020 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 16:17:13,020 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-19 16:17:13,020 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-19 16:17:13,020 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-19 16:17:13,021 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,021 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 16:17:13,021 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-17-2018-03-18
2018-03-19 16:17:13,022 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-17-2018-03-18
2018-03-19 16:17:13,022 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-17-2018-03-18
2018-03-19 16:17:13,022 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,023 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:17:13,023 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-19 16:17:13,023 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-19 16:17:13,023 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-19 16:17:13,024 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,024 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 16:17:13,025 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-19 16:17:13,025 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-19 16:17:13,025 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-19 16:17:13,025 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:17:13,025 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 16:17:13,026 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:17:13,027 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:17:13,027 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180318
2018-03-19 16:17:13,027 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:17:13,027 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:17:13,027 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:17:13,028 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_curtime': 1521447432000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'global_platform_host': '10.118.59.84', 'last_month_yyyymm': '201802', 'current_month_yyyymm': '201803', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyymmdd': '20180228', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'curmonth_final_day_yyyymmdd': '20180331', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curdate': 1521388800000, 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyy_mm_dd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'millisecond_for_yesterday': 1521302400000, 'december_month_last_year_yyyymm': '201712', 'last_month_first_day_yyyymmdd': '20180201', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'today_yyyymmdd': '20180319', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'curtime': '2018-03-19 16:17:12', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyymm': '201812', 'global_mobile': '18110000014', 'next_month_first_day_yyyymmdd': '20180401', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'current_month_last_year_yyyy_mm': '2017-03', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:17:13,028 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 16:17:13,028 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 16:17:13,029 debug.py[line: 122] INFO: 正在释放资源
2018-03-19 16:17:13,029 debug.py[line: 123] INFO: 正在断开与项目关联的数据库连接
2018-03-19 16:17:13,030 debug.py[line: 129] INFO: 正在清理与项目关联的全局变量
2018-03-19 16:42:19,070 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 16:42:19,071 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-19 16:42:19,071 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-19 16:42:19,072 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-19 16:42:19,072 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-19 16:42:19,072 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-19 16:42:19,072 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-19 16:42:19,089 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-19 16:42:19,089 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-19 16:42:19,090 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-19 16:42:19,090 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-19 16:42:19,090 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 16:42:19,096 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-19 16:42:19,097 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 16:42:19,147 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-19 16:42:19,147 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 16:42:19,163 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-19 16:42:19,163 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-19 16:42:19,164 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-19 16:42:19,164 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-19 16:42:19,164 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-19 16:42:19,170 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:42:19,171 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-19 16:42:19,171 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-19 16:42:19,189 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-19 16:42:19,189 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-19 16:42:19,195 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:42:19,195 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:42:19,202 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:42:19,202 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:42:19,209 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:42:19,209 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-19 16:42:19,285 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:42:19,285 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-19 16:42:19,286 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-19 16:42:19,296 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:42:19,296 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:42:19,303 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:42:19,304 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:42:19,310 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:42:19,310 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:42:19,316 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:42:19,316 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-19 16:42:19,378 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:42:19,379 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-19 16:42:19,379 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-19 16:42:19,385 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-19 16:42:19,385 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-19 16:42:19,392 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:42:19,392 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:42:19,397 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:42:19,397 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:42:19,402 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:42:19,402 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:42:19,409 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:42:19,409 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-19 16:42:19,478 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:42:19,478 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-19 16:42:19,479 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-19 16:42:19,484 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:42:19,484 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:42:19,492 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:42:19,493 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:42:19,499 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:42:19,499 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:42:19,506 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:42:19,506 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-19 16:42:19,620 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:42:19,620 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-19 16:42:19,620 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-19 16:42:19,626 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-19 16:42:19,626 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-19 16:42:19,631 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:42:19,631 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:42:19,638 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:42:19,638 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:42:19,644 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:42:19,644 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:42:19,650 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:42:19,650 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-19 16:42:19,727 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:42:19,728 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(324,)
2018-03-19 16:42:19,728 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 324
2018-03-19 16:42:19,734 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 16:42:19,734 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 16:42:19,742 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 16:42:19,742 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 16:42:19,756 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 16:42:19,757 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 16:42:19,763 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 16:42:19,763 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 16:42:19,778 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:42:19,779 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:42:19,787 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:42:19,788 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:42:19,794 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:42:19,794 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 324
2018-03-19 16:42:19,861 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:42:19,861 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-19 16:42:19,862 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-19 16:42:19,867 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:42:19,868 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:42:19,873 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:42:19,874 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:42:19,878 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:42:19,878 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-19 16:42:19,950 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-19 16:42:19,951 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-19 16:42:19,952 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-19 16:42:19,953 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-19 16:42:19,961 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-19 16:42:19,962 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-19 16:42:19,962 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-19 16:42:19,969 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 16:42:19,970 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 16:42:19,970 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 16:42:19,990 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:42:19,991 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 16:42:19,991 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:42:19,992 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:42:19,992 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:42:19,992 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:42:19,993 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:19,993 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84'}
2018-03-19 16:42:19,993 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 16:42:19,993 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:42:19,994 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-19 16:42:19,994 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84'}
2018-03-19 16:42:19,994 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-19 16:42:19,994 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-19 16:42:19,995 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:42:19,995 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-19 16:42:19,995 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 16:42:19,995 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:42:20,019 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 16:42:20,025 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"next_month_first_day_yyyy_mm_dd": "2018-04-01", "recent_7day_range_yyyy_mm_dd": "2018-03-12-2018-03-18", "last_weekday7_yyyymmdd": "20180318", "current_month_last_year_yyyymm": "2017-03", "curtime": "2018-03-19 16:42:19", "current_month_last_year_yyyy_mm": "2017-03", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "next_month_first_day_yyyymmdd": "20180401", "current_month_yyyymm": "201803", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday1_yyyymmdd": "20180305", "recent_30day_range_yyyy_mm_dd": "20180217-20180318", "last_month_first_day_yyyymmdd": "20180201", "last_weekday7_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyymm": "201812", "curmonth_range_yyyymmdd": "20180301-20180331", "december_month_last_year_yyyymm": "201712", "weekday7_yyyymmdd": "20180325", "current_month_yyyy_mm": "2018-03", "weekday1_yyyy_mm_dd": "20180319", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_month_yyyymm": "201802", "weekday1_yyyymmdd": "20180319", "yesterday_yyyymmdd": "20180318", "lastmonth_range_yyyymmdd": "20180301-20180331", "today_yyyymmdd": "20180319", "millisecond_for_curdate": 1521388800000, "millisecond_for_yesterday": 1521302400000, "last_month_final_day_yyyymmdd": "20180228", "pre_weekday7_yyyymmdd": "20180311", "last_month_yyyy_mm": "2018-02", "december_month_last_year_yyyy_mm": "2017-12", "today_yyyy_mm_dd": "2018-03-19", "curmonth_first_day_yyyymmdd": "20180301", "yesterday_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyy_mm": "2018-12", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "recent_7day_range_yyyymmdd": "20180312-20180318", "millisecond_for_curtime": 1521448939000, "weekday7_yyyy_mm_dd": "20180325", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "recent_30day_range_yyyymmdd": "2018-02-17-2018-03-18"}
2018-03-19 16:42:20,025 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Mon, 19 Mar 2018 08:42:19 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-19 16:42:20,025 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:42:20,026 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:42:20,026 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,026 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,027 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-19 16:42:20,027 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-19 16:42:20,027 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-19 16:42:20,027 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,027 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 16:42:20,028 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-19 16:42:20,028 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-19 16:42:20,028 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-19 16:42:20,028 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,029 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 16:42:20,029 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:42:20,029 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:42:20,029 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:42:20,030 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,030 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,030 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180217-20180318
2018-03-19 16:42:20,030 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180217-20180318
2018-03-19 16:42:20,031 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180217-20180318
2018-03-19 16:42:20,031 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,031 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 16:42:20,031 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-19 16:42:20,032 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-19 16:42:20,033 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-19 16:42:20,033 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,033 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 16:42:20,034 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521302400000
2018-03-19 16:42:20,034 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521302400000
2018-03-19 16:42:20,034 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521302400000
2018-03-19 16:42:20,034 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,034 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 16:42:20,035 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-19 16:42:20,035 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-19 16:42:20,035 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-19 16:42:20,036 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,038 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 16:42:20,039 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:42:20,039 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:42:20,040 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-19 16:42:20,040 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,040 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,041 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-19 16:42:20,041 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-19 16:42:20,041 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-19 16:42:20,042 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,042 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,042 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:42:20,042 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:42:20,043 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-19 16:42:20,043 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,043 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,043 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 16:42:20,044 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 16:42:20,044 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 16:42:20,044 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,044 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 16:42:20,045 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-19 16:42:20,045 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-19 16:42:20,046 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-19 16:42:20,047 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,047 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 16:42:20,048 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-19 16:42:20,048 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-19 16:42:20,048 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-19 16:42:20,049 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,058 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 16:42:20,059 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-19 16:42:20,059 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-19 16:42:20,059 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-19 16:42:20,059 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,060 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,060 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-19 16:42:20,060 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-19 16:42:20,060 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-19 16:42:20,060 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,061 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 16:42:20,061 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-17-2018-03-18
2018-03-19 16:42:20,061 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-17-2018-03-18
2018-03-19 16:42:20,061 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-17-2018-03-18
2018-03-19 16:42:20,061 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,062 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 16:42:20,062 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19 16:42:19
2018-03-19 16:42:20,062 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19 16:42:19
2018-03-19 16:42:20,062 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-19 16:42:19
2018-03-19 16:42:20,063 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,063 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 16:42:20,063 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-19 16:42:20,063 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-19 16:42:20,063 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-19 16:42:20,064 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,064 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 16:42:20,064 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:42:20,064 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:42:20,064 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-19 16:42:20,065 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,065 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 16:42:20,065 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-19 16:42:20,065 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-19 16:42:20,065 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-19 16:42:20,066 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,066 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 16:42:20,066 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:42:20,066 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:42:20,067 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180318
2018-03-19 16:42:20,067 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,067 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,067 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-19 16:42:20,067 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-19 16:42:20,068 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-19 16:42:20,068 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,068 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 16:42:20,068 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-19 16:42:20,068 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-19 16:42:20,069 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-19 16:42:20,069 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,069 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 16:42:20,070 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-19 16:42:20,070 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-19 16:42:20,071 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-19 16:42:20,071 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,071 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,071 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-19 16:42:20,072 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-19 16:42:20,072 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-19 16:42:20,072 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,072 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 16:42:20,072 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:42:20,073 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:42:20,073 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180319
2018-03-19 16:42:20,073 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,073 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,073 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-19 16:42:20,074 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-19 16:42:20,074 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-19 16:42:20,074 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,074 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 16:42:20,074 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-19 16:42:20,075 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-19 16:42:20,075 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-19 16:42:20,075 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,075 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 16:42:20,075 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521448939000
2018-03-19 16:42:20,076 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521448939000
2018-03-19 16:42:20,076 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521448939000
2018-03-19 16:42:20,076 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,076 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 16:42:20,076 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-19 16:42:20,077 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-19 16:42:20,077 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-19 16:42:20,077 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,077 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 16:42:20,077 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-19 16:42:20,078 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-19 16:42:20,078 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-19 16:42:20,079 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,079 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 16:42:20,079 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-19 16:42:20,079 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-19 16:42:20,079 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-19 16:42:20,080 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,080 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,080 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:42:20,080 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:42:20,080 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-19 16:42:20,081 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,081 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 16:42:20,081 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-19 16:42:20,081 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-19 16:42:20,081 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521388800000
2018-03-19 16:42:20,082 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,082 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,082 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:42:20,082 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:42:20,082 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:42:20,083 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,083 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 16:42:20,083 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:42:20,083 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:42:20,083 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-19 16:42:20,084 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,084 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,084 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:42:20,084 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:42:20,084 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-18
2018-03-19 16:42:20,085 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,085 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 16:42:20,085 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-19 16:42:20,085 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-19 16:42:20,085 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-19 16:42:20,086 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,086 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 16:42:20,086 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 16:42:20,087 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 16:42:20,087 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180312-20180318
2018-03-19 16:42:20,087 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,088 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,089 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-19 16:42:20,089 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-19 16:42:20,090 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-19 16:42:20,090 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,090 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,091 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:42:20,091 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:42:20,092 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:42:20,092 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,092 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 16:42:20,093 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:42:20,093 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:42:20,093 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:42:20,094 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,095 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,095 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-19 16:42:20,096 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-19 16:42:20,096 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-19
2018-03-19 16:42:20,096 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,097 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:42:20,097 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:42:20,097 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:42:20,097 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-19 16:42:20,098 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,098 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 16:42:20,098 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:42:20,098 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:42:20,098 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-19 16:42:20,099 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:42:20,099 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 16:42:20,100 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:42:20,100 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:42:20,100 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-19 16:42:20,100 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:42:20,100 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:42:20,101 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,101 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,101 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 16:42:20,101 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 16:42:20,102 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-19 16:42:20,102 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-19 16:42:20,102 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-19 16:42:20,110 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:42:20,110 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-19 16:42:20,110 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-19 16:42:20,110 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-19 16:42:20,111 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-19 16:42:20,111 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-19 16:42:20,117 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:42:20,117 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-19 16:42:20,117 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:42:20,117 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:42:20,118 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:42:20,118 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:42:20,118 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,118 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,118 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-19 16:42:20,119 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:42:20,119 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,119 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,120 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:42:20,120 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-19 16:42:20,121 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-19 16:42:20,121 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-19 16:42:20,222 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-19 16:42:20,223 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-19 16:42:20,228 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:42:20 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1obufqkschf5pnpi7xkup5tkd;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-19 16:42:20,229 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:42:20,229 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-19 16:42:20,229 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-19 16:42:20,230 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:42:20,230 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,230 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,231 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-19 16:42:20,231 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-19 16:42:20,232 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-19 16:42:20,232 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:42:20,232 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:42:20,232 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:42:20,233 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 16:42:20,233 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-19 16:42:20,234 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,235 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-19 16:42:20,235 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-19 16:42:20,235 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:42:20,235 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,236 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,238 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-19 16:42:20,238 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:42:20,238 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,239 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,239 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:42:20,242 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:42:20,242 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-19 16:42:20,242 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-19 16:42:20,243 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:42:20,361 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 16:42:20,361 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-19 16:42:20,361 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:42:20 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 18-Mar-2018 08:42:20 GMT')]
2018-03-19 16:42:20,361 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:42:20,362 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:42:20,362 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:42:20,362 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:42:20,362 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,362 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,363 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-19 16:42:20,363 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-19 16:42:20,364 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-19 16:42:20,364 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-19 16:42:20,364 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-19 16:42:20,372 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:42:20,373 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-19 16:42:20,373 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 16:42:20,373 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-19 16:42:20,373 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 16:42:20,374 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:42:20,374 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,374 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,374 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 16:42:20,374 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:42:20,375 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,375 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,377 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:42:20,377 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-19 16:42:20,377 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 16:42:20,383 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-13', '2018-03-19'], flag：True
2018-03-19 16:42:20,383 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 16:42:20,383 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 16:42:20,384 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 16:42:20,384 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 16:42:20,384 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID324-库存查询(近7天查询), ID:324]======================
2018-03-19 16:42:20,385 test_case.py[line: 32] INFO: 正在查询测试用例[ID：324, 名称：ID324-库存查询(近7天查询)]关联的测试步骤
2018-03-19 16:42:20,385 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(324,)
2018-03-19 16:42:20,392 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:42:20,393 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 767]======================
2018-03-19 16:42:20,393 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:42:20,393 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:42:20,393 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:42:20,393 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 16:42:20,393 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$recent_7day_range_yyyymmdd$', '$recent_7day_range_yyyymmdd$']
2018-03-19 16:42:20,394 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'before7day1': '2018-03-13', 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,394 test_case_step.py[line: 58] INFO: 正在替换动态变量：$recent_7day_range_yyyymmdd$
2018-03-19 16:42:20,394 test_case_step.py[line: 58] INFO: 正在替换动态变量：$recent_7day_range_yyyymmdd$
2018-03-19 16:42:20,394 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=20180312-20180318&dataType=recent07&dataRange=20180312-20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-19 16:42:20,395 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:42:20,395 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,395 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'before7day1': '2018-03-13', 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,395 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-19 16:42:20,395 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:42:20,396 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,396 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'before7day1': '2018-03-13', 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,396 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:42:20,397 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:42:20,397 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-19 16:42:20,397 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=20180312-20180318&dataType=recent07&dataRange=20180312-20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-19 16:42:20,397 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:42:20,443 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-19 16:42:20,443 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"9","inventoryAvgAge":18,"item":"2773088849104717","itemName":"Tmall-2773088849104717","periodSaleNum":"0","rowCount":null,"totalQty":"9","warehouseName":"全部仓库"},{"availableQty":"9","inventoryAvgAge":19,"item":"2773059448247620","itemName":"Tmall-2773059448247620-HTKY-.48","periodSaleNum":"0","rowCount":null,"totalQty":"19","warehouseName":"全部仓库"},{"availableQty":"19","inventoryAvgAge":29,"item":"2773056891503752","itemName":"Tmall-2773056891503752-YUNDA-.95","periodSaleNum":"0","rowCount":null,"totalQty":"29","warehouseName":"全部仓库"},{"availableQty":"29","inventoryAvgAge":39,"item":"2773053499128569","itemName":"Tmall-2773053499128569-STO-.48","periodSaleNum":"0","rowCount":null,"totalQty":"39","warehouseName":"全部仓库"},{"availableQty":"39","inventoryAvgAge":49,"item":"2773033477477926","itemName":"Tmall-2773033477477926-ZTO-.35","periodSaleNum":"0","rowCount":null,"totalQty":"49","warehouseName":"全部仓库"},{"availableQty":"49","inventoryAvgAge":59,"item":"2773006252268526","itemName":"Tmall-2773006252268526-STO-.38","periodSaleNum":"0","rowCount":null,"totalQty":"59","warehouseName":"全部仓库"},{"availableQty":"59","inventoryAvgAge":69,"item":"2772951907071660","itemName":"Tmall-2772951907071660-ZTO-.14","periodSaleNum":"0","rowCount":null,"totalQty":"69","warehouseName":"全部仓库"},{"availableQty":"69","inventoryAvgAge":79,"item":"2772912467219813","itemName":"Tmall-2772912467219813-ZTO-.09","periodSaleNum":"0","rowCount":null,"totalQty":"79","warehouseName":"全部仓库"},{"availableQty":"79","inventoryAvgAge":89,"item":"2772900847191826","itemName":"Tmall-2772900847191826-SNSCDB001-.06","periodSaleNum":"0","rowCount":null,"totalQty":"89","warehouseName":"全部仓库"},{"availableQty":"89","inventoryAvgAge":99,"item":"2772843515665288","itemName":"Tmall-2772843515665288-POSTB-.41","periodSaleNum":"0","rowCount":null,"totalQty":"99","warehouseName":"全部仓库"}]}
2018-03-19 16:42:20,443 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:42:20 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2013'), ('Connection', 'close')]
2018-03-19 16:42:20,444 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:42:20,444 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:42:20,444 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:42:20,444 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:42:20,445 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,445 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'before7day1': '2018-03-13', 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,445 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-19 16:42:20,446 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-19 16:42:20,447 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-19 16:42:20,447 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-19 16:42:20,447 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-19 16:42:20,455 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:42:20,455 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-19 16:42:20,455 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 16:42:20,456 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-19 16:42:20,456 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 16:42:20,456 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:42:20,456 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,456 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'before7day1': '2018-03-13', 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,457 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 16:42:20,457 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:42:20,457 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:42:20,457 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyymmdd': '20180331', 'millisecond_for_yesterday': 1521302400000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521388800000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'curtime': '2018-03-19 16:42:19', 'weekday7_yyyymmdd': '20180325', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday7_yyyymmdd': '20180318', 'yesterday_yyyymmdd': '20180318', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'december_month_last_year_yyyy_mm': '2017-12', 'last_month_yyyy_mm': '2018-02', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'today_yyyymmdd': '20180319', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_yyyymm': '201803', 'millisecond_for_curtime': 1521448939000, 'before7day1': '2018-03-13', 'current_month_yyyy_mm': '2018-03', 'last_month_first_day_yyyymmdd': '20180201', 'next_month_first_day_yyyymmdd': '20180401', 'weekday1_yyyy_mm_dd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'yesterday_yyyy_mm_dd': '2018-03-18', 'global_mobile': '18110000014', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_week_num_yyyymm': '201812', 'today_yyyy_mm_dd': '2018-03-19', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'global_username': 'dataviewer'}
2018-03-19 16:42:20,459 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:42:20,459 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-19 16:42:20,460 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 16:42:20,468 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180318'], flag：True
2018-03-19 16:42:20,468 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 16:42:20,468 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 16:42:20,469 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 16:42:20,469 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 16:42:20,470 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-19 16:42:20,470 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-19 16:42:20,471 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-19 16:42:20,471 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-19 16:47:40,949 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 16:47:40,950 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-19 16:47:40,950 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-19 16:47:40,950 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-19 16:47:40,950 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-19 16:47:40,951 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-19 16:47:40,951 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-19 16:47:40,963 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-19 16:47:40,963 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-19 16:47:40,963 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-19 16:47:40,964 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-19 16:47:40,964 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 16:47:40,969 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-19 16:47:40,970 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 16:47:41,019 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-19 16:47:41,019 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 16:47:41,035 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-19 16:47:41,035 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-19 16:47:41,036 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-19 16:47:41,036 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-19 16:47:41,036 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-19 16:47:41,042 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:47:41,042 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-19 16:47:41,042 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-19 16:47:41,061 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-19 16:47:41,062 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-19 16:47:41,068 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:47:41,069 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:47:41,075 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:47:41,075 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:47:41,082 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:47:41,082 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-19 16:47:41,135 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:47:41,135 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-19 16:47:41,136 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-19 16:47:41,143 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:47:41,143 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:47:41,149 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:47:41,150 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:47:41,155 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:47:41,155 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:47:41,161 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:47:41,161 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-19 16:47:41,219 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:47:41,220 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-19 16:47:41,220 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-19 16:47:41,226 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-19 16:47:41,227 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-19 16:47:41,234 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:47:41,234 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:47:41,240 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:47:41,241 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:47:41,247 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:47:41,247 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:47:41,255 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:47:41,255 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-19 16:47:41,327 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:47:41,327 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-19 16:47:41,327 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-19 16:47:41,334 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:47:41,334 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:47:41,340 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:47:41,340 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:47:41,346 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:47:41,346 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:47:41,351 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:47:41,351 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-19 16:47:41,410 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:47:41,410 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-19 16:47:41,411 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-19 16:47:41,418 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-19 16:47:41,418 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-19 16:47:41,426 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:47:41,426 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:47:41,435 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:47:41,435 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:47:41,443 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:47:41,443 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:47:41,450 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:47:41,451 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-19 16:47:41,518 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:47:41,518 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(325,)
2018-03-19 16:47:41,519 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 325
2018-03-19 16:47:41,523 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 16:47:41,524 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 16:47:41,530 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 16:47:41,530 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 16:47:41,537 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 16:47:41,537 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 16:47:41,544 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 16:47:41,544 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 16:47:41,551 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:47:41,551 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:47:41,557 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:47:41,557 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:47:41,564 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:47:41,564 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 325
2018-03-19 16:47:41,635 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:47:41,635 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-19 16:47:41,635 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-19 16:47:41,642 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:47:41,642 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:47:41,649 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:47:41,650 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:47:41,656 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:47:41,656 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-19 16:47:41,718 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-19 16:47:41,718 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-19 16:47:41,719 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-19 16:47:41,719 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-19 16:47:41,725 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-19 16:47:41,725 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-19 16:47:41,725 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-19 16:47:41,734 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 16:47:41,734 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 16:47:41,734 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 16:47:41,740 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:47:41,741 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 16:47:41,741 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:47:41,741 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:47:41,741 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:47:41,742 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:47:41,742 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:41,742 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815'}
2018-03-19 16:47:41,742 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 16:47:41,743 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:47:41,743 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-19 16:47:41,743 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815'}
2018-03-19 16:47:41,743 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-19 16:47:41,743 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-19 16:47:41,744 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:47:41,744 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-19 16:47:41,744 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 16:47:41,744 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:47:41,839 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 16:47:41,843 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"next_month_first_day_yyyy_mm_dd": "2018-04-01", "recent_7day_range_yyyy_mm_dd": "2018-03-12-2018-03-18", "last_weekday7_yyyymmdd": "20180318", "current_month_last_year_yyyymm": "2017-03", "curtime": "2018-03-19 16:47:41", "current_month_last_year_yyyy_mm": "2017-03", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "next_month_first_day_yyyymmdd": "20180401", "current_month_yyyymm": "201803", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday1_yyyymmdd": "20180305", "recent_30day_range_yyyy_mm_dd": "20180217-20180318", "last_month_first_day_yyyymmdd": "20180201", "last_weekday7_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyymm": "201812", "curmonth_range_yyyymmdd": "20180301-20180331", "december_month_last_year_yyyymm": "201712", "weekday7_yyyymmdd": "20180325", "current_month_yyyy_mm": "2018-03", "weekday1_yyyy_mm_dd": "20180319", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_month_yyyymm": "201802", "weekday1_yyyymmdd": "20180319", "yesterday_yyyymmdd": "20180318", "lastmonth_range_yyyymmdd": "20180301-20180331", "today_yyyymmdd": "20180319", "millisecond_for_curdate": 1521388800000, "millisecond_for_yesterday": 1521302400000, "last_month_final_day_yyyymmdd": "20180228", "pre_weekday7_yyyymmdd": "20180311", "last_month_yyyy_mm": "2018-02", "december_month_last_year_yyyy_mm": "2017-12", "today_yyyy_mm_dd": "2018-03-19", "curmonth_first_day_yyyymmdd": "20180301", "yesterday_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyy_mm": "2018-12", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "recent_7day_range_yyyymmdd": "20180312-20180318", "millisecond_for_curtime": 1521449261000, "weekday7_yyyy_mm_dd": "20180325", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "recent_30day_range_yyyymmdd": "2018-02-17-2018-03-18"}
2018-03-19 16:47:41,843 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Mon, 19 Mar 2018 08:47:41 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-19 16:47:41,843 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:47:41,843 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:47:41,844 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,844 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,844 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-19 16:47:41,844 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-19 16:47:41,845 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-19 16:47:41,845 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,845 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 16:47:41,845 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:47:41,846 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:47:41,846 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-19 16:47:41,846 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,846 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,847 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-19 16:47:41,847 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-19 16:47:41,847 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-19 16:47:41,847 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,848 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,848 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180217-20180318
2018-03-19 16:47:41,848 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180217-20180318
2018-03-19 16:47:41,849 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180217-20180318
2018-03-19 16:47:41,849 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,849 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 16:47:41,849 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-19 16:47:41,850 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-19 16:47:41,850 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-19 16:47:41,850 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,850 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 16:47:41,851 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 16:47:41,851 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 16:47:41,851 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180312-20180318
2018-03-19 16:47:41,852 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,852 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 16:47:41,852 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:47:41,852 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:47:41,853 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-19 16:47:41,853 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,853 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 16:47:41,853 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:47:41,853 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:47:41,854 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180318
2018-03-19 16:47:41,854 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,854 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 16:47:41,854 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-19 16:47:41,855 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-19 16:47:41,855 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-19 16:47:41,855 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,855 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 16:47:41,856 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-19 16:47:41,856 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-19 16:47:41,856 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-19 16:47:41,856 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,857 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,857 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:47:41,858 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:47:41,858 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-19 16:47:41,858 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,858 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 16:47:41,859 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-17-2018-03-18
2018-03-19 16:47:41,859 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-17-2018-03-18
2018-03-19 16:47:41,859 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-17-2018-03-18
2018-03-19 16:47:41,859 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,859 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 16:47:41,860 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:47:41,860 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:47:41,860 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-19 16:47:41,860 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,861 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 16:47:41,861 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:47:41,861 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:47:41,861 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180319
2018-03-19 16:47:41,861 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,862 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 16:47:41,862 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-19 16:47:41,862 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-19 16:47:41,862 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-19 16:47:41,862 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,863 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 16:47:41,863 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-19 16:47:41,863 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-19 16:47:41,863 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-19 16:47:41,864 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,864 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,864 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 16:47:41,864 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 16:47:41,865 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 16:47:41,865 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,866 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 16:47:41,866 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-19 16:47:41,866 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-19 16:47:41,866 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-19 16:47:41,867 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,867 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 16:47:41,867 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-19 16:47:41,867 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-19 16:47:41,868 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521388800000
2018-03-19 16:47:41,868 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,868 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,868 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-19 16:47:41,869 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-19 16:47:41,869 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-19 16:47:41,869 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,869 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,870 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-19 16:47:41,870 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-19 16:47:41,870 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-19 16:47:41,871 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,871 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,871 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:47:41,872 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:47:41,872 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:47:41,872 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,873 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 16:47:41,873 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521302400000
2018-03-19 16:47:41,873 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521302400000
2018-03-19 16:47:41,874 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521302400000
2018-03-19 16:47:41,875 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,875 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 16:47:41,875 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-19 16:47:41,875 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-19 16:47:41,876 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-19 16:47:41,876 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,876 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,876 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:47:41,876 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:47:41,877 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-19 16:47:41,877 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,877 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 16:47:41,877 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-19 16:47:41,877 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-19 16:47:41,878 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-19 16:47:41,878 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,878 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,878 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:47:41,878 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:47:41,879 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-18
2018-03-19 16:47:41,879 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,879 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 16:47:41,880 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-19 16:47:41,880 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-19 16:47:41,880 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-19 16:47:41,880 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,880 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 16:47:41,881 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-19 16:47:41,881 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-19 16:47:41,881 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-19 16:47:41,881 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,881 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,882 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-19 16:47:41,882 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-19 16:47:41,882 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-19
2018-03-19 16:47:41,883 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,883 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,883 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-19 16:47:41,884 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-19 16:47:41,884 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-19 16:47:41,884 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,885 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 16:47:41,885 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:47:41,885 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:47:41,886 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-19 16:47:41,886 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,886 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,886 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-19 16:47:41,887 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-19 16:47:41,887 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-19 16:47:41,887 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,887 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,887 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-19 16:47:41,888 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-19 16:47:41,888 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-19 16:47:41,888 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,888 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,888 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:47:41,889 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:47:41,889 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-19 16:47:41,889 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,889 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:47:41,889 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:47:41,890 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:47:41,890 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:47:41,890 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,890 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 16:47:41,891 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-19 16:47:41,891 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-19 16:47:41,891 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-19 16:47:41,891 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,892 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 16:47:41,892 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521449261000
2018-03-19 16:47:41,892 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521449261000
2018-03-19 16:47:41,892 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521449261000
2018-03-19 16:47:41,893 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,893 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 16:47:41,893 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:47:41,893 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:47:41,893 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:47:41,894 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,894 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 16:47:41,895 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-19 16:47:41,895 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-19 16:47:41,895 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-19 16:47:41,895 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,895 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 16:47:41,896 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19 16:47:41
2018-03-19 16:47:41,896 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19 16:47:41
2018-03-19 16:47:41,896 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-19 16:47:41
2018-03-19 16:47:41,896 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,896 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 16:47:41,897 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-19 16:47:41,897 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-19 16:47:41,897 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-19 16:47:41,897 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,898 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 16:47:41,898 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-19 16:47:41,899 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-19 16:47:41,899 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-19 16:47:41,899 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,900 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 16:47:41,900 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:47:41,900 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:47:41,900 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:47:41,900 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,901 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 16:47:41,901 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-19 16:47:41,901 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-19 16:47:41,901 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-19 16:47:41,901 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:47:41,902 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 16:47:41,902 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:47:41,902 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:47:41,902 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-19 16:47:41,903 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:47:41,903 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:47:41,903 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:41,903 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:41,904 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 16:47:41,904 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 16:47:41,904 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-19 16:47:41,905 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-19 16:47:41,905 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-19 16:47:41,914 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:47:41,915 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-19 16:47:41,915 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-19 16:47:41,916 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-19 16:47:41,916 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-19 16:47:41,916 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-19 16:47:41,924 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:47:41,924 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-19 16:47:41,925 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:47:41,925 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:47:41,925 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:47:41,925 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:47:41,926 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:41,926 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:41,926 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-19 16:47:41,927 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:47:41,928 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:41,928 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:41,928 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:47:41,929 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-19 16:47:41,929 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-19 16:47:41,930 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-19 16:47:42,039 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-19 16:47:42,039 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-19 16:47:42,042 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:47:41 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1925ztxj186eg1lib6ng8vhy2n;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-19 16:47:42,043 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:47:42,043 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-19 16:47:42,043 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-19 16:47:42,043 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:47:42,044 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,044 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:42,044 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-19 16:47:42,044 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-19 16:47:42,045 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-19 16:47:42,045 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:47:42,045 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:47:42,046 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:47:42,046 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 16:47:42,046 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-19 16:47:42,046 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:42,047 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-19 16:47:42,047 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-19 16:47:42,047 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:47:42,047 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,048 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:42,049 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-19 16:47:42,049 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:47:42,049 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,050 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:42,050 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:47:42,051 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:47:42,051 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-19 16:47:42,051 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-19 16:47:42,052 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:47:42,145 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 16:47:42,145 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-19 16:47:42,146 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:47:42 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 18-Mar-2018 08:47:42 GMT')]
2018-03-19 16:47:42,146 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:47:42,146 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:47:42,146 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:47:42,147 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:47:42,147 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,147 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:42,147 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-19 16:47:42,148 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-19 16:47:42,150 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-19 16:47:42,150 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-19 16:47:42,150 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-19 16:47:42,159 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:47:42,159 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-19 16:47:42,159 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 16:47:42,160 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-19 16:47:42,160 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 16:47:42,160 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:47:42,160 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,161 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:42,161 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 16:47:42,161 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:47:42,161 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,161 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301'}
2018-03-19 16:47:42,163 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:47:42,164 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-19 16:47:42,164 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 16:47:42,171 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-13', '2018-03-19'], flag：True
2018-03-19 16:47:42,171 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 16:47:42,172 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 16:47:42,172 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 16:47:42,172 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 16:47:42,173 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-19 16:47:42,173 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-19 16:47:42,173 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-19 16:47:42,181 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:47:42,182 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-19 16:47:42,182 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 16:47:42,183 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-19 16:47:42,183 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 16:47:42,183 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:47:42,183 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,184 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'today1': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'before7day1': '2018-03-13'}
2018-03-19 16:47:42,188 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 16:47:42,189 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:47:42,189 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,189 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'today1': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'before7day1': '2018-03-13'}
2018-03-19 16:47:42,190 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:47:42,190 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-19 16:47:42,190 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 16:47:42,205 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180318'], flag：True
2018-03-19 16:47:42,206 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 16:47:42,206 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 16:47:42,206 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 16:47:42,206 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 16:47:42,207 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID325-库存查询(最近30天), ID:325]======================
2018-03-19 16:47:42,207 test_case.py[line: 32] INFO: 正在查询测试用例[ID：325, 名称：ID325-库存查询(最近30天)]关联的测试步骤
2018-03-19 16:47:42,207 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(325,)
2018-03-19 16:47:42,220 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:47:42,220 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 769]======================
2018-03-19 16:47:42,220 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:47:42,221 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:47:42,221 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:47:42,221 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 16:47:42,222 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$recent_30day_range_yyyy_mm_dd$', '$recent_30day_range_yyyy_mm_dd$']
2018-03-19 16:47:42,222 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday1': '20180318', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'today1': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'before7day1': '2018-03-13'}
2018-03-19 16:47:42,223 test_case_step.py[line: 58] INFO: 正在替换动态变量：$recent_30day_range_yyyy_mm_dd$
2018-03-19 16:47:42,223 test_case_step.py[line: 58] INFO: 正在替换动态变量：$recent_30day_range_yyyy_mm_dd$
2018-03-19 16:47:42,223 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=20180217-20180318&dataType=recent30&dataRange=20180217-20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-19 16:47:42,223 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:47:42,224 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,224 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday1': '20180318', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'today1': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'before7day1': '2018-03-13'}
2018-03-19 16:47:42,224 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-19 16:47:42,224 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:47:42,225 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,225 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday1': '20180318', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'today1': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'before7day1': '2018-03-13'}
2018-03-19 16:47:42,225 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:47:42,226 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:47:42,226 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-19 16:47:42,226 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=20180217-20180318&dataType=recent30&dataRange=20180217-20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-19 16:47:42,226 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:47:42,300 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-19 16:47:42,301 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":1,"totalCount":10,"list":[{"availableQty":"0","inventoryAvgAge":0,"item":"TP0000157","itemName":"印象五常","periodSaleNum":"0","rowCount":null,"totalQty":"30","warehouseName":"全部仓库"},{"availableQty":"124","inventoryAvgAge":9,"item":"2017070000005","itemName":"天山优品5KG乳羔羊礼盒","periodSaleNum":"48","rowCount":null,"totalQty":"124","warehouseName":"全部仓库"},{"availableQty":"39","inventoryAvgAge":9,"item":"TP0000150","itemName":"极上稻花香新版","periodSaleNum":"1","rowCount":null,"totalQty":"39","warehouseName":"全部仓库"},{"availableQty":"50","inventoryAvgAge":9,"item":"2017070000029","itemName":"天山优品3KG乳羔羊礼盒","periodSaleNum":"0","rowCount":null,"totalQty":"50","warehouseName":"全部仓库"},{"availableQty":"36","inventoryAvgAge":13,"item":"TP0000164","itemName":"三公顷黑姑娘干红葡萄酒","periodSaleNum":"1","rowCount":null,"totalQty":"36","warehouseName":"全部仓库"},{"availableQty":"39","inventoryAvgAge":13,"item":"TP0000165","itemName":"三公顷赤霞珠干红葡萄酒","periodSaleNum":"1","rowCount":null,"totalQty":"39","warehouseName":"全部仓库"},{"availableQty":"26","inventoryAvgAge":26,"item":"2017070000012","itemName":"天山优品5KG刀郎羊礼盒","periodSaleNum":"4","rowCount":null,"totalQty":"26","warehouseName":"全部仓库"},{"availableQty":"1632","inventoryAvgAge":174,"item":"6954971400151","itemName":"极上舟山带鱼段","periodSaleNum":"800","rowCount":null,"totalQty":"1632","warehouseName":"全部仓库"},{"availableQty":"511","inventoryAvgAge":257,"item":"6970039860163","itemName":"手把鲜经典亲情大礼包","periodSaleNum":"116","rowCount":null,"totalQty":"516","warehouseName":"全部仓库"},{"availableQty":"342","inventoryAvgAge":268,"item":"6970039860156","itemName":"手把鲜至尊豪华大礼包","periodSaleNum":"26","rowCount":null,"totalQty":"345","warehouseName":"全部仓库"}]}
2018-03-19 16:47:42,301 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:47:42 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '1951'), ('Connection', 'close')]
2018-03-19 16:47:42,301 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:47:42,301 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:47:42,301 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:47:42,302 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:47:42,302 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:47:42,302 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'millisecond_for_curtime': 1521449261000, 'current_month_yyyy_mm': '2018-03', 'last_month_yyyymm': '201802', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'global_mobile': '18110000014', 'yesterday1': '20180318', 'yesterday_yyyymmdd': '20180318', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'global_username': 'dataviewer', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today_yyyymmdd': '20180319', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyy_mm': '2018-12', 'today1': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyymmdd': '20180228', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_first_day_yyyymmdd': '20180201', 'current_week_num_yyyymm': '201812', 'global_platform_host': '10.118.59.84', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curtime': '2018-03-19 16:47:41', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'before7day1': '2018-03-13'}
2018-03-19 16:47:42,303 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-19 16:47:42,303 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-19 16:47:42,304 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-19 16:47:42,304 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-19 16:47:42,305 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-19 16:47:42,305 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-19 16:54:54,642 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 16:54:54,643 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-19 16:54:54,643 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-19 16:54:54,644 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-19 16:54:54,644 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-19 16:54:54,644 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-19 16:54:54,644 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-19 16:54:54,661 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-19 16:54:54,661 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-19 16:54:54,661 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-19 16:54:54,662 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-19 16:54:54,662 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 16:54:54,669 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-19 16:54:54,669 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 16:54:54,725 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-19 16:54:54,725 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 16:54:54,733 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-19 16:54:54,733 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-19 16:54:54,733 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-19 16:54:54,734 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-19 16:54:54,734 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-19 16:54:54,744 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:54:54,744 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-19 16:54:54,745 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-19 16:54:54,764 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-19 16:54:54,764 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-19 16:54:54,771 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:54:54,772 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:54:54,782 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:54:54,782 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:54:54,787 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:54:54,787 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-19 16:54:54,861 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:54:54,862 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-19 16:54:54,862 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-19 16:54:54,870 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:54:54,870 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:54:54,877 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:54:54,877 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:54:54,883 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:54:54,884 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:54:54,891 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:54:54,892 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-19 16:54:54,954 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:54:54,955 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-19 16:54:54,955 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-19 16:54:54,963 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-19 16:54:54,964 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-19 16:54:54,971 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:54:54,972 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:54:54,978 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:54:54,978 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:54:54,984 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:54:54,984 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:54:54,992 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:54:54,992 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-19 16:54:55,054 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:54:55,054 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-19 16:54:55,055 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-19 16:54:55,061 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:54:55,061 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:54:55,071 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:54:55,071 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:54:55,079 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:54:55,079 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:54:55,085 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:54:55,086 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-19 16:54:55,145 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:54:55,146 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-19 16:54:55,146 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-19 16:54:55,154 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-19 16:54:55,154 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-19 16:54:55,160 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:54:55,160 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:54:55,166 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:54:55,167 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:54:55,174 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:54:55,175 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:54:55,180 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:54:55,181 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-19 16:54:55,262 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:54:55,263 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(326,)
2018-03-19 16:54:55,263 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 326
2018-03-19 16:54:55,271 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 16:54:55,272 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 16:54:55,280 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 16:54:55,281 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 16:54:55,290 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 16:54:55,291 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 16:54:55,299 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 16:54:55,300 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 16:54:55,306 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:54:55,307 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:54:55,314 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:54:55,314 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:54:55,321 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:54:55,322 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 326
2018-03-19 16:54:55,390 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:54:55,390 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-19 16:54:55,390 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-19 16:54:55,397 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:54:55,397 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:54:55,404 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:54:55,405 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:54:55,411 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:54:55,411 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-19 16:54:55,674 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-19 16:54:55,674 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-19 16:54:55,675 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-19 16:54:55,676 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-19 16:54:55,693 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-19 16:54:55,694 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-19 16:54:55,694 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-19 16:54:55,699 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 16:54:55,699 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 16:54:55,699 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 16:54:55,717 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:54:55,717 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 16:54:55,718 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:54:55,718 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:54:55,718 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:54:55,718 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:54:55,719 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:55,719 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer'}
2018-03-19 16:54:55,719 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 16:54:55,720 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:54:55,720 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-19 16:54:55,720 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer'}
2018-03-19 16:54:55,720 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-19 16:54:55,721 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-19 16:54:55,721 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:54:55,721 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-19 16:54:55,721 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 16:54:55,722 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:54:55,767 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 16:54:55,772 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"next_month_first_day_yyyy_mm_dd": "2018-04-01", "recent_7day_range_yyyy_mm_dd": "2018-03-12-2018-03-18", "last_weekday7_yyyymmdd": "20180318", "current_month_last_year_yyyymm": "2017-03", "curtime": "2018-03-19 16:54:55", "current_month_last_year_yyyy_mm": "2017-03", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "next_month_first_day_yyyymmdd": "20180401", "current_month_yyyymm": "201803", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday1_yyyymmdd": "20180305", "recent_30day_range_yyyy_mm_dd": "20180217-20180318", "last_month_first_day_yyyymmdd": "20180201", "last_weekday7_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyymm": "201812", "curmonth_range_yyyymmdd": "20180301-20180331", "december_month_last_year_yyyymm": "201712", "weekday7_yyyymmdd": "20180325", "current_month_yyyy_mm": "2018-03", "weekday1_yyyy_mm_dd": "20180319", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_month_yyyymm": "201802", "weekday1_yyyymmdd": "20180319", "yesterday_yyyymmdd": "20180318", "lastmonth_range_yyyymmdd": "20180301-20180331", "today_yyyymmdd": "20180319", "millisecond_for_curdate": 1521388800000, "millisecond_for_yesterday": 1521302400000, "last_month_final_day_yyyymmdd": "20180228", "pre_weekday7_yyyymmdd": "20180311", "last_month_yyyy_mm": "2018-02", "december_month_last_year_yyyy_mm": "2017-12", "today_yyyy_mm_dd": "2018-03-19", "curmonth_first_day_yyyymmdd": "20180301", "yesterday_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyy_mm": "2018-12", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "recent_7day_range_yyyymmdd": "20180312-20180318", "millisecond_for_curtime": 1521449695000, "weekday7_yyyy_mm_dd": "20180325", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "recent_30day_range_yyyymmdd": "2018-02-17-2018-03-18"}
2018-03-19 16:54:55,772 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Mon, 19 Mar 2018 08:54:55 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-19 16:54:55,772 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:54:55,773 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:54:55,773 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,773 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,773 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:54:55,774 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:54:55,774 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:54:55,774 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,774 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 16:54:55,774 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:54:55,775 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:54:55,775 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:54:55,775 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,775 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 16:54:55,775 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-19 16:54:55,776 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-19 16:54:55,780 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-19 16:54:55,780 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,780 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,780 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-19 16:54:55,781 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-19 16:54:55,781 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-19 16:54:55,781 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,781 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,781 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:54:55,782 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:54:55,782 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:54:55,782 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,782 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 16:54:55,782 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-19 16:54:55,783 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-19 16:54:55,783 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-19 16:54:55,783 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,784 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 16:54:55,784 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-19 16:54:55,784 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-19 16:54:55,784 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-19 16:54:55,784 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,785 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 16:54:55,785 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 16:54:55,785 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 16:54:55,785 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180312-20180318
2018-03-19 16:54:55,785 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,786 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,786 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-19 16:54:55,786 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-19 16:54:55,786 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-19
2018-03-19 16:54:55,787 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,787 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 16:54:55,787 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-19 16:54:55,787 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-19 16:54:55,787 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-19 16:54:55,787 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,788 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 16:54:55,788 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-19 16:54:55,788 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-19 16:54:55,788 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-19 16:54:55,789 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,789 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 16:54:55,789 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:54:55,789 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:54:55,789 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180319
2018-03-19 16:54:55,790 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,790 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,791 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-19 16:54:55,791 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-19 16:54:55,791 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-19 16:54:55,791 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,791 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,792 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-19 16:54:55,792 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-19 16:54:55,792 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-19 16:54:55,792 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,792 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 16:54:55,793 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521302400000
2018-03-19 16:54:55,793 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521302400000
2018-03-19 16:54:55,793 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521302400000
2018-03-19 16:54:55,793 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,793 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,794 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-19 16:54:55,794 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-19 16:54:55,794 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-19 16:54:55,794 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,794 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 16:54:55,795 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-19 16:54:55,795 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-19 16:54:55,795 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-19 16:54:55,795 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,795 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 16:54:55,796 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:54:55,796 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:54:55,796 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-19 16:54:55,796 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,796 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 16:54:55,797 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-19 16:54:55,797 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-19 16:54:55,797 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-19 16:54:55,797 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,797 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 16:54:55,798 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-19 16:54:55,798 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-19 16:54:55,798 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-19 16:54:55,798 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,798 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,799 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 16:54:55,799 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 16:54:55,799 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 16:54:55,799 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,799 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 16:54:55,800 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:54:55,800 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:54:55,800 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:54:55,800 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,800 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 16:54:55,801 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521449695000
2018-03-19 16:54:55,801 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521449695000
2018-03-19 16:54:55,801 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521449695000
2018-03-19 16:54:55,801 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,801 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 16:54:55,802 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:54:55,802 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:54:55,802 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-19 16:54:55,802 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,802 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 16:54:55,803 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-19 16:54:55,803 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-19 16:54:55,803 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-19 16:54:55,803 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,803 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,804 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:54:55,804 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:54:55,804 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-18
2018-03-19 16:54:55,804 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,804 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 16:54:55,805 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19 16:54:55
2018-03-19 16:54:55,805 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19 16:54:55
2018-03-19 16:54:55,805 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-19 16:54:55
2018-03-19 16:54:55,805 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,805 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,806 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-19 16:54:55,806 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-19 16:54:55,806 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-19 16:54:55,806 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,807 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,807 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:54:55,807 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:54:55,807 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-19 16:54:55,807 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,808 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 16:54:55,808 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-17-2018-03-18
2018-03-19 16:54:55,808 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-17-2018-03-18
2018-03-19 16:54:55,808 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-17-2018-03-18
2018-03-19 16:54:55,808 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,809 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 16:54:55,809 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-19 16:54:55,809 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-19 16:54:55,809 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521388800000
2018-03-19 16:54:55,809 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,810 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,810 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-19 16:54:55,810 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-19 16:54:55,810 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-19 16:54:55,810 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,811 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 16:54:55,811 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-19 16:54:55,811 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-19 16:54:55,811 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-19 16:54:55,811 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,812 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 16:54:55,812 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:54:55,812 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:54:55,812 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-19 16:54:55,812 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,813 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,813 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:54:55,813 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:54:55,813 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-19 16:54:55,813 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,814 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,814 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-19 16:54:55,814 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-19 16:54:55,814 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-19 16:54:55,814 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,815 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 16:54:55,815 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-19 16:54:55,816 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-19 16:54:55,816 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-19 16:54:55,816 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,816 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 16:54:55,817 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-19 16:54:55,817 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-19 16:54:55,817 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-19 16:54:55,817 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,818 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 16:54:55,818 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-19 16:54:55,819 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-19 16:54:55,819 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-19 16:54:55,819 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,819 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,820 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180217-20180318
2018-03-19 16:54:55,820 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180217-20180318
2018-03-19 16:54:55,820 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180217-20180318
2018-03-19 16:54:55,820 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,820 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:54:55,821 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:54:55,821 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:54:55,821 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-19 16:54:55,821 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,821 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 16:54:55,822 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:54:55,822 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:54:55,822 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-19 16:54:55,822 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,822 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 16:54:55,823 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-19 16:54:55,823 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-19 16:54:55,823 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-19 16:54:55,823 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,824 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 16:54:55,824 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:54:55,824 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:54:55,824 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-19 16:54:55,824 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,825 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 16:54:55,825 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-19 16:54:55,825 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-19 16:54:55,825 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-19 16:54:55,825 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:54:55,826 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 16:54:55,826 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:54:55,827 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:54:55,827 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180318
2018-03-19 16:54:55,827 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:54:55,827 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:54:55,828 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:55,828 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:55,828 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 16:54:55,829 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 16:54:55,829 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-19 16:54:55,829 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-19 16:54:55,830 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-19 16:54:55,836 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:54:55,836 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-19 16:54:55,836 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-19 16:54:55,837 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-19 16:54:55,837 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-19 16:54:55,837 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-19 16:54:55,844 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:54:55,844 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-19 16:54:55,844 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:54:55,845 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:54:55,845 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:54:55,845 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:54:55,845 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:55,846 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:55,846 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-19 16:54:55,846 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:54:55,846 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:55,846 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:55,849 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:54:55,850 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-19 16:54:55,850 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-19 16:54:55,850 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-19 16:54:55,932 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-19 16:54:55,933 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-19 16:54:55,934 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:54:55 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=5zox1penlcy28zpkk7gq3hv4;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-19 16:54:55,934 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:54:55,934 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-19 16:54:55,935 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-19 16:54:55,935 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:54:55,935 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:55,936 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:55,936 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-19 16:54:55,937 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-19 16:54:55,938 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-19 16:54:55,938 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:54:55,938 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:54:55,938 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:54:55,938 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 16:54:55,939 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-19 16:54:55,939 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:55,939 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-19 16:54:55,940 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-19 16:54:55,940 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:54:55,940 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:55,941 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:55,941 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-19 16:54:55,941 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:54:55,941 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:55,941 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:55,942 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:54:55,943 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:54:55,943 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-19 16:54:55,944 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-19 16:54:55,944 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:54:56,031 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 16:54:56,032 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-19 16:54:56,032 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:54:56 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 18-Mar-2018 08:54:56 GMT')]
2018-03-19 16:54:56,032 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:54:56,032 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:54:56,033 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:54:56,033 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:54:56,033 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:56,033 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:56,034 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-19 16:54:56,034 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-19 16:54:56,034 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-19 16:54:56,035 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-19 16:54:56,035 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-19 16:54:56,047 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:54:56,048 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-19 16:54:56,048 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 16:54:56,049 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-19 16:54:56,049 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 16:54:56,049 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:54:56,049 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:56,050 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:56,050 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 16:54:56,050 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:54:56,050 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:56,051 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:56,052 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:54:56,053 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-19 16:54:56,054 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 16:54:56,068 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-13', '2018-03-19'], flag：True
2018-03-19 16:54:56,068 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 16:54:56,069 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 16:54:56,069 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 16:54:56,069 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 16:54:56,070 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-19 16:54:56,070 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-19 16:54:56,071 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-19 16:54:56,079 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:54:56,079 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-19 16:54:56,080 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 16:54:56,080 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-19 16:54:56,080 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 16:54:56,080 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:54:56,080 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:56,081 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'before7day1': '2018-03-13', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:56,081 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 16:54:56,081 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:54:56,081 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:56,082 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'before7day1': '2018-03-13', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:56,082 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:54:56,082 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-19 16:54:56,083 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 16:54:56,105 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180318'], flag：True
2018-03-19 16:54:56,106 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 16:54:56,106 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 16:54:56,106 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 16:54:56,106 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 16:54:56,107 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID326-库存查询(自然日), ID:326]======================
2018-03-19 16:54:56,107 test_case.py[line: 32] INFO: 正在查询测试用例[ID：326, 名称：ID326-库存查询(自然日)]关联的测试步骤
2018-03-19 16:54:56,107 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(326,)
2018-03-19 16:54:56,114 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:54:56,114 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 770]======================
2018-03-19 16:54:56,114 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:54:56,114 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:54:56,115 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:54:56,115 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 16:54:56,115 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$yesterday_yyyymmdd$', '$yesterday_yyyymmdd$']
2018-03-19 16:54:56,115 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'yesterday1': '20180318', 'weekday7_yyyymmdd': '20180325', 'before7day1': '2018-03-13', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:56,115 test_case_step.py[line: 58] INFO: 正在替换动态变量：$yesterday_yyyymmdd$
2018-03-19 16:54:56,116 test_case_step.py[line: 58] INFO: 正在替换动态变量：$yesterday_yyyymmdd$
2018-03-19 16:54:56,116 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=20180318&dataType=day&dataRange=20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-19 16:54:56,116 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:54:56,116 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:56,116 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'yesterday1': '20180318', 'weekday7_yyyymmdd': '20180325', 'before7day1': '2018-03-13', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:56,117 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-19 16:54:56,117 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:54:56,117 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:56,117 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'yesterday1': '20180318', 'weekday7_yyyymmdd': '20180325', 'before7day1': '2018-03-13', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:56,117 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:54:56,118 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:54:56,119 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-19 16:54:56,119 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=20180318&dataType=day&dataRange=20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-19 16:54:56,119 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:54:56,183 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-19 16:54:56,183 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"791","inventoryAvgAge":1,"item":"67680931826883035","itemName":"Tmall-67680931826883035-ZTO-.61","periodSaleNum":"120","rowCount":null,"totalQty":"891","warehouseName":"全部仓库"},{"availableQty":"997","inventoryAvgAge":1,"item":"67679963767196686","itemName":"Tmall-67679963767196686-STO-.68","periodSaleNum":"897","rowCount":null,"totalQty":"998","warehouseName":"全部仓库"},{"availableQty":"995","inventoryAvgAge":1,"item":"67680120874265453","itemName":"Tmall-67680120874265453-STO-2.01","periodSaleNum":"895","rowCount":null,"totalQty":"996","warehouseName":"全部仓库"},{"availableQty":"991","inventoryAvgAge":1,"item":"67680284840348202","itemName":"Tmall-67680284840348202-YUNDA-.19","periodSaleNum":"891","rowCount":null,"totalQty":"992","warehouseName":"全部仓库"},{"availableQty":"996","inventoryAvgAge":2,"item":"67680092905297662","itemName":"Tmall-67680092905297662-HTKY-.1","periodSaleNum":"896","rowCount":null,"totalQty":"997","warehouseName":"全部仓库"},{"availableQty":"999","inventoryAvgAge":3,"item":"67679737975970397","itemName":"Tmall-67679737975970397-ZTO-.81","periodSaleNum":"899","rowCount":null,"totalQty":"1000","warehouseName":"全部仓库"},{"availableQty":"990","inventoryAvgAge":3,"item":"67680284843348202","itemName":"Tmall-67680284843348202-HTKY-.11","periodSaleNum":"790","rowCount":null,"totalQty":"990","warehouseName":"全部仓库"},{"availableQty":"790","inventoryAvgAge":3,"item":"67681075682811352","itemName":"Tmall-67681075682811352-STO-.34","periodSaleNum":"0","rowCount":null,"totalQty":"890","warehouseName":"全部仓库"},{"availableQty":"998","inventoryAvgAge":4,"item":"67679823116444785","itemName":"Tmall-67679823116444785-EMS-1.46","periodSaleNum":"898","rowCount":null,"totalQty":"999","warehouseName":"全部仓库"},{"availableQty":"890","inventoryAvgAge":5,"item":"67680549654712683","itemName":"Tmall-67680549654712683-YUNDA-.06","periodSaleNum":"790","rowCount":null,"totalQty":"898","warehouseName":"全部仓库"}]}
2018-03-19 16:54:56,184 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:54:56 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2069'), ('Connection', 'close')]
2018-03-19 16:54:56,184 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:54:56,184 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:54:56,184 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:54:56,184 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:54:56,185 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:54:56,185 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_range_yyyymmdd': '20180301-20180331', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'global_platform_host': '10.118.59.84', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'today_yyyy_mm_dd': '2018-03-19', 'last_month_yyyymm': '201802', 'curmonth_first_day_yyyymmdd': '20180301', 'today_yyyymmdd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'millisecond_for_yesterday': 1521302400000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'current_week_num_yyyy_mm': '2018-12', 'yesterday1': '20180318', 'weekday7_yyyymmdd': '20180325', 'before7day1': '2018-03-13', 'current_week_num_yyyymm': '201812', 'pre_weekday7_yyyymmdd': '20180311', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_mobile': '18110000014', 'last_month_final_day_yyyymmdd': '20180228', 'last_weekday7_yyyymmdd': '20180318', 'current_month_yyyy_mm': '2018-03', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'yesterday_yyyy_mm_dd': '2018-03-18', 'curtime': '2018-03-19 16:54:55', 'weekday7_yyyy_mm_dd': '20180325', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyymmdd': '20180201', 'current_month_last_year_yyyy_mm': '2017-03', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyy_mm': '2018-02', 'pre_weekday1_yyyymmdd': '20180305', 'millisecond_for_curtime': 1521449695000, 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyy_mm_dd': '20180319', 'weekday1_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'current_month_yyyymm': '201803', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 16:54:56,186 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-19 16:54:56,186 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：totalCount":[1-9]+”
2018-03-19 16:54:56,192 test_case.py[line: 85] ERROR: 步骤[第 1 步, 步骤ID: 770]运行失败
2018-03-19 16:54:56,192 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-19 16:54:56,193 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-19 16:54:56,193 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-19 16:54:56,194 main.py[line: 48] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-03-19 16:55:29,132 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 16:55:29,133 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-19 16:55:29,133 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-19 16:55:29,134 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-19 16:55:29,134 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-19 16:55:29,134 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-19 16:55:29,134 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-19 16:55:29,147 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-19 16:55:29,147 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-19 16:55:29,148 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-19 16:55:29,148 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-19 16:55:29,148 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 16:55:29,154 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-19 16:55:29,155 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 16:55:29,195 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-19 16:55:29,195 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 16:55:29,207 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-19 16:55:29,207 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-19 16:55:29,208 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-19 16:55:29,208 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-19 16:55:29,208 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-19 16:55:29,213 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:55:29,214 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-19 16:55:29,214 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-19 16:55:29,220 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-19 16:55:29,220 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-19 16:55:29,227 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:55:29,227 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:55:29,232 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:55:29,233 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:55:29,240 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:55:29,240 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-19 16:55:29,294 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:55:29,294 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-19 16:55:29,295 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-19 16:55:29,300 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:55:29,301 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:55:29,308 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:55:29,308 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:55:29,316 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:55:29,316 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:55:29,324 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:55:29,324 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-19 16:55:29,389 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:55:29,389 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-19 16:55:29,389 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-19 16:55:29,398 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-19 16:55:29,398 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-19 16:55:29,406 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:55:29,406 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:55:29,413 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:55:29,414 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:55:29,422 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:55:29,422 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:55:29,429 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:55:29,430 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-19 16:55:29,486 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:55:29,486 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-19 16:55:29,487 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-19 16:55:29,495 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:55:29,495 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:55:29,502 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:55:29,503 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:55:29,511 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:55:29,511 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:55:29,517 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:55:29,517 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-19 16:55:29,585 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:55:29,586 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-19 16:55:29,586 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-19 16:55:29,592 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-19 16:55:29,593 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-19 16:55:29,598 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 16:55:29,598 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 16:55:29,605 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:55:29,606 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:55:29,612 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:55:29,613 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:55:29,621 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:55:29,622 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-19 16:55:29,694 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:55:29,695 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(326,)
2018-03-19 16:55:29,695 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 326
2018-03-19 16:55:29,702 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 16:55:29,703 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 16:55:29,709 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 16:55:29,710 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 16:55:29,716 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 16:55:29,716 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 16:55:29,725 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 16:55:29,725 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 16:55:29,732 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:55:29,732 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:55:29,737 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:55:29,738 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:55:29,745 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:55:29,746 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 326
2018-03-19 16:55:29,811 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 16:55:29,811 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-19 16:55:29,811 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-19 16:55:29,820 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 16:55:29,821 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 16:55:29,829 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 16:55:29,829 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 16:55:29,835 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 16:55:29,835 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-19 16:55:29,902 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-19 16:55:29,903 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-19 16:55:29,903 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-19 16:55:29,903 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-19 16:55:29,910 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-19 16:55:29,911 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-19 16:55:29,911 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-19 16:55:29,919 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 16:55:29,919 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 16:55:29,919 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 16:55:29,937 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:55:29,937 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 16:55:29,937 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:55:29,938 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:55:29,938 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:55:29,938 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:55:29,938 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:29,939 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014'}
2018-03-19 16:55:29,939 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 16:55:29,939 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:55:29,939 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-19 16:55:29,939 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014'}
2018-03-19 16:55:29,939 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-19 16:55:29,940 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-19 16:55:29,941 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:55:29,941 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-19 16:55:29,941 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 16:55:29,941 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:55:29,985 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 16:55:29,989 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"next_month_first_day_yyyy_mm_dd": "2018-04-01", "recent_7day_range_yyyy_mm_dd": "2018-03-12-2018-03-18", "last_weekday7_yyyymmdd": "20180318", "current_month_last_year_yyyymm": "2017-03", "curtime": "2018-03-19 16:55:29", "current_month_last_year_yyyy_mm": "2017-03", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "next_month_first_day_yyyymmdd": "20180401", "current_month_yyyymm": "201803", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday1_yyyymmdd": "20180305", "recent_30day_range_yyyy_mm_dd": "20180217-20180318", "last_month_first_day_yyyymmdd": "20180201", "last_weekday7_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyymm": "201812", "curmonth_range_yyyymmdd": "20180301-20180331", "december_month_last_year_yyyymm": "201712", "weekday7_yyyymmdd": "20180325", "current_month_yyyy_mm": "2018-03", "weekday1_yyyy_mm_dd": "20180319", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_month_yyyymm": "201802", "weekday1_yyyymmdd": "20180319", "yesterday_yyyymmdd": "20180318", "lastmonth_range_yyyymmdd": "20180301-20180331", "today_yyyymmdd": "20180319", "millisecond_for_curdate": 1521388800000, "millisecond_for_yesterday": 1521302400000, "last_month_final_day_yyyymmdd": "20180228", "pre_weekday7_yyyymmdd": "20180311", "last_month_yyyy_mm": "2018-02", "december_month_last_year_yyyy_mm": "2017-12", "today_yyyy_mm_dd": "2018-03-19", "curmonth_first_day_yyyymmdd": "20180301", "yesterday_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyy_mm": "2018-12", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "recent_7day_range_yyyymmdd": "20180312-20180318", "millisecond_for_curtime": 1521449729000, "weekday7_yyyy_mm_dd": "20180325", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "recent_30day_range_yyyymmdd": "2018-02-17-2018-03-18"}
2018-03-19 16:55:29,989 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Mon, 19 Mar 2018 08:55:29 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-19 16:55:29,990 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:55:29,990 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:55:29,990 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:29,990 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:55:29,990 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-19 16:55:29,991 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-19 16:55:29,991 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-19 16:55:29,991 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:29,991 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 16:55:29,992 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-19 16:55:29,992 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-19 16:55:29,992 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-19 16:55:29,992 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:29,992 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 16:55:29,993 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 16:55:29,993 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 16:55:29,993 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180312-20180318
2018-03-19 16:55:29,994 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:29,994 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 16:55:29,995 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-19 16:55:29,995 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-19 16:55:29,995 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521388800000
2018-03-19 16:55:29,995 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:29,995 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:55:29,996 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-19 16:55:29,996 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-19 16:55:29,996 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-19 16:55:29,996 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:29,997 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 16:55:29,997 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-19 16:55:29,997 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-19 16:55:29,997 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-19 16:55:29,998 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:29,998 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 16:55:29,998 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-19 16:55:29,998 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-19 16:55:29,998 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-19 16:55:29,999 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:29,999 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 16:55:29,999 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-19 16:55:29,999 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-19 16:55:30,000 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-19 16:55:30,000 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,000 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,000 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:55:30,001 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:55:30,001 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-19 16:55:30,001 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,001 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 16:55:30,002 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:55:30,002 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:55:30,002 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:55:30,002 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,002 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,003 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180217-20180318
2018-03-19 16:55:30,003 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180217-20180318
2018-03-19 16:55:30,003 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180217-20180318
2018-03-19 16:55:30,003 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,004 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 16:55:30,004 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521449729000
2018-03-19 16:55:30,004 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521449729000
2018-03-19 16:55:30,004 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521449729000
2018-03-19 16:55:30,004 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,005 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 16:55:30,005 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:55:30,005 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:55:30,006 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180319
2018-03-19 16:55:30,006 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,006 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,007 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:55:30,007 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:55:30,007 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:55:30,007 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,007 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 16:55:30,008 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-19 16:55:30,008 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-19 16:55:30,008 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-19 16:55:30,008 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,009 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 16:55:30,009 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 16:55:30,009 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 16:55:30,009 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-19 16:55:30,009 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,009 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,010 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:55:30,010 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:55:30,010 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-19 16:55:30,011 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,011 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 16:55:30,011 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-19 16:55:30,011 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-19 16:55:30,012 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-19 16:55:30,012 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,012 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,012 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-19 16:55:30,013 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-19 16:55:30,013 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-19 16:55:30,013 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,013 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 16:55:30,014 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:55:30,014 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:55:30,014 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-19 16:55:30,014 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,015 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 16:55:30,015 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:55:30,015 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:55:30,015 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-19 16:55:30,015 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,016 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 16:55:30,016 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:55:30,016 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:55:30,016 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-19 16:55:30,017 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,017 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,017 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 16:55:30,017 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 16:55:30,018 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 16:55:30,018 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,018 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 16:55:30,019 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-19 16:55:30,019 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-19 16:55:30,019 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-19 16:55:30,019 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,020 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,020 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-19 16:55:30,020 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-19 16:55:30,020 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-19 16:55:30,021 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,021 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 16:55:30,021 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-19 16:55:30,021 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-19 16:55:30,022 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-19 16:55:30,022 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,022 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 16:55:30,023 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-19 16:55:30,023 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-19 16:55:30,023 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-19 16:55:30,024 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,024 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 16:55:30,024 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-19 16:55:30,024 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-19 16:55:30,025 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-19 16:55:30,025 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,025 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 16:55:30,026 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 16:55:30,026 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 16:55:30,026 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-19 16:55:30,026 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,027 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 16:55:30,027 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-19 16:55:30,027 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-19 16:55:30,027 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-19 16:55:30,028 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,028 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,028 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 16:55:30,028 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 16:55:30,029 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 16:55:30,029 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,029 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 16:55:30,029 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 16:55:30,030 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 16:55:30,030 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180318
2018-03-19 16:55:30,030 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,030 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 16:55:30,031 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-17-2018-03-18
2018-03-19 16:55:30,031 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-17-2018-03-18
2018-03-19 16:55:30,031 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-17-2018-03-18
2018-03-19 16:55:30,032 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,032 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 16:55:30,032 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-19 16:55:30,033 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-19 16:55:30,033 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-19 16:55:30,034 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,034 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,034 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-19 16:55:30,034 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-19 16:55:30,035 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-19 16:55:30,035 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,035 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 16:55:30,036 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521302400000
2018-03-19 16:55:30,036 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521302400000
2018-03-19 16:55:30,036 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521302400000
2018-03-19 16:55:30,036 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,037 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,037 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-19 16:55:30,037 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-19 16:55:30,038 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-19 16:55:30,038 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,038 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,038 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 16:55:30,039 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 16:55:30,039 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-18
2018-03-19 16:55:30,039 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,039 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 16:55:30,041 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-19 16:55:30,041 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-19 16:55:30,042 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-19 16:55:30,042 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,042 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 16:55:30,042 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-19 16:55:30,043 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-19 16:55:30,043 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-19 16:55:30,043 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,043 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 16:55:30,044 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19 16:55:29
2018-03-19 16:55:30,044 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19 16:55:29
2018-03-19 16:55:30,044 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-19 16:55:29
2018-03-19 16:55:30,045 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,045 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,045 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-19 16:55:30,045 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-19 16:55:30,046 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-19 16:55:30,046 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,046 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 16:55:30,046 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 16:55:30,047 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 16:55:30,047 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-19 16:55:30,047 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,047 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,048 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-19 16:55:30,048 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-19 16:55:30,048 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-19
2018-03-19 16:55:30,048 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,049 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 16:55:30,049 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 16:55:30,049 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 16:55:30,049 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-19 16:55:30,050 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 16:55:30,050 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 16:55:30,051 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-19 16:55:30,051 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-19 16:55:30,052 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-19 16:55:30,052 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:55:30,052 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:55:30,052 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,054 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,054 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 16:55:30,055 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 16:55:30,056 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-19 16:55:30,056 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-19 16:55:30,057 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-19 16:55:30,066 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:55:30,067 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-19 16:55:30,067 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-19 16:55:30,067 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-19 16:55:30,067 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-19 16:55:30,068 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-19 16:55:30,076 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:55:30,076 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-19 16:55:30,076 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:55:30,076 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:55:30,077 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:55:30,077 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:55:30,077 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,077 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,078 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-19 16:55:30,078 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:55:30,078 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,078 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,081 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:55:30,082 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-19 16:55:30,082 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-19 16:55:30,082 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-19 16:55:30,175 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-19 16:55:30,176 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-19 16:55:30,180 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:55:30 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=pxy3hqvcvpplp7ckpnnkfe15;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-19 16:55:30,181 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:55:30,181 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-19 16:55:30,181 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-19 16:55:30,182 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:55:30,182 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,182 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,182 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-19 16:55:30,183 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-19 16:55:30,183 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-19 16:55:30,183 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:55:30,183 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:55:30,184 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:55:30,184 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 16:55:30,184 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-19 16:55:30,184 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,185 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-19 16:55:30,185 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-19 16:55:30,185 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:55:30,185 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,186 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,186 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-19 16:55:30,186 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:55:30,186 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,187 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,187 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:55:30,188 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:55:30,188 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-19 16:55:30,188 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-19 16:55:30,189 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:55:30,251 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 16:55:30,251 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-19 16:55:30,251 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:55:30 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 18-Mar-2018 08:55:30 GMT')]
2018-03-19 16:55:30,252 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:55:30,252 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:55:30,252 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:55:30,252 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:55:30,253 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,253 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,253 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-19 16:55:30,253 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-19 16:55:30,254 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-19 16:55:30,254 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-19 16:55:30,254 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-19 16:55:30,262 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:55:30,263 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-19 16:55:30,263 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 16:55:30,263 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-19 16:55:30,263 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 16:55:30,264 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:55:30,264 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,264 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,264 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 16:55:30,265 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:55:30,265 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,265 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,266 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:55:30,266 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-19 16:55:30,267 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 16:55:30,275 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-13', '2018-03-19'], flag：True
2018-03-19 16:55:30,275 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 16:55:30,275 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 16:55:30,276 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 16:55:30,276 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 16:55:30,277 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-19 16:55:30,277 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-19 16:55:30,277 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-19 16:55:30,284 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:55:30,285 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-19 16:55:30,285 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 16:55:30,285 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-19 16:55:30,286 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 16:55:30,286 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:55:30,286 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,286 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'before7day1': '2018-03-13', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'today1': '2018-03-19', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,287 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 16:55:30,287 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:55:30,287 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,287 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'before7day1': '2018-03-13', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'today1': '2018-03-19', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,287 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:55:30,288 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-19 16:55:30,288 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 16:55:30,294 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180318'], flag：True
2018-03-19 16:55:30,295 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 16:55:30,295 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 16:55:30,295 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 16:55:30,295 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 16:55:30,296 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID326-库存查询(自然日), ID:326]======================
2018-03-19 16:55:30,296 test_case.py[line: 32] INFO: 正在查询测试用例[ID：326, 名称：ID326-库存查询(自然日)]关联的测试步骤
2018-03-19 16:55:30,297 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(326,)
2018-03-19 16:55:30,304 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 16:55:30,304 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 770]======================
2018-03-19 16:55:30,305 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 16:55:30,305 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 16:55:30,305 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 16:55:30,306 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 16:55:30,306 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$yesterday_yyyymmdd$', '$yesterday_yyyymmdd$']
2018-03-19 16:55:30,306 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'before7day1': '2018-03-13', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday1': '20180318', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'today1': '2018-03-19', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,307 test_case_step.py[line: 58] INFO: 正在替换动态变量：$yesterday_yyyymmdd$
2018-03-19 16:55:30,307 test_case_step.py[line: 58] INFO: 正在替换动态变量：$yesterday_yyyymmdd$
2018-03-19 16:55:30,307 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=20180318&dataType=day&dataRange=20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-19 16:55:30,307 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 16:55:30,307 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,308 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'before7day1': '2018-03-13', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday1': '20180318', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'today1': '2018-03-19', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,309 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-19 16:55:30,310 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 16:55:30,310 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,310 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'before7day1': '2018-03-13', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday1': '20180318', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'today1': '2018-03-19', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,310 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 16:55:30,311 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 16:55:30,311 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-19 16:55:30,311 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=20180318&dataType=day&dataRange=20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-19 16:55:30,312 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 16:55:30,368 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-19 16:55:30,368 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"791","inventoryAvgAge":1,"item":"67680931826883035","itemName":"Tmall-67680931826883035-ZTO-.61","periodSaleNum":"120","rowCount":null,"totalQty":"891","warehouseName":"全部仓库"},{"availableQty":"997","inventoryAvgAge":1,"item":"67679963767196686","itemName":"Tmall-67679963767196686-STO-.68","periodSaleNum":"897","rowCount":null,"totalQty":"998","warehouseName":"全部仓库"},{"availableQty":"995","inventoryAvgAge":1,"item":"67680120874265453","itemName":"Tmall-67680120874265453-STO-2.01","periodSaleNum":"895","rowCount":null,"totalQty":"996","warehouseName":"全部仓库"},{"availableQty":"991","inventoryAvgAge":1,"item":"67680284840348202","itemName":"Tmall-67680284840348202-YUNDA-.19","periodSaleNum":"891","rowCount":null,"totalQty":"992","warehouseName":"全部仓库"},{"availableQty":"996","inventoryAvgAge":2,"item":"67680092905297662","itemName":"Tmall-67680092905297662-HTKY-.1","periodSaleNum":"896","rowCount":null,"totalQty":"997","warehouseName":"全部仓库"},{"availableQty":"999","inventoryAvgAge":3,"item":"67679737975970397","itemName":"Tmall-67679737975970397-ZTO-.81","periodSaleNum":"899","rowCount":null,"totalQty":"1000","warehouseName":"全部仓库"},{"availableQty":"990","inventoryAvgAge":3,"item":"67680284843348202","itemName":"Tmall-67680284843348202-HTKY-.11","periodSaleNum":"790","rowCount":null,"totalQty":"990","warehouseName":"全部仓库"},{"availableQty":"790","inventoryAvgAge":3,"item":"67681075682811352","itemName":"Tmall-67681075682811352-STO-.34","periodSaleNum":"0","rowCount":null,"totalQty":"890","warehouseName":"全部仓库"},{"availableQty":"998","inventoryAvgAge":4,"item":"67679823116444785","itemName":"Tmall-67679823116444785-EMS-1.46","periodSaleNum":"898","rowCount":null,"totalQty":"999","warehouseName":"全部仓库"},{"availableQty":"890","inventoryAvgAge":5,"item":"67680549654712683","itemName":"Tmall-67680549654712683-YUNDA-.06","periodSaleNum":"790","rowCount":null,"totalQty":"898","warehouseName":"全部仓库"}]}
2018-03-19 16:55:30,369 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 08:55:30 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2069'), ('Connection', 'close')]
2018-03-19 16:55:30,369 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 16:55:30,369 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 16:55:30,369 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 16:55:30,370 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 16:55:30,370 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 16:55:30,370 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'before7day1': '2018-03-13', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'pre_weekday1_yyyymmdd': '20180305', 'last_month_yyyymm': '201802', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyymmdd': '20180311', 'millisecond_for_curdate': 1521388800000, 'lastmonth_range_yyyymmdd': '20180301-20180331', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'millisecond_for_yesterday': 1521302400000, 'millisecond_for_curtime': 1521449729000, 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'yesterday_yyyymmdd': '20180318', 'weekday7_yyyymmdd': '20180325', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday1': '20180318', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_final_day_yyyymmdd': '20180331', 'december_month_last_year_yyyy_mm': '2017-12', 'weekday1_yyyymmdd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'today_yyyymmdd': '20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyymmdd': '20180201', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_yyyy_mm': '2018-02', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'today1': '2018-03-19', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'yesterday_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'curtime': '2018-03-19 16:55:29', 'curmonth_range_yyyymmdd': '20180301-20180331', 'today_yyyy_mm_dd': '2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28'}
2018-03-19 16:55:30,370 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-19 16:55:30,371 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-19 16:55:30,372 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-19 16:55:30,372 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-19 16:55:30,373 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-19 16:55:30,373 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-19 18:53:26,485 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 18:53:26,486 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-19 18:53:26,487 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-19 18:53:26,487 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-19 18:53:26,488 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-19 18:53:26,488 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-19 18:53:26,488 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-19 18:53:26,521 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-19 18:53:26,522 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-19 18:53:26,522 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-19 18:53:26,522 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-19 18:53:26,522 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 18:53:26,541 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-19 18:53:26,541 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 18:53:26,597 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-19 18:53:26,597 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 18:53:26,614 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-19 18:53:26,614 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-19 18:53:26,614 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-19 18:53:26,615 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-19 18:53:26,616 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-19 18:53:26,631 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:53:26,632 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-19 18:53:26,632 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-19 18:53:26,650 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-19 18:53:26,650 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-19 18:53:26,656 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:53:26,656 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:53:26,663 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:53:26,663 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:53:26,669 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:53:26,669 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-19 18:53:26,738 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:53:26,738 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-19 18:53:26,739 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-19 18:53:26,744 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:53:26,744 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:53:26,750 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:53:26,750 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:53:26,759 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:53:26,760 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:53:26,767 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:53:26,767 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-19 18:53:26,829 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:53:26,830 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-19 18:53:26,830 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-19 18:53:26,835 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-19 18:53:26,836 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-19 18:53:26,840 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:53:26,841 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:53:26,846 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:53:26,846 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:53:26,852 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:53:26,852 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:53:26,857 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:53:26,857 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-19 18:53:26,921 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:53:26,921 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-19 18:53:26,922 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-19 18:53:26,927 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:53:26,927 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:53:26,933 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:53:26,933 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:53:26,937 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:53:26,938 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:53:26,958 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:53:26,959 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-19 18:53:27,026 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:53:27,026 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-19 18:53:27,027 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-19 18:53:27,034 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-19 18:53:27,034 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-19 18:53:27,039 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:53:27,040 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:53:27,046 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:53:27,046 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:53:27,054 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:53:27,054 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:53:27,060 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:53:27,060 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-19 18:53:27,121 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:53:27,121 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(326,)
2018-03-19 18:53:27,122 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 326
2018-03-19 18:53:27,129 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 18:53:27,130 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 18:53:27,136 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 18:53:27,137 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 18:53:27,143 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 18:53:27,143 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 18:53:27,149 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 18:53:27,150 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 18:53:27,156 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:53:27,156 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:53:27,161 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:53:27,161 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:53:27,168 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:53:27,168 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 326
2018-03-19 18:53:27,237 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:53:27,238 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-19 18:53:27,238 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-19 18:53:27,246 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:53:27,246 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:53:27,255 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:53:27,255 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:53:27,264 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:53:27,265 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-19 18:53:27,329 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:53:27,329 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(328,)
2018-03-19 18:53:27,329 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 328
2018-03-19 18:53:27,336 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 18:53:27,337 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 18:53:27,344 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 18:53:27,344 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 18:53:27,351 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 18:53:27,351 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 18:53:27,386 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 18:53:27,394 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 18:53:27,401 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:53:27,401 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:53:27,408 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:53:27,408 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:53:27,415 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:53:27,415 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 328
2018-03-19 18:53:27,479 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-19 18:53:27,480 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-19 18:53:27,480 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-19 18:53:27,481 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-19 18:53:27,516 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-19 18:53:27,517 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-19 18:53:27,517 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-19 18:53:27,525 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 18:53:27,525 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 18:53:27,526 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 18:53:27,533 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:53:27,534 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 18:53:27,534 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:53:27,534 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:53:27,534 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:53:27,534 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:53:27,535 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,535 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer'}
2018-03-19 18:53:27,535 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 18:53:27,535 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:53:27,536 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-19 18:53:27,536 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer'}
2018-03-19 18:53:27,536 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-19 18:53:27,536 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-19 18:53:27,537 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 18:53:27,537 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-19 18:53:27,537 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 18:53:27,537 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 18:53:27,596 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 18:53:27,601 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"next_month_first_day_yyyy_mm_dd": "2018-04-01", "recent_7day_range_yyyy_mm_dd": "2018-03-12-2018-03-18", "last_weekday7_yyyymmdd": "20180318", "current_month_last_year_yyyymm": "2017-03", "curtime": "2018-03-19 18:53:26", "current_month_last_year_yyyy_mm": "2017-03", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "next_month_first_day_yyyymmdd": "20180401", "current_month_yyyymm": "201803", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday1_yyyymmdd": "20180305", "recent_30day_range_yyyy_mm_dd": "20180217-20180318", "last_month_first_day_yyyymmdd": "20180201", "last_weekday7_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyymm": "201812", "curmonth_range_yyyymmdd": "20180301-20180331", "december_month_last_year_yyyymm": "201712", "weekday7_yyyymmdd": "20180325", "current_month_yyyy_mm": "2018-03", "weekday1_yyyy_mm_dd": "20180319", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_month_yyyymm": "201802", "weekday1_yyyymmdd": "20180319", "yesterday_yyyymmdd": "20180318", "lastmonth_range_yyyymmdd": "20180301-20180331", "today_yyyymmdd": "20180319", "millisecond_for_curdate": 1521388800000, "millisecond_for_yesterday": 1521302400000, "last_month_final_day_yyyymmdd": "20180228", "pre_weekday7_yyyymmdd": "20180311", "last_month_yyyy_mm": "2018-02", "december_month_last_year_yyyy_mm": "2017-12", "today_yyyy_mm_dd": "2018-03-19", "curmonth_first_day_yyyymmdd": "20180301", "yesterday_yyyy_mm_dd": "2018-03-18", "current_week_num_yyyy_mm": "2018-12", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "recent_7day_range_yyyymmdd": "20180312-20180318", "millisecond_for_curtime": 1521456806000, "weekday7_yyyy_mm_dd": "20180325", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "recent_30day_range_yyyymmdd": "2018-02-17-2018-03-18"}
2018-03-19 18:53:27,601 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Mon, 19 Mar 2018 10:53:26 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-19 18:53:27,601 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:53:27,602 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 18:53:27,602 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,602 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 18:53:27,602 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-19 18:53:27,603 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-19 18:53:27,603 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-19 18:53:27,603 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,603 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,604 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：None
2018-03-19 18:53:27,604 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：None
2018-03-19 18:53:27,604 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyy_mm_dd-None
2018-03-19 18:53:27,604 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,605 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 18:53:27,605 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-19 18:53:27,605 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-19 18:53:27,605 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-19 18:53:27,605 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,606 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 18:53:27,606 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-19 18:53:27,606 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-19 18:53:27,606 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-19 18:53:27,607 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,607 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 18:53:27,607 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 18:53:27,607 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 18:53:27,608 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-19 18:53:27,608 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,608 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,608 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 18:53:27,609 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 18:53:27,609 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 18:53:27,609 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,610 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_week_num_yyyyno', 'value']
2018-03-19 18:53:27,610 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：None
2018-03-19 18:53:27,610 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：None
2018-03-19 18:53:27,610 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_week_num_yyyyno-None
2018-03-19 18:53:27,610 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,611 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,611 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-19 18:53:27,611 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-19 18:53:27,611 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-19
2018-03-19 18:53:27,612 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,612 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 18:53:27,612 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19 18:53:26
2018-03-19 18:53:27,612 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19 18:53:26
2018-03-19 18:53:27,613 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-19 18:53:26
2018-03-19 18:53:27,613 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,613 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 18:53:27,613 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 18:53:27,614 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 18:53:27,614 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-19 18:53:27,614 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,614 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-19 18:53:27,614 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：None
2018-03-19 18:53:27,615 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：None
2018-03-19 18:53:27,615 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyymmdd-None
2018-03-19 18:53:27,615 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,616 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 18:53:27,616 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 18:53:27,616 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 18:53:27,616 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-19 18:53:27,617 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,617 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,617 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 18:53:27,617 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 18:53:27,618 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-19 18:53:27,618 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,618 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 18:53:27,619 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-19 18:53:27,619 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-19 18:53:27,619 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-19 18:53:27,620 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,620 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 18:53:27,620 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-19 18:53:27,620 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-19 18:53:27,621 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-19 18:53:27,621 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,621 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 18:53:27,621 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-19 18:53:27,622 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-19 18:53:27,622 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-19 18:53:27,622 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,622 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 18:53:27,623 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 18:53:27,623 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 18:53:27,623 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180319
2018-03-19 18:53:27,623 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,624 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,624 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180217-20180318
2018-03-19 18:53:27,624 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180217-20180318
2018-03-19 18:53:27,624 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180217-20180318
2018-03-19 18:53:27,625 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,625 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,625 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 18:53:27,625 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 18:53:27,626 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-18
2018-03-19 18:53:27,626 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,626 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 18:53:27,627 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-19 18:53:27,627 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-19 18:53:27,627 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-19 18:53:27,627 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,627 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 18:53:27,628 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-19 18:53:27,628 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-19 18:53:27,629 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-19 18:53:27,629 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,629 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,630 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 18:53:27,630 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 18:53:27,630 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 18:53:27,630 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,631 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 18:53:27,631 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-19 18:53:27,631 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-19 18:53:27,631 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-19 18:53:27,632 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,632 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 18:53:27,632 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 18:53:27,633 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 18:53:27,633 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-19 18:53:27,633 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,633 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 18:53:27,634 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 18:53:27,634 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 18:53:27,634 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-19 18:53:27,634 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,634 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 18:53:27,635 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-19 18:53:27,635 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-19 18:53:27,635 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-19 18:53:27,635 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,636 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,636 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：None
2018-03-19 18:53:27,636 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：None
2018-03-19 18:53:27,636 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyy_mm_dd-None
2018-03-19 18:53:27,637 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,637 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,637 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-19 18:53:27,638 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-19 18:53:27,638 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-19 18:53:27,638 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,638 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,639 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 18:53:27,639 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 18:53:27,639 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-19 18:53:27,639 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,640 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 18:53:27,640 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-19 18:53:27,640 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-19 18:53:27,640 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-19 18:53:27,641 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,641 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,641 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：None
2018-03-19 18:53:27,641 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：None
2018-03-19 18:53:27,641 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyy_mm_dd-None
2018-03-19 18:53:27,642 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,642 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,642 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-19 18:53:27,643 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-19 18:53:27,643 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-19 18:53:27,643 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,643 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,644 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-19 18:53:27,644 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-19 18:53:27,644 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-19 18:53:27,645 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,645 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,645 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-19 18:53:27,645 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-19 18:53:27,646 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-19 18:53:27,646 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,646 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-19 18:53:27,646 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：None
2018-03-19 18:53:27,647 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：None
2018-03-19 18:53:27,647 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyymmdd-None
2018-03-19 18:53:27,647 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,648 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 18:53:27,648 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521302400000
2018-03-19 18:53:27,648 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521302400000
2018-03-19 18:53:27,649 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521302400000
2018-03-19 18:53:27,649 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,649 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 18:53:27,649 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-19 18:53:27,650 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-19 18:53:27,650 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-19 18:53:27,650 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,651 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 18:53:27,651 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-17-2018-03-18
2018-03-19 18:53:27,651 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-17-2018-03-18
2018-03-19 18:53:27,651 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-17-2018-03-18
2018-03-19 18:53:27,652 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,652 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,652 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 18:53:27,652 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 18:53:27,653 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-19 18:53:27,653 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,653 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 18:53:27,653 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-19 18:53:27,654 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-19 18:53:27,654 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-19 18:53:27,654 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,654 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 18:53:27,655 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 18:53:27,655 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 18:53:27,655 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180312-20180318
2018-03-19 18:53:27,655 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,656 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyymmdd', 'value']
2018-03-19 18:53:27,657 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：None
2018-03-19 18:53:27,658 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：None
2018-03-19 18:53:27,658 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyymmdd-None
2018-03-19 18:53:27,659 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,659 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 18:53:27,659 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 18:53:27,660 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 18:53:27,660 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-19 18:53:27,660 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,660 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 18:53:27,661 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-19 18:53:27,661 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-19 18:53:27,661 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-19 18:53:27,662 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,662 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,662 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-19 18:53:27,663 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-19 18:53:27,663 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-19 18:53:27,664 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,664 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 18:53:27,664 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-19 18:53:27,665 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-19 18:53:27,665 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-19 18:53:27,665 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,665 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 18:53:27,666 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521456806000
2018-03-19 18:53:27,666 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521456806000
2018-03-19 18:53:27,666 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521456806000
2018-03-19 18:53:27,667 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,667 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,667 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 18:53:27,667 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 18:53:27,668 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 18:53:27,668 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,668 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,669 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-19 18:53:27,669 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-19 18:53:27,669 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-19 18:53:27,670 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,670 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 18:53:27,670 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-19 18:53:27,670 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-19 18:53:27,671 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-19 18:53:27,671 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,671 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 18:53:27,672 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 18:53:27,672 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 18:53:27,672 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-19 18:53:27,672 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,672 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 18:53:27,673 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-19 18:53:27,673 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-19 18:53:27,673 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521388800000
2018-03-19 18:53:27,674 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:53:27,674 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 18:53:27,674 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 18:53:27,675 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 18:53:27,675 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180318
2018-03-19 18:53:27,675 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 18:53:27,675 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:53:27,675 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,676 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,676 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 18:53:27,676 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 18:53:27,677 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-19 18:53:27,677 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-19 18:53:27,677 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-19 18:53:27,685 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:53:27,685 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-19 18:53:27,685 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-19 18:53:27,686 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-19 18:53:27,686 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-19 18:53:27,686 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-19 18:53:27,694 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:53:27,694 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-19 18:53:27,694 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:53:27,695 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:53:27,695 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:53:27,695 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:53:27,695 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,696 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,696 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-19 18:53:27,696 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:53:27,696 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,697 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,698 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:53:27,699 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-19 18:53:27,699 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-19 18:53:27,699 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-19 18:53:27,799 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-19 18:53:27,800 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-19 18:53:27,801 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 10:53:27 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=8c2aiyklxotqmxqs2zcsq5x4;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-19 18:53:27,802 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:53:27,802 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-19 18:53:27,802 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-19 18:53:27,802 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:53:27,803 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,803 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,803 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-19 18:53:27,803 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-19 18:53:27,804 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-19 18:53:27,804 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:53:27,804 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:53:27,807 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:53:27,807 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 18:53:27,807 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-19 18:53:27,808 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,808 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-19 18:53:27,808 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-19 18:53:27,809 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:53:27,809 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,809 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,809 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-19 18:53:27,810 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:53:27,810 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,810 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,810 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:53:27,811 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 18:53:27,811 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-19 18:53:27,811 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-19 18:53:27,812 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 18:53:27,907 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 18:53:27,908 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-19 18:53:27,908 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 10:53:27 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 18-Mar-2018 10:53:27 GMT')]
2018-03-19 18:53:27,909 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:53:27,909 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 18:53:27,909 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 18:53:27,910 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:53:27,910 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,910 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,911 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-19 18:53:27,912 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-19 18:53:27,912 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-19 18:53:27,913 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-19 18:53:27,913 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-19 18:53:27,923 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:53:27,923 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-19 18:53:27,923 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 18:53:27,924 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-19 18:53:27,924 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 18:53:27,924 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:53:27,924 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,925 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,925 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 18:53:27,925 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:53:27,925 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,926 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,926 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:53:27,926 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-19 18:53:27,927 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 18:53:27,935 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-13', '2018-03-19'], flag：True
2018-03-19 18:53:27,935 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 18:53:27,936 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 18:53:27,936 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 18:53:27,936 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 18:53:27,938 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-19 18:53:27,938 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-19 18:53:27,938 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-19 18:53:27,946 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:53:27,946 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-19 18:53:27,946 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 18:53:27,946 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-19 18:53:27,947 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 18:53:27,947 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:53:27,947 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,948 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'before7day1': '2018-03-13', 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today1': '2018-03-19', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,949 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 18:53:27,949 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:53:27,950 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,950 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'before7day1': '2018-03-13', 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today1': '2018-03-19', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,950 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:53:27,951 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-19 18:53:27,951 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 18:53:27,958 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180318'], flag：True
2018-03-19 18:53:27,958 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 18:53:27,959 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 18:53:27,959 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 18:53:27,960 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 18:53:27,960 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID326-库存查询(自然日), ID:326]======================
2018-03-19 18:53:27,960 test_case.py[line: 32] INFO: 正在查询测试用例[ID：326, 名称：ID326-库存查询(自然日)]关联的测试步骤
2018-03-19 18:53:27,961 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(326,)
2018-03-19 18:53:27,969 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:53:27,969 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 770]======================
2018-03-19 18:53:27,970 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:53:27,970 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:53:27,970 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:53:27,970 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 18:53:27,970 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$yesterday_yyyymmdd$', '$yesterday_yyyymmdd$']
2018-03-19 18:53:27,971 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'yesterday1': '20180318', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'before7day1': '2018-03-13', 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today1': '2018-03-19', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,971 test_case_step.py[line: 58] INFO: 正在替换动态变量：$yesterday_yyyymmdd$
2018-03-19 18:53:27,971 test_case_step.py[line: 58] INFO: 正在替换动态变量：$yesterday_yyyymmdd$
2018-03-19 18:53:27,971 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=20180318&dataType=day&dataRange=20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-19 18:53:27,971 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:53:27,972 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,972 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'yesterday1': '20180318', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'before7day1': '2018-03-13', 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today1': '2018-03-19', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,973 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-19 18:53:27,973 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:53:27,973 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:27,974 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'yesterday1': '20180318', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'before7day1': '2018-03-13', 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today1': '2018-03-19', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:27,974 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:53:27,974 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 18:53:27,975 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-19 18:53:27,975 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=20180318&dataType=day&dataRange=20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-19 18:53:27,975 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 18:53:28,051 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-19 18:53:28,052 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"791","inventoryAvgAge":1,"item":"67680931826883035","itemName":"Tmall-67680931826883035-ZTO-.61","periodSaleNum":"120","rowCount":null,"totalQty":"891","warehouseName":"全部仓库"},{"availableQty":"997","inventoryAvgAge":1,"item":"67679963767196686","itemName":"Tmall-67679963767196686-STO-.68","periodSaleNum":"897","rowCount":null,"totalQty":"998","warehouseName":"全部仓库"},{"availableQty":"995","inventoryAvgAge":1,"item":"67680120874265453","itemName":"Tmall-67680120874265453-STO-2.01","periodSaleNum":"895","rowCount":null,"totalQty":"996","warehouseName":"全部仓库"},{"availableQty":"991","inventoryAvgAge":1,"item":"67680284840348202","itemName":"Tmall-67680284840348202-YUNDA-.19","periodSaleNum":"891","rowCount":null,"totalQty":"992","warehouseName":"全部仓库"},{"availableQty":"996","inventoryAvgAge":2,"item":"67680092905297662","itemName":"Tmall-67680092905297662-HTKY-.1","periodSaleNum":"896","rowCount":null,"totalQty":"997","warehouseName":"全部仓库"},{"availableQty":"999","inventoryAvgAge":3,"item":"67679737975970397","itemName":"Tmall-67679737975970397-ZTO-.81","periodSaleNum":"899","rowCount":null,"totalQty":"1000","warehouseName":"全部仓库"},{"availableQty":"990","inventoryAvgAge":3,"item":"67680284843348202","itemName":"Tmall-67680284843348202-HTKY-.11","periodSaleNum":"790","rowCount":null,"totalQty":"990","warehouseName":"全部仓库"},{"availableQty":"790","inventoryAvgAge":3,"item":"67681075682811352","itemName":"Tmall-67681075682811352-STO-.34","periodSaleNum":"0","rowCount":null,"totalQty":"890","warehouseName":"全部仓库"},{"availableQty":"998","inventoryAvgAge":4,"item":"67679823116444785","itemName":"Tmall-67679823116444785-EMS-1.46","periodSaleNum":"898","rowCount":null,"totalQty":"999","warehouseName":"全部仓库"},{"availableQty":"890","inventoryAvgAge":5,"item":"67680549654712683","itemName":"Tmall-67680549654712683-YUNDA-.06","periodSaleNum":"790","rowCount":null,"totalQty":"898","warehouseName":"全部仓库"}]}
2018-03-19 18:53:28,052 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 10:53:27 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2069'), ('Connection', 'close')]
2018-03-19 18:53:28,052 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:53:28,052 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 18:53:28,053 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 18:53:28,053 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:53:28,053 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:28,053 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'yesterday1': '20180318', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'before7day1': '2018-03-13', 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today1': '2018-03-19', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:28,056 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-19 18:53:28,057 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-19 18:53:28,057 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID328-库存查询(自然周), ID:328]======================
2018-03-19 18:53:28,058 test_case.py[line: 32] INFO: 正在查询测试用例[ID：328, 名称：ID328-库存查询(自然周)]关联的测试步骤
2018-03-19 18:53:28,058 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(328,)
2018-03-19 18:53:28,066 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:53:28,066 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 772]======================
2018-03-19 18:53:28,066 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:53:28,067 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:53:28,067 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:53:28,067 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 18:53:28,067 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$last_weekday1_to_weekday7_yyyymmdd$', '$last_week_num_yyyyno$']
2018-03-19 18:53:28,068 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'yesterday1': '20180318', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'before7day1': '2018-03-13', 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today1': '2018-03-19', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:28,068 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_weekday1_to_weekday7_yyyymmdd$
2018-03-19 18:53:28,068 test_case_step.py[line: 67] ERROR: 替换动态变量出错：Can't convert 'NoneType' object to str implicitly
2018-03-19 18:53:28,068 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:53:28,069 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:28,069 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'yesterday1': '20180318', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'before7day1': '2018-03-13', 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today1': '2018-03-19', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:28,070 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-19 18:53:28,070 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:53:28,070 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:53:28,071 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_final_day_yyyymmdd': '20180228', 'last_weekday1_yyyy_mm_dd': None, 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_week_num_yyyyno': None, 'last_weekday1_to_weekday7_yyyy_mm_dd': None, 'global_username': 'dataviewer', 'current_week_num_yyyymm': '201812', 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': None, 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyymmdd': '20180331', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyymmdd': '20180319', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'yesterday_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_yyyymm': '201803', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'weekday1_to_weekday7_yyyy_mm_dd': None, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'weekday7_yyyy_mm_dd': '20180325', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curdate': 1521388800000, 'yesterday1': '20180318', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_yyyymm': '201802', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_to_weekday7_yyyymmdd': None, 'before7day1': '2018-03-13', 'millisecond_for_yesterday': 1521302400000, 'curtime': '2018-03-19 18:53:26', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_weekday1_yyyymmdd': None, 'global_mobile': '18110000014', 'last_weekday7_yyyymmdd': '20180318', 'global_monthly_code1': '2017112815', 'last_month_yyyy_mm': '2018-02', 'current_month_last_year_yyyymm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_curtime': 1521456806000, 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'today1': '2018-03-19', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_platform_host': '10.118.59.84', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'yesterday_yyyymmdd': '20180318'}
2018-03-19 18:53:28,071 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:53:28,072 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 18:53:28,072 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-19 18:53:28,072 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=%24last_weekday1_to_weekday7_yyyymmdd%24&dataType=week&dataRange=%24last_week_num_yyyyno%24&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-19 18:53:28,072 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 18:53:28,179 test_case.py[line: 85] ERROR: 步骤[第 1 步, 步骤ID: 772]运行失败
2018-03-19 18:53:28,179 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-19 18:53:28,179 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-19 18:53:28,180 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-19 18:53:28,180 main.py[line: 48] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-03-19 18:56:52,105 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 18:56:52,106 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-19 18:56:52,107 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-19 18:56:52,107 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-19 18:56:52,107 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-19 18:56:52,107 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-19 18:56:52,108 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-19 18:56:52,126 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-19 18:56:52,126 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-19 18:56:52,127 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-19 18:56:52,127 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-19 18:56:52,127 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 18:56:52,146 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-19 18:56:52,146 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 18:56:52,199 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-19 18:56:52,199 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 18:56:52,230 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-19 18:56:52,231 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-19 18:56:52,231 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-19 18:56:52,231 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-19 18:56:52,231 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-19 18:56:52,243 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:56:52,243 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-19 18:56:52,243 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-19 18:56:52,262 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-19 18:56:52,262 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-19 18:56:52,268 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:56:52,268 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:56:52,273 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:56:52,273 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:56:52,279 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:56:52,279 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-19 18:56:52,459 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:56:52,459 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-19 18:56:52,459 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-19 18:56:52,466 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:56:52,466 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:56:52,473 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:56:52,473 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:56:52,478 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:56:52,478 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:56:52,485 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:56:52,485 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-19 18:56:52,575 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:56:52,576 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-19 18:56:52,577 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-19 18:56:52,584 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-19 18:56:52,585 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-19 18:56:52,591 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:56:52,592 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:56:52,601 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:56:52,602 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:56:52,610 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:56:52,610 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:56:52,618 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:56:52,618 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-19 18:56:52,684 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:56:52,684 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-19 18:56:52,685 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-19 18:56:52,691 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:56:52,691 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:56:52,699 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:56:52,699 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:56:52,705 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:56:52,706 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:56:52,712 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:56:52,712 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-19 18:56:52,783 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:56:52,784 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-19 18:56:52,784 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-19 18:56:52,788 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-19 18:56:52,789 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-19 18:56:52,796 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:56:52,796 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:56:52,803 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:56:52,803 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:56:52,810 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:56:52,811 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:56:52,816 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:56:52,816 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-19 18:56:52,916 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:56:52,916 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(326,)
2018-03-19 18:56:52,916 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 326
2018-03-19 18:56:52,923 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 18:56:52,923 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 18:56:52,930 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 18:56:52,931 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 18:56:52,936 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 18:56:52,936 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 18:56:52,942 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 18:56:52,943 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 18:56:52,954 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:56:52,955 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:56:52,960 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:56:52,961 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:56:52,968 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:56:52,968 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 326
2018-03-19 18:56:53,041 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:56:53,042 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-19 18:56:53,042 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-19 18:56:53,049 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:56:53,049 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:56:53,055 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:56:53,055 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:56:53,060 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:56:53,061 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-19 18:56:53,125 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:56:53,125 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(328,)
2018-03-19 18:56:53,125 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 328
2018-03-19 18:56:53,133 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 18:56:53,133 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 18:56:53,142 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 18:56:53,142 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 18:56:53,149 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 18:56:53,150 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 18:56:53,157 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 18:56:53,157 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 18:56:53,164 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:56:53,165 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:56:53,172 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:56:53,173 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:56:53,180 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:56:53,180 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 328
2018-03-19 18:56:53,249 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-19 18:56:53,250 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-19 18:56:53,250 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-19 18:56:53,250 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-19 18:56:53,264 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-19 18:56:53,264 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-19 18:56:53,265 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-19 18:56:53,272 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 18:56:53,272 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 18:56:53,272 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 18:56:53,280 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:56:53,281 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 18:56:53,281 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:56:53,281 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:56:53,281 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:56:53,282 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:56:53,282 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:56:53,282 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84'}
2018-03-19 18:56:53,282 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 18:56:53,283 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:56:53,283 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-19 18:56:53,283 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84'}
2018-03-19 18:56:53,283 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-19 18:56:53,284 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-19 18:56:53,284 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 18:56:53,284 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-19 18:56:53,285 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 18:56:53,285 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 18:56:53,334 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 18:56:53,338 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"current_week_num_yyyy_mm": "2018-12", "last_weekday7_yyyy_mm_dd": "2018-03-18", "last_weekday1_yyyymmdd": "20180312", "current_month_last_year_yyyymm": "2017-03", "weekday1_to_weekday7_yyyy_mm_dd": "20180319-20180325", "curtime": "2018-03-19 18:56:52", "curmonth_first_day_yyyymmdd": "20180301", "next_month_first_day_yyyy_mm_dd": "2018-04-01", "yesterday_yyyy_mm_dd": "2018-03-18", "december_month_last_year_yyyymm": "201712", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_weekday7_yyyymmdd": "20180318", "today_yyyy_mm_dd": "2018-03-19", "recent_7day_range_yyyy_mm_dd": "2018-03-12-2018-03-18", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "current_week_num_yyyymm": "201812", "recent_30day_range_yyyymmdd": "2018-02-17-2018-03-18", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "recent_7day_range_yyyymmdd": "20180312-20180318", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "weekday1_to_weekday7_yyyymmdd": "20180319-20180325", "recent_30day_range_yyyy_mm_dd": "20180217-20180318", "millisecond_for_curdate": 1521388800000, "last_weekday1_to_weekday7_yyyy_mm_dd": "2018-03-12-2018-03-18", "millisecond_for_curtime": 1521457012000, "weekday1_yyyymmdd": "20180319", "lastmonth_range_yyyymmdd": "20180301-20180331", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "curmonth_range_yyyymmdd": "20180301-20180331", "last_weekday1_to_weekday7_yyyymmdd": "20180312-20180318", "last_month_final_day_yyyymmdd": "20180228", "today_yyyymmdd": "20180319", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "current_month_yyyy_mm": "2018-03", "last_month_first_day_yyyymmdd": "20180201", "weekday7_yyyymmdd": "20180325", "last_week_num_yyyyno": "201811", "last_month_yyyymm": "201802", "current_month_last_year_yyyy_mm": "2017-03", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "next_month_first_day_yyyymmdd": "20180401", "last_weekday1_yyyy_mm_dd": "2018-03-12", "current_month_yyyymm": "201803", "millisecond_for_yesterday": 1521302400000, "pre_weekday7_yyyymmdd": "20180311", "pre_weekday1_yyyymmdd": "20180305", "weekday1_yyyy_mm_dd": "20180319", "yesterday_yyyymmdd": "20180318", "last_month_yyyy_mm": "2018-02", "weekday7_yyyy_mm_dd": "20180325", "december_month_last_year_yyyy_mm": "2017-12"}
2018-03-19 18:56:53,338 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Mon, 19 Mar 2018 10:56:52 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-19 18:56:53,339 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:56:53,339 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 18:56:53,339 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,339 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,340 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 18:56:53,340 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 18:56:53,340 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 18:56:53,340 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,341 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 18:56:53,341 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 18:56:53,342 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 18:56:53,342 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-19 18:56:53,342 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,342 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 18:56:53,343 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 18:56:53,343 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 18:56:53,343 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180318
2018-03-19 18:56:53,343 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,344 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 18:56:53,344 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19 18:56:52
2018-03-19 18:56:53,344 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19 18:56:52
2018-03-19 18:56:53,345 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-19 18:56:52
2018-03-19 18:56:53,345 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,345 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 18:56:53,345 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 18:56:53,346 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 18:56:53,346 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-19 18:56:53,346 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,346 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,347 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-19 18:56:53,347 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-19 18:56:53,347 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-19 18:56:53,348 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,348 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,348 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 18:56:53,348 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 18:56:53,349 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-19 18:56:53,349 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,349 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 18:56:53,349 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 18:56:53,350 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 18:56:53,350 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180312-20180318
2018-03-19 18:56:53,350 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,350 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 18:56:53,351 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 18:56:53,352 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 18:56:53,352 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-19 18:56:53,352 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,353 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 18:56:53,353 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 18:56:53,353 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 18:56:53,354 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-19 18:56:53,354 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,354 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 18:56:53,355 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-19 18:56:53,355 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-19 18:56:53,355 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521388800000
2018-03-19 18:56:53,355 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,356 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 18:56:53,356 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-19 18:56:53,356 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-19 18:56:53,357 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-19 18:56:53,357 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,357 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,358 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 18:56:53,358 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 18:56:53,358 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-19 18:56:53,358 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,359 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 18:56:53,359 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-19 18:56:53,359 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-19 18:56:53,359 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-19 18:56:53,360 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,360 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 18:56:53,360 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-19 18:56:53,361 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-19 18:56:53,361 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-19 18:56:53,361 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,361 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,362 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-19 18:56:53,362 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-19 18:56:53,362 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-19 18:56:53,362 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,363 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 18:56:53,363 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-19 18:56:53,363 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-19 18:56:53,364 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-19 18:56:53,364 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,364 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 18:56:53,365 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-19 18:56:53,365 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-19 18:56:53,365 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-19 18:56:53,365 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,366 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,366 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-19 18:56:53,366 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-19 18:56:53,368 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-19 18:56:53,368 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,369 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 18:56:53,369 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-19 18:56:53,369 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-19 18:56:53,369 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-19 18:56:53,370 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,370 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 18:56:53,370 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-19 18:56:53,370 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-19 18:56:53,372 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-19 18:56:53,373 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,373 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,374 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-19 18:56:53,374 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-19 18:56:53,374 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-19 18:56:53,375 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,375 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,375 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12
2018-03-19 18:56:53,375 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12
2018-03-19 18:56:53,376 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyy_mm_dd-2018-03-12
2018-03-19 18:56:53,376 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,376 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 18:56:53,377 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 18:56:53,377 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 18:56:53,377 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-19 18:56:53,377 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,377 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 18:56:53,378 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-19 18:56:53,378 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-19 18:56:53,379 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-19 18:56:53,379 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,379 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,379 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-19 18:56:53,380 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-19 18:56:53,380 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-19 18:56:53,380 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,380 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 18:56:53,381 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-19 18:56:53,381 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-19 18:56:53,381 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-19 18:56:53,381 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,382 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyymmdd', 'value']
2018-03-19 18:56:53,382 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312
2018-03-19 18:56:53,382 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312
2018-03-19 18:56:53,383 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyymmdd-20180312
2018-03-19 18:56:53,383 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,383 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_week_num_yyyyno', 'value']
2018-03-19 18:56:53,383 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201811
2018-03-19 18:56:53,384 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201811
2018-03-19 18:56:53,384 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_week_num_yyyyno-201811
2018-03-19 18:56:53,384 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,384 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 18:56:53,385 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-19 18:56:53,386 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-19 18:56:53,386 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-19 18:56:53,386 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,386 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,387 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-19 18:56:53,387 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-19 18:56:53,388 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-19
2018-03-19 18:56:53,389 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,389 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 18:56:53,389 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-19 18:56:53,390 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-19 18:56:53,390 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-19 18:56:53,390 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,391 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 18:56:53,391 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521457012000
2018-03-19 18:56:53,391 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521457012000
2018-03-19 18:56:53,391 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521457012000
2018-03-19 18:56:53,392 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,392 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,392 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 18:56:53,393 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 18:56:53,393 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-19 18:56:53,393 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,393 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,394 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 18:56:53,394 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 18:56:53,394 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-18
2018-03-19 18:56:53,394 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,395 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 18:56:53,395 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-19 18:56:53,395 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-19 18:56:53,396 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-19 18:56:53,396 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,396 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,397 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 18:56:53,397 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 18:56:53,397 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 18:56:53,397 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,398 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,398 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 18:56:53,398 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 18:56:53,398 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 18:56:53,399 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,399 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-19 18:56:53,400 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 18:56:53,401 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 18:56:53,401 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyymmdd-20180312-20180318
2018-03-19 18:56:53,402 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,402 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-19 18:56:53,402 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-19 18:56:53,402 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-19 18:56:53,403 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyymmdd-20180319-20180325
2018-03-19 18:56:53,403 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,403 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 18:56:53,404 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 18:56:53,404 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 18:56:53,404 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180319
2018-03-19 18:56:53,405 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,405 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 18:56:53,406 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 18:56:53,406 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 18:56:53,406 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-19 18:56:53,406 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,407 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 18:56:53,407 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-19 18:56:53,407 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-19 18:56:53,407 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-19 18:56:53,408 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,408 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,408 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 18:56:53,409 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 18:56:53,409 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 18:56:53,409 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,409 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 18:56:53,410 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-19 18:56:53,410 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-19 18:56:53,410 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-19 18:56:53,410 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,410 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 18:56:53,411 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-19 18:56:53,411 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-19 18:56:53,411 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-19 18:56:53,412 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,412 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,412 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-19 18:56:53,412 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-19 18:56:53,413 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-19 18:56:53,413 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,413 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,413 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180217-20180318
2018-03-19 18:56:53,414 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180217-20180318
2018-03-19 18:56:53,414 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180217-20180318
2018-03-19 18:56:53,414 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,415 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,415 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-19 18:56:53,415 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-19 18:56:53,416 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyy_mm_dd-20180319-20180325
2018-03-19 18:56:53,416 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,416 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 18:56:53,416 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-17-2018-03-18
2018-03-19 18:56:53,417 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-17-2018-03-18
2018-03-19 18:56:53,417 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-17-2018-03-18
2018-03-19 18:56:53,417 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,417 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 18:56:53,418 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 18:56:53,418 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 18:56:53,418 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-19 18:56:53,418 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,419 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 18:56:53,419 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521302400000
2018-03-19 18:56:53,419 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521302400000
2018-03-19 18:56:53,419 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521302400000
2018-03-19 18:56:53,420 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:56:53,420 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 18:56:53,420 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-19 18:56:53,420 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-19 18:56:53,421 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-19 18:56:53,421 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 18:56:53,421 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:56:53,421 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:56:53,422 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'yesterday_yyyymmdd': '20180318', 'curtime': '2018-03-19 18:56:52', 'last_weekday7_yyyymmdd': '20180318', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_month_last_year_yyyy_mm': '2017-03', 'millisecond_for_curdate': 1521388800000, 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'curmonth_final_day_yyyymmdd': '20180331', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_month_first_day_yyyymmdd': '20180201', 'last_month_yyyymm': '201802', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'current_week_num_yyyymm': '201812', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyymm': '201803', 'today_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'millisecond_for_curtime': 1521457012000, 'yesterday_yyyy_mm_dd': '2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curmonth_first_day_yyyymmdd': '20180301', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyy_mm': '2018-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'today_yyyymmdd': '20180319', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_yyyy_mm': '2018-02', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'global_monthly_code1': '2017112815', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'global_platform_host': '10.118.59.84', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'current_month_last_year_yyyymm': '2017-03', 'millisecond_for_yesterday': 1521302400000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325'}
2018-03-19 18:56:53,425 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 18:56:53,425 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 18:56:53,426 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-19 18:56:53,426 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-19 18:56:53,426 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-19 18:56:53,458 mydb.py[line: 173] ERROR: 执行数据库查询操作失败：MySQL Connection not available.
2018-03-19 18:56:53,458 test_case.py[line: 98] ERROR: local variable 'db_cursor' referenced before assignment
2018-03-19 18:56:53,459 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-19 18:56:53,459 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-19 18:56:53,459 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-19 18:56:53,460 mydb.py[line: 173] ERROR: 执行数据库查询操作失败：MySQL Connection not available.
2018-03-19 18:56:53,460 test_case.py[line: 98] ERROR: local variable 'db_cursor' referenced before assignment
2018-03-19 18:56:53,460 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-19 18:56:53,460 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-19 18:56:53,461 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-19 18:56:53,461 mydb.py[line: 173] ERROR: 执行数据库查询操作失败：MySQL Connection not available.
2018-03-19 18:56:53,461 test_case.py[line: 98] ERROR: local variable 'db_cursor' referenced before assignment
2018-03-19 18:56:53,462 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID326-库存查询(自然日), ID:326]======================
2018-03-19 18:56:53,462 test_case.py[line: 32] INFO: 正在查询测试用例[ID：326, 名称：ID326-库存查询(自然日)]关联的测试步骤
2018-03-19 18:56:53,462 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(326,)
2018-03-19 18:56:53,462 mydb.py[line: 173] ERROR: 执行数据库查询操作失败：MySQL Connection not available.
2018-03-19 18:56:53,463 test_case.py[line: 98] ERROR: local variable 'db_cursor' referenced before assignment
2018-03-19 18:56:53,463 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID328-库存查询(自然周), ID:328]======================
2018-03-19 18:56:53,463 test_case.py[line: 32] INFO: 正在查询测试用例[ID：328, 名称：ID328-库存查询(自然周)]关联的测试步骤
2018-03-19 18:56:53,463 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(328,)
2018-03-19 18:56:53,464 mydb.py[line: 173] ERROR: 执行数据库查询操作失败：MySQL Connection not available.
2018-03-19 18:56:53,464 test_case.py[line: 98] ERROR: local variable 'db_cursor' referenced before assignment
2018-03-19 18:56:53,464 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-19 18:56:53,465 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-19 18:56:53,465 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-19 18:56:53,466 main.py[line: 48] INFO: 执行失败，正在更新数据库运行计划的运行状态
2018-03-19 18:57:27,036 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 18:57:27,036 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-19 18:57:27,037 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-19 18:57:27,037 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-19 18:57:27,037 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-19 18:57:27,037 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-19 18:57:27,037 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-19 18:57:27,054 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-19 18:57:27,054 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-19 18:57:27,054 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-19 18:57:27,054 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-19 18:57:27,055 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 18:57:27,060 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-19 18:57:27,060 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 18:57:27,136 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-19 18:57:27,136 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 18:57:27,152 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-19 18:57:27,152 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-19 18:57:27,152 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-19 18:57:27,153 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-19 18:57:27,153 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-19 18:57:27,170 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:57:27,170 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-19 18:57:27,170 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-19 18:57:27,200 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-19 18:57:27,200 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-19 18:57:27,207 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:57:27,207 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:57:27,214 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:57:27,214 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:57:27,220 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:57:27,220 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-19 18:57:27,285 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:57:27,285 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-19 18:57:27,286 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-19 18:57:27,294 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:57:27,294 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:57:27,300 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:57:27,301 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:57:27,306 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:57:27,306 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:57:27,312 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:57:27,312 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-19 18:57:27,368 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:57:27,368 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-19 18:57:27,369 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-19 18:57:27,377 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-19 18:57:27,377 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-19 18:57:27,384 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:57:27,384 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:57:27,393 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:57:27,394 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:57:27,401 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:57:27,402 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:57:27,409 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:57:27,411 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-19 18:57:27,476 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:57:27,476 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-19 18:57:27,477 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-19 18:57:27,482 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:57:27,483 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:57:27,489 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:57:27,489 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:57:27,497 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:57:27,497 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:57:27,504 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:57:27,504 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-19 18:57:27,577 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:57:27,578 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-19 18:57:27,578 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-19 18:57:27,587 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-19 18:57:27,588 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-19 18:57:27,597 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 18:57:27,597 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 18:57:27,604 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:57:27,605 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:57:27,614 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:57:27,614 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:57:27,620 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:57:27,621 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-19 18:57:27,685 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:57:27,685 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(326,)
2018-03-19 18:57:27,686 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 326
2018-03-19 18:57:27,691 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 18:57:27,692 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 18:57:27,698 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 18:57:27,698 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 18:57:27,707 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 18:57:27,707 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 18:57:27,713 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 18:57:27,714 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 18:57:27,721 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:57:27,723 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:57:27,730 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:57:27,730 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:57:27,740 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:57:27,740 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 326
2018-03-19 18:57:27,810 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:57:27,810 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-19 18:57:27,810 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-19 18:57:27,817 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:57:27,817 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:57:27,825 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:57:27,826 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:57:27,832 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:57:27,832 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-19 18:57:27,884 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 18:57:27,884 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(328,)
2018-03-19 18:57:27,885 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 328
2018-03-19 18:57:27,892 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 18:57:27,893 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 18:57:27,899 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 18:57:27,899 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 18:57:27,906 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 18:57:27,906 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 18:57:27,913 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 18:57:27,914 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 18:57:27,920 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 18:57:27,920 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 18:57:27,927 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 18:57:27,927 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 18:57:27,933 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 18:57:27,933 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 328
2018-03-19 18:57:28,009 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-19 18:57:28,009 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-19 18:57:28,010 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-19 18:57:28,010 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-19 18:57:28,028 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-19 18:57:28,028 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-19 18:57:28,028 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-19 18:57:28,034 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 18:57:28,034 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 18:57:28,034 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 18:57:28,043 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:57:28,043 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 18:57:28,044 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:57:28,044 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:57:28,044 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:57:28,044 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:57:28,045 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,045 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_username': 'dataviewer'}
2018-03-19 18:57:28,045 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 18:57:28,045 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:57:28,045 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-19 18:57:28,045 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_username': 'dataviewer'}
2018-03-19 18:57:28,046 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-19 18:57:28,046 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-19 18:57:28,046 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 18:57:28,047 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-19 18:57:28,047 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 18:57:28,047 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 18:57:28,098 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 18:57:28,101 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"current_week_num_yyyy_mm": "2018-12", "last_weekday7_yyyy_mm_dd": "2018-03-18", "last_weekday1_yyyymmdd": "20180312", "current_month_last_year_yyyymm": "2017-03", "weekday1_to_weekday7_yyyy_mm_dd": "20180319-20180325", "curtime": "2018-03-19 18:57:27", "curmonth_first_day_yyyymmdd": "20180301", "next_month_first_day_yyyy_mm_dd": "2018-04-01", "yesterday_yyyy_mm_dd": "2018-03-18", "december_month_last_year_yyyymm": "201712", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_weekday7_yyyymmdd": "20180318", "today_yyyy_mm_dd": "2018-03-19", "recent_7day_range_yyyy_mm_dd": "2018-03-12-2018-03-18", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "current_week_num_yyyymm": "201812", "recent_30day_range_yyyymmdd": "2018-02-17-2018-03-18", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "recent_7day_range_yyyymmdd": "20180312-20180318", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "weekday1_to_weekday7_yyyymmdd": "20180319-20180325", "recent_30day_range_yyyy_mm_dd": "20180217-20180318", "millisecond_for_curdate": 1521388800000, "last_weekday1_to_weekday7_yyyy_mm_dd": "2018-03-12-2018-03-18", "millisecond_for_curtime": 1521457047000, "weekday1_yyyymmdd": "20180319", "lastmonth_range_yyyymmdd": "20180301-20180331", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "curmonth_range_yyyymmdd": "20180301-20180331", "last_weekday1_to_weekday7_yyyymmdd": "20180312-20180318", "last_month_final_day_yyyymmdd": "20180228", "today_yyyymmdd": "20180319", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "current_month_yyyy_mm": "2018-03", "last_month_first_day_yyyymmdd": "20180201", "weekday7_yyyymmdd": "20180325", "last_week_num_yyyyno": "201811", "last_month_yyyymm": "201802", "current_month_last_year_yyyy_mm": "2017-03", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "next_month_first_day_yyyymmdd": "20180401", "last_weekday1_yyyy_mm_dd": "2018-03-12", "current_month_yyyymm": "201803", "millisecond_for_yesterday": 1521302400000, "pre_weekday7_yyyymmdd": "20180311", "pre_weekday1_yyyymmdd": "20180305", "weekday1_yyyy_mm_dd": "20180319", "yesterday_yyyymmdd": "20180318", "last_month_yyyy_mm": "2018-02", "weekday7_yyyy_mm_dd": "20180325", "december_month_last_year_yyyy_mm": "2017-12"}
2018-03-19 18:57:28,102 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Mon, 19 Mar 2018 10:57:27 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-19 18:57:28,102 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:57:28,102 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 18:57:28,102 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,102 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 18:57:28,103 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-19 18:57:28,103 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-19 18:57:28,103 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-19 18:57:28,103 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,103 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,104 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-19 18:57:28,104 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-19 18:57:28,104 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-19 18:57:28,104 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,104 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 18:57:28,105 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-17-2018-03-18
2018-03-19 18:57:28,105 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-17-2018-03-18
2018-03-19 18:57:28,105 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-17-2018-03-18
2018-03-19 18:57:28,105 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,106 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,106 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 18:57:28,106 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 18:57:28,106 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-19 18:57:28,106 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,107 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 18:57:28,107 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-19 18:57:28,107 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-19 18:57:28,107 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-19 18:57:28,108 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,108 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,108 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 18:57:28,108 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 18:57:28,108 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-18
2018-03-19 18:57:28,109 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,109 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,109 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-19 18:57:28,109 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-19 18:57:28,109 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-19 18:57:28,110 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,110 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 18:57:28,110 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521302400000
2018-03-19 18:57:28,110 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521302400000
2018-03-19 18:57:28,111 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521302400000
2018-03-19 18:57:28,111 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,111 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,111 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12
2018-03-19 18:57:28,112 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12
2018-03-19 18:57:28,112 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyy_mm_dd-2018-03-12
2018-03-19 18:57:28,112 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,112 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 18:57:28,113 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 18:57:28,113 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 18:57:28,113 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-19 18:57:28,113 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,113 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 18:57:28,114 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 18:57:28,114 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 18:57:28,114 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-19 18:57:28,114 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,115 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 18:57:28,115 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-19 18:57:28,115 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-19 18:57:28,115 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-19 18:57:28,116 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,116 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 18:57:28,116 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-19 18:57:28,116 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-19 18:57:28,117 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-19 18:57:28,117 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,117 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 18:57:28,117 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-19 18:57:28,118 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-19 18:57:28,118 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-19 18:57:28,118 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,118 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,118 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-19 18:57:28,119 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-19 18:57:28,119 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-19 18:57:28,119 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,119 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,120 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 18:57:28,120 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 18:57:28,120 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 18:57:28,120 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,121 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,121 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 18:57:28,121 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 18:57:28,121 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 18:57:28,122 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,122 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,122 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-19 18:57:28,122 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-19 18:57:28,123 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-19 18:57:28,123 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,123 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,124 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-19 18:57:28,124 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-19 18:57:28,124 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-19
2018-03-19 18:57:28,124 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,124 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,125 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-19 18:57:28,126 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-19 18:57:28,126 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-19 18:57:28,126 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,126 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,127 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 18:57:28,127 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 18:57:28,128 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-19 18:57:28,128 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,128 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,129 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-19 18:57:28,129 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-19 18:57:28,129 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-19 18:57:28,129 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,129 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-19 18:57:28,130 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-19 18:57:28,130 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-19 18:57:28,130 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyymmdd-20180319-20180325
2018-03-19 18:57:28,130 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,130 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 18:57:28,131 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-19 18:57:28,131 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-19 18:57:28,131 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-19 18:57:28,131 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,131 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyymmdd', 'value']
2018-03-19 18:57:28,132 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312
2018-03-19 18:57:28,132 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312
2018-03-19 18:57:28,132 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyymmdd-20180312
2018-03-19 18:57:28,132 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,132 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,133 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 18:57:28,133 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 18:57:28,133 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-19 18:57:28,133 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,134 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_week_num_yyyyno', 'value']
2018-03-19 18:57:28,134 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201811
2018-03-19 18:57:28,134 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201811
2018-03-19 18:57:28,135 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_week_num_yyyyno-201811
2018-03-19 18:57:28,135 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,135 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 18:57:28,135 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-19 18:57:28,136 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-19 18:57:28,136 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-19 18:57:28,136 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,137 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 18:57:28,137 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 18:57:28,137 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 18:57:28,137 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180312-20180318
2018-03-19 18:57:28,138 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,138 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,139 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-19 18:57:28,140 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-19 18:57:28,140 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyy_mm_dd-20180319-20180325
2018-03-19 18:57:28,140 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,141 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 18:57:28,141 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 18:57:28,141 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 18:57:28,142 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-19 18:57:28,142 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,142 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 18:57:28,143 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521457047000
2018-03-19 18:57:28,144 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521457047000
2018-03-19 18:57:28,144 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521457047000
2018-03-19 18:57:28,144 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,144 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,145 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 18:57:28,145 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 18:57:28,145 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 18:57:28,145 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,145 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 18:57:28,146 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 18:57:28,146 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 18:57:28,146 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180319
2018-03-19 18:57:28,146 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,146 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 18:57:28,147 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-19 18:57:28,147 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-19 18:57:28,147 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-19 18:57:28,147 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,147 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 18:57:28,148 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-19 18:57:28,148 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-19 18:57:28,148 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-19 18:57:28,148 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,148 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 18:57:28,149 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 18:57:28,149 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 18:57:28,149 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-19 18:57:28,149 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,149 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-19 18:57:28,150 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 18:57:28,150 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 18:57:28,150 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyymmdd-20180312-20180318
2018-03-19 18:57:28,150 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,150 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 18:57:28,151 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19 18:57:27
2018-03-19 18:57:28,151 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19 18:57:27
2018-03-19 18:57:28,151 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-19 18:57:27
2018-03-19 18:57:28,151 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,152 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 18:57:28,152 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-19 18:57:28,152 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-19 18:57:28,153 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-19 18:57:28,153 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,153 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 18:57:28,154 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-19 18:57:28,154 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-19 18:57:28,154 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-19 18:57:28,154 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,154 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 18:57:28,155 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 18:57:28,155 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 18:57:28,155 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180318
2018-03-19 18:57:28,155 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,156 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 18:57:28,156 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-19 18:57:28,156 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-19 18:57:28,156 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521388800000
2018-03-19 18:57:28,157 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,157 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,158 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-19 18:57:28,158 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-19 18:57:28,159 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-19 18:57:28,160 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,160 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,160 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 18:57:28,161 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 18:57:28,161 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 18:57:28,161 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,161 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 18:57:28,162 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-19 18:57:28,162 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-19 18:57:28,162 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-19 18:57:28,162 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,163 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 18:57:28,163 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-19 18:57:28,163 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-19 18:57:28,164 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-19 18:57:28,164 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,164 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 18:57:28,164 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-19 18:57:28,165 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-19 18:57:28,165 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-19 18:57:28,165 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,165 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 18:57:28,166 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-19 18:57:28,166 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-19 18:57:28,166 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-19 18:57:28,166 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,166 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 18:57:28,167 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 18:57:28,167 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 18:57:28,167 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-19 18:57:28,167 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,168 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 18:57:28,168 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 18:57:28,168 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 18:57:28,168 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-19 18:57:28,169 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,169 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 18:57:28,169 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180217-20180318
2018-03-19 18:57:28,169 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180217-20180318
2018-03-19 18:57:28,170 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180217-20180318
2018-03-19 18:57:28,170 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 18:57:28,170 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 18:57:28,170 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 18:57:28,171 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 18:57:28,171 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-19 18:57:28,171 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 18:57:28,171 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:57:28,172 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,172 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,173 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 18:57:28,174 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 18:57:28,175 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-19 18:57:28,175 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-19 18:57:28,176 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-19 18:57:28,184 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:57:28,184 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-19 18:57:28,185 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-19 18:57:28,185 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-19 18:57:28,185 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-19 18:57:28,185 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-19 18:57:28,195 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:57:28,196 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-19 18:57:28,196 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:57:28,196 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:57:28,196 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:57:28,196 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:57:28,197 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,197 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,197 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-19 18:57:28,197 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:57:28,197 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,198 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,199 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:57:28,199 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-19 18:57:28,199 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-19 18:57:28,200 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-19 18:57:28,280 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-19 18:57:28,280 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-19 18:57:28,283 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 10:57:28 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1bsqqutjlxwkdyics4o4cposw;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-19 18:57:28,283 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:57:28,283 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-19 18:57:28,283 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-19 18:57:28,284 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:57:28,284 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,284 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,284 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-19 18:57:28,285 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-19 18:57:28,285 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-19 18:57:28,286 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:57:28,288 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:57:28,289 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:57:28,289 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 18:57:28,289 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-19 18:57:28,289 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,289 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-19 18:57:28,290 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-19 18:57:28,290 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:57:28,290 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,290 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,291 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-19 18:57:28,291 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:57:28,291 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,291 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,291 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:57:28,292 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 18:57:28,292 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-19 18:57:28,293 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-19 18:57:28,293 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 18:57:28,344 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 18:57:28,344 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-19 18:57:28,344 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 10:57:28 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 18-Mar-2018 10:57:28 GMT')]
2018-03-19 18:57:28,345 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:57:28,345 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 18:57:28,345 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 18:57:28,345 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:57:28,345 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,346 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,346 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-19 18:57:28,346 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-19 18:57:28,347 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-19 18:57:28,347 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-19 18:57:28,347 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-19 18:57:28,355 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:57:28,355 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-19 18:57:28,355 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 18:57:28,355 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-19 18:57:28,356 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 18:57:28,356 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:57:28,356 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,356 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,357 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 18:57:28,357 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:57:28,357 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,357 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05'}
2018-03-19 18:57:28,359 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:57:28,360 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-19 18:57:28,361 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 18:57:28,369 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-13', '2018-03-19'], flag：True
2018-03-19 18:57:28,369 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 18:57:28,370 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 18:57:28,370 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 18:57:28,370 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 18:57:28,371 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-19 18:57:28,372 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-19 18:57:28,372 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-19 18:57:28,382 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:57:28,382 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-19 18:57:28,382 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 18:57:28,383 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-19 18:57:28,383 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 18:57:28,383 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:57:28,383 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,383 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,384 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 18:57:28,384 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:57:28,384 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,384 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,384 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:57:28,385 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-19 18:57:28,385 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 18:57:28,393 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180318'], flag：True
2018-03-19 18:57:28,393 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 18:57:28,393 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 18:57:28,394 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 18:57:28,394 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 18:57:28,395 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID326-库存查询(自然日), ID:326]======================
2018-03-19 18:57:28,395 test_case.py[line: 32] INFO: 正在查询测试用例[ID：326, 名称：ID326-库存查询(自然日)]关联的测试步骤
2018-03-19 18:57:28,395 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(326,)
2018-03-19 18:57:28,402 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:57:28,402 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 770]======================
2018-03-19 18:57:28,402 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:57:28,403 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:57:28,403 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:57:28,403 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 18:57:28,403 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$yesterday_yyyymmdd$', '$yesterday_yyyymmdd$']
2018-03-19 18:57:28,404 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'yesterday1': '20180318', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,404 test_case_step.py[line: 58] INFO: 正在替换动态变量：$yesterday_yyyymmdd$
2018-03-19 18:57:28,404 test_case_step.py[line: 58] INFO: 正在替换动态变量：$yesterday_yyyymmdd$
2018-03-19 18:57:28,404 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=20180318&dataType=day&dataRange=20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-19 18:57:28,405 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:57:28,405 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,406 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'yesterday1': '20180318', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,406 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-19 18:57:28,406 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:57:28,407 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,407 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'yesterday1': '20180318', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,407 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:57:28,408 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 18:57:28,409 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-19 18:57:28,409 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=20180318&dataType=day&dataRange=20180318&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-19 18:57:28,409 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 18:57:28,464 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-19 18:57:28,464 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"791","inventoryAvgAge":1,"item":"67680931826883035","itemName":"Tmall-67680931826883035-ZTO-.61","periodSaleNum":"120","rowCount":null,"totalQty":"891","warehouseName":"全部仓库"},{"availableQty":"997","inventoryAvgAge":1,"item":"67679963767196686","itemName":"Tmall-67679963767196686-STO-.68","periodSaleNum":"897","rowCount":null,"totalQty":"998","warehouseName":"全部仓库"},{"availableQty":"995","inventoryAvgAge":1,"item":"67680120874265453","itemName":"Tmall-67680120874265453-STO-2.01","periodSaleNum":"895","rowCount":null,"totalQty":"996","warehouseName":"全部仓库"},{"availableQty":"991","inventoryAvgAge":1,"item":"67680284840348202","itemName":"Tmall-67680284840348202-YUNDA-.19","periodSaleNum":"891","rowCount":null,"totalQty":"992","warehouseName":"全部仓库"},{"availableQty":"996","inventoryAvgAge":2,"item":"67680092905297662","itemName":"Tmall-67680092905297662-HTKY-.1","periodSaleNum":"896","rowCount":null,"totalQty":"997","warehouseName":"全部仓库"},{"availableQty":"999","inventoryAvgAge":3,"item":"67679737975970397","itemName":"Tmall-67679737975970397-ZTO-.81","periodSaleNum":"899","rowCount":null,"totalQty":"1000","warehouseName":"全部仓库"},{"availableQty":"990","inventoryAvgAge":3,"item":"67680284843348202","itemName":"Tmall-67680284843348202-HTKY-.11","periodSaleNum":"790","rowCount":null,"totalQty":"990","warehouseName":"全部仓库"},{"availableQty":"790","inventoryAvgAge":3,"item":"67681075682811352","itemName":"Tmall-67681075682811352-STO-.34","periodSaleNum":"0","rowCount":null,"totalQty":"890","warehouseName":"全部仓库"},{"availableQty":"998","inventoryAvgAge":4,"item":"67679823116444785","itemName":"Tmall-67679823116444785-EMS-1.46","periodSaleNum":"898","rowCount":null,"totalQty":"999","warehouseName":"全部仓库"},{"availableQty":"890","inventoryAvgAge":5,"item":"67680549654712683","itemName":"Tmall-67680549654712683-YUNDA-.06","periodSaleNum":"790","rowCount":null,"totalQty":"898","warehouseName":"全部仓库"}]}
2018-03-19 18:57:28,465 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 10:57:28 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2069'), ('Connection', 'close')]
2018-03-19 18:57:28,465 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:57:28,465 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 18:57:28,465 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 18:57:28,466 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:57:28,466 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,466 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'yesterday1': '20180318', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,467 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-19 18:57:28,467 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-19 18:57:28,468 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID328-库存查询(自然周), ID:328]======================
2018-03-19 18:57:28,468 test_case.py[line: 32] INFO: 正在查询测试用例[ID：328, 名称：ID328-库存查询(自然周)]关联的测试步骤
2018-03-19 18:57:28,468 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(328,)
2018-03-19 18:57:28,476 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 18:57:28,476 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 772]======================
2018-03-19 18:57:28,477 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 18:57:28,477 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 18:57:28,477 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 18:57:28,477 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 18:57:28,477 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$last_weekday1_to_weekday7_yyyymmdd$', '$last_week_num_yyyyno$']
2018-03-19 18:57:28,478 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'yesterday1': '20180318', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,478 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_weekday1_to_weekday7_yyyymmdd$
2018-03-19 18:57:28,478 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_week_num_yyyyno$
2018-03-19 18:57:28,478 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=20180312-20180318&dataType=week&dataRange=201811&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-19 18:57:28,479 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 18:57:28,479 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,479 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'yesterday1': '20180318', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,480 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-19 18:57:28,480 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 18:57:28,480 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,480 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'yesterday1': '20180318', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,481 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 18:57:28,481 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 18:57:28,481 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-19 18:57:28,482 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=20180312-20180318&dataType=week&dataRange=201811&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-19 18:57:28,482 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 18:57:28,530 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-19 18:57:28,531 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"12","inventoryAvgAge":10,"item":"683214319373200029","itemName":"女童 板鞋683214319373紫29","periodSaleNum":"0","rowCount":null,"totalQty":"12","warehouseName":"全部仓库"},{"availableQty":"12","inventoryAvgAge":10,"item":"683214319373200028","itemName":"女童 板鞋683214319373紫28","periodSaleNum":"0","rowCount":null,"totalQty":"12","warehouseName":"全部仓库"},{"availableQty":"6","inventoryAvgAge":20,"item":"68321431937320001B","itemName":"童 板鞋 683214319373 紫 27码","periodSaleNum":"0","rowCount":null,"totalQty":"6","warehouseName":"全部仓库"},{"availableQty":"6","inventoryAvgAge":30,"item":"68321431937320001A","itemName":"女童 板鞋683214319373紫26","periodSaleNum":"0","rowCount":null,"totalQty":"6","warehouseName":"全部仓库"},{"availableQty":"5","inventoryAvgAge":40,"item":"683214319373115038","itemName":"童 板鞋 683214319373 浅月 38码","periodSaleNum":"0","rowCount":null,"totalQty":"5","warehouseName":"全部仓库"},{"availableQty":"6","inventoryAvgAge":50,"item":"683214319373115037","itemName":"女童 板鞋683214319373浅月37","periodSaleNum":"0","rowCount":null,"totalQty":"6","warehouseName":"全部仓库"},{"availableQty":"10","inventoryAvgAge":60,"item":"683214319373115036","itemName":"女童 板鞋683214319373浅月36","periodSaleNum":"0","rowCount":null,"totalQty":"10","warehouseName":"全部仓库"},{"availableQty":"19","inventoryAvgAge":70,"item":"683214319373115035","itemName":"童 板鞋 683214319373 浅月 35码","periodSaleNum":"0","rowCount":null,"totalQty":"19","warehouseName":"全部仓库"},{"availableQty":"22","inventoryAvgAge":80,"item":"683214319373115034","itemName":"女童 板鞋683214319373浅月34","periodSaleNum":"2","rowCount":null,"totalQty":"22","warehouseName":"全部仓库"},{"availableQty":"23","inventoryAvgAge":90,"item":"683214319373115033","itemName":"童 板鞋 683214319373 浅月 33码","periodSaleNum":"1","rowCount":null,"totalQty":"23","warehouseName":"全部仓库"}]}
2018-03-19 18:57:28,531 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 10:57:28 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2055'), ('Connection', 'close')]
2018-03-19 18:57:28,531 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 18:57:28,531 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 18:57:28,532 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 18:57:28,532 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 18:57:28,532 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 18:57:28,532 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'current_month_yyyymm': '201803', 'last_month_yyyy_mm': '2018-02', 'current_week_num_yyyymm': '201812', 'yesterday1': '20180318', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'weekday1_yyyy_mm_dd': '20180319', 'global_username': 'dataviewer', 'current_month_yyyy_mm': '2018-03', 'yesterday_yyyy_mm_dd': '2018-03-18', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday7_yyyymmdd': '20180325', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'global_mobile': '18110000014', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_yyyymmdd': '20180312', 'weekday7_yyyy_mm_dd': '20180325', 'last_week_num_yyyyno': '201811', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyymmdd': '20180318', 'millisecond_for_curtime': 1521457047000, 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'today_yyyymmdd': '20180319', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curtime': '2018-03-19 18:57:27', 'global_monthly_code1': '2017112815', 'curmonth_final_day_yyyymmdd': '20180331', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday_yyyymmdd': '20180318', 'millisecond_for_curdate': 1521388800000, 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'today1': '2018-03-19', 'before7day1': '2018-03-13'}
2018-03-19 18:57:28,534 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-19 18:57:28,535 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-19 18:57:28,535 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-19 18:57:28,536 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-19 18:57:28,536 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-19 18:57:28,537 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-19 19:00:36,482 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-19 19:00:36,483 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-19 19:00:36,483 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-19 19:00:36,483 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-19 19:00:36,484 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-19 19:00:36,485 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-19 19:00:36,485 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-19 19:00:36,501 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-19 19:00:36,502 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-19 19:00:36,502 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-19 19:00:36,502 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-19 19:00:36,502 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-19 19:00:36,520 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-19 19:00:36,521 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 19:00:36,573 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-19 19:00:36,573 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-19 19:00:36,589 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-19 19:00:36,590 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-19 19:00:36,590 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-19 19:00:36,590 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-19 19:00:36,590 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-19 19:00:36,598 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 19:00:36,598 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-19 19:00:36,598 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-19 19:00:36,617 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-19 19:00:36,617 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-19 19:00:36,625 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 19:00:36,625 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 19:00:36,633 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 19:00:36,633 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 19:00:36,641 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 19:00:36,641 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-19 19:00:36,723 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 19:00:36,723 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-19 19:00:36,723 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-19 19:00:36,732 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 19:00:36,732 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 19:00:36,738 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 19:00:36,739 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 19:00:36,746 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 19:00:36,747 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 19:00:36,754 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 19:00:36,755 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-19 19:00:36,816 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 19:00:36,816 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-19 19:00:36,817 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-19 19:00:36,822 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-19 19:00:36,822 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-19 19:00:36,829 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 19:00:36,830 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 19:00:36,836 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 19:00:36,836 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 19:00:36,842 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 19:00:36,843 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 19:00:36,850 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 19:00:36,850 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-19 19:00:36,916 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 19:00:36,917 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-19 19:00:36,917 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-19 19:00:36,923 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 19:00:36,923 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 19:00:36,930 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 19:00:36,930 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 19:00:36,939 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 19:00:36,939 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 19:00:36,947 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 19:00:36,947 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-19 19:00:37,009 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 19:00:37,010 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-19 19:00:37,011 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-19 19:00:37,021 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-19 19:00:37,021 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-19 19:00:37,029 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-19 19:00:37,030 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-19 19:00:37,039 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 19:00:37,040 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 19:00:37,049 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 19:00:37,050 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 19:00:37,060 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 19:00:37,060 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-19 19:00:37,125 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 19:00:37,126 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-19 19:00:37,126 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-19 19:00:37,134 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 19:00:37,134 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 19:00:37,144 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 19:00:37,145 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 19:00:37,153 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 19:00:37,153 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-19 19:00:37,214 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-19 19:00:37,215 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(329,)
2018-03-19 19:00:37,215 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 329
2018-03-19 19:00:37,223 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-19 19:00:37,223 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-19 19:00:37,236 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-19 19:00:37,236 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-19 19:00:37,250 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-19 19:00:37,251 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-19 19:00:37,264 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-19 19:00:37,265 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-19 19:00:37,272 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-19 19:00:37,273 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-19 19:00:37,283 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-19 19:00:37,283 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-19 19:00:37,289 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-19 19:00:37,289 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 329
2018-03-19 19:00:37,353 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-19 19:00:37,353 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-19 19:00:37,354 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-19 19:00:37,354 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-19 19:00:37,372 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-19 19:00:37,372 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-19 19:00:37,372 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-19 19:00:37,379 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-19 19:00:37,379 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-19 19:00:37,380 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-19 19:00:37,395 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 19:00:37,395 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-19 19:00:37,395 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 19:00:37,396 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 19:00:37,396 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 19:00:37,396 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 19:00:37,397 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,397 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'global_username': 'dataviewer'}
2018-03-19 19:00:37,397 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-19 19:00:37,397 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 19:00:37,398 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-19 19:00:37,398 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'global_username': 'dataviewer'}
2018-03-19 19:00:37,398 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-19 19:00:37,398 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-19 19:00:37,399 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 19:00:37,399 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-19 19:00:37,399 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-19 19:00:37,400 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 19:00:37,467 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 19:00:37,472 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"current_week_num_yyyy_mm": "2018-12", "last_weekday7_yyyy_mm_dd": "2018-03-18", "last_weekday1_yyyymmdd": "20180312", "current_month_last_year_yyyymm": "2017-03", "weekday1_to_weekday7_yyyy_mm_dd": "20180319-20180325", "curtime": "2018-03-19 19:00:36", "curmonth_first_day_yyyymmdd": "20180301", "next_month_first_day_yyyy_mm_dd": "2018-04-01", "yesterday_yyyy_mm_dd": "2018-03-18", "december_month_last_year_yyyymm": "201712", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_weekday7_yyyymmdd": "20180318", "today_yyyy_mm_dd": "2018-03-19", "recent_7day_range_yyyy_mm_dd": "2018-03-12-2018-03-18", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "current_week_num_yyyymm": "201812", "recent_30day_range_yyyymmdd": "2018-02-17-2018-03-18", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "recent_7day_range_yyyymmdd": "20180312-20180318", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "weekday1_to_weekday7_yyyymmdd": "20180319-20180325", "recent_30day_range_yyyy_mm_dd": "20180217-20180318", "millisecond_for_curdate": 1521388800000, "last_weekday1_to_weekday7_yyyy_mm_dd": "2018-03-12-2018-03-18", "millisecond_for_curtime": 1521457236000, "weekday1_yyyymmdd": "20180319", "lastmonth_range_yyyymmdd": "20180301-20180331", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "curmonth_range_yyyymmdd": "20180301-20180331", "last_weekday1_to_weekday7_yyyymmdd": "20180312-20180318", "last_month_final_day_yyyymmdd": "20180228", "today_yyyymmdd": "20180319", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "current_month_yyyy_mm": "2018-03", "last_month_first_day_yyyymmdd": "20180201", "weekday7_yyyymmdd": "20180325", "last_week_num_yyyyno": "201811", "last_month_yyyymm": "201802", "current_month_last_year_yyyy_mm": "2017-03", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "next_month_first_day_yyyymmdd": "20180401", "last_weekday1_yyyy_mm_dd": "2018-03-12", "current_month_yyyymm": "201803", "millisecond_for_yesterday": 1521302400000, "pre_weekday7_yyyymmdd": "20180311", "pre_weekday1_yyyymmdd": "20180305", "weekday1_yyyy_mm_dd": "20180319", "yesterday_yyyymmdd": "20180318", "last_month_yyyy_mm": "2018-02", "weekday7_yyyy_mm_dd": "20180325", "december_month_last_year_yyyy_mm": "2017-12"}
2018-03-19 19:00:37,473 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Mon, 19 Mar 2018 11:00:36 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-19 19:00:37,473 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 19:00:37,473 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 19:00:37,473 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,474 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-19 19:00:37,476 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 19:00:37,476 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 19:00:37,476 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyymmdd-20180312-20180318
2018-03-19 19:00:37,476 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,477 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-19 19:00:37,477 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-19 19:00:37,477 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-19 19:00:37,478 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-19 19:00:37,478 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,478 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-19 19:00:37,478 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-19 19:00:37,479 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-19 19:00:37,479 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-19 19:00:37,479 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,479 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,480 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180217-20180318
2018-03-19 19:00:37,480 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180217-20180318
2018-03-19 19:00:37,481 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180217-20180318
2018-03-19 19:00:37,481 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,481 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-19 19:00:37,482 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-17-2018-03-18
2018-03-19 19:00:37,482 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-17-2018-03-18
2018-03-19 19:00:37,482 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-17-2018-03-18
2018-03-19 19:00:37,483 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,483 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-19 19:00:37,483 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-19 19:00:37,483 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-19 19:00:37,484 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-19 19:00:37,484 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,484 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,484 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 19:00:37,485 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 19:00:37,485 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 19:00:37,485 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,485 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-19 19:00:37,487 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-19 19:00:37,487 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-19 19:00:37,487 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-19 19:00:37,488 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,488 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-19 19:00:37,489 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-19 19:00:37,489 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-19 19:00:37,489 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-19 19:00:37,489 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,490 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-19 19:00:37,491 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-19 19:00:37,491 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-19 19:00:37,492 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-19 19:00:37,493 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,493 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-19 19:00:37,494 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 19:00:37,494 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 19:00:37,494 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180319
2018-03-19 19:00:37,495 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,495 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-19 19:00:37,495 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-19 19:00:37,495 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-19 19:00:37,495 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521388800000
2018-03-19 19:00:37,496 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,496 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-19 19:00:37,496 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-19 19:00:37,497 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-19 19:00:37,497 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-19 19:00:37,497 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,498 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-19 19:00:37,498 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19 19:00:36
2018-03-19 19:00:37,498 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19 19:00:36
2018-03-19 19:00:37,499 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-19 19:00:36
2018-03-19 19:00:37,499 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,499 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-19 19:00:37,500 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521457236000
2018-03-19 19:00:37,500 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521457236000
2018-03-19 19:00:37,500 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521457236000
2018-03-19 19:00:37,500 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,500 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,501 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-19 19:00:37,501 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-19 19:00:37,502 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyy_mm_dd-20180319-20180325
2018-03-19 19:00:37,502 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,502 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-19 19:00:37,502 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-19 19:00:37,503 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-19 19:00:37,503 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-19 19:00:37,503 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,503 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,504 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 19:00:37,504 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 19:00:37,504 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-19 19:00:37,504 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,505 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,505 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-19 19:00:37,505 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-19 19:00:37,506 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-19
2018-03-19 19:00:37,506 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,506 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-19 19:00:37,506 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-19 19:00:37,507 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-19 19:00:37,507 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-19 19:00:37,507 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,507 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-19 19:00:37,508 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-19 19:00:37,508 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-19 19:00:37,508 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-19 19:00:37,508 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,509 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyymmdd', 'value']
2018-03-19 19:00:37,509 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312
2018-03-19 19:00:37,510 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312
2018-03-19 19:00:37,510 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyymmdd-20180312
2018-03-19 19:00:37,510 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,510 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,511 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 19:00:37,511 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 19:00:37,512 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 19:00:37,513 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,518 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-19 19:00:37,518 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 19:00:37,519 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 19:00:37,519 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-19 19:00:37,519 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,519 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-19 19:00:37,520 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-19 19:00:37,520 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-19 19:00:37,520 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyymmdd-20180319-20180325
2018-03-19 19:00:37,521 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,521 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,521 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-19 19:00:37,522 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-19 19:00:37,522 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-19 19:00:37,522 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,523 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-19 19:00:37,523 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 19:00:37,523 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 19:00:37,524 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-19 19:00:37,525 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,525 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,526 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-19 19:00:37,526 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-19 19:00:37,526 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-19 19:00:37,527 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,527 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-19 19:00:37,527 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521302400000
2018-03-19 19:00:37,528 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521302400000
2018-03-19 19:00:37,528 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521302400000
2018-03-19 19:00:37,528 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,529 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-19 19:00:37,529 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-19 19:00:37,529 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-19 19:00:37,530 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-19 19:00:37,530 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,534 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,534 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 19:00:37,534 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 19:00:37,535 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-19 19:00:37,535 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,535 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,535 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-19 19:00:37,536 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-19 19:00:37,536 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-19 19:00:37,536 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,537 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,537 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-19 19:00:37,537 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-19 19:00:37,537 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-19 19:00:37,538 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,538 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-19 19:00:37,538 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 19:00:37,539 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 19:00:37,539 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180318
2018-03-19 19:00:37,539 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,539 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-19 19:00:37,540 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-19 19:00:37,540 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-19 19:00:37,541 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-19 19:00:37,541 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,542 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-19 19:00:37,542 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-19 19:00:37,542 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-19 19:00:37,543 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180312-20180318
2018-03-19 19:00:37,543 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,544 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,544 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-19 19:00:37,544 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-19 19:00:37,545 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-19 19:00:37,545 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,545 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-19 19:00:37,545 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-19 19:00:37,546 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-19 19:00:37,546 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-19 19:00:37,546 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,546 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-19 19:00:37,547 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-19 19:00:37,547 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-19 19:00:37,548 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-19 19:00:37,548 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,548 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,548 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-19 19:00:37,548 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-19 19:00:37,549 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-19 19:00:37,549 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,549 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-19 19:00:37,549 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-19 19:00:37,550 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-19 19:00:37,550 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-19 19:00:37,550 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,550 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-19 19:00:37,551 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-19 19:00:37,551 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-19 19:00:37,551 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-19 19:00:37,552 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,552 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,552 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12
2018-03-19 19:00:37,552 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12
2018-03-19 19:00:37,553 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyy_mm_dd-2018-03-12
2018-03-19 19:00:37,553 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,553 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,553 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-19 19:00:37,554 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-19 19:00:37,554 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-19 19:00:37,554 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,554 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-19 19:00:37,555 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-19 19:00:37,555 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-19 19:00:37,555 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-19 19:00:37,555 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,556 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-19 19:00:37,556 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-19 19:00:37,556 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-19 19:00:37,556 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-19 19:00:37,556 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,557 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,557 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-19 19:00:37,557 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-19 19:00:37,558 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-19 19:00:37,558 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,558 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,559 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-19 19:00:37,559 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-19 19:00:37,559 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-19 19:00:37,559 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,560 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,560 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-19 19:00:37,560 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-19 19:00:37,560 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-18
2018-03-19 19:00:37,561 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,561 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-19 19:00:37,561 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 19:00:37,561 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 19:00:37,562 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-19 19:00:37,562 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,563 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-19 19:00:37,563 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-19 19:00:37,563 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-19 19:00:37,564 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-19 19:00:37,564 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,564 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-19 19:00:37,564 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-19 19:00:37,565 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-19 19:00:37,565 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-19 19:00:37,565 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-19 19:00:37,565 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_week_num_yyyyno', 'value']
2018-03-19 19:00:37,566 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201811
2018-03-19 19:00:37,566 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201811
2018-03-19 19:00:37,566 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_week_num_yyyyno-201811
2018-03-19 19:00:37,566 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 19:00:37,567 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 19:00:37,567 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,567 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,567 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-19 19:00:37,568 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-19 19:00:37,569 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-19 19:00:37,569 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-19 19:00:37,569 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-19 19:00:37,578 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 19:00:37,578 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-19 19:00:37,578 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-19 19:00:37,579 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-19 19:00:37,579 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-19 19:00:37,579 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-19 19:00:37,587 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 19:00:37,587 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-19 19:00:37,588 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 19:00:37,588 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 19:00:37,588 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 19:00:37,588 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 19:00:37,588 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,589 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,589 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-19 19:00:37,589 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 19:00:37,589 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,590 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,595 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 19:00:37,596 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-19 19:00:37,596 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-19 19:00:37,596 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-19 19:00:37,710 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-19 19:00:37,711 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-19 19:00:37,712 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 11:00:37 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=ko5oj529o5fexenbl8yfh05u;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-19 19:00:37,712 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 19:00:37,712 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-19 19:00:37,713 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-19 19:00:37,713 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 19:00:37,713 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,713 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,714 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-19 19:00:37,714 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-19 19:00:37,715 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-19 19:00:37,715 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 19:00:37,715 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 19:00:37,716 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 19:00:37,716 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 19:00:37,716 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-19 19:00:37,716 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,717 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-19 19:00:37,717 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-19 19:00:37,717 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 19:00:37,717 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,718 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,718 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-19 19:00:37,718 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 19:00:37,718 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,719 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,719 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 19:00:37,720 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 19:00:37,721 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-19 19:00:37,721 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-19 19:00:37,722 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 19:00:37,849 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-19 19:00:37,850 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-19 19:00:37,850 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 11:00:37 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Sun, 18-Mar-2018 11:00:37 GMT')]
2018-03-19 19:00:37,850 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 19:00:37,851 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 19:00:37,851 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 19:00:37,851 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 19:00:37,852 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,852 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,852 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-19 19:00:37,853 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-19 19:00:37,853 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-19 19:00:37,860 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-19 19:00:37,861 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-19 19:00:37,870 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 19:00:37,870 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-19 19:00:37,871 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 19:00:37,871 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-19 19:00:37,871 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 19:00:37,872 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 19:00:37,872 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,872 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,873 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 19:00:37,873 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 19:00:37,873 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,877 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,900 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 19:00:37,901 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-19 19:00:37,901 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-19 19:00:37,912 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-13', '2018-03-19'], flag：True
2018-03-19 19:00:37,913 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 19:00:37,913 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 19:00:37,914 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 19:00:37,914 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 19:00:37,915 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-19 19:00:37,915 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-19 19:00:37,915 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-19 19:00:37,923 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 19:00:37,928 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-19 19:00:37,929 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-19 19:00:37,929 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-19 19:00:37,929 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-19 19:00:37,929 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 19:00:37,930 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,930 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'today1': '2018-03-19', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'before7day1': '2018-03-13', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,935 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 19:00:37,936 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 19:00:37,936 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,936 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'today1': '2018-03-19', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'before7day1': '2018-03-13', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,936 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 19:00:37,937 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-19 19:00:37,946 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-19 19:00:37,965 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180318'], flag：True
2018-03-19 19:00:37,966 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-19 19:00:37,966 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-19 19:00:37,966 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-19 19:00:37,966 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-19 19:00:37,967 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID329-库存查询(自然月), ID:329]======================
2018-03-19 19:00:37,967 test_case.py[line: 32] INFO: 正在查询测试用例[ID：329, 名称：ID329-库存查询(自然月)]关联的测试步骤
2018-03-19 19:00:37,968 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(329,)
2018-03-19 19:00:37,976 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-19 19:00:37,977 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 773]======================
2018-03-19 19:00:37,977 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-19 19:00:37,977 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-19 19:00:37,978 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-19 19:00:37,978 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-19 19:00:37,978 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$last_month_yyyymm$', '$last_month_yyyymm$']
2018-03-19 19:00:37,979 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'yesterday1': '20180318', 'today1': '2018-03-19', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'before7day1': '2018-03-13', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,979 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-19 19:00:37,980 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-19 19:00:37,980 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-19 19:00:37,980 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-19 19:00:37,980 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,981 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'yesterday1': '20180318', 'today1': '2018-03-19', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'before7day1': '2018-03-13', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,982 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-19 19:00:37,982 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-19 19:00:37,982 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:37,983 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'yesterday1': '20180318', 'today1': '2018-03-19', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'before7day1': '2018-03-13', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:37,983 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-19 19:00:37,983 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-19 19:00:37,984 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-19 19:00:37,984 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-19 19:00:37,984 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-19 19:00:38,064 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-19 19:00:38,065 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"10","inventoryAvgAge":2,"item":"68312463407003202F","itemName":"女童 针织长裤 683124634070 兰紫 130cm","periodSaleNum":"5","rowCount":null,"totalQty":"9","warehouseName":"全部仓库"},{"availableQty":"15","inventoryAvgAge":8,"item":"68312463401907662H","itemName":"女童 针织长裤 683124634019 浅花灰 150cm","periodSaleNum":"6","rowCount":null,"totalQty":"19","warehouseName":"全部仓库"},{"availableQty":"29","inventoryAvgAge":8,"item":"68312434410907662F","itemName":"683124344109浅花灰130cm","periodSaleNum":"10","rowCount":null,"totalQty":"39","warehouseName":"全部仓库"},{"availableQty":"39","inventoryAvgAge":9,"item":"68312423406105612H","itemName":"女童 风衣 683124234061 玫红 150cm","periodSaleNum":"20","rowCount":null,"totalQty":"49","warehouseName":"全部仓库"},{"availableQty":"99","inventoryAvgAge":11,"item":"683115115322021238","itemName":"男童 跑鞋 683115115322 黑桔 38码","periodSaleNum":"80","rowCount":null,"totalQty":"100","warehouseName":"全部仓库"},{"availableQty":"79","inventoryAvgAge":11,"item":"68311661217205001A","itemName":"男女童 健康鞋 683116612172 红 26码","periodSaleNum":"60","rowCount":null,"totalQty":"89","warehouseName":"全部仓库"},{"availableQty":"19","inventoryAvgAge":15,"item":"68312434410907662I","itemName":"男 针织套装 683124344109 浅花灰 160cm","periodSaleNum":"5","rowCount":null,"totalQty":"29","warehouseName":"全部仓库"},{"availableQty":"59","inventoryAvgAge":17,"item":"68312403415201272J","itemName":"683124034152白柔粉165cm","periodSaleNum":"40","rowCount":null,"totalQty":"69","warehouseName":"全部仓库"},{"availableQty":"49","inventoryAvgAge":18,"item":"68312406016401272G","itemName":"女童 针织上衣 683124060164 白柔粉 140cm","periodSaleNum":"30","rowCount":null,"totalQty":"59","warehouseName":"全部仓库"},{"availableQty":"69","inventoryAvgAge":19,"item":"68311661218703051A","itemName":"男女童 健康鞋 683116612187 兰红 26码","periodSaleNum":"50","rowCount":null,"totalQty":"79","warehouseName":"全部仓库"}]}
2018-03-19 19:00:38,065 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Mon, 19 Mar 2018 11:00:38 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2139'), ('Connection', 'close')]
2018-03-19 19:00:38,065 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-19 19:00:38,066 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-19 19:00:38,066 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-19 19:00:38,066 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-19 19:00:38,066 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-19 19:00:38,067 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-17-2018-03-18', 'december_month_last_year_yyyymm': '201712', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_first_day_yyyymmdd': '20180301', 'curmonth_final_day_yyyymmdd': '20180331', 'current_month_yyyy_mm': '2018-03', 'today_yyyymmdd': '20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday1_yyyymmdd': '20180305', 'curtime': '2018-03-19 19:00:36', 'millisecond_for_curtime': 1521457236000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'yesterday1': '20180318', 'today1': '2018-03-19', 'next_month_first_day_yyyymmdd': '20180401', 'today_yyyy_mm_dd': '2018-03-19', 'global_platform_host': '10.118.59.84', 'current_month_yyyymm': '201803', 'current_week_num_yyyymm': '201812', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180312-20180318', 'current_month_last_year_yyyymm': '2017-03', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'weekday7_yyyymmdd': '20180325', 'curmonth_range_yyyymmdd': '20180301-20180331', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'millisecond_for_yesterday': 1521302400000, 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'millisecond_for_curdate': 1521388800000, 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'yesterday_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'before7day1': '2018-03-13', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'recent_30day_range_yyyy_mm_dd': '20180217-20180318', 'weekday1_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'current_week_num_yyyy_mm': '2018-12', 'last_month_first_day_yyyymmdd': '20180201', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'yesterday_yyyy_mm_dd': '2018-03-18', 'december_month_last_year_yyyy_mm': '2017-12', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_7day_range_yyyy_mm_dd': '2018-03-12-2018-03-18', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'weekday7_yyyy_mm_dd': '20180325', 'last_weekday7_yyyymmdd': '20180318', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_week_num_yyyyno': '201811'}
2018-03-19 19:00:38,079 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-19 19:00:38,080 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-19 19:00:38,081 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-19 19:00:38,081 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-19 19:00:38,082 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-19 19:00:38,083 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-20 14:09:36,759 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-20 14:09:36,767 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-20 14:09:36,767 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-20 14:09:36,767 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-20 14:09:36,768 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-20 14:09:36,768 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-20 14:09:36,768 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-20 14:09:36,782 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-20 14:09:36,783 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-20 14:09:36,783 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-20 14:09:36,783 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-20 14:09:36,783 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-20 14:09:36,788 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-20 14:09:36,788 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 14:09:36,829 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-20 14:09:36,829 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 14:09:36,835 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-20 14:09:36,835 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-20 14:09:36,836 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-20 14:09:36,836 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-20 14:09:36,836 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-20 14:09:36,842 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 14:09:36,842 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-20 14:09:36,843 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-20 14:09:36,849 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-20 14:09:36,849 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-20 14:09:36,855 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 14:09:36,855 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 14:09:36,860 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 14:09:36,861 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 14:09:36,866 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 14:09:36,866 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-20 14:09:36,936 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 14:09:36,937 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-20 14:09:36,937 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-20 14:09:36,943 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 14:09:36,943 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 14:09:36,949 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 14:09:36,949 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 14:09:36,954 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 14:09:36,954 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 14:09:36,960 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 14:09:36,960 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-20 14:09:37,029 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 14:09:37,030 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-20 14:09:37,030 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-20 14:09:37,035 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-20 14:09:37,036 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-20 14:09:37,041 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 14:09:37,042 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 14:09:37,049 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 14:09:37,049 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 14:09:37,059 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 14:09:37,059 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 14:09:37,065 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 14:09:37,065 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-20 14:09:37,128 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 14:09:37,128 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-20 14:09:37,128 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-20 14:09:37,135 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 14:09:37,135 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 14:09:37,141 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 14:09:37,141 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 14:09:37,147 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 14:09:37,147 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 14:09:37,153 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 14:09:37,153 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-20 14:09:37,221 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 14:09:37,221 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-20 14:09:37,221 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-20 14:09:37,228 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-20 14:09:37,228 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-20 14:09:37,234 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 14:09:37,234 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 14:09:37,240 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 14:09:37,240 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 14:09:37,246 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 14:09:37,246 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 14:09:37,252 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 14:09:37,252 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-20 14:09:37,311 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 14:09:37,311 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-20 14:09:37,312 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-20 14:09:37,317 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 14:09:37,318 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 14:09:37,324 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 14:09:37,325 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 14:09:37,331 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 14:09:37,331 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-20 14:09:37,404 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 14:09:37,410 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(329,)
2018-03-20 14:09:37,410 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 329
2018-03-20 14:09:37,417 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-20 14:09:37,417 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-20 14:09:37,422 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-20 14:09:37,422 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-20 14:09:37,428 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-20 14:09:37,428 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-20 14:09:37,434 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-20 14:09:37,435 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-20 14:09:37,442 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 14:09:37,443 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 14:09:37,453 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 14:09:37,454 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 14:09:37,461 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 14:09:37,462 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 329
2018-03-20 14:09:37,527 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-20 14:09:37,528 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-20 14:09:37,528 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-20 14:09:37,528 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-20 14:09:37,544 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-20 14:09:37,544 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-20 14:09:37,545 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-20 14:09:37,549 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-20 14:09:37,549 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-20 14:09:37,550 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-20 14:09:37,556 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 14:09:37,556 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-20 14:09:37,556 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 14:09:37,556 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-20 14:09:37,557 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 14:09:37,557 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 14:09:37,574 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,574 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'global_username': 'dataviewer'}
2018-03-20 14:09:37,574 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 14:09:37,575 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 14:09:37,575 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,575 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'global_username': 'dataviewer'}
2018-03-20 14:09:37,575 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 14:09:37,576 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-20 14:09:37,576 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 14:09:37,582 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-14', '2018-03-20'], flag：True
2018-03-20 14:09:37,582 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 14:09:37,583 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 14:09:37,583 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 14:09:37,583 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 14:09:37,584 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-20 14:09:37,584 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-20 14:09:37,584 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-20 14:09:37,592 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 14:09:37,593 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-20 14:09:37,593 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 14:09:37,593 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-20 14:09:37,593 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 14:09:37,593 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 14:09:37,594 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,594 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014'}
2018-03-20 14:09:37,594 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 14:09:37,594 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 14:09:37,594 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,594 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014'}
2018-03-20 14:09:37,595 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 14:09:37,595 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-20 14:09:37,595 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 14:09:37,602 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180319'], flag：True
2018-03-20 14:09:37,602 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 14:09:37,602 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 14:09:37,603 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 14:09:37,603 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 14:09:37,603 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-20 14:09:37,603 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-20 14:09:37,603 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-20 14:09:37,612 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 14:09:37,612 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-20 14:09:37,613 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 14:09:37,613 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 14:09:37,614 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 14:09:37,614 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 14:09:37,614 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,614 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'yesterday1': '20180319', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014'}
2018-03-20 14:09:37,615 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-20 14:09:37,615 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 14:09:37,615 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-20 14:09:37,615 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'yesterday1': '20180319', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014'}
2018-03-20 14:09:37,615 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-20 14:09:37,616 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-20 14:09:37,616 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 14:09:37,616 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-20 14:09:37,617 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-20 14:09:37,617 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 14:09:37,660 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 14:09:37,680 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"today_yyyy_mm_dd": "2018-03-20", "lastmonth_range_yyyymmdd": "20180301-20180331", "today_yyyymmdd": "20180320", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "current_month_last_year_yyyymm": "2017-03", "pre_weekday7_yyyymmdd": "20180311", "yesterday_yyyy_mm_dd": "2018-03-19", "current_week_num_yyyymm": "201812", "current_month_last_year_yyyy_mm": "2017-03", "recent_30day_range_yyyy_mm_dd": "20180218-20180319", "weekday1_to_weekday7_yyyymmdd": "20180319-20180325", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "last_month_yyyy_mm": "2018-02", "weekday7_yyyy_mm_dd": "20180325", "millisecond_for_curtime": 1521526176000, "last_weekday1_to_weekday7_yyyy_mm_dd": "2018-03-12-2018-03-18", "next_month_first_day_yyyymmdd": "20180401", "weekday1_yyyymmdd": "20180319", "last_month_first_day_yyyymmdd": "20180201", "december_month_last_year_yyyymm": "201712", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "next_month_first_day_yyyy_mm_dd": "2018-04-01", "current_week_num_yyyy_mm": "2018-12", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "current_month_yyyy_mm": "2018-03", "curmonth_range_yyyymmdd": "20180301-20180331", "weekday1_to_weekday7_yyyy_mm_dd": "20180319-20180325", "recent_7day_range_yyyy_mm_dd": "2018-03-13-2018-03-19", "last_weekday7_yyyy_mm_dd": "2018-03-18", "curtime": "2018-03-20 14:09:36", "current_month_yyyymm": "201803", "last_month_yyyymm": "201802", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "millisecond_for_yesterday": 1521388800000, "curmonth_first_day_yyyymmdd": "20180301", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "millisecond_for_curdate": 1521475200000, "recent_7day_range_yyyymmdd": "20180313-20180319", "pre_weekday1_yyyymmdd": "20180305", "last_week_num_yyyyno": "201811", "curmonth_final_day_yyyymmdd": "20180331", "weekday7_yyyymmdd": "20180325", "last_weekday1_yyyymmdd": "20180312", "last_weekday1_yyyy_mm_dd": "2018-03-12", "last_month_final_day_yyyymmdd": "20180228", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "weekday1_yyyy_mm_dd": "20180319", "last_weekday1_to_weekday7_yyyymmdd": "20180312-20180318", "yesterday_yyyymmdd": "20180319", "last_weekday7_yyyymmdd": "20180318", "recent_30day_range_yyyymmdd": "2018-02-18-2018-03-19", "december_month_last_year_yyyy_mm": "2017-12"}
2018-03-20 14:09:37,681 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Tue, 20 Mar 2018 06:09:36 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-20 14:09:37,681 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 14:09:37,681 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 14:09:37,681 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,682 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,682 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180218-20180319
2018-03-20 14:09:37,682 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180218-20180319
2018-03-20 14:09:37,682 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180218-20180319
2018-03-20 14:09:37,683 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,683 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-20 14:09:37,683 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 14:09:37,683 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 14:09:37,683 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180319
2018-03-20 14:09:37,684 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,685 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-20 14:09:37,685 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-20 14:09:37,685 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-20 14:09:37,686 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-20 14:09:37,686 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,686 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-20 14:09:37,687 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 14:09:37,687 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 14:09:37,687 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-20 14:09:37,687 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,687 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-20 14:09:37,688 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-20 14:09:37,688 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-20 14:09:37,688 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-20 14:09:37,688 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,689 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-20 14:09:37,689 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-20 14:09:37,689 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-20 14:09:37,689 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-20 14:09:37,689 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,690 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-20 14:09:37,690 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-20 14:09:37,691 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-20 14:09:37,691 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-20 14:09:37,691 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,692 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-20 14:09:37,692 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 14:09:37,692 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 14:09:37,692 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-20 14:09:37,693 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,693 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-20 14:09:37,693 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 14:09:37,693 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 14:09:37,694 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-20 14:09:37,694 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,694 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-20 14:09:37,695 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521475200000
2018-03-20 14:09:37,695 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521475200000
2018-03-20 14:09:37,695 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521475200000
2018-03-20 14:09:37,695 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,695 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,696 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-20 14:09:37,696 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-20 14:09:37,696 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-20 14:09:37,696 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,697 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,697 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-20 14:09:37,697 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-20 14:09:37,697 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-20 14:09:37,697 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,698 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-20 14:09:37,698 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-20 14:09:37,698 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-20 14:09:37,698 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-20 14:09:37,698 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,699 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-20 14:09:37,699 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180313-20180319
2018-03-20 14:09:37,699 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180313-20180319
2018-03-20 14:09:37,699 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180313-20180319
2018-03-20 14:09:37,699 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,700 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,700 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-20 14:09:37,700 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-20 14:09:37,700 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-20 14:09:37,700 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,701 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,701 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 14:09:37,701 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 14:09:37,701 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 14:09:37,701 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,702 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-20 14:09:37,702 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 14:09:37,702 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 14:09:37,702 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-20 14:09:37,702 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,703 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-20 14:09:37,703 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-20 14:09:37,703 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-20 14:09:37,703 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-20 14:09:37,703 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,704 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 14:09:37,704 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 14:09:37,704 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 14:09:37,704 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyymmdd-20180319-20180325
2018-03-20 14:09:37,704 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,705 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-20 14:09:37,705 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521526176000
2018-03-20 14:09:37,705 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521526176000
2018-03-20 14:09:37,705 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521526176000
2018-03-20 14:09:37,706 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,706 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,706 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-20 14:09:37,706 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-20 14:09:37,706 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-20 14:09:37,707 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,708 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,708 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-20 14:09:37,708 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-20 14:09:37,709 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-19
2018-03-20 14:09:37,709 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,709 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,709 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12
2018-03-20 14:09:37,709 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12
2018-03-20 14:09:37,710 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyy_mm_dd-2018-03-12
2018-03-20 14:09:37,710 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,710 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-20 14:09:37,710 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-20 14:09:37,710 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-20 14:09:37,710 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-20 14:09:37,711 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,711 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,711 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 14:09:37,712 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 14:09:37,712 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-20 14:09:37,712 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,712 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-20 14:09:37,712 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-20 14:09:37,713 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-20 14:09:37,713 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-20 14:09:37,713 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,713 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,713 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-20 14:09:37,714 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-20 14:09:37,714 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-20 14:09:37,714 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,714 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,715 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-20 14:09:37,715 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-20 14:09:37,715 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-20 14:09:37,716 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,716 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-20 14:09:37,716 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-20 14:09:37,716 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-20 14:09:37,717 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-20 14:09:37,717 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,717 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,717 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 14:09:37,717 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 14:09:37,718 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyy_mm_dd-20180319-20180325
2018-03-20 14:09:37,718 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,718 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_week_num_yyyyno', 'value']
2018-03-20 14:09:37,718 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201811
2018-03-20 14:09:37,718 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201811
2018-03-20 14:09:37,719 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_week_num_yyyyno-201811
2018-03-20 14:09:37,719 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,719 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,719 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-20 14:09:37,720 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-20 14:09:37,720 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-20 14:09:37,720 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,720 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-20 14:09:37,720 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20 14:09:36
2018-03-20 14:09:37,720 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20 14:09:36
2018-03-20 14:09:37,721 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-20 14:09:36
2018-03-20 14:09:37,721 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,721 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,721 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 14:09:37,721 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 14:09:37,722 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 14:09:37,722 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,722 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,722 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-20 14:09:37,722 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-20 14:09:37,722 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-20 14:09:37,723 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,723 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-20 14:09:37,723 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 14:09:37,723 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 14:09:37,723 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-20 14:09:37,724 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,724 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-20 14:09:37,724 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180320
2018-03-20 14:09:37,725 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180320
2018-03-20 14:09:37,725 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180320
2018-03-20 14:09:37,725 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,725 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyymmdd', 'value']
2018-03-20 14:09:37,726 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312
2018-03-20 14:09:37,726 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312
2018-03-20 14:09:37,726 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyymmdd-20180312
2018-03-20 14:09:37,726 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,726 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-20 14:09:37,727 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-20 14:09:37,727 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-20 14:09:37,727 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521388800000
2018-03-20 14:09:37,727 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,727 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-20 14:09:37,728 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-20 14:09:37,728 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-20 14:09:37,728 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-20 14:09:37,728 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,729 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 14:09:37,729 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-20 14:09:37,729 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-20 14:09:37,730 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyymmdd-20180312-20180318
2018-03-20 14:09:37,730 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,730 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-20 14:09:37,730 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-20 14:09:37,730 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-20 14:09:37,731 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-20 14:09:37,731 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,731 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-20 14:09:37,731 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-20 14:09:37,732 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-20 14:09:37,732 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-20 14:09:37,732 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,732 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-20 14:09:37,732 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-20 14:09:37,733 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-20 14:09:37,733 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-20 14:09:37,733 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,733 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,734 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20
2018-03-20 14:09:37,734 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20
2018-03-20 14:09:37,734 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-20
2018-03-20 14:09:37,734 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,734 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,735 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-13-2018-03-19
2018-03-20 14:09:37,735 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-13-2018-03-19
2018-03-20 14:09:37,735 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-13-2018-03-19
2018-03-20 14:09:37,735 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,735 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-20 14:09:37,736 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-20 14:09:37,736 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-20 14:09:37,736 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-20 14:09:37,736 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,736 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,737 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 14:09:37,737 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 14:09:37,737 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-20 14:09:37,737 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,738 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-20 14:09:37,738 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-18-2018-03-19
2018-03-20 14:09:37,738 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-18-2018-03-19
2018-03-20 14:09:37,738 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-18-2018-03-19
2018-03-20 14:09:37,739 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,739 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-20 14:09:37,739 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 14:09:37,739 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 14:09:37,740 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-20 14:09:37,740 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,741 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-20 14:09:37,742 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-20 14:09:37,742 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-20 14:09:37,742 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-20 14:09:37,743 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,743 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-20 14:09:37,743 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-20 14:09:37,743 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-20 14:09:37,743 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-20 14:09:37,744 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 14:09:37,744 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-20 14:09:37,744 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-20 14:09:37,744 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-20 14:09:37,745 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-20 14:09:37,745 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 14:09:37,745 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 14:09:37,745 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,745 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,746 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-20 14:09:37,746 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-20 14:09:37,747 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-20 14:09:37,747 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-20 14:09:37,747 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-20 14:09:37,756 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 14:09:37,756 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-20 14:09:37,756 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-20 14:09:37,756 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-20 14:09:37,757 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-20 14:09:37,757 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-20 14:09:37,765 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 14:09:37,766 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-20 14:09:37,766 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 14:09:37,766 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 14:09:37,766 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 14:09:37,767 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 14:09:37,767 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,767 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,767 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-20 14:09:37,768 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 14:09:37,768 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,768 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,770 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 14:09:37,771 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-20 14:09:37,771 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-20 14:09:37,771 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-20 14:09:37,866 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-20 14:09:37,867 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-20 14:09:37,868 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 06:09:37 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=191yuwr339ei81j8it955afnrh;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-20 14:09:37,868 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 14:09:37,868 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-20 14:09:37,869 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-20 14:09:37,869 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 14:09:37,869 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,869 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,870 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-20 14:09:37,870 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-20 14:09:37,871 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-20 14:09:37,871 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 14:09:37,871 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 14:09:37,871 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 14:09:37,872 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 14:09:37,872 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-20 14:09:37,872 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,872 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-20 14:09:37,873 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-20 14:09:37,873 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 14:09:37,873 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,873 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,874 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-20 14:09:37,874 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 14:09:37,874 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,874 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,874 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 14:09:37,875 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 14:09:37,876 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-20 14:09:37,876 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-20 14:09:37,876 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 14:09:37,950 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 14:09:37,950 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-20 14:09:37,950 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 06:09:37 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Mar-2018 06:09:37 GMT')]
2018-03-20 14:09:37,950 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 14:09:37,951 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 14:09:37,951 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 14:09:37,951 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 14:09:37,951 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,951 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,952 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-20 14:09:37,952 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-20 14:09:37,953 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID329-库存查询(自然月), ID:329]======================
2018-03-20 14:09:37,953 test_case.py[line: 32] INFO: 正在查询测试用例[ID：329, 名称：ID329-库存查询(自然月)]关联的测试步骤
2018-03-20 14:09:37,953 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(329,)
2018-03-20 14:09:37,961 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 14:09:37,961 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 773]======================
2018-03-20 14:09:37,961 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 14:09:37,962 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 14:09:37,962 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 14:09:37,962 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 14:09:37,962 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$last_month_yyyymm$', '$last_month_yyyymm$']
2018-03-20 14:09:37,962 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,962 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 14:09:37,963 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 14:09:37,963 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-20 14:09:37,963 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 14:09:37,963 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,963 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,965 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-20 14:09:37,966 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 14:09:37,966 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:37,966 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:37,966 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 14:09:37,967 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 14:09:37,967 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-20 14:09:37,967 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-20 14:09:37,967 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 14:09:38,012 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-20 14:09:38,013 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"10","inventoryAvgAge":2,"item":"68312463407003202F","itemName":"女童 针织长裤 683124634070 兰紫 130cm","periodSaleNum":"5","rowCount":null,"totalQty":"9","warehouseName":"全部仓库"},{"availableQty":"15","inventoryAvgAge":8,"item":"68312463401907662H","itemName":"女童 针织长裤 683124634019 浅花灰 150cm","periodSaleNum":"6","rowCount":null,"totalQty":"19","warehouseName":"全部仓库"},{"availableQty":"29","inventoryAvgAge":8,"item":"68312434410907662F","itemName":"683124344109浅花灰130cm","periodSaleNum":"10","rowCount":null,"totalQty":"39","warehouseName":"全部仓库"},{"availableQty":"39","inventoryAvgAge":9,"item":"68312423406105612H","itemName":"女童 风衣 683124234061 玫红 150cm","periodSaleNum":"20","rowCount":null,"totalQty":"49","warehouseName":"全部仓库"},{"availableQty":"99","inventoryAvgAge":11,"item":"683115115322021238","itemName":"男童 跑鞋 683115115322 黑桔 38码","periodSaleNum":"80","rowCount":null,"totalQty":"100","warehouseName":"全部仓库"},{"availableQty":"79","inventoryAvgAge":11,"item":"68311661217205001A","itemName":"男女童 健康鞋 683116612172 红 26码","periodSaleNum":"60","rowCount":null,"totalQty":"89","warehouseName":"全部仓库"},{"availableQty":"19","inventoryAvgAge":15,"item":"68312434410907662I","itemName":"男 针织套装 683124344109 浅花灰 160cm","periodSaleNum":"5","rowCount":null,"totalQty":"29","warehouseName":"全部仓库"},{"availableQty":"59","inventoryAvgAge":17,"item":"68312403415201272J","itemName":"683124034152白柔粉165cm","periodSaleNum":"40","rowCount":null,"totalQty":"69","warehouseName":"全部仓库"},{"availableQty":"49","inventoryAvgAge":18,"item":"68312406016401272G","itemName":"女童 针织上衣 683124060164 白柔粉 140cm","periodSaleNum":"30","rowCount":null,"totalQty":"59","warehouseName":"全部仓库"},{"availableQty":"69","inventoryAvgAge":19,"item":"68311661218703051A","itemName":"男女童 健康鞋 683116612187 兰红 26码","periodSaleNum":"50","rowCount":null,"totalQty":"79","warehouseName":"全部仓库"}]}
2018-03-20 14:09:38,013 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 06:09:37 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2139'), ('Connection', 'close')]
2018-03-20 14:09:38,013 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 14:09:38,013 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 14:09:38,013 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 14:09:38,013 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 14:09:38,014 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 14:09:38,014 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'yesterday_yyyymmdd': '20180319', 'current_week_num_yyyymm': '201812', 'current_month_yyyymm': '201803', 'current_month_yyyy_mm': '2018-03', 'december_month_last_year_yyyymm': '201712', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_last_year_yyyymm': '2017-03', 'last_month_yyyymm': '201802', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'global_platform_host': '10.118.59.84', 'last_month_first_day_yyyymmdd': '20180201', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_mobile': '18110000014', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'millisecond_for_curtime': 1521526176000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'pre_weekday7_yyyymmdd': '20180311', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_yyyy_mm': '2018-02', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curdate': 1521475200000, 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_week_num_yyyyno': '201811', 'weekday7_yyyy_mm_dd': '20180325', 'millisecond_for_yesterday': 1521388800000, 'curtime': '2018-03-20 14:09:36', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'weekday7_yyyymmdd': '20180325', 'today_yyyymmdd': '20180320', 'today1': '2018-03-20', 'last_weekday1_yyyymmdd': '20180312', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curmonth_range_yyyymmdd': '20180301-20180331', 'current_week_num_yyyy_mm': '2018-12', 'december_month_last_year_yyyy_mm': '2017-12', 'global_username': 'dataviewer', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_yyyymmdd': '20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'yesterday1': '20180319', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19'}
2018-03-20 14:09:38,014 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-20 14:09:38,015 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-20 14:09:38,015 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-20 14:09:38,015 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-20 14:09:38,016 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-20 14:09:38,016 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-20 16:38:53,327 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-20 16:38:53,328 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-20 16:38:53,328 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-20 16:38:53,329 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-20 16:38:53,329 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-20 16:38:53,329 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-20 16:38:53,329 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-20 16:38:53,336 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-20 16:38:53,336 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-20 16:38:53,336 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-20 16:38:53,337 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-20 16:38:53,337 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-20 16:38:53,342 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-20 16:38:53,343 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 16:38:53,382 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-20 16:38:53,383 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 16:38:53,389 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-20 16:38:53,389 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-20 16:38:53,389 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-20 16:38:53,389 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-20 16:38:53,390 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-20 16:38:53,397 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 16:38:53,397 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-20 16:38:53,397 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-20 16:38:53,404 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-20 16:38:53,404 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-20 16:38:53,409 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 16:38:53,409 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 16:38:53,415 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 16:38:53,416 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 16:38:53,422 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 16:38:53,422 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-20 16:38:53,494 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 16:38:53,495 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-20 16:38:53,495 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-20 16:38:53,503 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 16:38:53,504 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 16:38:53,510 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 16:38:53,511 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 16:38:53,517 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 16:38:53,518 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 16:38:53,524 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 16:38:53,525 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-20 16:38:53,588 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 16:38:53,588 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-20 16:38:53,589 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-20 16:38:53,596 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-20 16:38:53,596 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-20 16:38:53,603 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 16:38:53,603 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 16:38:53,610 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 16:38:53,610 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 16:38:53,616 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 16:38:53,617 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 16:38:53,623 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 16:38:53,623 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-20 16:38:53,685 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 16:38:53,686 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-20 16:38:53,686 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-20 16:38:53,693 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 16:38:53,693 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 16:38:53,700 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 16:38:53,700 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 16:38:53,707 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 16:38:53,707 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 16:38:53,713 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 16:38:53,713 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-20 16:38:53,777 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 16:38:53,778 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-20 16:38:53,778 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-20 16:38:53,786 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-20 16:38:53,787 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-20 16:38:53,802 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 16:38:53,803 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 16:38:53,809 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 16:38:53,810 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 16:38:53,816 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 16:38:53,816 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 16:38:53,822 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 16:38:53,822 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-20 16:38:53,897 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 16:38:53,898 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-20 16:38:53,898 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-20 16:38:53,905 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 16:38:53,905 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 16:38:53,911 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 16:38:53,912 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 16:38:53,918 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 16:38:53,918 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-20 16:38:53,985 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 16:38:53,985 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(329,)
2018-03-20 16:38:53,986 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 329
2018-03-20 16:38:53,992 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-20 16:38:53,992 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-20 16:38:53,998 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-20 16:38:53,999 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-20 16:38:54,004 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-20 16:38:54,005 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-20 16:38:54,010 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-20 16:38:54,011 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-20 16:38:54,016 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 16:38:54,017 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 16:38:54,023 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 16:38:54,023 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 16:38:54,029 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 16:38:54,029 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 329
2018-03-20 16:38:54,096 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-20 16:38:54,096 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-20 16:38:54,096 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-20 16:38:54,097 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-20 16:38:54,113 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-20 16:38:54,113 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-20 16:38:54,114 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-20 16:38:54,119 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-20 16:38:54,119 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-20 16:38:54,120 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-20 16:38:54,127 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 16:38:54,127 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-20 16:38:54,128 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 16:38:54,128 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-20 16:38:54,128 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 16:38:54,128 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 16:38:54,129 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,129 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815'}
2018-03-20 16:38:54,129 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 16:38:54,129 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 16:38:54,129 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,130 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815'}
2018-03-20 16:38:54,130 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 16:38:54,130 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-20 16:38:54,130 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 16:38:54,136 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-14', '2018-03-20'], flag：True
2018-03-20 16:38:54,137 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 16:38:54,137 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 16:38:54,138 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 16:38:54,138 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 16:38:54,138 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-20 16:38:54,139 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-20 16:38:54,139 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-20 16:38:54,146 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 16:38:54,147 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-20 16:38:54,147 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 16:38:54,147 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-20 16:38:54,147 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 16:38:54,147 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 16:38:54,148 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,148 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815'}
2018-03-20 16:38:54,148 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 16:38:54,148 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 16:38:54,148 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,149 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815'}
2018-03-20 16:38:54,149 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 16:38:54,149 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-20 16:38:54,149 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 16:38:54,156 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180319'], flag：True
2018-03-20 16:38:54,156 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 16:38:54,157 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 16:38:54,157 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 16:38:54,157 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 16:38:54,157 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-20 16:38:54,158 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-20 16:38:54,158 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-20 16:38:54,166 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 16:38:54,167 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-20 16:38:54,167 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 16:38:54,167 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 16:38:54,167 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 16:38:54,167 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 16:38:54,168 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,168 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'yesterday1': '20180319', 'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815'}
2018-03-20 16:38:54,168 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-20 16:38:54,168 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 16:38:54,168 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-20 16:38:54,169 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'before7day1': '2018-03-14', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'yesterday1': '20180319', 'global_mobile': '18110000014', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815'}
2018-03-20 16:38:54,169 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-20 16:38:54,169 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-20 16:38:54,170 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 16:38:54,170 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-20 16:38:54,170 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-20 16:38:54,170 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 16:38:54,200 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 16:38:54,203 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"curmonth_range_yyyymmdd": "20180301-20180331", "recent_30day_range_yyyymmdd": "2018-02-18-2018-03-19", "last_month_first_day_yyyymmdd": "20180201", "curmonth_final_day_yyyymmdd": "20180331", "pre_weekday7_yyyymmdd": "20180311", "recent_7day_range_yyyy_mm_dd": "2018-03-13-2018-03-19", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "millisecond_for_yesterday": 1521388800000, "recent_7day_range_yyyymmdd": "20180313-20180319", "lastmonth_range_yyyymmdd": "20180301-20180331", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_month_yyyymm": "201802", "last_month_yyyy_mm": "2018-02", "next_month_first_day_yyyy_mm_dd": "2018-04-01", "current_month_yyyymm": "201803", "weekday1_yyyy_mm_dd": "20180319", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "last_weekday1_to_weekday7_yyyy_mm_dd": "2018-03-12-2018-03-18", "december_month_last_year_yyyymm": "201712", "weekday1_to_weekday7_yyyymmdd": "20180319-20180325", "current_week_num_yyyy_mm": "2018-12", "today_yyyymmdd": "20180320", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "yesterday_yyyy_mm_dd": "2018-03-19", "weekday7_yyyymmdd": "20180325", "last_weekday1_yyyymmdd": "20180312", "curtime": "2018-03-20 16:38:53", "today_yyyy_mm_dd": "2018-03-20", "pre_weekday1_yyyymmdd": "20180305", "current_month_last_year_yyyymm": "2017-03", "curmonth_first_day_yyyymmdd": "20180301", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "december_month_last_year_yyyy_mm": "2017-12", "last_week_num_yyyyno": "201811", "current_week_num_yyyymm": "201812", "yesterday_yyyymmdd": "20180319", "next_month_first_day_yyyymmdd": "20180401", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "weekday7_yyyy_mm_dd": "20180325", "current_month_yyyy_mm": "2018-03", "last_month_final_day_yyyymmdd": "20180228", "last_weekday7_yyyymmdd": "20180318", "current_month_last_year_yyyy_mm": "2017-03", "last_weekday1_to_weekday7_yyyymmdd": "20180312-20180318", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_weekday7_yyyy_mm_dd": "2018-03-18", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "weekday1_to_weekday7_yyyy_mm_dd": "20180319-20180325", "weekday1_yyyymmdd": "20180319", "millisecond_for_curdate": 1521475200000, "recent_30day_range_yyyy_mm_dd": "20180218-20180319", "millisecond_for_curtime": 1521535133000, "last_weekday1_yyyy_mm_dd": "2018-03-12"}
2018-03-20 16:38:54,204 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Tue, 20 Mar 2018 08:38:53 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-20 16:38:54,204 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 16:38:54,204 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 16:38:54,204 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,204 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,205 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20
2018-03-20 16:38:54,205 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20
2018-03-20 16:38:54,205 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-20
2018-03-20 16:38:54,205 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,205 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,206 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 16:38:54,206 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 16:38:54,207 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 16:38:54,207 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,208 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-20 16:38:54,208 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180313-20180319
2018-03-20 16:38:54,208 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180313-20180319
2018-03-20 16:38:54,208 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180313-20180319
2018-03-20 16:38:54,209 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,209 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-20 16:38:54,209 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-20 16:38:54,209 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-20 16:38:54,209 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-20 16:38:54,210 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,210 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,210 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 16:38:54,210 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 16:38:54,210 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyy_mm_dd-20180319-20180325
2018-03-20 16:38:54,211 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,211 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,211 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-20 16:38:54,211 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-20 16:38:54,211 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-20 16:38:54,212 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,212 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-20 16:38:54,212 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-20 16:38:54,212 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-20 16:38:54,212 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-20 16:38:54,213 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,213 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,213 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-20 16:38:54,213 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-20 16:38:54,213 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-20 16:38:54,214 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,214 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-20 16:38:54,214 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-20 16:38:54,214 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-20 16:38:54,214 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-20 16:38:54,214 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,215 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-20 16:38:54,215 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-18-2018-03-19
2018-03-20 16:38:54,216 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-18-2018-03-19
2018-03-20 16:38:54,216 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-18-2018-03-19
2018-03-20 16:38:54,216 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,216 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,217 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-20 16:38:54,217 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-20 16:38:54,217 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-20 16:38:54,217 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,217 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-20 16:38:54,218 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 16:38:54,218 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 16:38:54,218 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-20 16:38:54,218 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,218 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-20 16:38:54,219 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 16:38:54,219 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 16:38:54,219 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-20 16:38:54,219 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,219 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 16:38:54,220 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 16:38:54,220 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 16:38:54,220 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyymmdd-20180319-20180325
2018-03-20 16:38:54,220 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,220 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-20 16:38:54,221 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20 16:38:53
2018-03-20 16:38:54,221 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20 16:38:53
2018-03-20 16:38:54,221 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-20 16:38:53
2018-03-20 16:38:54,221 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,221 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-20 16:38:54,222 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 16:38:54,222 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 16:38:54,222 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180319
2018-03-20 16:38:54,222 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,222 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,223 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12
2018-03-20 16:38:54,223 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12
2018-03-20 16:38:54,223 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyy_mm_dd-2018-03-12
2018-03-20 16:38:54,223 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,224 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,224 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-20 16:38:54,225 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-20 16:38:54,225 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-20 16:38:54,225 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,225 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-20 16:38:54,225 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 16:38:54,226 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 16:38:54,226 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-20 16:38:54,226 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,226 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,226 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-20 16:38:54,227 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-20 16:38:54,227 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-20 16:38:54,227 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,227 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-20 16:38:54,227 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 16:38:54,228 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 16:38:54,228 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-20 16:38:54,228 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,228 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,228 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-20 16:38:54,229 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-20 16:38:54,229 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-20 16:38:54,229 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,229 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-20 16:38:54,229 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-20 16:38:54,230 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-20 16:38:54,230 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-20 16:38:54,230 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,231 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-20 16:38:54,231 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-20 16:38:54,231 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-20 16:38:54,231 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-20 16:38:54,232 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,232 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-20 16:38:54,232 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-20 16:38:54,232 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-20 16:38:54,232 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-20 16:38:54,233 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,233 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-20 16:38:54,233 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-20 16:38:54,233 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-20 16:38:54,233 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-20 16:38:54,234 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,234 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-20 16:38:54,234 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-20 16:38:54,234 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-20 16:38:54,235 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-20 16:38:54,235 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,235 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,235 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-13-2018-03-19
2018-03-20 16:38:54,235 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-13-2018-03-19
2018-03-20 16:38:54,236 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-13-2018-03-19
2018-03-20 16:38:54,236 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,236 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,236 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-20 16:38:54,236 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-20 16:38:54,237 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-19
2018-03-20 16:38:54,237 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,237 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,237 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-20 16:38:54,237 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-20 16:38:54,238 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-20 16:38:54,238 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,238 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-20 16:38:54,238 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-20 16:38:54,238 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-20 16:38:54,239 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-20 16:38:54,239 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,239 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-20 16:38:54,239 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-20 16:38:54,239 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-20 16:38:54,240 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-20 16:38:54,240 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,240 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-20 16:38:54,240 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-20 16:38:54,240 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-20 16:38:54,241 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-20 16:38:54,241 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,241 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-20 16:38:54,241 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 16:38:54,241 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 16:38:54,242 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-20 16:38:54,242 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,242 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-20 16:38:54,242 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-20 16:38:54,242 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-20 16:38:54,243 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-20 16:38:54,243 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,243 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,243 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 16:38:54,243 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 16:38:54,244 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-20 16:38:54,244 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,244 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-20 16:38:54,244 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-20 16:38:54,244 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-20 16:38:54,245 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-20 16:38:54,245 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,245 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,245 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-20 16:38:54,245 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-20 16:38:54,246 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-20 16:38:54,246 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,246 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_week_num_yyyyno', 'value']
2018-03-20 16:38:54,246 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201811
2018-03-20 16:38:54,246 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201811
2018-03-20 16:38:54,247 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_week_num_yyyyno-201811
2018-03-20 16:38:54,247 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,247 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-20 16:38:54,247 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521475200000
2018-03-20 16:38:54,247 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521475200000
2018-03-20 16:38:54,248 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521475200000
2018-03-20 16:38:54,248 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,248 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-20 16:38:54,248 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180320
2018-03-20 16:38:54,248 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180320
2018-03-20 16:38:54,249 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180320
2018-03-20 16:38:54,249 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,249 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-20 16:38:54,249 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 16:38:54,249 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 16:38:54,250 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-20 16:38:54,250 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,250 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,250 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-20 16:38:54,251 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-20 16:38:54,251 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-20 16:38:54,251 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,251 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-20 16:38:54,252 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-20 16:38:54,252 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-20 16:38:54,252 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521388800000
2018-03-20 16:38:54,252 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,253 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,253 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 16:38:54,253 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 16:38:54,253 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 16:38:54,254 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,254 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-20 16:38:54,254 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-20 16:38:54,255 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-20 16:38:54,255 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-20 16:38:54,255 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,255 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyymmdd', 'value']
2018-03-20 16:38:54,256 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312
2018-03-20 16:38:54,256 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312
2018-03-20 16:38:54,256 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyymmdd-20180312
2018-03-20 16:38:54,256 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,257 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,257 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180218-20180319
2018-03-20 16:38:54,257 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180218-20180319
2018-03-20 16:38:54,257 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180218-20180319
2018-03-20 16:38:54,258 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,258 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 16:38:54,258 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-20 16:38:54,258 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-20 16:38:54,258 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyymmdd-20180312-20180318
2018-03-20 16:38:54,259 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,259 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-20 16:38:54,259 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-20 16:38:54,259 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-20 16:38:54,259 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-20 16:38:54,260 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,260 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-20 16:38:54,260 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 16:38:54,260 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 16:38:54,260 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-20 16:38:54,261 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,261 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-20 16:38:54,261 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-20 16:38:54,261 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-20 16:38:54,261 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-20 16:38:54,262 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 16:38:54,262 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-20 16:38:54,262 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521535133000
2018-03-20 16:38:54,263 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521535133000
2018-03-20 16:38:54,263 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521535133000
2018-03-20 16:38:54,263 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 16:38:54,263 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 16:38:54,263 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,264 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,264 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-20 16:38:54,264 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-20 16:38:54,265 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-20 16:38:54,265 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-20 16:38:54,265 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-20 16:38:54,273 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 16:38:54,274 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-20 16:38:54,274 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-20 16:38:54,274 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-20 16:38:54,274 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-20 16:38:54,275 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-20 16:38:54,282 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 16:38:54,282 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-20 16:38:54,283 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 16:38:54,283 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 16:38:54,283 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 16:38:54,283 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 16:38:54,283 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,284 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,284 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-20 16:38:54,284 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 16:38:54,284 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,285 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,285 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 16:38:54,285 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-20 16:38:54,286 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-20 16:38:54,286 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-20 16:38:54,357 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-20 16:38:54,358 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-20 16:38:54,359 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 08:38:54 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=xlizsmz0h2xsogjh9j4saaoo;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-20 16:38:54,360 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 16:38:54,360 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-20 16:38:54,361 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-20 16:38:54,361 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 16:38:54,361 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,361 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,362 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-20 16:38:54,362 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-20 16:38:54,363 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-20 16:38:54,365 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 16:38:54,365 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 16:38:54,366 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 16:38:54,366 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 16:38:54,366 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-20 16:38:54,367 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,367 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-20 16:38:54,367 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-20 16:38:54,367 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 16:38:54,368 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,368 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,368 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-20 16:38:54,368 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 16:38:54,369 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,369 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,369 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 16:38:54,370 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 16:38:54,370 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-20 16:38:54,370 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-20 16:38:54,371 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 16:38:54,430 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 16:38:54,431 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-20 16:38:54,432 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 08:38:54 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Mar-2018 08:38:54 GMT')]
2018-03-20 16:38:54,432 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 16:38:54,433 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 16:38:54,434 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 16:38:54,434 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 16:38:54,435 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,436 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,437 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-20 16:38:54,437 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-20 16:38:54,439 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID329-库存查询(自然月), ID:329]======================
2018-03-20 16:38:54,439 test_case.py[line: 32] INFO: 正在查询测试用例[ID：329, 名称：ID329-库存查询(自然月)]关联的测试步骤
2018-03-20 16:38:54,440 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(329,)
2018-03-20 16:38:54,449 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 16:38:54,449 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 773]======================
2018-03-20 16:38:54,449 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 16:38:54,449 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 16:38:54,450 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 16:38:54,450 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 16:38:54,450 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$last_month_yyyymm$', '$last_month_yyyymm$']
2018-03-20 16:38:54,450 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,451 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 16:38:54,451 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 16:38:54,451 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-20 16:38:54,451 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 16:38:54,452 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,452 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,454 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-20 16:38:54,454 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 16:38:54,455 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,455 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,456 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 16:38:54,456 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 16:38:54,457 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-20 16:38:54,457 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-20 16:38:54,457 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 16:38:54,499 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-20 16:38:54,499 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"10","inventoryAvgAge":2,"item":"68312463407003202F","itemName":"女童 针织长裤 683124634070 兰紫 130cm","periodSaleNum":"5","rowCount":null,"totalQty":"9","warehouseName":"全部仓库"},{"availableQty":"15","inventoryAvgAge":8,"item":"68312463401907662H","itemName":"女童 针织长裤 683124634019 浅花灰 150cm","periodSaleNum":"6","rowCount":null,"totalQty":"19","warehouseName":"全部仓库"},{"availableQty":"29","inventoryAvgAge":8,"item":"68312434410907662F","itemName":"683124344109浅花灰130cm","periodSaleNum":"10","rowCount":null,"totalQty":"39","warehouseName":"全部仓库"},{"availableQty":"39","inventoryAvgAge":9,"item":"68312423406105612H","itemName":"女童 风衣 683124234061 玫红 150cm","periodSaleNum":"20","rowCount":null,"totalQty":"49","warehouseName":"全部仓库"},{"availableQty":"99","inventoryAvgAge":11,"item":"683115115322021238","itemName":"男童 跑鞋 683115115322 黑桔 38码","periodSaleNum":"80","rowCount":null,"totalQty":"100","warehouseName":"全部仓库"},{"availableQty":"79","inventoryAvgAge":11,"item":"68311661217205001A","itemName":"男女童 健康鞋 683116612172 红 26码","periodSaleNum":"60","rowCount":null,"totalQty":"89","warehouseName":"全部仓库"},{"availableQty":"19","inventoryAvgAge":15,"item":"68312434410907662I","itemName":"男 针织套装 683124344109 浅花灰 160cm","periodSaleNum":"5","rowCount":null,"totalQty":"29","warehouseName":"全部仓库"},{"availableQty":"59","inventoryAvgAge":17,"item":"68312403415201272J","itemName":"683124034152白柔粉165cm","periodSaleNum":"40","rowCount":null,"totalQty":"69","warehouseName":"全部仓库"},{"availableQty":"49","inventoryAvgAge":18,"item":"68312406016401272G","itemName":"女童 针织上衣 683124060164 白柔粉 140cm","periodSaleNum":"30","rowCount":null,"totalQty":"59","warehouseName":"全部仓库"},{"availableQty":"69","inventoryAvgAge":19,"item":"68311661218703051A","itemName":"男女童 健康鞋 683116612187 兰红 26码","periodSaleNum":"50","rowCount":null,"totalQty":"79","warehouseName":"全部仓库"}]}
2018-03-20 16:38:54,500 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 08:38:54 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2139'), ('Connection', 'close')]
2018-03-20 16:38:54,500 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 16:38:54,500 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 16:38:54,500 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 16:38:54,501 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 16:38:54,501 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 16:38:54,501 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'pre_weekday1_yyyymmdd': '20180305', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'last_month_final_day_yyyymmdd': '20180228', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday1_yyyymmdd': '20180319', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'curtime': '2018-03-20 16:38:53', 'yesterday_yyyymmdd': '20180319', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'last_month_first_day_yyyymmdd': '20180201', 'global_platform_host': '10.118.59.84', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'last_month_yyyymm': '201802', 'today1': '2018-03-20', 'weekday7_yyyymmdd': '20180325', 'current_month_yyyy_mm': '2018-03', 'last_weekday7_yyyymmdd': '20180318', 'current_month_last_year_yyyy_mm': '2017-03', 'curmonth_final_day_yyyymmdd': '20180331', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'global_mobile': '18110000014', 'yesterday1': '20180319', 'next_month_first_day_yyyymmdd': '20180401', 'curmonth_first_day_yyyymmdd': '20180301', 'millisecond_for_curtime': 1521535133000, 'current_week_num_yyyy_mm': '2018-12', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'last_month_yyyy_mm': '2018-02', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyymm': '201812', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_week_num_yyyyno': '201811', 'millisecond_for_curdate': 1521475200000, 'today_yyyymmdd': '20180320', 'before7day1': '2018-03-14', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_username': 'dataviewer', 'millisecond_for_yesterday': 1521388800000, 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_yyyymmdd': '20180312', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'current_month_yyyymm': '201803', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'yesterday_yyyy_mm_dd': '2018-03-19', 'december_month_last_year_yyyymm': '201712', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31'}
2018-03-20 16:38:54,504 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-20 16:38:54,505 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-20 16:38:54,505 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-20 16:38:54,506 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-20 16:38:54,506 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-20 16:38:54,507 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-20 19:50:03,997 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-20 19:50:03,998 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-20 19:50:03,998 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-20 19:50:03,999 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-20 19:50:03,999 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-20 19:50:03,999 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-20 19:50:04,000 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-20 19:50:04,006 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-20 19:50:04,007 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-20 19:50:04,007 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-20 19:50:04,007 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-20 19:50:04,007 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-20 19:50:04,013 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-20 19:50:04,013 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 19:50:04,056 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-20 19:50:04,056 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 19:50:04,062 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-20 19:50:04,062 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-20 19:50:04,062 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-20 19:50:04,063 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-20 19:50:04,063 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-20 19:50:04,078 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:50:04,078 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-20 19:50:04,079 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-20 19:50:04,097 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-20 19:50:04,097 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-20 19:50:04,103 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:50:04,103 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:50:04,109 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:50:04,109 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:50:04,115 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:50:04,115 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-20 19:50:04,184 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:50:04,184 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-20 19:50:04,184 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-20 19:50:04,190 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 19:50:04,191 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 19:50:04,196 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:50:04,197 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:50:04,201 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:50:04,201 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:50:04,207 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:50:04,207 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-20 19:50:04,274 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:50:04,274 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-20 19:50:04,275 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-20 19:50:04,281 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-20 19:50:04,282 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-20 19:50:04,288 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 19:50:04,288 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 19:50:04,294 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:50:04,295 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:50:04,300 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:50:04,301 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:50:04,306 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:50:04,307 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-20 19:50:04,375 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:50:04,378 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-20 19:50:04,378 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-20 19:50:04,383 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 19:50:04,383 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 19:50:04,388 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:50:04,388 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:50:04,393 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:50:04,393 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:50:04,397 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:50:04,398 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-20 19:50:04,466 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:50:04,466 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-20 19:50:04,466 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-20 19:50:04,473 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-20 19:50:04,473 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-20 19:50:04,478 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 19:50:04,478 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 19:50:04,484 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:50:04,485 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:50:04,491 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:50:04,491 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:50:04,496 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:50:04,496 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-20 19:50:04,577 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:50:04,577 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-20 19:50:04,578 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-20 19:50:04,585 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:50:04,585 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:50:04,590 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:50:04,590 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:50:04,595 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:50:04,595 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-20 19:50:04,666 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:50:04,667 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(329,)
2018-03-20 19:50:04,667 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 329
2018-03-20 19:50:04,672 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-20 19:50:04,672 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-20 19:50:04,678 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-20 19:50:04,678 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-20 19:50:04,683 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-20 19:50:04,683 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-20 19:50:04,689 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-20 19:50:04,689 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-20 19:50:04,694 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:50:04,694 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:50:04,702 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:50:04,702 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:50:04,708 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:50:04,708 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 329
2018-03-20 19:50:04,775 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-20 19:50:04,775 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-20 19:50:04,775 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-20 19:50:04,775 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-20 19:50:04,792 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-20 19:50:04,792 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-20 19:50:04,792 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-20 19:50:04,798 test_plan.py[line: 40] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-03-20 19:50:04,799 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1521546604', 4, 3, '数据灯塔接口测试', '调试计划-赖富玉', '2018-03-20 19:50:04', '', '', 0, 0, 0, 0)
2018-03-20 19:50:04,891 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-20 19:50:04,892 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-20 19:50:04,892 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-20 19:50:04,899 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:50:04,899 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-20 19:50:04,900 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 19:50:04,900 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-20 19:50:04,900 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 19:50:04,900 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:50:04,901 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:04,901 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815'}
2018-03-20 19:50:04,902 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 19:50:04,902 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:50:04,902 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:04,902 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_platform_host': '10.118.59.84', 'global_monthly_code1': '2017112815'}
2018-03-20 19:50:04,903 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:50:04,903 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-20 19:50:04,903 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 19:50:04,911 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-14', '2018-03-20'], flag：True
2018-03-20 19:50:04,911 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 19:50:04,912 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 19:50:04,913 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 19:50:04,913 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 19:50:04,913 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:50:04,914 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 283, 673, 1, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.87', 8080, '', '--', 'SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");', '', 'body', '', '', '{\n    "db": {\n        "before7day1": 1,\n        "today1": 2\n    }\n}', '成功', '', '2018-03-20 19:50:04')
2018-03-20 19:50:04,920 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:04,924 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:04,924 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:50:04,924 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:50:04,925 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 283, '数据灯塔接口测试->ID51-时间日期->ID279-当天', 'ID283-当天YYYY_MM_DD', '成功', '', '2018-03-20 19:50:04', '0天 0小时 0分 0秒')
2018-03-20 19:50:05,100 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-20 19:50:05,101 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-20 19:50:05,101 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-20 19:50:05,110 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:50:05,110 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-20 19:50:05,110 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 19:50:05,111 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-20 19:50:05,111 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 19:50:05,111 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:50:05,111 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:05,112 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'before7day1': '2018-03-14', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'today1': '2018-03-20'}
2018-03-20 19:50:05,112 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 19:50:05,112 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:50:05,112 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:05,112 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'before7day1': '2018-03-14', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'today1': '2018-03-20'}
2018-03-20 19:50:05,113 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:50:05,113 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-20 19:50:05,113 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 19:50:05,176 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180319'], flag：True
2018-03-20 19:50:05,176 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 19:50:05,177 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 19:50:05,177 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 19:50:05,178 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 19:50:05,178 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:50:05,178 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 134, 327, 1, '操作数据库', 'ddtmk', 2, 'select_one_record', 'http', '10.202.95.87', 8080, '', '--', "SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')", '', 'body', '', '', '{\n    "db": {\n        "yesterday1": 1\n    }\n}', '成功', '', '2018-03-20 19:50:05')
2018-03-20 19:50:05,183 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:05,185 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:05,185 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:50:05,185 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:50:05,185 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 134, '数据灯塔接口测试->ID51-时间日期->ID132-昨天', 'ID134-YYYYMMDD', '成功', '', '2018-03-20 19:50:05', '0天 0小时 0分 0秒')
2018-03-20 19:50:05,284 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-20 19:50:05,285 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-20 19:50:05,285 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-20 19:50:05,293 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:50:05,293 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-20 19:50:05,293 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 19:50:05,294 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 19:50:05,294 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 19:50:05,294 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:50:05,294 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:05,295 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'before7day1': '2018-03-14', 'yesterday1': '20180319', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'today1': '2018-03-20'}
2018-03-20 19:50:05,295 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-20 19:50:05,295 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:50:05,295 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-20 19:50:05,296 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014', 'before7day1': '2018-03-14', 'yesterday1': '20180319', 'global_monthly_code1': '2017112815', 'global_username': 'dataviewer', 'today1': '2018-03-20'}
2018-03-20 19:50:05,296 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-20 19:50:05,296 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-20 19:50:05,297 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 19:50:05,297 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-20 19:50:05,297 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-20 19:50:05,299 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 19:50:05,323 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 19:50:05,326 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"last_weekday1_yyyy_mm_dd": "2018-03-12", "curmonth_final_day_yyyymmdd": "20180331", "weekday7_yyyy_mm_dd": "20180325", "today_yyyymmdd": "20180320", "weekday1_yyyymmdd": "20180319", "recent_7day_range_yyyymmdd": "20180313-20180319", "yesterday_yyyy_mm_dd": "2018-03-19", "millisecond_for_curtime": 1521546605000, "last_weekday7_yyyymmdd": "20180318", "curtime": "2018-03-20 19:50:05", "current_week_num_yyyymm": "201812", "last_weekday1_yyyymmdd": "20180312", "last_month_first_day_yyyymmdd": "20180201", "weekday1_to_weekday7_yyyy_mm_dd": "20180319-20180325", "current_month_last_year_yyyymm": "2017-03", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "last_weekday1_to_weekday7_yyyymmdd": "20180312-20180318", "next_month_first_day_yyyy_mm_dd": "2018-04-01", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_weekday1_to_weekday7_yyyy_mm_dd": "2018-03-12-2018-03-18", "yesterday_yyyymmdd": "20180319", "millisecond_for_curdate": 1521475200000, "recent_30day_range_yyyy_mm_dd": "20180218-20180319", "current_month_last_year_yyyy_mm": "2017-03", "december_month_last_year_yyyy_mm": "2017-12", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_month_yyyy_mm": "2018-02", "today_yyyy_mm_dd": "2018-03-20", "next_month_first_day_yyyymmdd": "20180401", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "december_month_last_year_yyyymm": "201712", "pre_weekday7_yyyymmdd": "20180311", "last_week_num_yyyyno": "201811", "last_month_yyyymm": "201802", "current_week_num_yyyy_mm": "2018-12", "current_month_yyyy_mm": "2018-03", "recent_7day_range_yyyy_mm_dd": "2018-03-13-2018-03-19", "weekday1_to_weekday7_yyyymmdd": "20180319-20180325", "weekday7_yyyymmdd": "20180325", "last_month_final_day_yyyymmdd": "20180228", "curmonth_range_yyyymmdd": "20180301-20180331", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "pre_weekday1_yyyymmdd": "20180305", "last_weekday7_yyyy_mm_dd": "2018-03-18", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "current_month_yyyymm": "201803", "recent_30day_range_yyyymmdd": "2018-02-18-2018-03-19", "weekday1_yyyy_mm_dd": "20180319", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "millisecond_for_yesterday": 1521388800000, "curmonth_first_day_yyyymmdd": "20180301", "lastmonth_range_yyyymmdd": "20180301-20180331", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31"}
2018-03-20 19:50:05,327 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Tue, 20 Mar 2018 11:50:05 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-20 19:50:05,327 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 19:50:05,327 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 19:50:05,328 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,328 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-20 19:50:05,328 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-20 19:50:05,328 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-20 19:50:05,328 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521388800000
2018-03-20 19:50:05,329 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,329 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-20 19:50:05,329 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521475200000
2018-03-20 19:50:05,330 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521475200000
2018-03-20 19:50:05,330 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521475200000
2018-03-20 19:50:05,331 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,331 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_week_num_yyyyno', 'value']
2018-03-20 19:50:05,331 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201811
2018-03-20 19:50:05,332 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201811
2018-03-20 19:50:05,332 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_week_num_yyyyno-201811
2018-03-20 19:50:05,332 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,332 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,333 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-20 19:50:05,333 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-20 19:50:05,333 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-20 19:50:05,333 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,334 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-20 19:50:05,334 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-20 19:50:05,334 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-20 19:50:05,334 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-20 19:50:05,334 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,335 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-20 19:50:05,335 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-20 19:50:05,335 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-20 19:50:05,335 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-20 19:50:05,336 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,336 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyymmdd', 'value']
2018-03-20 19:50:05,336 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312
2018-03-20 19:50:05,336 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312
2018-03-20 19:50:05,337 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyymmdd-20180312
2018-03-20 19:50:05,337 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,337 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-20 19:50:05,337 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-20 19:50:05,338 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-20 19:50:05,338 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-20 19:50:05,338 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,338 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-20 19:50:05,339 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20 19:50:05
2018-03-20 19:50:05,339 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20 19:50:05
2018-03-20 19:50:05,339 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-20 19:50:05
2018-03-20 19:50:05,339 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,339 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-20 19:50:05,340 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-20 19:50:05,340 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-20 19:50:05,340 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-20 19:50:05,341 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,341 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-20 19:50:05,342 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 19:50:05,342 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 19:50:05,342 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-20 19:50:05,342 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,343 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-20 19:50:05,344 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-20 19:50:05,344 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-20 19:50:05,344 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-20 19:50:05,344 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,345 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,345 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 19:50:05,345 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 19:50:05,345 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 19:50:05,345 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,346 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,346 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12
2018-03-20 19:50:05,346 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12
2018-03-20 19:50:05,346 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyy_mm_dd-2018-03-12
2018-03-20 19:50:05,347 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,347 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,347 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-20 19:50:05,347 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-20 19:50:05,348 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-20 19:50:05,348 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,348 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-20 19:50:05,348 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-20 19:50:05,349 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-20 19:50:05,349 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-20 19:50:05,349 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,349 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-20 19:50:05,350 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-20 19:50:05,350 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-20 19:50:05,350 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-20 19:50:05,350 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,351 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-20 19:50:05,351 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-20 19:50:05,351 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-20 19:50:05,351 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-20 19:50:05,352 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,352 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-20 19:50:05,352 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-20 19:50:05,353 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-20 19:50:05,353 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-20 19:50:05,354 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,354 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-20 19:50:05,354 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 19:50:05,354 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 19:50:05,355 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-20 19:50:05,355 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,355 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 19:50:05,355 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-20 19:50:05,355 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-20 19:50:05,356 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyymmdd-20180312-20180318
2018-03-20 19:50:05,356 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,356 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-20 19:50:05,356 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-20 19:50:05,357 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-20 19:50:05,357 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-20 19:50:05,357 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,357 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-20 19:50:05,357 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 19:50:05,358 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 19:50:05,358 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-20 19:50:05,358 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,358 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-20 19:50:05,359 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 19:50:05,359 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 19:50:05,359 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180319
2018-03-20 19:50:05,359 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,359 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-20 19:50:05,360 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-20 19:50:05,360 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-20 19:50:05,360 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-20 19:50:05,360 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,360 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-20 19:50:05,361 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 19:50:05,361 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 19:50:05,361 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-20 19:50:05,361 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,362 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,363 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 19:50:05,363 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 19:50:05,363 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-20 19:50:05,363 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,364 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,364 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-20 19:50:05,364 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-20 19:50:05,364 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-20 19:50:05,365 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,365 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,365 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180218-20180319
2018-03-20 19:50:05,366 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180218-20180319
2018-03-20 19:50:05,366 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180218-20180319
2018-03-20 19:50:05,366 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,366 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-20 19:50:05,366 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-20 19:50:05,367 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-20 19:50:05,367 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-20 19:50:05,367 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,367 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,368 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-20 19:50:05,368 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-20 19:50:05,368 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-19
2018-03-20 19:50:05,368 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,369 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-20 19:50:05,369 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180320
2018-03-20 19:50:05,369 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180320
2018-03-20 19:50:05,369 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180320
2018-03-20 19:50:05,369 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,370 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,370 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 19:50:05,370 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 19:50:05,370 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 19:50:05,370 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,371 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,371 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-20 19:50:05,371 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-20 19:50:05,372 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-20 19:50:05,372 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,372 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,372 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 19:50:05,372 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 19:50:05,373 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyy_mm_dd-20180319-20180325
2018-03-20 19:50:05,373 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,373 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-20 19:50:05,373 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-18-2018-03-19
2018-03-20 19:50:05,374 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-18-2018-03-19
2018-03-20 19:50:05,374 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-18-2018-03-19
2018-03-20 19:50:05,374 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,374 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-20 19:50:05,374 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 19:50:05,375 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 19:50:05,375 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-20 19:50:05,375 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,375 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,376 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-20 19:50:05,376 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-20 19:50:05,376 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-20 19:50:05,376 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,376 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,377 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-13-2018-03-19
2018-03-20 19:50:05,377 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-13-2018-03-19
2018-03-20 19:50:05,378 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-13-2018-03-19
2018-03-20 19:50:05,378 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,378 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 19:50:05,378 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 19:50:05,379 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 19:50:05,379 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyymmdd-20180319-20180325
2018-03-20 19:50:05,379 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,379 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-20 19:50:05,379 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-20 19:50:05,380 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-20 19:50:05,380 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-20 19:50:05,380 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,380 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-20 19:50:05,381 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180313-20180319
2018-03-20 19:50:05,381 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180313-20180319
2018-03-20 19:50:05,381 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180313-20180319
2018-03-20 19:50:05,381 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,382 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,382 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-20 19:50:05,382 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-20 19:50:05,382 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-20 19:50:05,382 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,383 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,383 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-20 19:50:05,383 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-20 19:50:05,383 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-20 19:50:05,384 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,384 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-20 19:50:05,384 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-20 19:50:05,384 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-20 19:50:05,385 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-20 19:50:05,385 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,385 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-20 19:50:05,385 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521546605000
2018-03-20 19:50:05,385 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521546605000
2018-03-20 19:50:05,386 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521546605000
2018-03-20 19:50:05,386 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,387 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,387 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20
2018-03-20 19:50:05,387 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20
2018-03-20 19:50:05,387 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-20
2018-03-20 19:50:05,388 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,388 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,388 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-20 19:50:05,388 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-20 19:50:05,389 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-20 19:50:05,389 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,389 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-20 19:50:05,389 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-20 19:50:05,390 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-20 19:50:05,390 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-20 19:50:05,390 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,390 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-20 19:50:05,391 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-20 19:50:05,391 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-20 19:50:05,391 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-20 19:50:05,391 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,392 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,392 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-20 19:50:05,392 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-20 19:50:05,392 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-20 19:50:05,392 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,393 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-20 19:50:05,393 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 19:50:05,393 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 19:50:05,393 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-20 19:50:05,394 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:50:05,394 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:50:05,394 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 19:50:05,394 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 19:50:05,395 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-20 19:50:05,395 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 19:50:05,395 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 19:50:05,395 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:05,396 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:05,396 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-20 19:50:05,396 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-20 19:50:05,397 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:50:05,398 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 327, 771, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.118.59.84', '8000', '{}', 'POST', '/action/getDateAndTime', '', 'body', '包含字符串', '[{\n    "消息": "fail#接口请求失败",\n    "模式": "curtime"\n}]', '{\n    "dic": {\n        "millisecond_for_yesterday": {\n            "millisecond_for_yesterday": "value"\n        },\n        "millisecond_for_curdate": {\n            "millisecond_for_curdate": "value"\n        },\n        "last_week_num_yyyyno": {\n            "last_week_num_yyyyno": "value"\n        },\n        "last_weekday7_yyyy_mm_dd": {\n            "last_weekday7_yyyy_mm_dd": "value"\n        },\n        "last_month_yyyymm": {\n            "last_month_yyyymm": "value"\n        },\n        "curmonth_final_day_yyyymmdd": {\n            "curmonth_final_day_yyyymmdd": "value"\n        },\n        "last_weekday1_yyyymmdd": {\n            "last_weekday1_yyyymmdd": "value"\n        },\n        "last_month_yyyy_mm": {\n            "last_month_yyyy_mm": "value"\n        },\n        "curtime": {\n            "curtime": "value"\n        },\n        "december_month_last_year_yyyymm": {\n            "december_month_last_year_yyyymm": "value"\n        },\n        "current_month_last_year_yyyymm": {\n            "current_month_last_year_yyyymm": "value"\n        },\n        "last_weekday7_yyyymmdd": {\n            "last_weekday7_yyyymmdd": "value"\n        },\n        "curmonth_range_yyyy_mm_dd": {\n            "curmonth_range_yyyy_mm_dd": "value"\n        },\n        "last_weekday1_yyyy_mm_dd": {\n            "last_weekday1_yyyy_mm_dd": "value"\n        },\n        "last_month_final_day_yyyy_mm_dd": {\n            "last_month_final_day_yyyy_mm_dd": "value"\n        },\n        "current_week_num_yyyymm": {\n            "current_week_num_yyyymm": "value"\n        },\n        "december_month_last_year_yyyy_mm": {\n            "december_month_last_year_yyyy_mm": "value"\n        },\n        "curmonth_first_day_yyyymmdd": {\n            "curmonth_first_day_yyyymmdd": "value"\n        },\n        "current_week_num_yyyy_mm": {\n            "current_week_num_yyyy_mm": "value"\n        },\n        "weekday7_yyyymmdd": {\n            "weekday7_yyyymmdd": "value"\n        },\n        "last_weekday1_to_weekday7_yyyymmdd": {\n            "last_weekday1_to_weekday7_yyyymmdd": "value"\n        },\n        "current_month_yyyymm": {\n            "current_month_yyyymm": "value"\n        },\n        "lastmonth_range_yyyymmdd": {\n            "lastmonth_range_yyyymmdd": "value"\n        },\n        "yesterday_yyyymmdd": {\n            "yesterday_yyyymmdd": "value"\n        },\n        "last_month_first_day_yyyymmdd": {\n            "last_month_first_day_yyyymmdd": "value"\n        },\n        "weekday1_yyyymmdd": {\n            "weekday1_yyyymmdd": "value"\n        },\n        "weekday1_yyyy_mm_dd": {\n            "weekday1_yyyy_mm_dd": "value"\n        },\n        "next_month_first_day_yyyy_mm_dd": {\n            "next_month_first_day_yyyy_mm_dd": "value"\n        },\n        "recent_30day_range_yyyy_mm_dd": {\n            "recent_30day_range_yyyy_mm_dd": "value"\n        },\n        "pre_weekday7_yyyymmdd": {\n            "pre_weekday7_yyyymmdd": "value"\n        },\n        "yesterday_yyyy_mm_dd": {\n            "yesterday_yyyy_mm_dd": "value"\n        },\n        "today_yyyymmdd": {\n            "today_yyyymmdd": "value"\n        },\n        "lastmonth_range_yyyy_mm_dd": {\n            "lastmonth_range_yyyy_mm_dd": "value"\n        },\n        "curmonth_final_day_yyyy_mm_dd": {\n            "curmonth_final_day_yyyy_mm_dd": "value"\n        },\n        "weekday1_to_weekday7_yyyy_mm_dd": {\n            "weekday1_to_weekday7_yyyy_mm_dd": "value"\n        },\n        "recent_30day_range_yyyymmdd": {\n            "recent_30day_range_yyyymmdd": "value"\n        },\n        "current_month_last_year_yyyy_mm": {\n            "current_month_last_year_yyyy_mm": "value"\n        },\n        "pre_weekday1_yyyy_mm_dd": {\n            "pre_weekday1_yyyy_mm_dd": "value"\n        },\n        "recent_7day_range_yyyy_mm_dd": {\n            "recent_7day_range_yyyy_mm_dd": "value"\n        },\n        "weekday1_to_weekday7_yyyymmdd": {\n            "weekday1_to_weekday7_yyyymmdd": "value"\n        },\n        "last_month_final_day_yyyymmdd": {\n            "last_month_final_day_yyyymmdd": "value"\n        },\n        "recent_7day_range_yyyymmdd": {\n            "recent_7day_range_yyyymmdd": "value"\n        },\n        "curmonth_first_day_yyyy_mm_dd": {\n            "curmonth_first_day_yyyy_mm_dd": "value"\n        },\n        "last_weekday1_to_weekday7_yyyy_mm_dd": {\n            "last_weekday1_to_weekday7_yyyy_mm_dd": "value"\n        },\n        "next_month_first_day_yyyymmdd": {\n            "next_month_first_day_yyyymmdd": "value"\n        },\n        "millisecond_for_curtime": {\n            "millisecond_for_curtime": "value"\n        },\n        "today_yyyy_mm_dd": {\n            "today_yyyy_mm_dd": "value"\n        },\n        "last_month_first_day_yyyy_mm_dd": {\n            "last_month_first_day_yyyy_mm_dd": "value"\n        },\n        "pre_weekday1_yyyymmdd": {\n            "pre_weekday1_yyyymmdd": "value"\n        },\n        "current_month_yyyy_mm": {\n            "current_month_yyyy_mm": "value"\n        },\n        "pre_weekday7_yyyy_mm_dd": {\n            "pre_weekday7_yyyy_mm_dd": "value"\n        },\n        "curmonth_range_yyyymmdd": {\n            "curmonth_range_yyyymmdd": "value"\n        },\n        "weekday7_yyyy_mm_dd": {\n            "weekday7_yyyy_mm_dd": "value"\n        }\n    }\n}', '成功', '', '2018-03-20 19:50:05')
2018-03-20 19:50:05,405 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:05,406 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:05,407 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:50:05,407 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:50:05,407 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 327, '数据灯塔接口测试', 'ID327-获取时间和日期', '成功', '', '2018-03-20 19:50:05', '0天 0小时 0分 0秒')
2018-03-20 19:50:05,732 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-20 19:50:05,733 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-20 19:50:05,733 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-20 19:50:05,742 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:50:05,742 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-20 19:50:05,743 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-20 19:50:05,743 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-20 19:50:05,743 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-20 19:50:05,743 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-20 19:50:05,751 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:50:05,752 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-20 19:50:05,752 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 19:50:05,752 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 19:50:05,753 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 19:50:05,753 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:50:05,753 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:05,753 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:05,753 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-20 19:50:05,754 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:50:05,754 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:05,754 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:05,755 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:50:05,755 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-20 19:50:05,756 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-20 19:50:05,756 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-20 19:50:05,832 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-20 19:50:05,833 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-20 19:50:05,834 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 11:50:06 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=l8k0d95edh0t1hupteqyahymt;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-20 19:50:05,835 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 19:50:05,835 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-20 19:50:05,835 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-20 19:50:05,835 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 19:50:05,835 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:05,836 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:05,836 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-20 19:50:05,836 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-20 19:50:05,837 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:50:05,837 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 28, 84, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.87', 8080, '{}', 'GET', '/res/rpatchca.png?0.6089781314990876', '', 'code', '包含字符串', '[{\n    "消息": "fail#返回code非200，请求图片验证码失败",\n    "模式": "200"\n}]', '', '成功', '', '2018-03-20 19:50:05')
2018-03-20 19:50:05,842 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:05,844 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:05,844 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:50:05,844 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:50:05,844 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 28, '数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码', 'ID28-请求图片验证码', '成功', '', '2018-03-20 19:50:05', '0天 0小时 0分 0秒')
2018-03-20 19:50:05,922 test_case.py[line: 73] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:50:05,923 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 29, 86, 1, '执行用例', '数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码', 28, '--', 'http', '10.202.95.87', 8080, '', '--', '', '', '--', '', '', '', '成功', '', '2018-03-20 19:50:05')
2018-03-20 19:50:05,927 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:05,929 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:05,929 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-20 19:50:05,929 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 19:50:05,930 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 19:50:05,930 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 19:50:05,930 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 19:50:05,930 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-20 19:50:05,931 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:05,931 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-20 19:50:05,931 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-20 19:50:05,931 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:50:05,932 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:05,932 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:05,933 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-20 19:50:05,933 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:50:05,933 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:05,933 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:05,934 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:50:05,934 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 19:50:05,935 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-20 19:50:05,935 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-20 19:50:05,935 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 19:50:06,006 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 19:50:06,006 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-20 19:50:06,007 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 11:50:07 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Mar-2018 11:50:06 GMT')]
2018-03-20 19:50:06,007 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 19:50:06,007 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 19:50:06,007 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 19:50:06,008 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 19:50:06,008 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:06,008 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:06,008 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-20 19:50:06,009 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-20 19:50:06,009 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:50:06,010 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 29, 85, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.87', 8080, '{}', 'POST', '/auth/login', 'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType=', 'body', '完全匹配字典', '[{\n    "消息": "fail#登录失败",\n    "模式": {\n        "result": 200\n    }\n}]', '', '成功', '', '2018-03-20 19:50:05')
2018-03-20 19:50:06,016 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:06,019 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:06,019 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:50:06,020 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:50:06,020 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 29, '数据灯塔接口测试->ID27-登录页面', 'ID29-灯塔用户登录', '成功', '', '2018-03-20 19:50:05', '0天 0小时 0分 0秒')
2018-03-20 19:50:06,099 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID329-库存查询(自然月), ID:329]======================
2018-03-20 19:50:06,099 test_case.py[line: 32] INFO: 正在查询测试用例[ID：329, 名称：ID329-库存查询(自然月)]关联的测试步骤
2018-03-20 19:50:06,100 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(329,)
2018-03-20 19:50:06,108 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:50:06,108 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 773]======================
2018-03-20 19:50:06,108 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 19:50:06,109 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 19:50:06,109 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 19:50:06,109 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 19:50:06,109 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$last_month_yyyymm$', '$last_month_yyyymm$']
2018-03-20 19:50:06,109 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:06,110 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 19:50:06,110 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 19:50:06,110 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-20 19:50:06,110 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:50:06,110 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:06,111 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:06,113 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-20 19:50:06,113 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:50:06,114 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:06,114 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:06,114 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:50:06,115 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 19:50:06,115 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-20 19:50:06,115 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-20 19:50:06,116 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 19:50:06,166 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-20 19:50:06,167 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"10","inventoryAvgAge":2,"item":"68312463407003202F","itemName":"女童 针织长裤 683124634070 兰紫 130cm","periodSaleNum":"5","rowCount":null,"totalQty":"9","warehouseName":"全部仓库"},{"availableQty":"15","inventoryAvgAge":8,"item":"68312463401907662H","itemName":"女童 针织长裤 683124634019 浅花灰 150cm","periodSaleNum":"6","rowCount":null,"totalQty":"19","warehouseName":"全部仓库"},{"availableQty":"29","inventoryAvgAge":8,"item":"68312434410907662F","itemName":"683124344109浅花灰130cm","periodSaleNum":"10","rowCount":null,"totalQty":"39","warehouseName":"全部仓库"},{"availableQty":"39","inventoryAvgAge":9,"item":"68312423406105612H","itemName":"女童 风衣 683124234061 玫红 150cm","periodSaleNum":"20","rowCount":null,"totalQty":"49","warehouseName":"全部仓库"},{"availableQty":"99","inventoryAvgAge":11,"item":"683115115322021238","itemName":"男童 跑鞋 683115115322 黑桔 38码","periodSaleNum":"80","rowCount":null,"totalQty":"100","warehouseName":"全部仓库"},{"availableQty":"79","inventoryAvgAge":11,"item":"68311661217205001A","itemName":"男女童 健康鞋 683116612172 红 26码","periodSaleNum":"60","rowCount":null,"totalQty":"89","warehouseName":"全部仓库"},{"availableQty":"19","inventoryAvgAge":15,"item":"68312434410907662I","itemName":"男 针织套装 683124344109 浅花灰 160cm","periodSaleNum":"5","rowCount":null,"totalQty":"29","warehouseName":"全部仓库"},{"availableQty":"59","inventoryAvgAge":17,"item":"68312403415201272J","itemName":"683124034152白柔粉165cm","periodSaleNum":"40","rowCount":null,"totalQty":"69","warehouseName":"全部仓库"},{"availableQty":"49","inventoryAvgAge":18,"item":"68312406016401272G","itemName":"女童 针织上衣 683124060164 白柔粉 140cm","periodSaleNum":"30","rowCount":null,"totalQty":"59","warehouseName":"全部仓库"},{"availableQty":"69","inventoryAvgAge":19,"item":"68311661218703051A","itemName":"男女童 健康鞋 683116612187 兰红 26码","periodSaleNum":"50","rowCount":null,"totalQty":"79","warehouseName":"全部仓库"}]}
2018-03-20 19:50:06,167 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 11:50:07 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2139'), ('Connection', 'close')]
2018-03-20 19:50:06,167 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 19:50:06,167 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 19:50:06,168 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 19:50:06,168 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 19:50:06,168 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:50:06,168 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'millisecond_for_yesterday': 1521388800000, 'millisecond_for_curdate': 1521475200000, 'last_week_num_yyyyno': '201811', 'global_username': 'dataviewer', 'last_month_yyyymm': '201802', 'curmonth_final_day_yyyymmdd': '20180331', 'global_mobile': '18110000014', 'last_weekday1_yyyymmdd': '20180312', 'global_platform_host': '10.118.59.84', 'december_month_last_year_yyyymm': '201712', 'curtime': '2018-03-20 19:50:05', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'current_month_last_year_yyyymm': '2017-03', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'december_month_last_year_yyyy_mm': '2017-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'curmonth_first_day_yyyymmdd': '20180301', 'current_week_num_yyyy_mm': '2018-12', 'weekday7_yyyymmdd': '20180325', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyymm': '201803', 'today1': '2018-03-20', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'pre_weekday1_yyyymmdd': '20180305', 'yesterday1': '20180319', 'yesterday_yyyymmdd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'weekday1_yyyymmdd': '20180319', 'weekday1_yyyy_mm_dd': '20180319', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'before7day1': '2018-03-14', 'pre_weekday7_yyyymmdd': '20180311', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'today_yyyymmdd': '20180320', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'today_yyyy_mm_dd': '2018-03-20', 'current_month_last_year_yyyy_mm': '2017-03', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'last_month_final_day_yyyymmdd': '20180228', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'global_monthly_code1': '2017112815', 'next_month_first_day_yyyymmdd': '20180401', 'millisecond_for_curtime': 1521546605000, 'last_weekday7_yyyymmdd': '20180318', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_month_yyyy_mm': '2018-02', 'current_month_yyyy_mm': '2018-03', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyy_mm_dd': '20180325'}
2018-03-20 19:50:06,168 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-20 19:50:06,169 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-20 19:50:06,169 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:50:06,170 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 329, 773, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.87', 8080, '{}', 'POST', '/stockHealth/SkuLibraryAgeDetail2', 'periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10', 'body', '匹配正则表达式', '[{\n    "消息": "fail#获取记录失败",\n    "模式": "totalCount\\":[1-9]+"\n}]', '', '成功', '', '2018-03-20 19:50:06')
2018-03-20 19:50:06,175 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:06,176 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:50:06,177 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:50:06,177 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:50:06,177 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546604', 3, 329, '数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', 'ID329-库存查询(自然月)', '成功', '', '2018-03-20 19:50:06', '0天 0小时 0分 0秒')
2018-03-20 19:50:06,247 test_plan.py[line: 57] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-03-20 19:50:06,248 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-03-20 19:50:06,248 mydb.py[line: 122] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1521546604', 3)
2018-03-20 19:50:06,249 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1521546604 AND plan_id=3
2018-03-20 19:50:06,256 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-03-20 19:50:06,256 mydb.py[line: 122] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1521546604', 3)
2018-03-20 19:50:06,257 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1521546604 AND plan_id=3
2018-03-20 19:50:06,263 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-03-20 19:50:06,264 mydb.py[line: 122] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1521546604', 3)
2018-03-20 19:50:06,264 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1521546604 AND plan_id=3
2018-03-20 19:50:06,271 mydb.py[line: 82] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-03-20 19:50:06', time_took='0天 0小时 0分 1秒', case_total_num=6, case_pass_num=6, case_fail_num=0, case_block_num=0 WHERE execution_num='1521546604' AND plan_id=3
2018-03-20 19:50:06,340 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-20 19:50:06,340 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-20 19:50:06,341 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-20 19:50:06,341 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-20 19:50:06,342 mydb.py[line: 82] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行成功', remark='' WHERE running_plan_num= 1521192848
2018-03-20 19:52:49,206 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-20 19:52:49,207 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-20 19:52:49,207 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-20 19:52:49,207 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-20 19:52:49,207 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-20 19:52:49,207 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-20 19:52:49,208 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-20 19:52:49,213 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-20 19:52:49,213 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-20 19:52:49,214 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-20 19:52:49,214 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-20 19:52:49,214 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-20 19:52:49,220 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-20 19:52:49,220 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 19:52:49,261 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-20 19:52:49,261 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 19:52:49,266 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-20 19:52:49,266 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-20 19:52:49,267 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-20 19:52:49,267 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-20 19:52:49,267 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-20 19:52:49,273 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:52:49,274 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-20 19:52:49,274 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-20 19:52:49,290 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-20 19:52:49,292 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-20 19:52:49,297 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:52:49,298 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:52:49,303 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:52:49,304 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:52:49,310 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:52:49,310 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-20 19:52:49,400 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:52:49,401 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-20 19:52:49,401 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-20 19:52:49,409 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 19:52:49,409 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 19:52:49,416 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:52:49,417 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:52:49,423 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:52:49,424 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:52:49,430 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:52:49,431 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-20 19:52:49,490 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:52:49,491 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-20 19:52:49,491 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-20 19:52:49,498 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-20 19:52:49,498 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-20 19:52:49,505 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 19:52:49,505 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 19:52:49,511 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:52:49,511 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:52:49,517 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:52:49,517 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:52:49,524 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:52:49,525 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-20 19:52:49,591 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:52:49,592 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-20 19:52:49,593 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-20 19:52:49,600 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 19:52:49,601 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 19:52:49,608 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:52:49,609 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:52:49,615 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:52:49,616 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:52:49,637 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:52:49,637 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-20 19:52:49,733 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:52:49,733 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-20 19:52:49,733 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-20 19:52:49,740 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-20 19:52:49,740 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-20 19:52:49,746 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 19:52:49,746 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 19:52:49,752 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:52:49,752 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:52:49,758 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:52:49,759 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:52:49,765 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:52:49,765 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-20 19:52:49,831 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:52:49,832 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-20 19:52:49,832 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-20 19:52:49,839 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:52:49,839 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:52:49,844 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:52:49,845 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:52:49,850 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:52:49,851 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-20 19:52:49,924 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 19:52:49,924 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(329,)
2018-03-20 19:52:49,925 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 329
2018-03-20 19:52:49,929 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-20 19:52:49,929 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-20 19:52:49,935 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-20 19:52:49,935 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-20 19:52:49,941 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-20 19:52:49,941 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-20 19:52:49,947 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-20 19:52:49,947 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-20 19:52:49,953 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 19:52:49,953 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 19:52:49,959 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 19:52:49,960 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 19:52:49,964 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 19:52:49,965 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 329
2018-03-20 19:52:50,031 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-20 19:52:50,031 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-20 19:52:50,032 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-20 19:52:50,032 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-20 19:52:50,047 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-20 19:52:50,047 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-20 19:52:50,047 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-20 19:52:50,055 test_plan.py[line: 40] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-03-20 19:52:50,056 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1521546770', 4, 3, '数据灯塔接口测试', '调试计划-赖富玉', '2018-03-20 19:52:50', '', '', 0, 0, 0, 0)
2018-03-20 19:52:50,132 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-20 19:52:50,133 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-20 19:52:50,133 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-20 19:52:50,140 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:52:50,141 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-20 19:52:50,141 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 19:52:50,141 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-20 19:52:50,141 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 19:52:50,142 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:52:50,142 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,143 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84'}
2018-03-20 19:52:50,143 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 19:52:50,143 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:52:50,143 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,143 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_mobile': '18110000014', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84'}
2018-03-20 19:52:50,144 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:52:50,144 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-20 19:52:50,144 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 19:52:50,151 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-14', '2018-03-20'], flag：True
2018-03-20 19:52:50,152 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 19:52:50,152 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 19:52:50,153 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 19:52:50,153 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 19:52:50,153 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:52:50,155 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 283, 673, 1, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.87', 8080, '', '--', 'SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");', '', 'body', '', '', '{\n    "db": {\n        "today1": 2,\n        "before7day1": 1\n    }\n}', '成功', '', '2018-03-20 19:52:50')
2018-03-20 19:52:50,169 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,171 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,172 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:52:50,172 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:52:50,172 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 283, '数据灯塔接口测试->ID51-时间日期->ID279-当天', 'ID283-当天YYYY_MM_DD', '成功', '', '2018-03-20 19:52:50', '0天 0小时 0分 0秒')
2018-03-20 19:52:50,256 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-20 19:52:50,256 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-20 19:52:50,257 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-20 19:52:50,266 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:52:50,266 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-20 19:52:50,266 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 19:52:50,267 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-20 19:52:50,267 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 19:52:50,267 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:52:50,267 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,268 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'before7day1': '2018-03-14', 'global_platform_host': '10.118.59.84'}
2018-03-20 19:52:50,268 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 19:52:50,268 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:52:50,268 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,269 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'before7day1': '2018-03-14', 'global_platform_host': '10.118.59.84'}
2018-03-20 19:52:50,269 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:52:50,270 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-20 19:52:50,270 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 19:52:50,276 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180319'], flag：True
2018-03-20 19:52:50,276 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 19:52:50,276 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 19:52:50,277 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 19:52:50,277 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 19:52:50,278 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:52:50,278 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 134, 327, 1, '操作数据库', 'ddtmk', 2, 'select_one_record', 'http', '10.202.95.87', 8080, '', '--', "SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')", '', 'body', '', '', '{\n    "db": {\n        "yesterday1": 1\n    }\n}', '成功', '', '2018-03-20 19:52:50')
2018-03-20 19:52:50,283 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,284 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,285 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:52:50,285 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:52:50,285 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 134, '数据灯塔接口测试->ID51-时间日期->ID132-昨天', 'ID134-YYYYMMDD', '成功', '', '2018-03-20 19:52:50', '0天 0小时 0分 0秒')
2018-03-20 19:52:50,366 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-20 19:52:50,366 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-20 19:52:50,366 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-20 19:52:50,374 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:52:50,374 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-20 19:52:50,375 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 19:52:50,375 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 19:52:50,375 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 19:52:50,375 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:52:50,375 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,376 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-20', 'global_username': 'dataviewer', 'yesterday1': '20180319', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'before7day1': '2018-03-14', 'global_platform_host': '10.118.59.84'}
2018-03-20 19:52:50,376 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-20 19:52:50,376 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:52:50,377 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-20 19:52:50,377 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'today1': '2018-03-20', 'global_username': 'dataviewer', 'yesterday1': '20180319', 'global_monthly_code1': '2017112815', 'global_mobile': '18110000014', 'before7day1': '2018-03-14', 'global_platform_host': '10.118.59.84'}
2018-03-20 19:52:50,377 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-20 19:52:50,377 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-20 19:52:50,378 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 19:52:50,378 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-20 19:52:50,378 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-20 19:52:50,378 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 19:52:50,403 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 19:52:50,406 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"last_weekday1_yyyy_mm_dd": "2018-03-12", "curmonth_final_day_yyyymmdd": "20180331", "weekday7_yyyy_mm_dd": "20180325", "today_yyyymmdd": "20180320", "weekday1_yyyymmdd": "20180319", "recent_7day_range_yyyymmdd": "20180313-20180319", "yesterday_yyyy_mm_dd": "2018-03-19", "millisecond_for_curtime": 1521546770000, "last_weekday7_yyyymmdd": "20180318", "curtime": "2018-03-20 19:52:50", "current_week_num_yyyymm": "201812", "last_weekday1_yyyymmdd": "20180312", "last_month_first_day_yyyymmdd": "20180201", "weekday1_to_weekday7_yyyy_mm_dd": "20180319-20180325", "current_month_last_year_yyyymm": "2017-03", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "last_weekday1_to_weekday7_yyyymmdd": "20180312-20180318", "next_month_first_day_yyyy_mm_dd": "2018-04-01", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_weekday1_to_weekday7_yyyy_mm_dd": "2018-03-12-2018-03-18", "yesterday_yyyymmdd": "20180319", "millisecond_for_curdate": 1521475200000, "recent_30day_range_yyyy_mm_dd": "20180218-20180319", "current_month_last_year_yyyy_mm": "2017-03", "december_month_last_year_yyyy_mm": "2017-12", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_month_yyyy_mm": "2018-02", "today_yyyy_mm_dd": "2018-03-20", "next_month_first_day_yyyymmdd": "20180401", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "december_month_last_year_yyyymm": "201712", "pre_weekday7_yyyymmdd": "20180311", "last_week_num_yyyyno": "201811", "last_month_yyyymm": "201802", "current_week_num_yyyy_mm": "2018-12", "current_month_yyyy_mm": "2018-03", "recent_7day_range_yyyy_mm_dd": "2018-03-13-2018-03-19", "weekday1_to_weekday7_yyyymmdd": "20180319-20180325", "weekday7_yyyymmdd": "20180325", "last_month_final_day_yyyymmdd": "20180228", "curmonth_range_yyyymmdd": "20180301-20180331", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "pre_weekday1_yyyymmdd": "20180305", "last_weekday7_yyyy_mm_dd": "2018-03-18", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "current_month_yyyymm": "201803", "recent_30day_range_yyyymmdd": "2018-02-18-2018-03-19", "weekday1_yyyy_mm_dd": "20180319", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "millisecond_for_yesterday": 1521388800000, "curmonth_first_day_yyyymmdd": "20180301", "lastmonth_range_yyyymmdd": "20180301-20180331", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31"}
2018-03-20 19:52:50,407 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Tue, 20 Mar 2018 11:52:50 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-20 19:52:50,407 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 19:52:50,407 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 19:52:50,407 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,407 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,408 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-20 19:52:50,408 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-20 19:52:50,408 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-19
2018-03-20 19:52:50,408 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,409 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,409 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 19:52:50,409 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 19:52:50,409 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 19:52:50,409 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,410 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,410 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20
2018-03-20 19:52:50,410 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20
2018-03-20 19:52:50,410 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-20
2018-03-20 19:52:50,411 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,411 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-20 19:52:50,411 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-20 19:52:50,411 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-20 19:52:50,411 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-20 19:52:50,412 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,412 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,412 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12
2018-03-20 19:52:50,412 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12
2018-03-20 19:52:50,412 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyy_mm_dd-2018-03-12
2018-03-20 19:52:50,413 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,413 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,413 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-20 19:52:50,413 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-20 19:52:50,414 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-20 19:52:50,414 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,414 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-20 19:52:50,414 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-20 19:52:50,414 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-20 19:52:50,414 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-20 19:52:50,415 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,415 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-20 19:52:50,415 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-20 19:52:50,415 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-20 19:52:50,415 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-20 19:52:50,416 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,416 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-20 19:52:50,416 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 19:52:50,416 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 19:52:50,417 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-20 19:52:50,417 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,417 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-20 19:52:50,417 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 19:52:50,417 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 19:52:50,418 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-20 19:52:50,418 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,418 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-20 19:52:50,418 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-20 19:52:50,418 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-20 19:52:50,419 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-20 19:52:50,419 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,419 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,419 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 19:52:50,419 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 19:52:50,420 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyy_mm_dd-20180319-20180325
2018-03-20 19:52:50,420 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,420 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-20 19:52:50,420 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 19:52:50,421 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 19:52:50,421 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-20 19:52:50,421 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,421 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,421 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-20 19:52:50,422 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-20 19:52:50,422 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-20 19:52:50,422 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,422 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-20 19:52:50,422 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-20 19:52:50,423 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-20 19:52:50,423 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-20 19:52:50,423 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,423 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-20 19:52:50,423 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-18-2018-03-19
2018-03-20 19:52:50,424 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-18-2018-03-19
2018-03-20 19:52:50,424 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-18-2018-03-19
2018-03-20 19:52:50,424 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,424 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,424 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180218-20180319
2018-03-20 19:52:50,425 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180218-20180319
2018-03-20 19:52:50,425 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180218-20180319
2018-03-20 19:52:50,425 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,425 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-20 19:52:50,425 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-20 19:52:50,426 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-20 19:52:50,426 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-20 19:52:50,426 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,426 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,426 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-13-2018-03-19
2018-03-20 19:52:50,427 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-13-2018-03-19
2018-03-20 19:52:50,427 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-13-2018-03-19
2018-03-20 19:52:50,427 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,427 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,427 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-20 19:52:50,428 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-20 19:52:50,428 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-20 19:52:50,428 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,428 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,428 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 19:52:50,429 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 19:52:50,429 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-20 19:52:50,429 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,429 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-20 19:52:50,430 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 19:52:50,430 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 19:52:50,430 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-20 19:52:50,430 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,430 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-20 19:52:50,431 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-20 19:52:50,431 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-20 19:52:50,431 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-20 19:52:50,431 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,431 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-20 19:52:50,432 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 19:52:50,432 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 19:52:50,432 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-20 19:52:50,432 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,432 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,433 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 19:52:50,433 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 19:52:50,433 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 19:52:50,433 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,433 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-20 19:52:50,434 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-20 19:52:50,434 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-20 19:52:50,434 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-20 19:52:50,434 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,435 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,435 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 19:52:50,435 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 19:52:50,435 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-20 19:52:50,436 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,436 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-20 19:52:50,436 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-20 19:52:50,436 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-20 19:52:50,436 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-20 19:52:50,437 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,437 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,437 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-20 19:52:50,437 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-20 19:52:50,438 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-20 19:52:50,438 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,438 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,438 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-20 19:52:50,439 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-20 19:52:50,439 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-20 19:52:50,439 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,439 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyymmdd', 'value']
2018-03-20 19:52:50,440 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312
2018-03-20 19:52:50,440 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312
2018-03-20 19:52:50,440 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyymmdd-20180312
2018-03-20 19:52:50,440 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,441 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-20 19:52:50,441 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180313-20180319
2018-03-20 19:52:50,441 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180313-20180319
2018-03-20 19:52:50,441 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180313-20180319
2018-03-20 19:52:50,442 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,442 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_week_num_yyyyno', 'value']
2018-03-20 19:52:50,442 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201811
2018-03-20 19:52:50,442 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201811
2018-03-20 19:52:50,442 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_week_num_yyyyno-201811
2018-03-20 19:52:50,443 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,443 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,443 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-20 19:52:50,443 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-20 19:52:50,444 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-20 19:52:50,444 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,444 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-20 19:52:50,444 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180320
2018-03-20 19:52:50,446 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180320
2018-03-20 19:52:50,446 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180320
2018-03-20 19:52:50,446 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,446 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 19:52:50,446 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 19:52:50,447 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 19:52:50,447 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyymmdd-20180319-20180325
2018-03-20 19:52:50,447 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,447 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-20 19:52:50,448 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20 19:52:50
2018-03-20 19:52:50,448 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20 19:52:50
2018-03-20 19:52:50,448 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-20 19:52:50
2018-03-20 19:52:50,448 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,448 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-20 19:52:50,449 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-20 19:52:50,449 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-20 19:52:50,449 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-20 19:52:50,449 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,449 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,450 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-20 19:52:50,450 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-20 19:52:50,450 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-20 19:52:50,450 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,451 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-20 19:52:50,451 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-20 19:52:50,451 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-20 19:52:50,451 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-20 19:52:50,451 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,452 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-20 19:52:50,452 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-20 19:52:50,452 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-20 19:52:50,452 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-20 19:52:50,453 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,453 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-20 19:52:50,453 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-20 19:52:50,453 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-20 19:52:50,454 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-20 19:52:50,454 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,454 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-20 19:52:50,454 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-20 19:52:50,454 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-20 19:52:50,455 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-20 19:52:50,455 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,455 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 19:52:50,455 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-20 19:52:50,456 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-20 19:52:50,456 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyymmdd-20180312-20180318
2018-03-20 19:52:50,456 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,456 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-20 19:52:50,456 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-20 19:52:50,457 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-20 19:52:50,457 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521388800000
2018-03-20 19:52:50,457 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,457 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,457 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-20 19:52:50,458 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-20 19:52:50,458 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-20 19:52:50,458 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,458 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-20 19:52:50,459 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521546770000
2018-03-20 19:52:50,459 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521546770000
2018-03-20 19:52:50,459 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521546770000
2018-03-20 19:52:50,459 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,459 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-20 19:52:50,460 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521475200000
2018-03-20 19:52:50,460 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521475200000
2018-03-20 19:52:50,460 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521475200000
2018-03-20 19:52:50,460 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,460 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-20 19:52:50,461 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-20 19:52:50,461 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-20 19:52:50,461 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-20 19:52:50,461 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,462 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-20 19:52:50,462 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 19:52:50,462 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 19:52:50,462 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180319
2018-03-20 19:52:50,463 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,463 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-20 19:52:50,463 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 19:52:50,463 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 19:52:50,464 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-20 19:52:50,464 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,464 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-20 19:52:50,464 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-20 19:52:50,464 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-20 19:52:50,465 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-20 19:52:50,465 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 19:52:50,465 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 19:52:50,466 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-20 19:52:50,466 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-20 19:52:50,466 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-20 19:52:50,466 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 19:52:50,466 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 19:52:50,467 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,467 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,467 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-20 19:52:50,467 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-20 19:52:50,468 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:52:50,469 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 327, 771, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.118.59.84', '8000', '{}', 'POST', '/action/getDateAndTime', '', 'body', '包含字符串', '[{\n    "模式": "curtime",\n    "消息": "fail#接口请求失败"\n}]', '{\n    "dic": {\n        "yesterday_yyyy_mm_dd": {\n            "yesterday_yyyy_mm_dd": "value"\n        },\n        "lastmonth_range_yyyy_mm_dd": {\n            "lastmonth_range_yyyy_mm_dd": "value"\n        },\n        "today_yyyy_mm_dd": {\n            "today_yyyy_mm_dd": "value"\n        },\n        "last_weekday7_yyyymmdd": {\n            "last_weekday7_yyyymmdd": "value"\n        },\n        "last_weekday1_yyyy_mm_dd": {\n            "last_weekday1_yyyy_mm_dd": "value"\n        },\n        "curmonth_first_day_yyyy_mm_dd": {\n            "curmonth_first_day_yyyy_mm_dd": "value"\n        },\n        "december_month_last_year_yyyymm": {\n            "december_month_last_year_yyyymm": "value"\n        },\n        "last_month_yyyymm": {\n            "last_month_yyyymm": "value"\n        },\n        "curmonth_range_yyyymmdd": {\n            "curmonth_range_yyyymmdd": "value"\n        },\n        "weekday7_yyyymmdd": {\n            "weekday7_yyyymmdd": "value"\n        },\n        "curmonth_final_day_yyyymmdd": {\n            "curmonth_final_day_yyyymmdd": "value"\n        },\n        "weekday1_to_weekday7_yyyy_mm_dd": {\n            "weekday1_to_weekday7_yyyy_mm_dd": "value"\n        },\n        "weekday1_yyyymmdd": {\n            "weekday1_yyyymmdd": "value"\n        },\n        "curmonth_final_day_yyyy_mm_dd": {\n            "curmonth_final_day_yyyy_mm_dd": "value"\n        },\n        "pre_weekday1_yyyymmdd": {\n            "pre_weekday1_yyyymmdd": "value"\n        },\n        "recent_30day_range_yyyymmdd": {\n            "recent_30day_range_yyyymmdd": "value"\n        },\n        "recent_30day_range_yyyy_mm_dd": {\n            "recent_30day_range_yyyy_mm_dd": "value"\n        },\n        "current_week_num_yyyy_mm": {\n            "current_week_num_yyyy_mm": "value"\n        },\n        "recent_7day_range_yyyy_mm_dd": {\n            "recent_7day_range_yyyy_mm_dd": "value"\n        },\n        "last_month_final_day_yyyy_mm_dd": {\n            "last_month_final_day_yyyy_mm_dd": "value"\n        },\n        "weekday7_yyyy_mm_dd": {\n            "weekday7_yyyy_mm_dd": "value"\n        },\n        "current_month_last_year_yyyy_mm": {\n            "current_month_last_year_yyyy_mm": "value"\n        },\n        "current_month_yyyy_mm": {\n            "current_month_yyyy_mm": "value"\n        },\n        "current_month_last_year_yyyymm": {\n            "current_month_last_year_yyyymm": "value"\n        },\n        "curmonth_range_yyyy_mm_dd": {\n            "curmonth_range_yyyy_mm_dd": "value"\n        },\n        "pre_weekday7_yyyymmdd": {\n            "pre_weekday7_yyyymmdd": "value"\n        },\n        "weekday1_yyyy_mm_dd": {\n            "weekday1_yyyy_mm_dd": "value"\n        },\n        "last_month_first_day_yyyymmdd": {\n            "last_month_first_day_yyyymmdd": "value"\n        },\n        "last_weekday1_to_weekday7_yyyy_mm_dd": {\n            "last_weekday1_to_weekday7_yyyy_mm_dd": "value"\n        },\n        "pre_weekday7_yyyy_mm_dd": {\n            "pre_weekday7_yyyy_mm_dd": "value"\n        },\n        "last_weekday1_yyyymmdd": {\n            "last_weekday1_yyyymmdd": "value"\n        },\n        "recent_7day_range_yyyymmdd": {\n            "recent_7day_range_yyyymmdd": "value"\n        },\n        "last_week_num_yyyyno": {\n            "last_week_num_yyyyno": "value"\n        },\n        "last_weekday7_yyyy_mm_dd": {\n            "last_weekday7_yyyy_mm_dd": "value"\n        },\n        "today_yyyymmdd": {\n            "today_yyyymmdd": "value"\n        },\n        "weekday1_to_weekday7_yyyymmdd": {\n            "weekday1_to_weekday7_yyyymmdd": "value"\n        },\n        "curtime": {\n            "curtime": "value"\n        },\n        "next_month_first_day_yyyymmdd": {\n            "next_month_first_day_yyyymmdd": "value"\n        },\n        "last_month_first_day_yyyy_mm_dd": {\n            "last_month_first_day_yyyy_mm_dd": "value"\n        },\n        "last_month_yyyy_mm": {\n            "last_month_yyyy_mm": "value"\n        },\n        "last_month_final_day_yyyymmdd": {\n            "last_month_final_day_yyyymmdd": "value"\n        },\n        "curmonth_first_day_yyyymmdd": {\n            "curmonth_first_day_yyyymmdd": "value"\n        },\n        "december_month_last_year_yyyy_mm": {\n            "december_month_last_year_yyyy_mm": "value"\n        },\n        "last_weekday1_to_weekday7_yyyymmdd": {\n            "last_weekday1_to_weekday7_yyyymmdd": "value"\n        },\n        "millisecond_for_yesterday": {\n            "millisecond_for_yesterday": "value"\n        },\n        "pre_weekday1_yyyy_mm_dd": {\n            "pre_weekday1_yyyy_mm_dd": "value"\n        },\n        "millisecond_for_curtime": {\n            "millisecond_for_curtime": "value"\n        },\n        "millisecond_for_curdate": {\n            "millisecond_for_curdate": "value"\n        },\n        "current_week_num_yyyymm": {\n            "current_week_num_yyyymm": "value"\n        },\n        "yesterday_yyyymmdd": {\n            "yesterday_yyyymmdd": "value"\n        },\n        "lastmonth_range_yyyymmdd": {\n            "lastmonth_range_yyyymmdd": "value"\n        },\n        "current_month_yyyymm": {\n            "current_month_yyyymm": "value"\n        },\n        "next_month_first_day_yyyy_mm_dd": {\n            "next_month_first_day_yyyy_mm_dd": "value"\n        }\n    }\n}', '成功', '', '2018-03-20 19:52:50')
2018-03-20 19:52:50,476 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,478 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,478 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:52:50,478 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:52:50,479 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 327, '数据灯塔接口测试', 'ID327-获取时间和日期', '成功', '', '2018-03-20 19:52:50', '0天 0小时 0分 0秒')
2018-03-20 19:52:50,549 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-20 19:52:50,549 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-20 19:52:50,549 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-20 19:52:50,557 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:52:50,558 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-20 19:52:50,559 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-20 19:52:50,559 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-20 19:52:50,559 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-20 19:52:50,560 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-20 19:52:50,567 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:52:50,567 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-20 19:52:50,568 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 19:52:50,568 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 19:52:50,568 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 19:52:50,568 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:52:50,569 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,569 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,569 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-20 19:52:50,569 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:52:50,570 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,570 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,572 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:52:50,573 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-20 19:52:50,573 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-20 19:52:50,573 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-20 19:52:50,675 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-20 19:52:50,675 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-20 19:52:50,680 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 11:52:51 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1as0rpxodc17o1qvmae1k6jonx;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-20 19:52:50,680 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 19:52:50,680 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-20 19:52:50,681 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-20 19:52:50,681 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 19:52:50,681 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,681 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,682 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-20 19:52:50,682 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-20 19:52:50,683 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:52:50,685 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 28, 84, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.87', 8080, '{}', 'GET', '/res/rpatchca.png?0.6089781314990876', '', 'code', '包含字符串', '[{\n    "模式": "200",\n    "消息": "fail#返回code非200，请求图片验证码失败"\n}]', '', '成功', '', '2018-03-20 19:52:50')
2018-03-20 19:52:50,690 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,692 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,692 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:52:50,692 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:52:50,693 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 28, '数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码', 'ID28-请求图片验证码', '成功', '', '2018-03-20 19:52:50', '0天 0小时 0分 0秒')
2018-03-20 19:52:50,773 test_case.py[line: 73] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:52:50,774 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 29, 86, 1, '执行用例', '数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码', 28, '--', 'http', '10.202.95.87', 8080, '', '--', '', '', '--', '', '', '', '成功', '', '2018-03-20 19:52:50')
2018-03-20 19:52:50,778 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,780 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,780 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-20 19:52:50,780 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 19:52:50,781 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 19:52:50,781 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 19:52:50,781 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 19:52:50,781 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-20 19:52:50,782 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,782 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-20 19:52:50,782 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-20 19:52:50,782 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:52:50,783 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,783 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,783 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-20 19:52:50,784 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:52:50,784 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,784 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,784 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:52:50,785 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 19:52:50,786 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-20 19:52:50,786 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-20 19:52:50,786 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 19:52:50,859 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 19:52:50,860 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-20 19:52:50,860 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 11:52:51 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Mar-2018 11:52:51 GMT')]
2018-03-20 19:52:50,860 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 19:52:50,860 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 19:52:50,861 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 19:52:50,861 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 19:52:50,861 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,861 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,862 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-20 19:52:50,862 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-20 19:52:50,863 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:52:50,863 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 29, 85, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.87', 8080, '{}', 'POST', '/auth/login', 'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType=', 'body', '完全匹配字典', '[{\n    "模式": {\n        "result": 200\n    },\n    "消息": "fail#登录失败"\n}]', '', '成功', '', '2018-03-20 19:52:50')
2018-03-20 19:52:50,868 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,869 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:50,869 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:52:50,869 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:52:50,870 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 29, '数据灯塔接口测试->ID27-登录页面', 'ID29-灯塔用户登录', '成功', '', '2018-03-20 19:52:50', '0天 0小时 0分 0秒')
2018-03-20 19:52:50,947 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID329-库存查询(自然月), ID:329]======================
2018-03-20 19:52:50,947 test_case.py[line: 32] INFO: 正在查询测试用例[ID：329, 名称：ID329-库存查询(自然月)]关联的测试步骤
2018-03-20 19:52:50,948 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(329,)
2018-03-20 19:52:50,957 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 19:52:50,957 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 773]======================
2018-03-20 19:52:50,957 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 19:52:50,958 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 19:52:50,958 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 19:52:50,958 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 19:52:50,958 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$last_month_yyyymm$', '$last_month_yyyymm$']
2018-03-20 19:52:50,959 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,959 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 19:52:50,959 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 19:52:50,959 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-20 19:52:50,960 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 19:52:50,960 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,960 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,960 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-20 19:52:50,960 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 19:52:50,961 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:50,961 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:50,961 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 19:52:50,962 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 19:52:50,962 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-20 19:52:50,962 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-20 19:52:50,963 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 19:52:51,005 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-20 19:52:51,005 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"10","inventoryAvgAge":2,"item":"68312463407003202F","itemName":"女童 针织长裤 683124634070 兰紫 130cm","periodSaleNum":"5","rowCount":null,"totalQty":"9","warehouseName":"全部仓库"},{"availableQty":"15","inventoryAvgAge":8,"item":"68312463401907662H","itemName":"女童 针织长裤 683124634019 浅花灰 150cm","periodSaleNum":"6","rowCount":null,"totalQty":"19","warehouseName":"全部仓库"},{"availableQty":"29","inventoryAvgAge":8,"item":"68312434410907662F","itemName":"683124344109浅花灰130cm","periodSaleNum":"10","rowCount":null,"totalQty":"39","warehouseName":"全部仓库"},{"availableQty":"39","inventoryAvgAge":9,"item":"68312423406105612H","itemName":"女童 风衣 683124234061 玫红 150cm","periodSaleNum":"20","rowCount":null,"totalQty":"49","warehouseName":"全部仓库"},{"availableQty":"99","inventoryAvgAge":11,"item":"683115115322021238","itemName":"男童 跑鞋 683115115322 黑桔 38码","periodSaleNum":"80","rowCount":null,"totalQty":"100","warehouseName":"全部仓库"},{"availableQty":"79","inventoryAvgAge":11,"item":"68311661217205001A","itemName":"男女童 健康鞋 683116612172 红 26码","periodSaleNum":"60","rowCount":null,"totalQty":"89","warehouseName":"全部仓库"},{"availableQty":"19","inventoryAvgAge":15,"item":"68312434410907662I","itemName":"男 针织套装 683124344109 浅花灰 160cm","periodSaleNum":"5","rowCount":null,"totalQty":"29","warehouseName":"全部仓库"},{"availableQty":"59","inventoryAvgAge":17,"item":"68312403415201272J","itemName":"683124034152白柔粉165cm","periodSaleNum":"40","rowCount":null,"totalQty":"69","warehouseName":"全部仓库"},{"availableQty":"49","inventoryAvgAge":18,"item":"68312406016401272G","itemName":"女童 针织上衣 683124060164 白柔粉 140cm","periodSaleNum":"30","rowCount":null,"totalQty":"59","warehouseName":"全部仓库"},{"availableQty":"69","inventoryAvgAge":19,"item":"68311661218703051A","itemName":"男女童 健康鞋 683116612187 兰红 26码","periodSaleNum":"50","rowCount":null,"totalQty":"79","warehouseName":"全部仓库"}]}
2018-03-20 19:52:51,006 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 11:52:52 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2139'), ('Connection', 'close')]
2018-03-20 19:52:51,006 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 19:52:51,006 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 19:52:51,006 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 19:52:51,007 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 19:52:51,007 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 19:52:51,007 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'yesterday_yyyy_mm_dd': '2018-03-19', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_monthly_code1': '2017112815', 'today_yyyy_mm_dd': '2018-03-20', 'before7day1': '2018-03-14', 'last_weekday7_yyyymmdd': '20180318', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'december_month_last_year_yyyymm': '201712', 'last_month_yyyymm': '201802', 'curmonth_range_yyyymmdd': '20180301-20180331', 'weekday7_yyyymmdd': '20180325', 'curmonth_final_day_yyyymmdd': '20180331', 'yesterday1': '20180319', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'weekday1_yyyymmdd': '20180319', 'pre_weekday7_yyyymmdd': '20180311', 'pre_weekday1_yyyymmdd': '20180305', 'today1': '2018-03-20', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'current_week_num_yyyy_mm': '2018-12', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'weekday7_yyyy_mm_dd': '20180325', 'current_month_last_year_yyyy_mm': '2017-03', 'current_month_yyyy_mm': '2018-03', 'current_month_last_year_yyyymm': '2017-03', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'global_mobile': '18110000014', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'last_month_first_day_yyyymmdd': '20180201', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'last_weekday1_yyyymmdd': '20180312', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'global_platform_host': '10.118.59.84', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'today_yyyymmdd': '20180320', 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'current_month_yyyymm': '201803', 'next_month_first_day_yyyymmdd': '20180401', 'last_week_num_yyyyno': '201811', 'last_month_yyyy_mm': '2018-02', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_first_day_yyyymmdd': '20180301', 'global_username': 'dataviewer', 'december_month_last_year_yyyy_mm': '2017-12', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'millisecond_for_yesterday': 1521388800000, 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'millisecond_for_curtime': 1521546770000, 'millisecond_for_curdate': 1521475200000, 'current_week_num_yyyymm': '201812', 'yesterday_yyyymmdd': '20180319', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'curtime': '2018-03-20 19:52:50', 'next_month_first_day_yyyy_mm_dd': '2018-04-01'}
2018-03-20 19:52:51,010 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-20 19:52:51,011 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-20 19:52:51,011 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 19:52:51,012 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 329, 773, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.87', 8080, '{}', 'POST', '/stockHealth/SkuLibraryAgeDetail2', 'periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10', 'body', '匹配正则表达式', '[{\n    "模式": "totalCount\\":[1-9]+",\n    "消息": "fail#获取记录失败"\n}]', '', '成功', '', '2018-03-20 19:52:50')
2018-03-20 19:52:51,016 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:51,018 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：1364 (HY000): Field 'run_id' doesn't have a default value
2018-03-20 19:52:51,018 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 19:52:51,018 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 19:52:51,019 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521546770', 3, 329, '数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', 'ID329-库存查询(自然月)', '成功', '', '2018-03-20 19:52:50', '0天 0小时 0分 0秒')
2018-03-20 19:52:51,098 test_plan.py[line: 57] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-03-20 19:52:51,098 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-03-20 19:52:51,099 mydb.py[line: 122] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1521546770', 3)
2018-03-20 19:52:51,099 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1521546770 AND plan_id=3
2018-03-20 19:52:51,106 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-03-20 19:52:51,106 mydb.py[line: 122] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1521546770', 3)
2018-03-20 19:52:51,106 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1521546770 AND plan_id=3
2018-03-20 19:52:51,113 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-03-20 19:52:51,114 mydb.py[line: 122] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1521546770', 3)
2018-03-20 19:52:51,114 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1521546770 AND plan_id=3
2018-03-20 19:52:51,120 mydb.py[line: 82] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-03-20 19:52:51', time_took='0天 0小时 0分 1秒', case_total_num=6, case_pass_num=6, case_fail_num=0, case_block_num=0 WHERE execution_num='1521546770' AND plan_id=3
2018-03-20 19:52:51,188 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-20 19:52:51,189 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-20 19:52:51,190 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-20 19:52:51,190 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-20 19:52:51,190 mydb.py[line: 82] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行成功', remark='' WHERE running_plan_num= 1521192848
2018-03-20 20:00:11,611 main.py[line: 16] INFO: 执行当前脚本的Python版本：3.4.0
2018-03-20 20:00:11,612 main.py[line: 19] INFO: 当前运行模式为：SingleProject
2018-03-20 20:00:11,613 main.py[line: 22] INFO: 当前运行计划编号为：1521192848
2018-03-20 20:00:11,613 main.py[line: 32] INFO: 运行单项目,待执行的运行计划编码：1521192848
2018-03-20 20:00:11,613 main.py[line: 33] INFO: 正在查询运行计划相关信息
2018-03-20 20:00:11,613 mydb.py[line: 122] INFO: query：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =%s  data：('1521192848',)
2018-03-20 20:00:11,613 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT running_plan_name,project_id, project_name, plan_name, plan_id, valid_flag FROM `website_running_plan` WHERE running_plan_num =1521192848
2018-03-20 20:00:11,620 main.py[line: 40] INFO: 待运行项目：名称：数据灯塔接口测试，ID：4，关联的测试计划有：调试计划-赖富玉
2018-03-20 20:00:11,621 main.py[line: 43] INFO: ======================开始执行运行计划[名称：数据灯塔接口调试1]======================
2018-03-20 20:00:11,621 running_plan.py[line: 29] INFO: 正在查询项目[ID：4,名称：数据灯塔接口测试]相关信息
2018-03-20 20:00:11,621 mydb.py[line: 122] INFO: query：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = %s  data：(4,)
2018-03-20 20:00:11,621 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT protocol, host, port, environment, valid_flag FROM `website_api_project_setting` WHERE id = 4
2018-03-20 20:00:11,639 running_plan.py[line: 35] INFO: 正在查询与项目关联的数据库信息
2018-03-20 20:00:11,640 mydb.py[line: 152] INFO: query：SELECT db_type, db_alias, db_name, db_host, db_port, db_user, db_passwd FROM `website_database_setting`WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 20:00:11,693 running_plan.py[line: 49] INFO: 正在查询与项目关联的全局变量
2018-03-20 20:00:11,694 mydb.py[line: 152] INFO: query：SELECT `name`, `value` FROM `website_global_variable_setting` WHERE project_id = %s AND project_type='API项目' AND environment= %s  data：(4, '测试环境')
2018-03-20 20:00:11,700 running_plan.py[line: 75] INFO: ======================开始运行测试项目[名称：数据灯塔接口测试, ID：4]======================
2018-03-20 20:00:11,700 test_project.py[line: 103] INFO: ======================正在同步更新与待运行测试计划关联的所有用例树节点信息======================
2018-03-20 20:00:11,701 test_project.py[line: 40] INFO: 待运行计划ID列表：[3]
2018-03-20 20:00:11,701 test_project.py[line: 42] INFO: 正在查询与测试计划关联的用例树节点
2018-03-20 20:00:11,701 mydb.py[line: 152] INFO: query：SELECT node_id FROM `website_api_case_tree_test_plan` WHERE plan_id IN (3) GROUP BY node_id  data：
2018-03-20 20:00:11,707 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 20:00:11,707 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(29,)
2018-03-20 20:00:11,708 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 29
2018-03-20 20:00:11,726 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(27,)
2018-03-20 20:00:11,727 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 27
2018-03-20 20:00:11,733 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 20:00:11,733 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 20:00:11,740 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 20:00:11,740 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 20:00:11,746 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 20:00:11,746 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID27-登录页面', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 29
2018-03-20 20:00:11,810 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 20:00:11,811 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(132,)
2018-03-20 20:00:11,811 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 132
2018-03-20 20:00:11,817 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 20:00:11,818 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 20:00:11,823 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 20:00:11,824 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 20:00:11,829 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 20:00:11,830 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 20:00:11,835 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 20:00:11,836 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 132
2018-03-20 20:00:11,901 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 20:00:11,901 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(134,)
2018-03-20 20:00:11,901 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 134
2018-03-20 20:00:11,909 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(132,)
2018-03-20 20:00:11,910 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 132
2018-03-20 20:00:11,916 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 20:00:11,916 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 20:00:11,922 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 20:00:11,923 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 20:00:11,929 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 20:00:11,930 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 20:00:11,936 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 20:00:11,936 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID132-昨天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 134
2018-03-20 20:00:12,010 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 20:00:12,011 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(279,)
2018-03-20 20:00:12,012 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 279
2018-03-20 20:00:12,019 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 20:00:12,020 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 20:00:12,027 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 20:00:12,027 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 20:00:12,034 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 20:00:12,034 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 20:00:12,041 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 20:00:12,041 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期', sub_node_num=1 WHERE plan_id IN (3) AND node_id = 279
2018-03-20 20:00:12,104 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 20:00:12,104 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(283,)
2018-03-20 20:00:12,104 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 283
2018-03-20 20:00:12,111 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(279,)
2018-03-20 20:00:12,112 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 279
2018-03-20 20:00:12,117 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(51,)
2018-03-20 20:00:12,117 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 51
2018-03-20 20:00:12,123 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 20:00:12,123 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 20:00:12,129 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 20:00:12,129 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 20:00:12,135 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 20:00:12,136 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID51-时间日期->ID279-当天', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 283
2018-03-20 20:00:12,203 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 20:00:12,204 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(327,)
2018-03-20 20:00:12,205 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 327
2018-03-20 20:00:12,211 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 20:00:12,211 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 20:00:12,217 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 20:00:12,217 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 20:00:12,222 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 20:00:12,223 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 327
2018-03-20 20:00:12,303 test_project.py[line: 56] INFO: 正在查找用例树节点信息
2018-03-20 20:00:12,303 mydb.py[line: 122] INFO: query：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = %s  data：(329,)
2018-03-20 20:00:12,303 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT t1.text, t1.parent_id, COUNT(t2.id) FROM `website_api_case_tree` AS t1 LEFT JOIN `website_api_case_tree` AS t2 ON t2.parent_id = t1.id WHERE t1.id = 329
2018-03-20 20:00:12,309 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(317,)
2018-03-20 20:00:12,309 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 317
2018-03-20 20:00:12,318 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(76,)
2018-03-20 20:00:12,319 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 76
2018-03-20 20:00:12,330 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(39,)
2018-03-20 20:00:12,330 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 39
2018-03-20 20:00:12,336 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(36,)
2018-03-20 20:00:12,337 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 36
2018-03-20 20:00:12,343 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(26,)
2018-03-20 20:00:12,343 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 26
2018-03-20 20:00:12,350 mydb.py[line: 122] INFO: query：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = %s  data：(0,)
2018-03-20 20:00:12,350 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT parent_id, text FROM `website_api_case_tree` WHERE id = 0
2018-03-20 20:00:12,356 test_project.py[line: 68] INFO: 正在更新测试计划用例树节点关联表记录
2018-03-20 20:00:12,357 mydb.py[line: 82] INFO: update_query：UPDATE website_api_case_tree_test_plan SET node_path='数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', sub_node_num=0 WHERE plan_id IN (3) AND node_id = 329
2018-03-20 20:00:12,418 test_project.py[line: 109] INFO: 同步更新与待运行测试计划关联的所有用例树节点信息成功
2018-03-20 20:00:12,418 test_project.py[line: 112] INFO: 正在查询测试计划[ID：3]相关信息
2018-03-20 20:00:12,419 mydb.py[line: 122] INFO: query：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = %s  data：(3,)
2018-03-20 20:00:12,419 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT plan_name,valid_flag FROM `website_api_test_plan` WHERE id = 3
2018-03-20 20:00:12,436 test_project.py[line: 117] INFO: ======================开始运行测试计划[名称：调试计划-赖富玉, ID：3]======================
2018-03-20 20:00:12,436 test_plan.py[line: 30] INFO: 正在查询测试计划关联的测试用例
2018-03-20 20:00:12,437 mydb.py[line: 152] INFO: query：SELECT node_id, node_path, node_name FROM `website_api_case_tree_test_plan` WHERE plan_id = %s AND sub_node_num = 0 ORDER BY `order` ASC  data：(3,)
2018-03-20 20:00:12,444 test_plan.py[line: 40] INFO: 正在往测试报告-测试概况插入计划执行概要记录
2018-03-20 20:00:12,444 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_summary`(execution_num, project_id, plan_id, project_name, plan_name,start_time, end_time, time_took, case_total_num, case_pass_num, case_fail_num, case_block_num) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s)  data：('1521547212', 4, 3, '数据灯塔接口测试', '调试计划-赖富玉', '2018-03-20 20:00:12', '', '', 0, 0, 0, 0)
2018-03-20 20:00:12,585 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID283-当天YYYY_MM_DD, ID:283]======================
2018-03-20 20:00:12,586 test_case.py[line: 32] INFO: 正在查询测试用例[ID：283, 名称：ID283-当天YYYY_MM_DD]关联的测试步骤
2018-03-20 20:00:12,586 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(283,)
2018-03-20 20:00:12,593 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 20:00:12,593 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 673]======================
2018-03-20 20:00:12,594 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 20:00:12,594 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtm
2018-03-20 20:00:12,594 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 20:00:12,594 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 20:00:12,595 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:12,595 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014'}
2018-03-20 20:00:12,595 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 20:00:12,596 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 20:00:12,596 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:12,596 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'global_platform_host': '10.118.59.84', 'global_mobile': '18110000014'}
2018-03-20 20:00:12,597 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 20:00:12,597 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");  data：
2018-03-20 20:00:12,598 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");
2018-03-20 20:00:12,604 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['2018-03-14', '2018-03-20'], flag：True
2018-03-20 20:00:12,604 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 20:00:12,605 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 20:00:12,605 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 20:00:12,605 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 20:00:12,606 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 20:00:12,606 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time, run_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 283, 673, 1, '操作数据库', 'ddtm', 1, 'select_one_record', 'http', '10.202.95.87', 8080, '', '--', 'SELECT DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 6 DAY), "%Y-%m-%d"), DATE_FORMAT(CURDATE(), "%Y-%m-%d");', '', 'body', '', '', '{\n    "db": {\n        "today1": 2,\n        "before7day1": 1\n    }\n}', '成功', '', '2018-03-20 20:00:12', 0)
2018-03-20 20:00:12,719 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 20:00:12,719 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 20:00:12,719 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 283, '数据灯塔接口测试->ID51-时间日期->ID279-当天', 'ID283-当天YYYY_MM_DD', '成功', '', '2018-03-20 20:00:12', '0天 0小时 0分 0秒')
2018-03-20 20:00:12,811 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID134-YYYYMMDD, ID:134]======================
2018-03-20 20:00:12,812 test_case.py[line: 32] INFO: 正在查询测试用例[ID：134, 名称：ID134-YYYYMMDD]关联的测试步骤
2018-03-20 20:00:12,812 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(134,)
2018-03-20 20:00:12,821 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 20:00:12,821 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 327]======================
2018-03-20 20:00:12,821 test_case_step.py[line: 98] INFO: 步骤类型：操作数据库
2018-03-20 20:00:12,822 test_case_step.py[line: 99] INFO: 步骤操作对象：ddtmk
2018-03-20 20:00:12,822 test_case_step.py[line: 100] INFO: 执行操作：select_one_record
2018-03-20 20:00:12,822 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 20:00:12,822 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:12,823 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'before7day1': '2018-03-14', 'global_mobile': '18110000014'}
2018-03-20 20:00:12,823 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 20:00:12,823 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 20:00:12,823 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:12,824 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'today1': '2018-03-20', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'before7day1': '2018-03-14', 'global_mobile': '18110000014'}
2018-03-20 20:00:12,824 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 20:00:12,824 mydb.py[line: 122] INFO: query：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')  data：
2018-03-20 20:00:12,824 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')
2018-03-20 20:00:12,830 DBUnittestTestCase.py[line: 20] INFO: 数据库服务器返回的查询结果为为 query_result：['20180319'], flag：True
2018-03-20 20:00:12,831 DBUnittestTestCase.py[line: 23] INFO: 正在保存目标内容到自定义变量
2018-03-20 20:00:12,831 unittesttestcase.py[line: 406] INFO: 提取数据库查询结果
2018-03-20 20:00:12,831 DBUnittestTestCase.py[line: 26] INFO: 正在进行结果断言
2018-03-20 20:00:12,832 unittesttestcase.py[line: 41] WARNING: 没有配置校验规则，返回程序
2018-03-20 20:00:12,832 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 20:00:12,832 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time, run_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 134, 327, 1, '操作数据库', 'ddtmk', 2, 'select_one_record', 'http', '10.202.95.87', 8080, '', '--', "SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),'%Y%m%d')", '', 'body', '', '', '{\n    "db": {\n        "yesterday1": 1\n    }\n}', '成功', '', '2018-03-20 20:00:12', 0)
2018-03-20 20:00:12,911 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 20:00:12,912 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 20:00:12,912 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 134, '数据灯塔接口测试->ID51-时间日期->ID132-昨天', 'ID134-YYYYMMDD', '成功', '', '2018-03-20 20:00:12', '0天 0小时 0分 0秒')
2018-03-20 20:00:12,988 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID327-获取时间和日期, ID:327]======================
2018-03-20 20:00:12,988 test_case.py[line: 32] INFO: 正在查询测试用例[ID：327, 名称：ID327-获取时间和日期]关联的测试步骤
2018-03-20 20:00:12,988 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(327,)
2018-03-20 20:00:12,997 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 20:00:12,998 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 771]======================
2018-03-20 20:00:12,998 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 20:00:12,998 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 20:00:12,998 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 20:00:12,999 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 20:00:12,999 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:12,999 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'today1': '2018-03-20', 'yesterday1': '20180319', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'before7day1': '2018-03-14', 'global_mobile': '18110000014'}
2018-03-20 20:00:12,999 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/action/getDateAndTime
2018-03-20 20:00:12,999 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 20:00:13,000 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_platform_host$']
2018-03-20 20:00:13,000 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'global_platform_host': '10.118.59.84', 'today1': '2018-03-20', 'yesterday1': '20180319', 'global_username': 'dataviewer', 'global_monthly_code1': '2017112815', 'before7day1': '2018-03-14', 'global_mobile': '18110000014'}
2018-03-20 20:00:13,000 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_platform_host$
2018-03-20 20:00:13,000 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.118.59.84
2018-03-20 20:00:13,001 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 20:00:13,001 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.118.59.84:8000/action/getDateAndTime
2018-03-20 20:00:13,001 httpprotocol.py[line: 105] INFO: 参数为：b''
2018-03-20 20:00:13,002 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 20:00:13,027 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 20:00:13,033 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"last_weekday1_yyyy_mm_dd": "2018-03-12", "curmonth_final_day_yyyymmdd": "20180331", "weekday7_yyyy_mm_dd": "20180325", "today_yyyymmdd": "20180320", "weekday1_yyyymmdd": "20180319", "recent_7day_range_yyyymmdd": "20180313-20180319", "yesterday_yyyy_mm_dd": "2018-03-19", "millisecond_for_curtime": 1521547213000, "last_weekday7_yyyymmdd": "20180318", "curtime": "2018-03-20 20:00:13", "current_week_num_yyyymm": "201812", "last_weekday1_yyyymmdd": "20180312", "last_month_first_day_yyyymmdd": "20180201", "weekday1_to_weekday7_yyyy_mm_dd": "20180319-20180325", "current_month_last_year_yyyymm": "2017-03", "pre_weekday7_yyyy_mm_dd": "2018-03-11", "last_weekday1_to_weekday7_yyyymmdd": "20180312-20180318", "next_month_first_day_yyyy_mm_dd": "2018-04-01", "curmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31", "last_weekday1_to_weekday7_yyyy_mm_dd": "2018-03-12-2018-03-18", "yesterday_yyyymmdd": "20180319", "millisecond_for_curdate": 1521475200000, "recent_30day_range_yyyy_mm_dd": "20180218-20180319", "current_month_last_year_yyyy_mm": "2017-03", "december_month_last_year_yyyy_mm": "2017-12", "curmonth_first_day_yyyy_mm_dd": "2018-03-01", "last_month_yyyy_mm": "2018-02", "today_yyyy_mm_dd": "2018-03-20", "next_month_first_day_yyyymmdd": "20180401", "curmonth_final_day_yyyy_mm_dd": "2018-03-31", "december_month_last_year_yyyymm": "201712", "pre_weekday7_yyyymmdd": "20180311", "last_week_num_yyyyno": "201811", "last_month_yyyymm": "201802", "current_week_num_yyyy_mm": "2018-12", "current_month_yyyy_mm": "2018-03", "recent_7day_range_yyyy_mm_dd": "2018-03-13-2018-03-19", "weekday1_to_weekday7_yyyymmdd": "20180319-20180325", "weekday7_yyyymmdd": "20180325", "last_month_final_day_yyyymmdd": "20180228", "curmonth_range_yyyymmdd": "20180301-20180331", "pre_weekday1_yyyy_mm_dd": "2018-03-05", "pre_weekday1_yyyymmdd": "20180305", "last_weekday7_yyyy_mm_dd": "2018-03-18", "last_month_first_day_yyyy_mm_dd": "2018-02-01", "current_month_yyyymm": "201803", "recent_30day_range_yyyymmdd": "2018-02-18-2018-03-19", "weekday1_yyyy_mm_dd": "20180319", "last_month_final_day_yyyy_mm_dd": "2018-02-28", "millisecond_for_yesterday": 1521388800000, "curmonth_first_day_yyyymmdd": "20180301", "lastmonth_range_yyyymmdd": "20180301-20180331", "lastmonth_range_yyyy_mm_dd": "2018-03-01-2018-03-31"}
2018-03-20 20:00:13,033 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Tue, 20 Mar 2018 12:00:13 GMT'), ('Server', 'Apache/2.4.23 (Win64) OpenSSL/1.0.2h mod_wsgi/4.4.6 Python/3.4.0'), ('X-Frame-Options', 'SAMEORIGIN'), ('Connection', 'close'), ('Transfer-Encoding', 'chunked'), ('Content-Type', 'text/html; charset=utf-8')]
2018-03-20 20:00:13,033 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 20:00:13,034 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 20:00:13,034 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,034 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyy_mm', 'value']
2018-03-20 20:00:13,034 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02
2018-03-20 20:00:13,035 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02
2018-03-20 20:00:13,035 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyy_mm-2018-02
2018-03-20 20:00:13,035 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,035 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,036 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20
2018-03-20 20:00:13,036 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20
2018-03-20 20:00:13,036 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyy_mm_dd-2018-03-20
2018-03-20 20:00:13,036 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,037 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyymmdd', 'value']
2018-03-20 20:00:13,037 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 20:00:13,037 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 20:00:13,037 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyymmdd-20180301-20180331
2018-03-20 20:00:13,037 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,038 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyymmdd', 'value']
2018-03-20 20:00:13,038 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180311
2018-03-20 20:00:13,038 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180311
2018-03-20 20:00:13,038 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyymmdd-20180311
2018-03-20 20:00:13,039 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,039 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyymmdd', 'value']
2018-03-20 20:00:13,039 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180401
2018-03-20 20:00:13,039 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180401
2018-03-20 20:00:13,040 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyymmdd-20180401
2018-03-20 20:00:13,040 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,040 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,040 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-28
2018-03-20 20:00:13,041 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-28
2018-03-20 20:00:13,041 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyy_mm_dd-2018-02-28
2018-03-20 20:00:13,041 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,041 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyymm', 'value']
2018-03-20 20:00:13,042 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201812
2018-03-20 20:00:13,042 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201812
2018-03-20 20:00:13,042 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyymm-201812
2018-03-20 20:00:13,043 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,043 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,043 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-05
2018-03-20 20:00:13,044 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-05
2018-03-20 20:00:13,045 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyy_mm_dd-2018-03-05
2018-03-20 20:00:13,045 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,045 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,046 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12
2018-03-20 20:00:13,046 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12
2018-03-20 20:00:13,046 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyy_mm_dd-2018-03-12
2018-03-20 20:00:13,046 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,047 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,047 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-13-2018-03-19
2018-03-20 20:00:13,047 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-13-2018-03-19
2018-03-20 20:00:13,048 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyy_mm_dd-2018-03-13-2018-03-19
2018-03-20 20:00:13,048 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,048 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,048 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 20:00:13,049 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 20:00:13,049 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyy_mm_dd-20180319
2018-03-20 20:00:13,049 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,049 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyymmdd', 'value']
2018-03-20 20:00:13,050 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301
2018-03-20 20:00:13,050 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301
2018-03-20 20:00:13,050 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyymmdd-20180301
2018-03-20 20:00:13,050 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,051 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,051 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 20:00:13,051 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 20:00:13,051 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyy_mm_dd-20180319-20180325
2018-03-20 20:00:13,052 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,052 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyymmdd', 'value']
2018-03-20 20:00:13,052 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180201
2018-03-20 20:00:13,052 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180201
2018-03-20 20:00:13,053 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyymmdd-20180201
2018-03-20 20:00:13,053 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,053 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 20:00:13,054 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312-20180318
2018-03-20 20:00:13,054 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312-20180318
2018-03-20 20:00:13,054 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyymmdd-20180312-20180318
2018-03-20 20:00:13,054 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,055 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyymm', 'value']
2018-03-20 20:00:13,055 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201712
2018-03-20 20:00:13,055 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201712
2018-03-20 20:00:13,055 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyymm-201712
2018-03-20 20:00:13,056 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,056 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['today_yyyymmdd', 'value']
2018-03-20 20:00:13,056 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180320
2018-03-20 20:00:13,056 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180320
2018-03-20 20:00:13,057 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:today_yyyymmdd-20180320
2018-03-20 20:00:13,057 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,057 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_range_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,057 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 20:00:13,058 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 20:00:13,058 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 20:00:13,058 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,058 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curdate', 'value']
2018-03-20 20:00:13,059 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521475200000
2018-03-20 20:00:13,059 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521475200000
2018-03-20 20:00:13,059 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curdate-1521475200000
2018-03-20 20:00:13,060 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,060 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday1_yyyymmdd', 'value']
2018-03-20 20:00:13,060 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180305
2018-03-20 20:00:13,063 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180305
2018-03-20 20:00:13,063 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday1_yyyymmdd-20180305
2018-03-20 20:00:13,064 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,065 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,065 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01-2018-03-31
2018-03-20 20:00:13,066 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01-2018-03-31
2018-03-20 20:00:13,066 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyy_mm_dd-2018-03-01-2018-03-31
2018-03-20 20:00:13,067 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,067 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['december_month_last_year_yyyy_mm', 'value']
2018-03-20 20:00:13,067 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-12
2018-03-20 20:00:13,068 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-12
2018-03-20 20:00:13,068 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:december_month_last_year_yyyy_mm-2017-12
2018-03-20 20:00:13,068 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,069 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_week_num_yyyyno', 'value']
2018-03-20 20:00:13,069 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201811
2018-03-20 20:00:13,069 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201811
2018-03-20 20:00:13,070 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_week_num_yyyyno-201811
2018-03-20 20:00:13,070 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,070 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_yyyymmdd', 'value']
2018-03-20 20:00:13,071 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180312
2018-03-20 20:00:13,071 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180312
2018-03-20 20:00:13,071 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_yyyymmdd-20180312
2018-03-20 20:00:13,071 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,071 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['next_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,072 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-04-01
2018-03-20 20:00:13,072 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-04-01
2018-03-20 20:00:13,072 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:next_month_first_day_yyyy_mm_dd-2018-04-01
2018-03-20 20:00:13,072 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,073 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,073 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-19
2018-03-20 20:00:13,073 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-19
2018-03-20 20:00:13,073 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyy_mm_dd-2018-03-19
2018-03-20 20:00:13,074 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,074 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyy_mm', 'value']
2018-03-20 20:00:13,074 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03
2018-03-20 20:00:13,075 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03
2018-03-20 20:00:13,075 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyy_mm-2018-03
2018-03-20 20:00:13,075 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,075 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_yesterday', 'value']
2018-03-20 20:00:13,076 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521388800000
2018-03-20 20:00:13,076 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521388800000
2018-03-20 20:00:13,076 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_yesterday-1521388800000
2018-03-20 20:00:13,076 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,076 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_to_weekday7_yyyymmdd', 'value']
2018-03-20 20:00:13,077 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319-20180325
2018-03-20 20:00:13,078 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319-20180325
2018-03-20 20:00:13,079 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_to_weekday7_yyyymmdd-20180319-20180325
2018-03-20 20:00:13,079 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,080 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,080 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-31
2018-03-20 20:00:13,081 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-31
2018-03-20 20:00:13,081 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyy_mm_dd-2018-03-31
2018-03-20 20:00:13,081 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,081 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyymmdd', 'value']
2018-03-20 20:00:13,082 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-18-2018-03-19
2018-03-20 20:00:13,082 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-18-2018-03-19
2018-03-20 20:00:13,082 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyymmdd-2018-02-18-2018-03-19
2018-03-20 20:00:13,082 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,083 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_30day_range_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,083 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180218-20180319
2018-03-20 20:00:13,083 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180218-20180319
2018-03-20 20:00:13,084 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_30day_range_yyyy_mm_dd-20180218-20180319
2018-03-20 20:00:13,084 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,085 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['millisecond_for_curtime', 'value']
2018-03-20 20:00:13,085 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：1521547213000
2018-03-20 20:00:13,085 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：1521547213000
2018-03-20 20:00:13,085 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:millisecond_for_curtime-1521547213000
2018-03-20 20:00:13,086 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,086 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['recent_7day_range_yyyymmdd', 'value']
2018-03-20 20:00:13,086 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180313-20180319
2018-03-20 20:00:13,086 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180313-20180319
2018-03-20 20:00:13,087 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:recent_7day_range_yyyymmdd-20180313-20180319
2018-03-20 20:00:13,087 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,087 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday1_yyyymmdd', 'value']
2018-03-20 20:00:13,087 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 20:00:13,088 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 20:00:13,088 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday1_yyyymmdd-20180319
2018-03-20 20:00:13,088 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,088 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_yyyymm', 'value']
2018-03-20 20:00:13,089 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201803
2018-03-20 20:00:13,089 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201803
2018-03-20 20:00:13,089 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_yyyymm-201803
2018-03-20 20:00:13,089 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,089 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,090 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 20:00:13,090 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 20:00:13,090 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyy_mm_dd-20180325
2018-03-20 20:00:13,090 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,091 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_week_num_yyyy_mm', 'value']
2018-03-20 20:00:13,091 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-12
2018-03-20 20:00:13,091 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-12
2018-03-20 20:00:13,092 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_week_num_yyyy_mm-2018-12
2018-03-20 20:00:13,092 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,092 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_first_day_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,093 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-01
2018-03-20 20:00:13,093 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-01
2018-03-20 20:00:13,093 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_first_day_yyyy_mm_dd-2018-03-01
2018-03-20 20:00:13,093 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,094 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_final_day_yyyymmdd', 'value']
2018-03-20 20:00:13,094 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180228
2018-03-20 20:00:13,094 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180228
2018-03-20 20:00:13,094 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_final_day_yyyymmdd-20180228
2018-03-20 20:00:13,095 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,095 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curmonth_final_day_yyyymmdd', 'value']
2018-03-20 20:00:13,096 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180331
2018-03-20 20:00:13,097 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180331
2018-03-20 20:00:13,097 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curmonth_final_day_yyyymmdd-20180331
2018-03-20 20:00:13,098 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,098 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['weekday7_yyyymmdd', 'value']
2018-03-20 20:00:13,098 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180325
2018-03-20 20:00:13,099 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180325
2018-03-20 20:00:13,099 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:weekday7_yyyymmdd-20180325
2018-03-20 20:00:13,100 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,100 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['curtime', 'value']
2018-03-20 20:00:13,100 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-20 20:00:13
2018-03-20 20:00:13,101 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-20 20:00:13
2018-03-20 20:00:13,101 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:curtime-2018-03-20 20:00:13
2018-03-20 20:00:13,101 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,102 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['lastmonth_range_yyyymmdd', 'value']
2018-03-20 20:00:13,102 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180301-20180331
2018-03-20 20:00:13,102 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180301-20180331
2018-03-20 20:00:13,103 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:lastmonth_range_yyyymmdd-20180301-20180331
2018-03-20 20:00:13,103 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,103 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['yesterday_yyyymmdd', 'value']
2018-03-20 20:00:13,103 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180319
2018-03-20 20:00:13,104 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180319
2018-03-20 20:00:13,104 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:yesterday_yyyymmdd-20180319
2018-03-20 20:00:13,104 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,104 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,105 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-18
2018-03-20 20:00:13,105 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-18
2018-03-20 20:00:13,105 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyy_mm_dd-2018-03-18
2018-03-20 20:00:13,106 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,106 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['pre_weekday7_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,106 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-11
2018-03-20 20:00:13,107 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-11
2018-03-20 20:00:13,107 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:pre_weekday7_yyyy_mm_dd-2018-03-11
2018-03-20 20:00:13,107 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,108 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyy_mm', 'value']
2018-03-20 20:00:13,108 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 20:00:13,108 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 20:00:13,108 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyy_mm-2017-03
2018-03-20 20:00:13,109 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,109 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday1_to_weekday7_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,109 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-03-12-2018-03-18
2018-03-20 20:00:13,109 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-03-12-2018-03-18
2018-03-20 20:00:13,110 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday1_to_weekday7_yyyy_mm_dd-2018-03-12-2018-03-18
2018-03-20 20:00:13,110 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,110 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_yyyymm', 'value']
2018-03-20 20:00:13,111 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：201802
2018-03-20 20:00:13,111 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：201802
2018-03-20 20:00:13,111 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_yyyymm-201802
2018-03-20 20:00:13,111 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,112 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['current_month_last_year_yyyymm', 'value']
2018-03-20 20:00:13,113 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2017-03
2018-03-20 20:00:13,113 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2017-03
2018-03-20 20:00:13,113 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:current_month_last_year_yyyymm-2017-03
2018-03-20 20:00:13,114 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,115 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_month_first_day_yyyy_mm_dd', 'value']
2018-03-20 20:00:13,115 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：2018-02-01
2018-03-20 20:00:13,116 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：2018-02-01
2018-03-20 20:00:13,116 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_month_first_day_yyyy_mm_dd-2018-02-01
2018-03-20 20:00:13,116 unittesttestcase.py[line: 374] INFO: 使用键值提取
2018-03-20 20:00:13,116 unittesttestcase.py[line: 290] INFO: 要提取的字典key,value层级为：['last_weekday7_yyyymmdd', 'value']
2018-03-20 20:00:13,117 unittesttestcase.py[line: 304] INFO: 找到的对应字典层级key的值为：20180318
2018-03-20 20:00:13,117 unittesttestcase.py[line: 376] INFO: 获取到的变量的值为：20180318
2018-03-20 20:00:13,117 unittesttestcase.py[line: 379] INFO: 使用“键值提取”提取的自定义变量-值(key-value对)为:last_weekday7_yyyymmdd-20180318
2018-03-20 20:00:13,118 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 20:00:13,118 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 20:00:13,118 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,119 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,119 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "curtime",
    "消息": "fail#接口请求失败"
  }
]
2018-03-20 20:00:13,120 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：curtime”
2018-03-20 20:00:13,121 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 20:00:13,122 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time, run_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 327, 771, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.118.59.84', '8000', '{}', 'POST', '/action/getDateAndTime', '', 'body', '包含字符串', '[{\n    "模式": "curtime",\n    "消息": "fail#接口请求失败"\n}]', '{\n    "dic": {\n        "last_month_yyyy_mm": {\n            "last_month_yyyy_mm": "value"\n        },\n        "today_yyyy_mm_dd": {\n            "today_yyyy_mm_dd": "value"\n        },\n        "curmonth_range_yyyymmdd": {\n            "curmonth_range_yyyymmdd": "value"\n        },\n        "pre_weekday7_yyyymmdd": {\n            "pre_weekday7_yyyymmdd": "value"\n        },\n        "next_month_first_day_yyyymmdd": {\n            "next_month_first_day_yyyymmdd": "value"\n        },\n        "last_month_final_day_yyyy_mm_dd": {\n            "last_month_final_day_yyyy_mm_dd": "value"\n        },\n        "current_week_num_yyyymm": {\n            "current_week_num_yyyymm": "value"\n        },\n        "pre_weekday1_yyyy_mm_dd": {\n            "pre_weekday1_yyyy_mm_dd": "value"\n        },\n        "last_weekday1_yyyy_mm_dd": {\n            "last_weekday1_yyyy_mm_dd": "value"\n        },\n        "recent_7day_range_yyyy_mm_dd": {\n            "recent_7day_range_yyyy_mm_dd": "value"\n        },\n        "weekday1_yyyy_mm_dd": {\n            "weekday1_yyyy_mm_dd": "value"\n        },\n        "curmonth_first_day_yyyymmdd": {\n            "curmonth_first_day_yyyymmdd": "value"\n        },\n        "weekday1_to_weekday7_yyyy_mm_dd": {\n            "weekday1_to_weekday7_yyyy_mm_dd": "value"\n        },\n        "last_month_first_day_yyyymmdd": {\n            "last_month_first_day_yyyymmdd": "value"\n        },\n        "last_weekday1_to_weekday7_yyyymmdd": {\n            "last_weekday1_to_weekday7_yyyymmdd": "value"\n        },\n        "december_month_last_year_yyyymm": {\n            "december_month_last_year_yyyymm": "value"\n        },\n        "today_yyyymmdd": {\n            "today_yyyymmdd": "value"\n        },\n        "curmonth_range_yyyy_mm_dd": {\n            "curmonth_range_yyyy_mm_dd": "value"\n        },\n        "millisecond_for_curdate": {\n            "millisecond_for_curdate": "value"\n        },\n        "pre_weekday1_yyyymmdd": {\n            "pre_weekday1_yyyymmdd": "value"\n        },\n        "lastmonth_range_yyyy_mm_dd": {\n            "lastmonth_range_yyyy_mm_dd": "value"\n        },\n        "december_month_last_year_yyyy_mm": {\n            "december_month_last_year_yyyy_mm": "value"\n        },\n        "last_week_num_yyyyno": {\n            "last_week_num_yyyyno": "value"\n        },\n        "last_weekday1_yyyymmdd": {\n            "last_weekday1_yyyymmdd": "value"\n        },\n        "next_month_first_day_yyyy_mm_dd": {\n            "next_month_first_day_yyyy_mm_dd": "value"\n        },\n        "yesterday_yyyy_mm_dd": {\n            "yesterday_yyyy_mm_dd": "value"\n        },\n        "current_month_yyyy_mm": {\n            "current_month_yyyy_mm": "value"\n        },\n        "millisecond_for_yesterday": {\n            "millisecond_for_yesterday": "value"\n        },\n        "weekday1_to_weekday7_yyyymmdd": {\n            "weekday1_to_weekday7_yyyymmdd": "value"\n        },\n        "curmonth_final_day_yyyy_mm_dd": {\n            "curmonth_final_day_yyyy_mm_dd": "value"\n        },\n        "recent_30day_range_yyyymmdd": {\n            "recent_30day_range_yyyymmdd": "value"\n        },\n        "recent_30day_range_yyyy_mm_dd": {\n            "recent_30day_range_yyyy_mm_dd": "value"\n        },\n        "millisecond_for_curtime": {\n            "millisecond_for_curtime": "value"\n        },\n        "recent_7day_range_yyyymmdd": {\n            "recent_7day_range_yyyymmdd": "value"\n        },\n        "weekday1_yyyymmdd": {\n            "weekday1_yyyymmdd": "value"\n        },\n        "current_month_yyyymm": {\n            "current_month_yyyymm": "value"\n        },\n        "weekday7_yyyy_mm_dd": {\n            "weekday7_yyyy_mm_dd": "value"\n        },\n        "current_week_num_yyyy_mm": {\n            "current_week_num_yyyy_mm": "value"\n        },\n        "curmonth_first_day_yyyy_mm_dd": {\n            "curmonth_first_day_yyyy_mm_dd": "value"\n        },\n        "last_month_final_day_yyyymmdd": {\n            "last_month_final_day_yyyymmdd": "value"\n        },\n        "curmonth_final_day_yyyymmdd": {\n            "curmonth_final_day_yyyymmdd": "value"\n        },\n        "weekday7_yyyymmdd": {\n            "weekday7_yyyymmdd": "value"\n        },\n        "curtime": {\n            "curtime": "value"\n        },\n        "lastmonth_range_yyyymmdd": {\n            "lastmonth_range_yyyymmdd": "value"\n        },\n        "yesterday_yyyymmdd": {\n            "yesterday_yyyymmdd": "value"\n        },\n        "last_weekday7_yyyy_mm_dd": {\n            "last_weekday7_yyyy_mm_dd": "value"\n        },\n        "pre_weekday7_yyyy_mm_dd": {\n            "pre_weekday7_yyyy_mm_dd": "value"\n        },\n        "current_month_last_year_yyyy_mm": {\n            "current_month_last_year_yyyy_mm": "value"\n        },\n        "last_weekday1_to_weekday7_yyyy_mm_dd": {\n            "last_weekday1_to_weekday7_yyyy_mm_dd": "value"\n        },\n        "last_month_yyyymm": {\n            "last_month_yyyymm": "value"\n        },\n        "current_month_last_year_yyyymm": {\n            "current_month_last_year_yyyymm": "value"\n        },\n        "last_month_first_day_yyyy_mm_dd": {\n            "last_month_first_day_yyyy_mm_dd": "value"\n        },\n        "last_weekday7_yyyymmdd": {\n            "last_weekday7_yyyymmdd": "value"\n        }\n    }\n}', '成功', '', '2018-03-20 20:00:12', 0)
2018-03-20 20:00:13,337 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 20:00:13,337 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 20:00:13,338 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 327, '数据灯塔接口测试', 'ID327-获取时间和日期', '成功', '', '2018-03-20 20:00:12', '0天 0小时 0分 0秒')
2018-03-20 20:00:13,402 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID29-灯塔用户登录, ID:29]======================
2018-03-20 20:00:13,403 test_case.py[line: 32] INFO: 正在查询测试用例[ID：29, 名称：ID29-灯塔用户登录]关联的测试步骤
2018-03-20 20:00:13,403 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(29,)
2018-03-20 20:00:13,411 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 20:00:13,412 test_case.py[line: 67] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 86]======================
2018-03-20 20:00:13,413 test_case.py[line: 68] INFO: 步骤类型：执行用例
2018-03-20 20:00:13,413 test_case.py[line: 69] INFO: 步骤操作对象：数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码, ID：28
2018-03-20 20:00:13,413 test_case.py[line: 32] INFO: 正在查询测试用例[ID：28, 名称：ID28-请求图片验证码]关联的测试步骤
2018-03-20 20:00:13,413 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(28,)
2018-03-20 20:00:13,420 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 20:00:13,421 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 84]======================
2018-03-20 20:00:13,421 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 20:00:13,421 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 20:00:13,421 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 20:00:13,422 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 20:00:13,422 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,422 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,422 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/res/rpatchca.png?0.6089781314990876
2018-03-20 20:00:13,422 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 20:00:13,423 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,423 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,423 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 20:00:13,423 APIUnittestTestCase.py[line: 60] INFO: 正在发起GET请求...
2018-03-20 20:00:13,424 httpprotocol.py[line: 80] INFO: 发起的请求为：GET http://10.202.95.87:8080/res/rpatchca.png?0.6089781314990876
2018-03-20 20:00:13,424 httpprotocol.py[line: 81] INFO: 请求头为：{}
2018-03-20 20:00:13,503 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：None, 正在对服务器返回body进行解码
2018-03-20 20:00:13,504 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00$\x08\x06\x00\x00\x00{OO\x05\x00\x00\x0f\x90IDATx\xda\xe5[\x07wT\xd5\x16\xe6o\x88\x82\xa0\xa0b\xa3\xd8\x0b%(Ez0 ( \x02\x8a\xf4\xa2\x14\x91&\x82\x80\x0f)\x02\x0f,t\x10\x04!\xbd\xf7\x90\x0e\xe9!\xa4\xf72\xe9e\x92L\xcaL\xf6\xdb\xdf\xce\xdc!e&\x99\x92\xbc\xe7z\x9e\xb5\xee\xcaJ2\xf7\xdcs\xcf\xde\xfb\xdb\xdf\xfe\xce\x9e\x01d\xc1\x08\x8f+\xa7\xfdg\x92h\xc7\xd1\x04\x93\xd7\xb6#\xf1\xf4\xf5\xe1X\xfa\xeaP,}\xcd\xd7\x96\x1fci\xf5\xdehZ\xb0)\x94\xa6,\x0f\xa0\xd7\x1d\xbc\xe9\x99)\xae\xf4\xd8\xbb\x8er\x9d\xbe\x9aN\xf5\x8d\xad\xdd\x9e\xe5\x11TD/\xccp\x93\xcf\xbc\xc8?O_M#\xdf\xf0b\x8a\x8a\xaf\xa0\xa4\xf4j\xca\xccSSqi\x03UV7QUm3U\xd5\xf0\xcf\x9af\xd24\xb5\x92N\xd7\xd6i\xae\x84\xb4*\x1a=\xc7C\xe6\xc2\x1aJ+4\xd4\xa8i\xa5\xf2\xaa&*T5PnQ=\xe5\x16\xaa):\xb1\x82|B\x8b\xe9\x96W\x1e]\xb8\x9dE\xbea\xc5TS\xd7\xdcm\xbe}\xa7\x93h\xd8$\x17\xc3;Xz\xbd\xf6\xa1\x17\x9d\xbb\x95\xc9\xcf\xd7t\x9b[\x19\x03,1\x0c^\xde5\xa0\x90\r\x10O\x1b\x0e\xc4\xf0\xa6\xc7\xd1F\xfe\xb9|G$-\xfa:\x9c\x16n\x0e\xa3\x8f6\x86\xd2\x8c/\x83h\xfc"?\x1a9\xdb\x83\x06Mp2\xb9\xc0\xa1\xef9\xd3\xba\xef\xefQZvm\xb7gE\xc4\x95\x91\xc3\xfa\x10\xf9\xdc\xabs=\xe9\x86{\x0e\xb5\xb5\xb5\xc9\x85\x97Q.\xfc\xde\xdb\x88`\x87Z\xc8\x8e\x81\xb9\xde\xfb\xd4\x9f\x9c\x03\n\x8c~\xae\xa9YK\r\xec$\xea\x86\x16q\x96\n6zCcK\xb7\xcfa\x0f\xde_\xeao\xb5aF|\xe0F\x9b\x0f\xc6P|J\x155\xb7\xe8l7\x0c6\x01^v\x80\xa3\xe6\x8dy^\xf2\x80\x17\xa6\xb9\xd3\xcb3\xdd\xe9\xf9in4t\xa2\xb3\xc9\xc5\x0c\x1c\xeb(F\x82\xa7\x8d\x9c\xe5N\x13\x16\xf9\xd2g\xdfD\xd0O\xe7S(\xbb@\xdd\xedY\xc5e\x8d\xb4\x8c\xff\x8f{\x9f\x99\xecB\xfb\xff\x9dD\xd6\x8e\xfc\xe2z\xfap]\x08\r\xe4\xb9^a#_t\xcc4\xeb>S\x86\xc7|\xb3\xd8\xf9\xb0\xb6\xc7\xc7\xb5o\xf43\x93]\xcd6\xcc`\xde\x87\x19+\x83\xc83\xb8\x88\x1a4\xad\xb6\x1bF\x19\x81Q*\xd9\xd8\xc1\xe3\x9d\x8c\x1a\xe0\x89q\xed\x0bV\xfe6j\xb6\'\xd9\xaf\rax\x8b\xa1\x93WR\xc9\xd5\xbf\x90\xe2\xd8[2r\xeb\x04\x8e\x1a\x19~\x8cm\xc0\x17\xbb\xa3\xe8I;g\x1al\xe7H\xbbN\xc43d5Ym\x9ci+\x02y]N\x0c\x8b\xeet\xd55\x9b\xea\x1bZ\xc8\x96\xb1dk\xb8\xac\r\xef\xf7\xeeB\x1f:q\xf1!\xed\xfa9\x91>\xf9*\x8c\xc6~\xecK\xcfN\xed\xd9P\xaf2\x9c\xfdv3\x83\xca*\x8d\xc3\x99U\x86\xa9U\xb7\xd0)\xc6\xfc7\xe7\xfb\x88\x17*\x06\x192\xd1I\xb0\x1c\xde\xb9\x89C\xf5\xe7\xcbi\x12\xf6a\xb1\xe5\x92\x17\x80\xe5\x80\x07M\x93\xd6\xac\xe7\xec>\x91 \xde5l\x923}{,\x8e#\xab\xce\xaaMD\xde\x01t`\x8d#g\xbb\xd3\xf9\xdb\x99T\xcdy\xc9\x96\x81\x08\x1e>\xb9=\xcf\xbc\xb3\xc0\x9b\xee\xf8\xe4\x89\xa3\x05F\xaa\xe8\xfc_\x99\xf4\xcdO\xf14kU\x10\x8d\x9a\xe3)\xef\xd0\xd50p\x10\xbc\xdf\xc3\xac\x1aji\xd5\xf5\x8da0\x92\xd2\xaai\xcdw\xd14h\xbc\xa3!\xa4\xc7\xcc\xf5\xe0\x05\xc5Qxl\x19\xe5\x14\xd6S%\'\xe3\xd6V\x9d\xd5/\x7f\xdd-W\xa2\x0f\xf0\x07BQ\xa0\xaa\xb7j\x1e\xc0\xe2\xc1_\x92\xc50/\xf1\x86\x1c\xbf\xf4\x90\xb4Z\x9dM\x86\xb9\xe5\x99G\xc3\xf4\x86\x19\xc5\xb9\xf4\xf4\xb54yW\xe4\xa62&\x17\x99yu\x14\x9dPA\xd7\xddsi\xe7\xb1\x04\xb2_\x13"Q\xa2\xc0\xfd F\x9by\xeb\xef2\xc1(\xa1\xba\xfa\x96\xbe3\x0c&s\xf4\xc9\xa7\x979_(\x113\x82\xf3\xcc\xda}\xf7(\xd5H2\xb7t4s"\xf6df\x06\xc3\x80$\xac\xfd>\x9a\x13\xa5\xd6@\x00,\x19\x85\x0c\x97\xdb\xd9a\xb0N\x18\x19\xd1\x83\x04\x8f\x8d\xb4t.e\xc4<\xa84l\xf2p\xce/\xdb\x8f\xc4Qk\x17cc\xee\x1au3\xa5\xe5\xd4\x91_x\t\x9d\xbd\x9eA\x1b\xf6\xdf\x17\xe2\xf0,3\xd3\xd1\xf6\x9et\xe6z\x9a\xe4\xac>3\x0cp\xb1\x9c\xf1\xf1\xd3m\xe1\xf4\xf8XG\x83\x17\xd8\xaf\t\x96E\xd8:\x00w7\xd8\xdb\x844\xf0\xbc\x1f1\xab\xca\xc8\xab%?\xa6\xb0\x17\x18\x8a.;gSd|9\xc3j\xb3P\xdf\xde\xd8\xe4\xfc\x8dw\xdb#\x9b\xe7\x03q\x01\x93\xfc\xeed"\xdd\xf1\xce\x17\x88\xb5\xd4@\xa0\xdc\nD\xe1\xe7\xb2\x1d\x11F\x139\xe6\x05\xf3\xaaeG.b\x07IfH\x0f\x8cP\xd1\xd9\x1b\xe9\xb4\xe9\x87\x18I\t\x80\xf9>3\x0c\x06<\xee\xe4\x954\xf1j\x05;\xc7/\xf2\xa1KNY6\x1bF\xabmc\xf8y\xd0\r\x9b\xb1\xb1\x80\x90\x97\xb8\xb6\x01N\xafb8u\xf4\xcd\'Uy\xa3\xe9\xe8\xe3\x8dyQ_\x13)\x17\x127\x12\xf4+\xec\xb5p.\xf7\xa0\x02\xa1\xcafG4\xcf\xa9\x18\x06\xce\xe3\xb0!Dj*s\x98mSs+\x15\x94\xd4SdB9\x053\x91\xca\xc8\xad%\xadN\xd7w\x86\xc1CB\xee\x95\xd2\xd3\xef;w*\x9e\x8e\x9c\x7fh\xb3a0\xf7\xc2\xcd\xa1\xbdR\xcf\xa1\xef\xb9\xd0\x94e\x01t\x8e\x13\xae1\xa6\xa5l\x04\xa8\xf7\xe2-\xe14\xe93\x7fz\xbaKq\x88\x8d\xc5\x05\x0fF\x02\xd7\xea\xda\xccZ\xdf\xd0\x89\x8f\x92:\x12\xbd1H2u/r\x1c\x1c\x01L\x13i\xa1\xa5E\xdbw\x86\x01\x9c\x15\xab\x1a\x85.*\x0bD\x8d\xb2\x87i\xa39\x8b\xeb\xd9#\xb5\xf4\x1c{\xf406\xfat\xe6\xfc_2u\xdeq4\x8eV\xee\x8e\xa4\xb7\xe6{I\xed\xd4\xb1.x\x7f\xa9\x1f%\xa4Vu\x9b\x17\xbfk\x18b\xee%U\xc8\xff\xe3R*\x98\xae\x17\x08\x01\x98\xc7^\xdeQ\x85\x186\xc9\x95\xd6q\x8e\xcc\xca\xaf3c}:Y\x9f\x18\x96\xaf\x99\\\xd7$\x1b\x81$s\xf6A)\x96\xfb4b*\x19\xbfQU\x0f\xd4{\x1e\xc8\xc0\xce\xe3\t\x12\x9aZ}\x81\x06Y#\x97YZn\x91Z*i@ \xae\x9e<\xb3Q\xa3\xe5|RBy|_E\x8dF\xa0\n\xf9\x04\xd4\x12\x8c\xe7\xd4\xd5T\x89\x14eS\x9f\x99\xe2Bg\xfeH\x97\xea\xdd\xd8\x8b\xb7\xf0F\xc2K\x91\xa01G5{*\x8c\xb5\xeft\x02\x8da8{d\x1c\x17\xdaw*\x89\xea\xd4=\xd79\xa8?\x14\x99\x07\xf5\xd1\xec\xd5\xc1\x14\xc19\xaf\xaf\xc6\x00[\'\x00-^\xb57Z\xb0\x1f\xd7(6\x0cj\x0e\xf0s\xc0\xdcUN\xd2\x878W\x80\xb3o?\x12\xcb\xff\x8b\xa7+N\xd9t/\xb1\x82T\x15\x8d&\xb5"\xd9L=k\xeaz\xe1\xef\x80\x1c\xcc\xa9\xc0\xd2s\\}\xef;\x95(N`\t\x9c\xa8\xca\x1b\xe8\xd4\xb5T\xbe\xffQ\xe4\x80\x1c\xa0\x08\xd6\xf5\xe08\x0f2j\xe8\xad\x8f\xbc\r\xa4g\xfa\xe7\x81\xe4\x11T(\x91n\xaeT\xd4\xaf\x86y\x90QM\xab\xf7D\x1bp\xfa\xc5\xe9n"X\x82\xf5\x8c[\xe4\xc7\xf9\xc7E\xbcp8_O1,!a\x8f\xfd\xd8\x87\xd6\xb01\xf1"\x88\x02K_\x02\x9fW7\xb6\x17\xb9J\x02~a\xba;\x1d\xbb\xf0P\x8aIKa\xa4@\xd5N\xa7\x95\xb9\x860\r\xdex\xe0\xbe\x18\xcd\xd4\xda\xfc#Jh\xec\'\xbe\x86\x1c5j\x96\x07}{4\x9eb\x99F\xa3\x00\xd7\xe9t6\x19\xc7f\xc3`!\x10.\x07\x8e5\x9d\xa0Q|>\xae7\x9c\xe2ax\xf9]\xc7\xe3\x99\xe3\xd7XU\x84\xc2\x00\x87~K\xa6\x11zO\x87V\x85\xba\xca\x9a\xcd\xc0\xf3A\xcdA\\\x945O]\x11\xc8Q].Qel\xce\x9b\x1ey\x86\x88y\x04\xa7\xae\xb4\x80\xf7\xe2\xe2\x9d,\xcabjoK\x11k\xb3ab\x92+i\xcc\x1c\xcfN4\x14\x98\x8d\x17\x9b\xbb6\x84&,\xf6\xa37\xe7{3\x8d\xf6\x15\xa1S\xa9y\x90\x93\x16o\t\xa3\x87\x99\xd6\x19&5\xbb\x86\x1c\xd6\x85\x18\xd4\xeb\t\x8b}\xa5N\xb0\xd6K\xb3\xf3\xd5\x86b\x19\x17\x98fXl)\x17\xba\xc6u\xbc{I\xe5RLCE\xefx\x04\x00\'D\x85\xff\xc5\xceH\xba\xc3\x8e\x82c\x85\xaeT\xb8\xdf\r\x83\xc2\xce3\xa4\x88\xeb\x01\x17z\xdd\xc1\x8b\xe6\xae\t\xa1-\x87c\xe9\xe7\xcb\xa9\xe4\xc2\xcc\'\x9ayz\x1e\'|\x9ck\xfc\xc8\xde=ce\xa0A[\xc3\x8b\xaf\xde\x1b%I\xd4\x1a\xad\x0e\xe7\x19J\xb4\xc0\xe0G\xcf\xa7X\xed\xa1\xd8\xf8\xb4\x9cZz\xcd\xc1\xab\x93\x96\x05I\xc8\x98\xec\x8f\x1a\x0bEkxL\x19]\xe3\x1c\x8a\x1c\x8b\x1c\xd7\xa9Nb\x87A\xae\xdaw:Q\xcey\xa0\xcdY\x92{l2L]}33\xa14\xd1\xc7\x9c\xfd\n\x84-UTk\x84\xf1\xc0h`@`^u\x9cG\xee\xde/\xa3\x15\xdfF\x1a"\x06\x02\xe0\xd9\xeb\xe9\xf2\x92\x96\x8e .\xcaf\xad\n6l\xc2\xe7\xec\x9d\xa0\xaa\xb6`\xbaK@\xa1!g<\xa6?\x1e8w+C\xde\xc5$\x9c2s\xc4\x86C\x82\xba\xc4\x84\x06\x85*\xee\x1b4\xfe\x91"`\xb7\xc4\x8f\xcb\x87\x04~\xffR\xc9\xa7:3\xa3\xc7&\xc3\x80\x81\xa42\xfb\xc2\xc9!\n\xa4\x9e\xe8/\xe8\xee\xd4\xe5\x01\x9dT\x02k\xa0\x07\x86\x9c\xb3:H(\xaa\xd4M\xb3=\xd8#\xcb\r\x0c\xce\xda\x81s\xa1\x11\x1d\xbc\x1e\xc5\xe3M\xcf\xbcn\xf4\xbb;\xb3k\x93\xcf\x94U5\n!\xf8\xe1l\x12MY\xee/\xfa\x99\x02\xedo\xcc\xf3\x96\x03\xc1\xbb\xf7UF\x05\xcb>5\x8c\xc2h\xcc\x82<N\xd4\xce\x0cmJ\xb2\x84\xa4\x82"\xd4R\xe8)e\xd8;\xf4\xeb#\x99\x06\xd0\x833\r[\x14l\x0cP\xef\xf5\xfb\xef\tkT\xe6\x06st\x0f.4\xdb\xd8\xf8\\-Su\xe4\\\x1c\x83\xcf\xdbp\xb7S\xf1\n\x84@N\x85|\x04\xe9\xa6\xb7w\xb79\xf9\x9b3\xd2\x19\xbfqZ9D/a@\x1a\x01\xecY\xe2\xe1\x85\xa5\x8d\xb4bg\x94H0\n\x86\xdf\xf6\xca\xb3\xf9\xc0\x0bk\x00#C4w<7\x99\xbf\xfe\xae\xa0\x81%k\x84\xa3""p\x1fz\x06\xa0"+\xc7"\xb8^\x9a\xe9N+wGq}\xa7\xa2z\xce]=\xcd\xdd\xef\x86A\xa2>\xc3\xb9D9\xbbx{\x81\xb7\x9c\xd7\x98]\xaf\xe0x\xc1/\x9f&2Vw\xc4\x7f\x1cLu\xf5:\xa8\x05\x90SJ\xf5\x85ko\x9b\x8a\xffCLD\xc3HG\x89\x07T\x1e\x8c\x0bj\x815\xf0\x88{\x1a5-\x14\xc6ye\x03\xd7C`\xa9Ot8\xb7\x82|\xe4\xc9\xd1\x08\xd5\xe4\x7ff\x18\xd7\xc0B6\x86\x8f!\x1f\x00\xd2\x9a\xf5\x82\x1d^\x00B\x1e\xaau\xfc\r\x90\x84s\x12U\x85F:[\xa0\x10\xe0\xa8\x16r\x8b\xb2iK8\xda\xd0\xc4`\xac\xbe\xf0\x8fP\xd1\x01\xc6\xf8?\xdc\xb2\xa5\xc1CmB\xd4T\xee+,i\x10i\x07\xb0\xd51\xf7=i\xe7D\x97\xb8\x16A4Z\x9b\xb7p\x1f\xee\xf7\xbe[\xc4\x91\x1e\xd9\xe9\x1d\x9e\x9f\xeeJ\x1b\x18:\xc3\x98\xd5\x81@\xf5\xd9\xd1\xb2\xb9\x0b\xc3Q\xf0H}m\x80C\xb4K\x8eY\x86E\x80\x9d\x80\xf1\xc0\xf3\xc1~`\x84s\x7fe\xc8q4N+?\xe0:h\xf8dgCQ:\xc6\xde\x9d\x8b\xba\x1cN\xf2Z\xa3\x9b\x05\xda\x8d\xfb ,\x8ecv\xb5\xf9\xe0}.\xf42\xe9~R\x85D\x05\xe8-r\x1d\x8c\x8fs\x13\xd0c(\x07\xd3\xbf\x08\xecV\x0c#\xaa!\xc7\x9b\x9bC{\x1ap:\x94\x14\xa8\xe9\x14B M!\x1cE\x87\x7f{ \xf5X\xabV\xf7\xdf3\x0c\x8c\x82\x02P\xa9Y.;eu:\xef\x00K\xfb\xfet\x92\xd4?\xa3\xb9@\x051\xc05r\x96\x07\'a\x17\x83R0uy \xfd\xe5\x9d\'\x1bk\xaa\n\xc7\xf8\x93\xf3\xc4;\xfa\xc8\x04\xa3\x02|\xcc^\x15D\xdf\x1c\x89\x13q\xf3\x9aK6oP!\xf9\x86\x16\x0ba\xd8\xf8\xc3}1\xe0\x90.\x9d=\x10&\xb7\xf1=8#\xb1U\xef\xea\x08\x97\x80s\xd0q\xa5I\x05\xcfu\xe0<\xe6\xc6\x88"\xbdk]Nf\x07\xf4W\xa4\xcc]\x1blP}\x7f\xb9\x91\xde\xc9\xfb\xd4\r\xadt\x9e\x93#\x8eW\x07Op\x16C\x80\xaa\xa2\x9b\xe6\x9d\x85\xbe\xc2h\x0e\xfd\x9aL\xb1\xc9\\\x98\xd55\xf5\xaa;!\x0f]r\xcc\xa6\x99l\x08\xe4\x1f\x08\x9bJ-\x01e`\xb4\xbd\x87\x9c\xc3LY\xe6/T\x16\xc7\x14\xd0\xf0\x06v=\xdb\xd1o\xd6\r\xb7\x9c>1\x8a!\xdfp\xa4B\xb4]\xba=\\\x1aK\x14}\rN\x00!\xb6\xbdSF\xd7\xbf\x11\x93\x92YCSV\xb4\xcb\xf1\x90b\x80\xb1]\xe9\xacoh\x89\xb0 l\x90\xfd\xea`iS\xda{2\x91~eO\xc6\xe7\xc1jP\x8c)\x11\xd2\xdb&\x81`\xa0\xba\xfe\x9d\xef\xdf\xc4\x91\x80\xb3\x91W\xe6z\x19\xa2\x01\xd17\x98\xf3\x06\x8c4\xd0D\xcf\x1b\x8c\xf96G\xec\x89\xcb\xa9\xa2\x8c7\x99\xd9\xc9c\xee(R5\x88\xc8:\xba\x83|\x05\x16\xf8\xd5\xc1\x18JL\xad\xeaV/\r\xe83\xaf`\xdc\xfe\xd3=\x87\x1f\xd6.R\xa2\x85).\xa5\xb2\xdb\xa6B|L\xe4\xc4\x0eV\xe2\x1aP@\xc1\xd1*\x91\xd0\xa1)!\xa4\xb1@K\xa4\x0b|\x0e\x18\r\xe3\xe0\xec>\x8c\x19\x1f\xf2\x15 \xecc&\x0evK\xfc%\x8a \x99tm#jo\xb9r\xa6\xe7?h\xcfKhd\xc4\x9a\xd56Rp\xa3\xec\x92\xe7\xbc\xe9\x99k\x90\x91\xda\xe1\xcc\x89\x96\xef\x88\xa0\xd0\x98\xd2\xbe\xcf1h\xd7\x01\xfd]\xb5\'Z\xbaY\x00\x07[\x99~f\xe5\xab\x8d&OPPM\x1f{\xa3\xb1Z"\x93is\x00W\xe2\xc0v\x90\x82\xa5\xdb"\xa4\xfb\x11U8\xbaS\xde\xe6h\x05[\x9c\xc6\xc9\xff\xcb\xdd\xd1\xf4\xcb\xf5\x0cQ\x10\x90\xcb\xfa"\xe9\x1b\xd3\x15AF@\xfb\x95\xda\x06{\x85\xa2\xd3\x98\x03\x0f\xb0\xc6\xfa\xd8\xdc\x8a*\x8dx\xfe\xbf\xce\xa5H\x02\x87\xf7!\xf9\xdeb\xaf\xb0\xe4L\xa4\xbf\x07"0\x83\x8bY\xf4o\xa1\x17\x0c\xcd~?\xfe\x9eBG/\xa4\x88<\x8f\xf5\x82\xb6\xc2\x91\x9a[z\x96_l\x19 >\xc7.>\xa47\xe7yu\x82\xb2\xa5\xdb\xc2\x8d\xeag\x03\xcc\xf5@\x88\x93\xd8pt\xc5\x03\x82\xd0\xfac\xb7\xd8\x8f\x86\xd8\xb53 DIrzU\xbfx\x9b\xad0\x02\x1d\rP\x87v+i|`\xca\x8d\xa6<\xb4\xe7\xa2\x18\xadoh5+\x12my7\x1c(\xa2g\x01\xcd\x81\x8aapj\n\xe70&\xe4\xf6j\x18t1^v\xce\xa2\xad\x87ch\xf1\xd6p\x9a\xb7>D\xa4\x06`6B\x12\x89\x16\x9d\xf8e\xa8\xb6\xdb\xfe^F1e(%/\xb5j-\xab\xecS2\xab)\xa7@-\xf9\xc2\x92\xfb\xf0\xd9\x80\xc8\x12\xce\xbb\xc1\x9dz\xbaa\x18\xe4Ucs\xf5h\x98\x12\xae5\x10\xf2\xaf;x\x8a\x087\xd8\xce\x99#\xa4\xfd \x0c\rt\x80\x05T\xcf\x7f\xb7(\xe9\x8f\x81o9\x00)\xd0\x97\x1c\x1a[*9\xc3\x1c\xc9G:\x8982\x8f3\x8c\x8d\xb1\xf7\xe8t^\x83\x8eP\xab\xbe\x1f\x83\xaf\t\xe0d\xf0)N\xea\x10\xe0 ]\xac\xdc\x15%\xe1\xf7\x80iqO\x92\xf8\xff\x9fa4R\x8f\xa1\xd7\r=\xdb8\xc6\xcef\x82\xa1t\xeet4\xd2\xa3\xef\xf1\xe8\xe4>\xe4\xb1\x8eZ\x1f\xae\xc9\xcb\x02\xa4\xb7\xd9b\xad\x0c\x96\xdc\xc3\xc5\x0f\xd8\x0b\x18\x17\xaa\xe7\x14\xe6\xf7\xff\xd4\x81\xfd8q%U\xe4\x1al,\x8a\xe3\xcfwFI\xbb.XU\xad\xfe\x9bg0\x06.\x9c|\xc2(\xb7\xbd\xf3\x98\x8a\xfbt2\nR\x00\x14m\xabd\x7f|]"6\xb9R\xbe\xd9\x05\x83T\xd56\xff# \xcb\xd4@\xc7$Z\xb1@\xb9\x95>\x03\xa8\x07\xf8.\x0cNf\xc1\xb8.;f\xd15\xd7l\xba\xe9\x91K\x17\x98\x1a\xe3\xdc\x1fZ\xa1\xa2\xf7A(E\x1a\x80\x14\x85f\xf3\x9e\xc6\x7f\x00\xcb}\x85\x9c6\x928\xcb\x00\x00\x00\x00IEND\xaeB`\x82'
2018-03-20 20:00:13,506 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 12:00:14 GMT'), ('Content-Type', 'image/png; charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('cache', 'no-cache'), ('Set-Cookie', 'JSESSIONID=1bxqvn19vrt3o181t5dcc72u02;Path=/'), ('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')]
2018-03-20 20:00:13,507 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 20:00:13,507 APIUnittestTestCase.py[line: 111] INFO: 正在提取目标返回结果值
2018-03-20 20:00:13,507 APIUnittestTestCase.py[line: 114] INFO: 正在执行断言
2018-03-20 20:00:13,507 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 20:00:13,508 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,508 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,508 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "200",
    "消息": "fail#返回code非200，请求图片验证码失败"
  }
]
2018-03-20 20:00:13,509 unittesttestcase.py[line: 73] INFO: 校验规则为：“包含字符串：200”
2018-03-20 20:00:13,509 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 20:00:13,510 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time, run_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 28, 84, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.87', 8080, '{}', 'GET', '/res/rpatchca.png?0.6089781314990876', '', 'code', '包含字符串', '[{\n    "模式": "200",\n    "消息": "fail#返回code非200，请求图片验证码失败"\n}]', '', '成功', '', '2018-03-20 20:00:13', 0)
2018-03-20 20:00:13,579 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 20:00:13,580 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 20:00:13,581 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 28, '数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码', 'ID28-请求图片验证码', '成功', '', '2018-03-20 20:00:13', '0天 0小时 0分 0秒')
2018-03-20 20:00:13,661 test_case.py[line: 73] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 20:00:13,663 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time, run_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 29, 86, 1, '执行用例', '数据灯塔接口测试->ID27-登录页面->ID28-请求图片验证码', 28, '--', 'http', '10.202.95.87', 8080, '', '--', '', '', '--', '', '', '', '成功', '', '2018-03-20 20:00:13')
2018-03-20 20:00:13,666 mydb.py[line: 74] ERROR: 执行数据库插入操作失败：Not enough parameters for the SQL statement
2018-03-20 20:00:13,668 test_report.py[line: 64] ERROR: 往测试报告-测试概况-用例明细-步骤明细表插入运行记录失败：Not enough parameters for the SQL statement
2018-03-20 20:00:13,668 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 2 步, 步骤ID: 85]======================
2018-03-20 20:00:13,668 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 20:00:13,669 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 20:00:13,669 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 20:00:13,669 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 20:00:13,669 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$global_username$']
2018-03-20 20:00:13,669 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,670 test_case_step.py[line: 58] INFO: 正在替换动态变量：$global_username$
2018-03-20 20:00:13,670 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：{
  "userName": "dataviewer",
  "userPwd": "dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU",
  "captcha": "5555",
  "channelType": ""
}
2018-03-20 20:00:13,670 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 20:00:13,670 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,670 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,671 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/auth/login
2018-03-20 20:00:13,671 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 20:00:13,671 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,671 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,672 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 20:00:13,673 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 20:00:13,673 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/auth/login
2018-03-20 20:00:13,673 httpprotocol.py[line: 105] INFO: 参数为：b'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType='
2018-03-20 20:00:13,673 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 20:00:13,742 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：ascii, 正在对服务器返回body进行解码
2018-03-20 20:00:13,743 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"result":200}
2018-03-20 20:00:13,743 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 12:00:14 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '14'), ('Connection', 'close'), ('Set-Cookie', 'rememberMe=deleteMe; Path=/; Max-Age=0; Expires=Mon, 19-Mar-2018 12:00:14 GMT')]
2018-03-20 20:00:13,743 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 20:00:13,744 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 20:00:13,744 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 20:00:13,744 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 20:00:13,745 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,745 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,746 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": {
      "result": 200
    },
    "消息": "fail#登录失败"
  }
]
2018-03-20 20:00:13,746 unittesttestcase.py[line: 160] INFO: 校验规则为：“完全匹配字典：{'result': 200}”
2018-03-20 20:00:13,747 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 20:00:13,747 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time, run_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 29, 85, 2, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.87', 8080, '{}', 'POST', '/auth/login', 'userName=dataviewer&userPwd=dzsfoZ1-JiE6N7UaN-_j1rFnUXfQIZMrhjgKfVU4LvpLxPC-9-wmrvWipPnLEA15GwkHLD3m3KT6-29EcqSTbztnlQwOzVK-_iqJ5scpqrsfCG7KkSjo6Cw7860r5AmG1nkvU4827CGwnErxmKT_ujmfdG9IvGFahos05IQV_GU&captcha=5555&channelType=', 'body', '完全匹配字典', '[{\n    "模式": {\n        "result": 200\n    },\n    "消息": "fail#登录失败"\n}]', '', '成功', '', '2018-03-20 20:00:13', 0)
2018-03-20 20:00:13,812 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 20:00:13,813 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 20:00:13,813 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 29, '数据灯塔接口测试->ID27-登录页面', 'ID29-灯塔用户登录', '成功', '', '2018-03-20 20:00:13', '0天 0小时 0分 0秒')
2018-03-20 20:00:13,897 test_plan.py[line: 48] INFO: ======================开始运行测试用例[名称：ID329-库存查询(自然月), ID:329]======================
2018-03-20 20:00:13,898 test_case.py[line: 32] INFO: 正在查询测试用例[ID：329, 名称：ID329-库存查询(自然月)]关联的测试步骤
2018-03-20 20:00:13,898 mydb.py[line: 152] INFO: query：SELECT id, `order`, step_type, op_object, object_id, exec_operation, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern,  output_params, protocol, host, port FROM `website_api_test_case_step`  WHERE case_id=%s AND  status='启用' ORDER BY `order` ASC  data：(329,)
2018-03-20 20:00:13,906 test_case.py[line: 41] INFO: 开始执行测试步骤
2018-03-20 20:00:13,907 test_case.py[line: 82] INFO: ======================开始运行测试步骤[第 1 步, 步骤ID: 773]======================
2018-03-20 20:00:13,907 test_case_step.py[line: 76] INFO: 步骤类型：请求接口
2018-03-20 20:00:13,907 test_case_step.py[line: 77] INFO: 步骤操作对象：APIUnittestTestCase
2018-03-20 20:00:13,907 test_case_step.py[line: 78] INFO: 执行操作：test_api_for_urlencode
2018-03-20 20:00:13,908 test_case_step.py[line: 106] INFO: 正在替换“输入参数”中的动态参数
2018-03-20 20:00:13,908 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:['$last_month_yyyymm$', '$last_month_yyyymm$']
2018-03-20 20:00:13,908 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,908 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 20:00:13,908 test_case_step.py[line: 58] INFO: 正在替换动态变量：$last_month_yyyymm$
2018-03-20 20:00:13,909 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=全部仓库&field=&sortType=&page=1&rows=10
2018-03-20 20:00:13,909 test_case_step.py[line: 110] INFO: 正在替换“URL/SQL”中的动态参数
2018-03-20 20:00:13,909 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,909 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,910 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：/stockHealth/SkuLibraryAgeDetail2
2018-03-20 20:00:13,910 test_case_step.py[line: 114] INFO: 正在替换“主机地址”中的动态参数
2018-03-20 20:00:13,911 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,911 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,911 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：10.202.95.87
2018-03-20 20:00:13,912 APIUnittestTestCase.py[line: 56] INFO: 正在发起POST请求...
2018-03-20 20:00:13,912 httpprotocol.py[line: 104] INFO: 发起的请求为：POST http://10.202.95.87:8080/stockHealth/SkuLibraryAgeDetail2
2018-03-20 20:00:13,912 httpprotocol.py[line: 105] INFO: 参数为：b'periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10'
2018-03-20 20:00:13,912 httpprotocol.py[line: 106] INFO: 请求头为：{}
2018-03-20 20:00:13,952 APIUnittestTestCase.py[line: 70] INFO: 检测到的编码为：utf-8, 正在对服务器返回body进行解码
2018-03-20 20:00:13,953 APIUnittestTestCase.py[line: 93] INFO: 服务器返回结果"响应体(body)": {"currPage":1,"totalPage":2,"totalCount":11,"list":[{"availableQty":"10","inventoryAvgAge":2,"item":"68312463407003202F","itemName":"女童 针织长裤 683124634070 兰紫 130cm","periodSaleNum":"5","rowCount":null,"totalQty":"9","warehouseName":"全部仓库"},{"availableQty":"15","inventoryAvgAge":8,"item":"68312463401907662H","itemName":"女童 针织长裤 683124634019 浅花灰 150cm","periodSaleNum":"6","rowCount":null,"totalQty":"19","warehouseName":"全部仓库"},{"availableQty":"29","inventoryAvgAge":8,"item":"68312434410907662F","itemName":"683124344109浅花灰130cm","periodSaleNum":"10","rowCount":null,"totalQty":"39","warehouseName":"全部仓库"},{"availableQty":"39","inventoryAvgAge":9,"item":"68312423406105612H","itemName":"女童 风衣 683124234061 玫红 150cm","periodSaleNum":"20","rowCount":null,"totalQty":"49","warehouseName":"全部仓库"},{"availableQty":"99","inventoryAvgAge":11,"item":"683115115322021238","itemName":"男童 跑鞋 683115115322 黑桔 38码","periodSaleNum":"80","rowCount":null,"totalQty":"100","warehouseName":"全部仓库"},{"availableQty":"79","inventoryAvgAge":11,"item":"68311661217205001A","itemName":"男女童 健康鞋 683116612172 红 26码","periodSaleNum":"60","rowCount":null,"totalQty":"89","warehouseName":"全部仓库"},{"availableQty":"19","inventoryAvgAge":15,"item":"68312434410907662I","itemName":"男 针织套装 683124344109 浅花灰 160cm","periodSaleNum":"5","rowCount":null,"totalQty":"29","warehouseName":"全部仓库"},{"availableQty":"59","inventoryAvgAge":17,"item":"68312403415201272J","itemName":"683124034152白柔粉165cm","periodSaleNum":"40","rowCount":null,"totalQty":"69","warehouseName":"全部仓库"},{"availableQty":"49","inventoryAvgAge":18,"item":"68312406016401272G","itemName":"女童 针织上衣 683124060164 白柔粉 140cm","periodSaleNum":"30","rowCount":null,"totalQty":"59","warehouseName":"全部仓库"},{"availableQty":"69","inventoryAvgAge":19,"item":"68311661218703051A","itemName":"男女童 健康鞋 683116612187 兰红 26码","periodSaleNum":"50","rowCount":null,"totalQty":"79","warehouseName":"全部仓库"}]}
2018-03-20 20:00:13,953 APIUnittestTestCase.py[line: 94] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.12.1'), ('Date', 'Tue, 20 Mar 2018 12:00:14 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Content-Length', '2139'), ('Connection', 'close')]
2018-03-20 20:00:13,953 APIUnittestTestCase.py[line: 95] INFO: 服务器返回结果"状态码(code)": 200
2018-03-20 20:00:13,953 APIUnittestTestCase.py[line: 98] INFO: 正在提取目标返回结果值
2018-03-20 20:00:13,954 APIUnittestTestCase.py[line: 101] INFO: 正在执行断言
2018-03-20 20:00:13,954 unittesttestcase.py[line: 34] INFO: 正在替换“校验模式”中的动态参数
2018-03-20 20:00:13,954 test_case_step.py[line: 55] INFO: 检查到目标内容中待替换的动态变量有:[]
2018-03-20 20:00:13,954 test_case_step.py[line: 56] INFO: 已保存的全局变量有：{'last_month_yyyy_mm': '2018-02', 'today_yyyy_mm_dd': '2018-03-20', 'global_platform_host': '10.118.59.84', 'curmonth_range_yyyymmdd': '20180301-20180331', 'global_username': 'dataviewer', 'next_month_first_day_yyyymmdd': '20180401', 'last_month_final_day_yyyy_mm_dd': '2018-02-28', 'current_week_num_yyyymm': '201812', 'pre_weekday1_yyyy_mm_dd': '2018-03-05', 'last_weekday1_yyyy_mm_dd': '2018-03-12', 'recent_7day_range_yyyy_mm_dd': '2018-03-13-2018-03-19', 'weekday1_yyyy_mm_dd': '20180319', 'curmonth_first_day_yyyymmdd': '20180301', 'weekday1_to_weekday7_yyyy_mm_dd': '20180319-20180325', 'last_month_first_day_yyyymmdd': '20180201', 'today1': '2018-03-20', 'december_month_last_year_yyyymm': '201712', 'today_yyyymmdd': '20180320', 'curmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'millisecond_for_curdate': 1521475200000, 'pre_weekday1_yyyymmdd': '20180305', 'lastmonth_range_yyyy_mm_dd': '2018-03-01-2018-03-31', 'weekday7_yyyymmdd': '20180325', 'december_month_last_year_yyyy_mm': '2017-12', 'last_week_num_yyyyno': '201811', 'last_weekday1_yyyymmdd': '20180312', 'before7day1': '2018-03-14', 'next_month_first_day_yyyy_mm_dd': '2018-04-01', 'yesterday_yyyy_mm_dd': '2018-03-19', 'current_month_yyyy_mm': '2018-03', 'millisecond_for_yesterday': 1521388800000, 'weekday1_to_weekday7_yyyymmdd': '20180319-20180325', 'yesterday1': '20180319', 'curmonth_final_day_yyyy_mm_dd': '2018-03-31', 'recent_30day_range_yyyymmdd': '2018-02-18-2018-03-19', 'recent_30day_range_yyyy_mm_dd': '20180218-20180319', 'pre_weekday7_yyyy_mm_dd': '2018-03-11', 'millisecond_for_curtime': 1521547213000, 'current_month_last_year_yyyy_mm': '2017-03', 'weekday1_yyyymmdd': '20180319', 'current_month_yyyymm': '201803', 'weekday7_yyyy_mm_dd': '20180325', 'current_week_num_yyyy_mm': '2018-12', 'curmonth_first_day_yyyy_mm_dd': '2018-03-01', 'last_month_final_day_yyyymmdd': '20180228', 'curmonth_final_day_yyyymmdd': '20180331', 'last_weekday1_to_weekday7_yyyymmdd': '20180312-20180318', 'curtime': '2018-03-20 20:00:13', 'lastmonth_range_yyyymmdd': '20180301-20180331', 'global_monthly_code1': '2017112815', 'yesterday_yyyymmdd': '20180319', 'last_weekday7_yyyy_mm_dd': '2018-03-18', 'pre_weekday7_yyyymmdd': '20180311', 'global_mobile': '18110000014', 'recent_7day_range_yyyymmdd': '20180313-20180319', 'last_weekday1_to_weekday7_yyyy_mm_dd': '2018-03-12-2018-03-18', 'last_month_yyyymm': '201802', 'current_month_last_year_yyyymm': '2017-03', 'last_month_first_day_yyyy_mm_dd': '2018-02-01', 'last_weekday7_yyyymmdd': '20180318'}
2018-03-20 20:00:13,954 test_case_step.py[line: 65] INFO: 替换动态变量后的内容：[
  {
    "模式": "totalCount\":[1-9]+",
    "消息": "fail#获取记录失败"
  }
]
2018-03-20 20:00:13,956 unittesttestcase.py[line: 130] INFO: 校验规则为：“匹配正则表达式：re.compile('totalCount":[1-9]+')”
2018-03-20 20:00:13,956 test_case_step.py[line: 153] INFO: ======================正在记录用例步骤运行结果到测试报告-用例步骤执行明细表======================
2018-03-20 20:00:13,957 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case_step`(execution_num, plan_id, case_id, step_id, `order`, step_type, op_object, object_id, exec_operation, protocol, host, port, request_header, request_method, url_or_sql, input_params, response_to_check, check_rule, check_pattern, output_params, run_result, remark, run_time, run_id) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 329, 773, 1, '请求接口', 'APIUnittestTestCase', 0, 'test_api_for_urlencode', 'http', '10.202.95.87', 8080, '{}', 'POST', '/stockHealth/SkuLibraryAgeDetail2', 'periodSelector=201802&dataType=month&dataRange=201802&item=&itemName=&inventoryAvgAge=&startSelling=&endSales=&warehouseName=%E5%85%A8%E9%83%A8%E4%BB%93%E5%BA%93&field=&sortType=&page=1&rows=10', 'body', '匹配正则表达式', '[{\n    "模式": "totalCount\\":[1-9]+",\n    "消息": "fail#获取记录失败"\n}]', '', '成功', '', '2018-03-20 20:00:13', 0)
2018-03-20 20:00:14,040 test_case.py[line: 103] INFO: 正在计算运行耗时
2018-03-20 20:00:14,041 test_case.py[line: 109] INFO: 正在记录用例运行结果到测试报告-用例执行明细表
2018-03-20 20:00:14,041 mydb.py[line: 66] INFO: query：INSERT INTO `website_api_test_report_for_case`(execution_num, plan_id, case_id, case_path, case_name, run_result, remark, run_time, time_took) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('1521547212', 3, 329, '数据灯塔接口测试->ID36-物流版->ID39-仓储分析->ID76-库存->ID317-库存查询', 'ID329-库存查询(自然月)', '成功', '', '2018-03-20 20:00:13', '0天 0小时 0分 0秒')
2018-03-20 20:00:14,122 test_plan.py[line: 57] INFO: 测试用例执行完毕，正在更新测试报告-测试概况表
2018-03-20 20:00:14,122 test_report.py[line: 13] INFO: 正在查询运行状态为：成功的用例记录数
2018-03-20 20:00:14,122 mydb.py[line: 122] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('成功', '1521547212', 3)
2018-03-20 20:00:14,122 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '成功' AND execution_num =1521547212 AND plan_id=3
2018-03-20 20:00:14,129 test_report.py[line: 13] INFO: 正在查询运行状态为：失败的用例记录数
2018-03-20 20:00:14,130 mydb.py[line: 122] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('失败', '1521547212', 3)
2018-03-20 20:00:14,131 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '失败' AND execution_num =1521547212 AND plan_id=3
2018-03-20 20:00:14,137 test_report.py[line: 13] INFO: 正在查询运行状态为：阻塞的用例记录数
2018-03-20 20:00:14,137 mydb.py[line: 122] INFO: query：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '%s' AND execution_num =%s AND plan_id=%s  data：('阻塞', '1521547212', 3)
2018-03-20 20:00:14,138 mydb.py[line: 125] INFO: 执行的查询语句为：SELECT COUNT(id) FROM `website_api_test_report_for_case` WHERE run_result = '阻塞' AND execution_num =1521547212 AND plan_id=3
2018-03-20 20:00:14,145 mydb.py[line: 82] INFO: update_query：UPDATE `website_api_test_report_for_summary` SET end_time='2018-03-20 20:00:14', time_took='0天 0小时 0分 1秒', case_total_num=6, case_pass_num=6, case_fail_num=0, case_block_num=0 WHERE execution_num='1521547212' AND plan_id=3
2018-03-20 20:00:14,221 running_plan.py[line: 98] INFO: 正在释放资源
2018-03-20 20:00:14,222 running_plan.py[line: 99] INFO: 正在断开与项目关联的数据库连接
2018-03-20 20:00:14,223 running_plan.py[line: 105] INFO: 正在清理与项目关联的全局变量
2018-03-20 20:00:14,223 main.py[line: 46] INFO: 执行成功，正在更新数据库运行计划的运行状态
2018-03-20 20:00:14,223 mydb.py[line: 82] INFO: update_query：UPDATE `website_running_plan` SET running_status ='执行成功', remark='' WHERE running_plan_num= 1521192848
